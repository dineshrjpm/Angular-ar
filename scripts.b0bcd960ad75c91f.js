var VO=Object.defineProperty,QM=Object.getOwnPropertySymbols,WO=Object.prototype.hasOwnProperty,GO=Object.prototype.propertyIsEnumerable,e_=(Ja,Ts,ar)=>Ts in Ja?VO(Ja,Ts,{enumerable:!0,configurable:!0,writable:!0,value:ar}):Ja[Ts]=ar,t_=(Ja,Ts)=>{for(var ar in Ts||(Ts={}))WO.call(Ts,ar)&&e_(Ja,ar,Ts[ar]);if(QM)for(var ar of QM(Ts))GO.call(Ts,ar)&&e_(Ja,ar,Ts[ar]);return Ja};(()=>{var Ja={61113:function(ct){ct.exports=function(pt){var X={};function ge(Ge){if(X[Ge])return X[Ge].exports;var De=X[Ge]={i:Ge,l:!1,exports:{}};return pt[Ge].call(De.exports,De,De.exports,ge),De.l=!0,De.exports}return ge.m=pt,ge.c=X,ge.d=function(Ge,De,ue){ge.o(Ge,De)||Object.defineProperty(Ge,De,{enumerable:!0,get:ue})},ge.r=function(Ge){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Ge,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Ge,"__esModule",{value:!0})},ge.t=function(Ge,De){if(1&De&&(Ge=ge(Ge)),8&De||4&De&&"object"==typeof Ge&&Ge&&Ge.__esModule)return Ge;var ue=Object.create(null);if(ge.r(ue),Object.defineProperty(ue,"default",{enumerable:!0,value:Ge}),2&De&&"string"!=typeof Ge)for(var ve in Ge)ge.d(ue,ve,function(ne){return Ge[ne]}.bind(null,ve));return ue},ge.n=function(Ge){var De=Ge&&Ge.__esModule?function(){return Ge.default}:function(){return Ge};return ge.d(De,"a",De),De},ge.o=function(Ge,De){return Object.prototype.hasOwnProperty.call(Ge,De)},ge.p="",ge(ge.s=0)}([function(pt,X,ge){"use strict";ge.r(X),ge.d(X,"encode",function(){return on}),ge.d(X,"decode",function(){return Oc}),ge.d(X,"decodeAsync",function(){return vu}),ge.d(X,"decodeArrayStream",function(){return Ta}),ge.d(X,"decodeStream",function(){return Pc}),ge.d(X,"Decoder",function(){return Qa}),ge.d(X,"Encoder",function(){return zt}),ge.d(X,"ExtensionCodec",function(){return Ze}),ge.d(X,"ExtData",function(){return Q}),ge.d(X,"EXT_TIMESTAMP",function(){return xt}),ge.d(X,"encodeDateToTimeSpec",function(){return lt}),ge.d(X,"encodeTimeSpecToTimestamp",function(){return _t}),ge.d(X,"decodeTimestampToTimeSpec",function(){return wt}),ge.d(X,"encodeTimestampExtension",function(){return yt}),ge.d(X,"decodeTimestampExtension",function(){return ht});var Ge=function(_e,V){var xe="function"==typeof Symbol&&_e[Symbol.iterator];if(!xe)return _e;var Ce,F,qe=xe.call(_e),Ue=[];try{for(;(void 0===V||V-- >0)&&!(Ce=qe.next()).done;)Ue.push(Ce.value)}catch(dt){F={error:dt}}finally{try{Ce&&!Ce.done&&(xe=qe.return)&&xe.call(qe)}finally{if(F)throw F.error}}return Ue},De=function(){for(var _e=[],V=0;V<arguments.length;V++)_e=_e.concat(Ge(arguments[V]));return _e},ue="undefined"!=typeof process&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function ve(_e){for(var V=_e.length,xe=0,Ce=0;Ce<V;){var F=_e.charCodeAt(Ce++);if(0!=(4294967168&F))if(0==(4294965248&F))xe+=2;else{if(F>=55296&&F<=56319&&Ce<V){var qe=_e.charCodeAt(Ce);56320==(64512&qe)&&(++Ce,F=((1023&F)<<10)+(1023&qe)+65536)}xe+=0==(4294901760&F)?3:4}else xe++}return xe}var ne=ue?new TextEncoder:void 0,ie="undefined"!=typeof process?200:0,oe=(null==ne?void 0:ne.encodeInto)?function(_e,V,xe){ne.encodeInto(_e,V.subarray(xe))}:function(_e,V,xe){V.set(ne.encode(_e),xe)};function H(_e,V,xe){for(var Ce=V,F=Ce+xe,qe=[],Ue="";Ce<F;){var dt=_e[Ce++];if(0==(128&dt))qe.push(dt);else if(192==(224&dt)){var ke=63&_e[Ce++];qe.push((31&dt)<<6|ke)}else if(224==(240&dt)){ke=63&_e[Ce++];var en=63&_e[Ce++];qe.push((31&dt)<<12|ke<<6|en)}else if(240==(248&dt)){var He=(7&dt)<<18|(ke=63&_e[Ce++])<<12|(en=63&_e[Ce++])<<6|63&_e[Ce++];He>65535&&(qe.push((He-=65536)>>>10&1023|55296),He=56320|1023&He),qe.push(He)}else qe.push(dt);qe.length>=4096&&(Ue+=String.fromCharCode.apply(String,De(qe)),qe.length=0)}return qe.length>0&&(Ue+=String.fromCharCode.apply(String,De(qe))),Ue}var J=ue?new TextDecoder:null,K="undefined"!=typeof process?200:0,Q=function(_e,V){this.type=_e,this.data=V};function Te(_e,V,xe){var Ce=Math.floor(xe/4294967296),F=xe;_e.setUint32(V,Ce),_e.setUint32(V+4,F)}function Pe(_e,V){return 4294967296*_e.getInt32(V)+_e.getUint32(V+4)}var xt=-1;function _t(_e){var V,xe=_e.sec,Ce=_e.nsec;if(xe>=0&&Ce>=0&&xe<=17179869183){if(0===Ce&&xe<=4294967295){var F=new Uint8Array(4);return(V=new DataView(F.buffer)).setUint32(0,xe),F}var qe=xe/4294967296,Ue=4294967295&xe;return F=new Uint8Array(8),(V=new DataView(F.buffer)).setUint32(0,Ce<<2|3&qe),V.setUint32(4,Ue),F}return F=new Uint8Array(12),(V=new DataView(F.buffer)).setUint32(0,Ce),Te(V,4,xe),F}function lt(_e){var V=_e.getTime(),xe=Math.floor(V/1e3),Ce=1e6*(V-1e3*xe),F=Math.floor(Ce/1e9);return{sec:xe+F,nsec:Ce-1e9*F}}function yt(_e){return _e instanceof Date?_t(lt(_e)):null}function wt(_e){var V=new DataView(_e.buffer,_e.byteOffset,_e.byteLength);switch(_e.byteLength){case 4:return{sec:V.getUint32(0),nsec:0};case 8:var xe=V.getUint32(0);return{sec:4294967296*(3&xe)+V.getUint32(4),nsec:xe>>>2};case 12:return{sec:Pe(V,4),nsec:V.getUint32(0)};default:throw new Error("Unrecognized data size for timestamp: "+_e.length)}}function ht(_e){var V=wt(_e);return new Date(1e3*V.sec+V.nsec/1e6)}var $t={type:xt,encode:yt,decode:ht},Ze=function(){function _e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register($t)}return _e.prototype.register=function(V){var xe=V.type,Ce=V.encode,F=V.decode;if(xe>=0)this.encoders[xe]=Ce,this.decoders[xe]=F;else{var qe=1+xe;this.builtInEncoders[qe]=Ce,this.builtInDecoders[qe]=F}},_e.prototype.tryToEncode=function(V,xe){for(var Ce=0;Ce<this.builtInEncoders.length;Ce++)if(null!=(F=this.builtInEncoders[Ce])&&null!=(qe=F(V,xe)))return new Q(-1-Ce,qe);for(Ce=0;Ce<this.encoders.length;Ce++){var F,qe;if(null!=(F=this.encoders[Ce])&&null!=(qe=F(V,xe)))return new Q(Ce,qe)}return V instanceof Q?V:null},_e.prototype.decode=function(V,xe,Ce){var F=xe<0?this.builtInDecoders[-1-xe]:this.decoders[xe];return F?F(V,xe,Ce):new Q(xe,V)},_e.defaultCodec=new _e,_e}();function Z(_e){return _e instanceof Uint8Array?_e:ArrayBuffer.isView(_e)?new Uint8Array(_e.buffer,_e.byteOffset,_e.byteLength):_e instanceof ArrayBuffer?new Uint8Array(_e):Uint8Array.from(_e)}var Fe=function(_e){var V="function"==typeof Symbol&&Symbol.iterator,xe=V&&_e[V],Ce=0;if(xe)return xe.call(_e);if(_e&&"number"==typeof _e.length)return{next:function(){return _e&&Ce>=_e.length&&(_e=void 0),{value:_e&&_e[Ce++],done:!_e}}};throw new TypeError(V?"Object is not iterable.":"Symbol.iterator is not defined.")},zt=function(){function _e(V,xe,Ce,F,qe,Ue,dt){void 0===V&&(V=Ze.defaultCodec),void 0===Ce&&(Ce=100),void 0===F&&(F=2048),void 0===qe&&(qe=!1),void 0===Ue&&(Ue=!1),void 0===dt&&(dt=!1),this.extensionCodec=V,this.context=xe,this.maxDepth=Ce,this.initialBufferSize=F,this.sortKeys=qe,this.forceFloat32=Ue,this.ignoreUndefined=dt,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return _e.prototype.encode=function(V,xe){if(xe>this.maxDepth)throw new Error("Too deep objects in depth "+xe);null==V?this.encodeNil():"boolean"==typeof V?this.encodeBoolean(V):"number"==typeof V?this.encodeNumber(V):"string"==typeof V?this.encodeString(V):this.encodeObject(V,xe)},_e.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},_e.prototype.ensureBufferSizeToWrite=function(V){var xe=this.pos+V;this.view.byteLength<xe&&this.resizeBuffer(2*xe)},_e.prototype.resizeBuffer=function(V){var xe=new ArrayBuffer(V),Ce=new Uint8Array(xe),F=new DataView(xe);Ce.set(this.bytes),this.view=F,this.bytes=Ce},_e.prototype.encodeNil=function(){this.writeU8(192)},_e.prototype.encodeBoolean=function(V){this.writeU8(!1===V?194:195)},_e.prototype.encodeNumber=function(V){Number.isSafeInteger(V)?V>=0?V<128?this.writeU8(V):V<256?(this.writeU8(204),this.writeU8(V)):V<65536?(this.writeU8(205),this.writeU16(V)):V<4294967296?(this.writeU8(206),this.writeU32(V)):(this.writeU8(207),this.writeU64(V)):V>=-32?this.writeU8(224|V+32):V>=-128?(this.writeU8(208),this.writeI8(V)):V>=-32768?(this.writeU8(209),this.writeI16(V)):V>=-2147483648?(this.writeU8(210),this.writeI32(V)):(this.writeU8(211),this.writeI64(V)):this.forceFloat32?(this.writeU8(202),this.writeF32(V)):(this.writeU8(203),this.writeF64(V))},_e.prototype.writeStringHeader=function(V){if(V<32)this.writeU8(160+V);else if(V<256)this.writeU8(217),this.writeU8(V);else if(V<65536)this.writeU8(218),this.writeU16(V);else{if(!(V<4294967296))throw new Error("Too long string: "+V+" bytes in UTF-8");this.writeU8(219),this.writeU32(V)}},_e.prototype.encodeString=function(V){if(ue&&V.length>ie){var Ce=ve(V);this.ensureBufferSizeToWrite(5+Ce),this.writeStringHeader(Ce),oe(V,this.bytes,this.pos),this.pos+=Ce}else Ce=ve(V),this.ensureBufferSizeToWrite(5+Ce),this.writeStringHeader(Ce),function(F,qe,Ue){for(var dt=F.length,ke=Ue,en=0;en<dt;){var He=F.charCodeAt(en++);if(0!=(4294967168&He)){if(0==(4294965248&He))qe[ke++]=He>>6&31|192;else{if(He>=55296&&He<=56319&&en<dt){var Bt=F.charCodeAt(en);56320==(64512&Bt)&&(++en,He=((1023&He)<<10)+(1023&Bt)+65536)}0==(4294901760&He)?(qe[ke++]=He>>12&15|224,qe[ke++]=He>>6&63|128):(qe[ke++]=He>>18&7|240,qe[ke++]=He>>12&63|128,qe[ke++]=He>>6&63|128)}qe[ke++]=63&He|128}else qe[ke++]=He}}(V,this.bytes,this.pos),this.pos+=Ce},_e.prototype.encodeObject=function(V,xe){var Ce=this.extensionCodec.tryToEncode(V,this.context);if(null!=Ce)this.encodeExtension(Ce);else if(Array.isArray(V))this.encodeArray(V,xe);else if(ArrayBuffer.isView(V))this.encodeBinary(V);else{if("object"!=typeof V)throw new Error("Unrecognized object: "+Object.prototype.toString.apply(V));this.encodeMap(V,xe)}},_e.prototype.encodeBinary=function(V){var xe=V.byteLength;if(xe<256)this.writeU8(196),this.writeU8(xe);else if(xe<65536)this.writeU8(197),this.writeU16(xe);else{if(!(xe<4294967296))throw new Error("Too large binary: "+xe);this.writeU8(198),this.writeU32(xe)}var Ce=Z(V);this.writeU8a(Ce)},_e.prototype.encodeArray=function(V,xe){var Ce,F,qe=V.length;if(qe<16)this.writeU8(144+qe);else if(qe<65536)this.writeU8(220),this.writeU16(qe);else{if(!(qe<4294967296))throw new Error("Too large array: "+qe);this.writeU8(221),this.writeU32(qe)}try{for(var Ue=Fe(V),dt=Ue.next();!dt.done;dt=Ue.next())this.encode(dt.value,xe+1)}catch(en){Ce={error:en}}finally{try{dt&&!dt.done&&(F=Ue.return)&&F.call(Ue)}finally{if(Ce)throw Ce.error}}},_e.prototype.countWithoutUndefined=function(V,xe){var Ce,F,qe=0;try{for(var Ue=Fe(xe),dt=Ue.next();!dt.done;dt=Ue.next())void 0!==V[dt.value]&&qe++}catch(ke){Ce={error:ke}}finally{try{dt&&!dt.done&&(F=Ue.return)&&F.call(Ue)}finally{if(Ce)throw Ce.error}}return qe},_e.prototype.encodeMap=function(V,xe){var Ce,F,qe=Object.keys(V);this.sortKeys&&qe.sort();var Ue=this.ignoreUndefined?this.countWithoutUndefined(V,qe):qe.length;if(Ue<16)this.writeU8(128+Ue);else if(Ue<65536)this.writeU8(222),this.writeU16(Ue);else{if(!(Ue<4294967296))throw new Error("Too large map object: "+Ue);this.writeU8(223),this.writeU32(Ue)}try{for(var dt=Fe(qe),ke=dt.next();!ke.done;ke=dt.next()){var en=ke.value,He=V[en];this.ignoreUndefined&&void 0===He||(this.encodeString(en),this.encode(He,xe+1))}}catch(Bt){Ce={error:Bt}}finally{try{ke&&!ke.done&&(F=dt.return)&&F.call(dt)}finally{if(Ce)throw Ce.error}}},_e.prototype.encodeExtension=function(V){var xe=V.data.length;if(1===xe)this.writeU8(212);else if(2===xe)this.writeU8(213);else if(4===xe)this.writeU8(214);else if(8===xe)this.writeU8(215);else if(16===xe)this.writeU8(216);else if(xe<256)this.writeU8(199),this.writeU8(xe);else if(xe<65536)this.writeU8(200),this.writeU16(xe);else{if(!(xe<4294967296))throw new Error("Too large extension object: "+xe);this.writeU8(201),this.writeU32(xe)}this.writeI8(V.type),this.writeU8a(V.data)},_e.prototype.writeU8=function(V){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,V),this.pos++},_e.prototype.writeU8a=function(V){var xe=V.length;this.ensureBufferSizeToWrite(xe),this.bytes.set(V,this.pos),this.pos+=xe},_e.prototype.writeI8=function(V){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,V),this.pos++},_e.prototype.writeU16=function(V){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,V),this.pos+=2},_e.prototype.writeI16=function(V){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,V),this.pos+=2},_e.prototype.writeU32=function(V){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,V),this.pos+=4},_e.prototype.writeI32=function(V){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,V),this.pos+=4},_e.prototype.writeF32=function(V){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,V),this.pos+=4},_e.prototype.writeF64=function(V){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,V),this.pos+=8},_e.prototype.writeU64=function(V){var xe,Ce,F,Ue;this.ensureBufferSizeToWrite(8),Ue=F=V,(xe=this.view).setUint32(Ce=this.pos,F/4294967296),xe.setUint32(Ce+4,Ue),this.pos+=8},_e.prototype.writeI64=function(V){this.ensureBufferSizeToWrite(8),Te(this.view,this.pos,V),this.pos+=8},_e}(),Jt={};function on(_e,V){void 0===V&&(V=Jt);var xe=new zt(V.extensionCodec,V.context,V.maxDepth,V.initialBufferSize,V.sortKeys,V.forceFloat32,V.ignoreUndefined);return xe.encode(_e,1),xe.getUint8Array()}function mn(_e){return(_e<0?"-":"")+"0x"+Math.abs(_e).toString(16).padStart(2,"0")}var bn=function(){function _e(V,xe){void 0===V&&(V=16),void 0===xe&&(xe=16),this.maxKeyLength=V,this.maxLengthPerKey=xe,this.caches=[];for(var Ce=0;Ce<this.maxKeyLength;Ce++)this.caches.push([])}return _e.prototype.canBeCached=function(V){return V>0&&V<=this.maxKeyLength},_e.prototype.get=function(V,xe,Ce){var F=this.caches[Ce-1],qe=F.length;e:for(var Ue=0;Ue<qe;Ue++){for(var dt=F[Ue],ke=dt.bytes,en=0;en<Ce;en++)if(ke[en]!==V[xe+en])continue e;return dt.value}return null},_e.prototype.store=function(V,xe){var Ce=this.caches[V.length-1],F={bytes:V,value:xe};Ce.length>=this.maxLengthPerKey?Ce[Math.random()*Ce.length|0]=F:Ce.push(F)},_e.prototype.decode=function(V,xe,Ce){var F=this.get(V,xe,Ce);if(null!=F)return F;var qe=H(V,xe,Ce),Ue=Uint8Array.prototype.slice.call(V,xe,xe+Ce);return this.store(Ue,qe),qe},_e}(),yr=function(_e,V){var xe,Ce,F,qe,Ue={label:0,sent:function(){if(1&F[0])throw F[1];return F[1]},trys:[],ops:[]};return qe={next:dt(0),throw:dt(1),return:dt(2)},"function"==typeof Symbol&&(qe[Symbol.iterator]=function(){return this}),qe;function dt(ke){return function(en){return function(He){if(xe)throw new TypeError("Generator is already executing.");for(;Ue;)try{if(xe=1,Ce&&(F=2&He[0]?Ce.return:He[0]?Ce.throw||((F=Ce.return)&&F.call(Ce),0):Ce.next)&&!(F=F.call(Ce,He[1])).done)return F;switch(Ce=0,F&&(He=[2&He[0],F.value]),He[0]){case 0:case 1:F=He;break;case 4:return Ue.label++,{value:He[1],done:!1};case 5:Ue.label++,Ce=He[1],He=[0];continue;case 7:He=Ue.ops.pop(),Ue.trys.pop();continue;default:if(!((F=(F=Ue.trys).length>0&&F[F.length-1])||6!==He[0]&&2!==He[0])){Ue=0;continue}if(3===He[0]&&(!F||He[1]>F[0]&&He[1]<F[3])){Ue.label=He[1];break}if(6===He[0]&&Ue.label<F[1]){Ue.label=F[1],F=He;break}if(F&&Ue.label<F[2]){Ue.label=F[2],Ue.ops.push(He);break}F[2]&&Ue.ops.pop(),Ue.trys.pop();continue}He=V.call(_e,Ue)}catch(Bt){He=[6,Bt],Ce=0}finally{xe=F=0}if(5&He[0])throw He[1];return{value:He[0]?He[1]:void 0,done:!0}}([ke,en])}}},kr=function(_e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var V,xe=_e[Symbol.asyncIterator];return xe?xe.call(_e):(_e="function"==typeof __values?__values(_e):_e[Symbol.iterator](),V={},Ce("next"),Ce("throw"),Ce("return"),V[Symbol.asyncIterator]=function(){return this},V);function Ce(F){V[F]=_e[F]&&function(qe){return new Promise(function(Ue,dt){var ke,en,He;ke=Ue,en=dt,He=(qe=_e[F](qe)).done,Promise.resolve(qe.value).then(function(gn){ke({value:gn,done:He})},en)})}}},Rr=function(_e){return this instanceof Rr?(this.v=_e,this):new Rr(_e)},is=function(_e,V,xe){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var Ce,F=xe.apply(_e,V||[]),qe=[];return Ce={},Ue("next"),Ue("throw"),Ue("return"),Ce[Symbol.asyncIterator]=function(){return this},Ce;function Ue(Bt){F[Bt]&&(Ce[Bt]=function(gn){return new Promise(function(yn,Ln){qe.push([Bt,gn,yn,Ln])>1||dt(Bt,gn)})})}function dt(Bt,gn){try{(yn=F[Bt](gn)).value instanceof Rr?Promise.resolve(yn.value.v).then(ke,en):He(qe[0][2],yn)}catch(Ln){He(qe[0][3],Ln)}var yn}function ke(Bt){dt("next",Bt)}function en(Bt){dt("throw",Bt)}function He(Bt,gn){Bt(gn),qe.shift(),qe.length&&dt(qe[0][0],qe[0][1])}},Ls=new DataView(new ArrayBuffer(0)),_o=new Uint8Array(Ls.buffer),Ml=function(){try{Ls.getInt8(0)}catch(_e){return _e.constructor}throw new Error("never reached")}(),xu=new Ml("Insufficient data"),$c=new bn,Qa=function(){function _e(V,xe,Ce,F,qe,Ue,dt,ke){void 0===V&&(V=Ze.defaultCodec),void 0===Ce&&(Ce=4294967295),void 0===F&&(F=4294967295),void 0===qe&&(qe=4294967295),void 0===Ue&&(Ue=4294967295),void 0===dt&&(dt=4294967295),void 0===ke&&(ke=$c),this.extensionCodec=V,this.context=xe,this.maxStrLength=Ce,this.maxBinLength=F,this.maxArrayLength=qe,this.maxMapLength=Ue,this.maxExtLength=dt,this.cachedKeyDecoder=ke,this.totalPos=0,this.pos=0,this.view=Ls,this.bytes=_o,this.headByte=-1,this.stack=[]}return _e.prototype.setBuffer=function(V){this.bytes=Z(V),this.view=function(xe){if(xe instanceof ArrayBuffer)return new DataView(xe);var Ce=Z(xe);return new DataView(Ce.buffer,Ce.byteOffset,Ce.byteLength)}(this.bytes),this.pos=0},_e.prototype.appendBuffer=function(V){if(-1!==this.headByte||this.hasRemaining()){var xe=this.bytes.subarray(this.pos),Ce=Z(V),F=new Uint8Array(xe.length+Ce.length);F.set(xe),F.set(Ce,xe.length),this.setBuffer(F)}else this.setBuffer(V)},_e.prototype.hasRemaining=function(V){return void 0===V&&(V=1),this.view.byteLength-this.pos>=V},_e.prototype.createNoExtraBytesError=function(V){return new RangeError("Extra "+(this.view.byteLength-this.pos)+" byte(s) found at buffer["+V+"]")},_e.prototype.decodeSingleSync=function(){var V=this.decodeSync();if(this.hasRemaining())throw this.createNoExtraBytesError(this.pos);return V},_e.prototype.decodeSingleAsync=function(V){var xe,Ce,F,qe,Ue,ke,en;return Ue=this,en=function(){var Ue,dt,ke,en,He,Bt,gn,yn;return yr(this,function(Ln){switch(Ln.label){case 0:Ue=!1,Ln.label=1;case 1:Ln.trys.push([1,6,7,12]),xe=kr(V),Ln.label=2;case 2:return[4,xe.next()];case 3:if((Ce=Ln.sent()).done)return[3,5];if(ke=Ce.value,Ue)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(ke);try{dt=this.decodeSync(),Ue=!0}catch(Hr){if(!(Hr instanceof Ml))throw Hr}this.totalPos+=this.pos,Ln.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return en=Ln.sent(),F={error:en},[3,12];case 7:return Ln.trys.push([7,,10,11]),Ce&&!Ce.done&&(qe=xe.return)?[4,qe.call(xe)]:[3,9];case 8:Ln.sent(),Ln.label=9;case 9:return[3,11];case 10:if(F)throw F.error;return[7];case 11:return[7];case 12:if(Ue){if(this.hasRemaining())throw this.createNoExtraBytesError(this.totalPos);return[2,dt]}throw Bt=(He=this).headByte,gn=He.pos,yn=He.totalPos,new RangeError("Insufficient data in parcing "+mn(Bt)+" at "+yn+" ("+gn+" in the current buffer)")}})},new((ke=void 0)||(ke=Promise))(function(He,Bt){function gn(Hr){try{Ln(en.next(Hr))}catch(or){Bt(or)}}function yn(Hr){try{Ln(en.throw(Hr))}catch(or){Bt(or)}}function Ln(Hr){var or;Hr.done?He(Hr.value):(or=Hr.value,or instanceof ke?or:new ke(function(El){El(or)})).then(gn,yn)}Ln((en=en.apply(Ue,[])).next())})},_e.prototype.decodeArrayStream=function(V){return this.decodeMultiAsync(V,!0)},_e.prototype.decodeStream=function(V){return this.decodeMultiAsync(V,!1)},_e.prototype.decodeMultiAsync=function(V,xe){return is(this,arguments,function(){var Ce,F,qe,Ue,dt,ke,en,He,Bt;return yr(this,function(gn){switch(gn.label){case 0:Ce=xe,F=-1,gn.label=1;case 1:gn.trys.push([1,13,14,19]),qe=kr(V),gn.label=2;case 2:return[4,Rr(qe.next())];case 3:if((Ue=gn.sent()).done)return[3,12];if(dt=Ue.value,xe&&0===F)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(dt),Ce&&(F=this.readArraySize(),Ce=!1,this.complete()),gn.label=4;case 4:gn.trys.push([4,9,,10]),gn.label=5;case 5:return[4,Rr(this.decodeSync())];case 6:return[4,gn.sent()];case 7:return gn.sent(),0==--F?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((ke=gn.sent())instanceof Ml))throw ke;return[3,10];case 10:this.totalPos+=this.pos,gn.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return en=gn.sent(),He={error:en},[3,19];case 14:return gn.trys.push([14,,17,18]),Ue&&!Ue.done&&(Bt=qe.return)?[4,Rr(Bt.call(qe))]:[3,16];case 15:gn.sent(),gn.label=16;case 16:return[3,18];case 17:if(He)throw He.error;return[7];case 18:return[7];case 19:return[2]}})})},_e.prototype.decodeSync=function(){e:for(;;){var V=this.readHeadByte(),xe=void 0;if(V>=224)xe=V-256;else if(V<192)if(V<128)xe=V;else if(V<144){if(0!=(F=V-128)){this.pushMapState(F),this.complete();continue e}xe={}}else if(V<160){if(0!=(F=V-144)){this.pushArrayState(F),this.complete();continue e}xe=[]}else{var Ce=V-160;xe=this.decodeUtf8String(Ce,0)}else if(192===V)xe=null;else if(194===V)xe=!1;else if(195===V)xe=!0;else if(202===V)xe=this.readF32();else if(203===V)xe=this.readF64();else if(204===V)xe=this.readU8();else if(205===V)xe=this.readU16();else if(206===V)xe=this.readU32();else if(207===V)xe=this.readU64();else if(208===V)xe=this.readI8();else if(209===V)xe=this.readI16();else if(210===V)xe=this.readI32();else if(211===V)xe=this.readI64();else if(217===V)Ce=this.lookU8(),xe=this.decodeUtf8String(Ce,1);else if(218===V)Ce=this.lookU16(),xe=this.decodeUtf8String(Ce,2);else if(219===V)Ce=this.lookU32(),xe=this.decodeUtf8String(Ce,4);else if(220===V){if(0!==(F=this.readU16())){this.pushArrayState(F),this.complete();continue e}xe=[]}else if(221===V){if(0!==(F=this.readU32())){this.pushArrayState(F),this.complete();continue e}xe=[]}else if(222===V){if(0!==(F=this.readU16())){this.pushMapState(F),this.complete();continue e}xe={}}else if(223===V){if(0!==(F=this.readU32())){this.pushMapState(F),this.complete();continue e}xe={}}else if(196===V){var F=this.lookU8();xe=this.decodeBinary(F,1)}else if(197===V)F=this.lookU16(),xe=this.decodeBinary(F,2);else if(198===V)F=this.lookU32(),xe=this.decodeBinary(F,4);else if(212===V)xe=this.decodeExtension(1,0);else if(213===V)xe=this.decodeExtension(2,0);else if(214===V)xe=this.decodeExtension(4,0);else if(215===V)xe=this.decodeExtension(8,0);else if(216===V)xe=this.decodeExtension(16,0);else if(199===V)F=this.lookU8(),xe=this.decodeExtension(F,1);else if(200===V)F=this.lookU16(),xe=this.decodeExtension(F,2);else{if(201!==V)throw new Error("Unrecognized type byte: "+mn(V));F=this.lookU32(),xe=this.decodeExtension(F,4)}this.complete();for(var qe=this.stack;qe.length>0;){var Ue=qe[qe.length-1];if(0===Ue.type){if(Ue.array[Ue.position]=xe,Ue.position++,Ue.position!==Ue.size)continue e;qe.pop(),xe=Ue.array}else{if(1===Ue.type){if("string"!=(dt=typeof xe)&&"number"!==dt)throw new Error("The type of key must be string or number but "+typeof xe);Ue.key=xe,Ue.type=2;continue e}if(Ue.map[Ue.key]=xe,Ue.readCount++,Ue.readCount!==Ue.size){Ue.key=null,Ue.type=1;continue e}qe.pop(),xe=Ue.map}}return xe}var dt},_e.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},_e.prototype.complete=function(){this.headByte=-1},_e.prototype.readArraySize=function(){var V=this.readHeadByte();switch(V){case 220:return this.readU16();case 221:return this.readU32();default:if(V<160)return V-144;throw new Error("Unrecognized array type byte: "+mn(V))}},_e.prototype.pushMapState=function(V){if(V>this.maxMapLength)throw new Error("Max length exceeded: map length ("+V+") > maxMapLengthLength ("+this.maxMapLength+")");this.stack.push({type:1,size:V,key:null,readCount:0,map:{}})},_e.prototype.pushArrayState=function(V){if(V>this.maxArrayLength)throw new Error("Max length exceeded: array length ("+V+") > maxArrayLength ("+this.maxArrayLength+")");this.stack.push({type:0,size:V,array:new Array(V),position:0})},_e.prototype.decodeUtf8String=function(V,xe){var Ce;if(V>this.maxStrLength)throw new Error("Max length exceeded: UTF-8 byte length ("+V+") > maxStrLength ("+this.maxStrLength+")");if(this.bytes.byteLength<this.pos+xe+V)throw xu;var F,dt,en,qe=this.pos+xe;return F=this.stateIsMapKey()&&(null===(Ce=this.cachedKeyDecoder)||void 0===Ce?void 0:Ce.canBeCached(V))?this.cachedKeyDecoder.decode(this.bytes,qe,V):ue&&V>K?(en=this.bytes.subarray(dt=qe,dt+V),J.decode(en)):H(this.bytes,qe,V),this.pos+=xe+V,F},_e.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},_e.prototype.decodeBinary=function(V,xe){if(V>this.maxBinLength)throw new Error("Max length exceeded: bin length ("+V+") > maxBinLength ("+this.maxBinLength+")");if(!this.hasRemaining(V+xe))throw xu;var Ce=this.pos+xe,F=this.bytes.subarray(Ce,Ce+V);return this.pos+=xe+V,F},_e.prototype.decodeExtension=function(V,xe){if(V>this.maxExtLength)throw new Error("Max length exceeded: ext length ("+V+") > maxExtLength ("+this.maxExtLength+")");var Ce=this.view.getInt8(this.pos+xe),F=this.decodeBinary(V,xe+1);return this.extensionCodec.decode(F,Ce,this.context)},_e.prototype.lookU8=function(){return this.view.getUint8(this.pos)},_e.prototype.lookU16=function(){return this.view.getUint16(this.pos)},_e.prototype.lookU32=function(){return this.view.getUint32(this.pos)},_e.prototype.readU8=function(){var V=this.view.getUint8(this.pos);return this.pos++,V},_e.prototype.readI8=function(){var V=this.view.getInt8(this.pos);return this.pos++,V},_e.prototype.readU16=function(){var V=this.view.getUint16(this.pos);return this.pos+=2,V},_e.prototype.readI16=function(){var V=this.view.getInt16(this.pos);return this.pos+=2,V},_e.prototype.readU32=function(){var V=this.view.getUint32(this.pos);return this.pos+=4,V},_e.prototype.readI32=function(){var V=this.view.getInt32(this.pos);return this.pos+=4,V},_e.prototype.readU64=function(){var V,xe,Ce=4294967296*(V=this.view).getUint32(xe=this.pos)+V.getUint32(xe+4);return this.pos+=8,Ce},_e.prototype.readI64=function(){var V=Pe(this.view,this.pos);return this.pos+=8,V},_e.prototype.readF32=function(){var V=this.view.getFloat32(this.pos);return this.pos+=4,V},_e.prototype.readF64=function(){var V=this.view.getFloat64(this.pos);return this.pos+=8,V},_e}(),ko={};function Oc(_e,V){void 0===V&&(V=ko);var xe=new Qa(V.extensionCodec,V.context,V.maxStrLength,V.maxBinLength,V.maxArrayLength,V.maxMapLength,V.maxExtLength);return xe.setBuffer(_e),xe.decodeSingleSync()}var _l=function(_e,V){var xe,Ce,F,qe,Ue={label:0,sent:function(){if(1&F[0])throw F[1];return F[1]},trys:[],ops:[]};return qe={next:dt(0),throw:dt(1),return:dt(2)},"function"==typeof Symbol&&(qe[Symbol.iterator]=function(){return this}),qe;function dt(ke){return function(en){return function(He){if(xe)throw new TypeError("Generator is already executing.");for(;Ue;)try{if(xe=1,Ce&&(F=2&He[0]?Ce.return:He[0]?Ce.throw||((F=Ce.return)&&F.call(Ce),0):Ce.next)&&!(F=F.call(Ce,He[1])).done)return F;switch(Ce=0,F&&(He=[2&He[0],F.value]),He[0]){case 0:case 1:F=He;break;case 4:return Ue.label++,{value:He[1],done:!1};case 5:Ue.label++,Ce=He[1],He=[0];continue;case 7:He=Ue.ops.pop(),Ue.trys.pop();continue;default:if(!((F=(F=Ue.trys).length>0&&F[F.length-1])||6!==He[0]&&2!==He[0])){Ue=0;continue}if(3===He[0]&&(!F||He[1]>F[0]&&He[1]<F[3])){Ue.label=He[1];break}if(6===He[0]&&Ue.label<F[1]){Ue.label=F[1],F=He;break}if(F&&Ue.label<F[2]){Ue.label=F[2],Ue.ops.push(He);break}F[2]&&Ue.ops.pop(),Ue.trys.pop();continue}He=V.call(_e,Ue)}catch(Bt){He=[6,Bt],Ce=0}finally{xe=F=0}if(5&He[0])throw He[1];return{value:He[0]?He[1]:void 0,done:!0}}([ke,en])}}},Sa=function(_e){return this instanceof Sa?(this.v=_e,this):new Sa(_e)},bu=function(_e,V,xe){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var Ce,F=xe.apply(_e,V||[]),qe=[];return Ce={},Ue("next"),Ue("throw"),Ue("return"),Ce[Symbol.asyncIterator]=function(){return this},Ce;function Ue(Bt){F[Bt]&&(Ce[Bt]=function(gn){return new Promise(function(yn,Ln){qe.push([Bt,gn,yn,Ln])>1||dt(Bt,gn)})})}function dt(Bt,gn){try{(yn=F[Bt](gn)).value instanceof Sa?Promise.resolve(yn.value.v).then(ke,en):He(qe[0][2],yn)}catch(Ln){He(qe[0][3],Ln)}var yn}function ke(Bt){dt("next",Bt)}function en(Bt){dt("throw",Bt)}function He(Bt,gn){Bt(gn),qe.shift(),qe.length&&dt(qe[0][0],qe[0][1])}};function oi(_e){if(null==_e)throw new Error("Assertion Failure: value must not be null nor undefined")}function kl(_e){return null!=_e[Symbol.asyncIterator]?_e:function(V){return bu(this,arguments,function(){var xe,Ce,qe;return _l(this,function(Ue){switch(Ue.label){case 0:xe=V.getReader(),Ue.label=1;case 1:Ue.trys.push([1,,9,10]),Ue.label=2;case 2:return[4,Sa(xe.read())];case 3:return Ce=Ue.sent(),qe=Ce.value,Ce.done?[4,Sa(void 0)]:[3,5];case 4:return[2,Ue.sent()];case 5:return oi(qe),[4,Sa(qe)];case 6:return[4,Ue.sent()];case 7:return Ue.sent(),[3,2];case 8:return[3,10];case 9:return xe.releaseLock(),[7];case 10:return[2]}})})}(_e)}function vu(_e,V){return void 0===V&&(V=ko),xe=this,qe=function(){var xe;return function(Ce,F){var qe,Ue,dt,ke,en={label:0,sent:function(){if(1&dt[0])throw dt[1];return dt[1]},trys:[],ops:[]};return ke={next:He(0),throw:He(1),return:He(2)},"function"==typeof Symbol&&(ke[Symbol.iterator]=function(){return this}),ke;function He(Bt){return function(gn){return function(yn){if(qe)throw new TypeError("Generator is already executing.");for(;en;)try{if(qe=1,Ue&&(dt=2&yn[0]?Ue.return:yn[0]?Ue.throw||((dt=Ue.return)&&dt.call(Ue),0):Ue.next)&&!(dt=dt.call(Ue,yn[1])).done)return dt;switch(Ue=0,dt&&(yn=[2&yn[0],dt.value]),yn[0]){case 0:case 1:dt=yn;break;case 4:return en.label++,{value:yn[1],done:!1};case 5:en.label++,Ue=yn[1],yn=[0];continue;case 7:yn=en.ops.pop(),en.trys.pop();continue;default:if(!((dt=(dt=en.trys).length>0&&dt[dt.length-1])||6!==yn[0]&&2!==yn[0])){en=0;continue}if(3===yn[0]&&(!dt||yn[1]>dt[0]&&yn[1]<dt[3])){en.label=yn[1];break}if(6===yn[0]&&en.label<dt[1]){en.label=dt[1],dt=yn;break}if(dt&&en.label<dt[2]){en.label=dt[2],en.ops.push(yn);break}dt[2]&&en.ops.pop(),en.trys.pop();continue}yn=F.call(Ce,en)}catch(Ln){yn=[6,Ln],Ue=0}finally{qe=dt=0}if(5&yn[0])throw yn[1];return{value:yn[0]?yn[1]:void 0,done:!0}}([Bt,gn])}}}(this,function(Ce){return xe=kl(_e),[2,new Qa(V.extensionCodec,V.context,V.maxStrLength,V.maxBinLength,V.maxArrayLength,V.maxMapLength,V.maxExtLength).decodeSingleAsync(xe)]})},new((F=void 0)||(F=Promise))(function(Ue,dt){function ke(Bt){try{He(qe.next(Bt))}catch(gn){dt(gn)}}function en(Bt){try{He(qe.throw(Bt))}catch(gn){dt(gn)}}function He(Bt){var gn;Bt.done?Ue(Bt.value):(gn=Bt.value,gn instanceof F?gn:new F(function(yn){yn(gn)})).then(ke,en)}He((qe=qe.apply(xe,[])).next())});var xe,F,qe}function Ta(_e,V){void 0===V&&(V=ko);var xe=kl(_e);return new Qa(V.extensionCodec,V.context,V.maxStrLength,V.maxBinLength,V.maxArrayLength,V.maxMapLength,V.maxExtLength).decodeArrayStream(xe)}function Pc(_e,V){void 0===V&&(V=ko);var xe=kl(_e);return new Qa(V.extensionCodec,V.context,V.maxStrLength,V.maxBinLength,V.maxArrayLength,V.maxMapLength,V.maxExtLength).decodeStream(xe)}}])},75042:(ct,pt,X)=>{"use strict";X.r(pt),X.d(pt,{Abs:()=>Su,Acos:()=>Nl,Acosh:()=>Al,AdadeltaOptimizer:()=>fo,AdagradOptimizer:()=>Wh,AdamOptimizer:()=>lr,AdamaxOptimizer:()=>Fr,Add:()=>Io,AddN:()=>Tu,All:()=>Uc,Any:()=>Vc,ArgMax:()=>Wc,ArgMin:()=>Mu,Asin:()=>Rl,Asinh:()=>_u,Atan:()=>ku,Atan2:()=>Iu,Atanh:()=>Eu,AvgPool:()=>Gc,AvgPool3D:()=>Hc,AvgPool3DGrad:()=>Fd,AvgPoolGrad:()=>Dd,BatchMatMul:()=>jc,BatchToSpaceND:()=>qc,Bincount:()=>$d,BroadcastArgs:()=>df,BroadcastTo:()=>eg,Callback:()=>eT,CallbackList:()=>Yw,Cast:()=>Cu,Ceil:()=>Nu,ClipByValue:()=>Au,Complex:()=>Od,ComplexAbs:()=>Xc,Concat:()=>Kc,Conv2D:()=>Yc,Conv2DBackpropFilter:()=>Pd,Conv2DBackpropInput:()=>Zc,Conv3D:()=>Jc,Conv3DBackpropFilterV2:()=>zd,Conv3DBackpropInputV2:()=>Bd,Cos:()=>Ru,Cosh:()=>Lu,CropAndResize:()=>Ud,Cumsum:()=>Qc,CustomCallback:()=>Jw,DataStorage:()=>Sa,DenseBincount:()=>Vd,DepthToSpace:()=>Wd,DepthwiseConv2dNative:()=>eh,DepthwiseConv2dNativeBackpropFilter:()=>Ll,DepthwiseConv2dNativeBackpropInput:()=>Dl,Diag:()=>Du,Dilation2D:()=>ka,Dilation2DBackpropFilter:()=>Fl,Dilation2DBackpropInput:()=>ro,ENV:()=>hf,EarlyStopping:()=>tT,Einsum:()=>th,Elu:()=>Fu,EluGrad:()=>pf,Environment:()=>Jm,Equal:()=>ds,Erf:()=>nh,Exp:()=>so,ExpandDims:()=>$l,Expm1:()=>No,FFT:()=>Gd,Fill:()=>rh,FlipLeftRight:()=>sh,Floor:()=>Ol,FloorDiv:()=>$u,FromPixels:()=>zo,FusedBatchNorm:()=>ih,FusedConv2D:()=>Bo,FusedDepthwiseConv2D:()=>ap,GatherNd:()=>Hd,GatherV2:()=>Ea,GraphModel:()=>fT,Greater:()=>jd,GreaterEqual:()=>Ao,History:()=>Zw,IFFT:()=>ff,Identity:()=>ah,Imag:()=>mf,InputSpec:()=>ws,IsFinite:()=>oh,IsInf:()=>lh,IsNan:()=>uh,KernelBackend:()=>bu,LRN:()=>Zd,LRNGrad:()=>yf,LayerVariable:()=>Hw,LayersModel:()=>Ac,LeakyRelu:()=>qd,Less:()=>Xd,LessEqual:()=>Kd,LinSpace:()=>gf,Log:()=>ch,Log1p:()=>hh,LogSoftmax:()=>Ou,LogicalAnd:()=>Yd,LogicalNot:()=>dh,LogicalOr:()=>io,Max:()=>Jd,MaxPool:()=>Qd,MaxPool3D:()=>ep,MaxPool3DGrad:()=>bf,MaxPoolGrad:()=>xf,MaxPoolWithArgmax:()=>fh,Maximum:()=>ph,Mean:()=>Ji,Min:()=>Jr,Minimum:()=>Ro,MirrorPad:()=>Ia,Mod:()=>ao,MomentumOptimizer:()=>oc,Multinomial:()=>Ws,Multiply:()=>jr,Neg:()=>Pu,NonMaxSuppressionV3:()=>mh,NonMaxSuppressionV4:()=>tp,NonMaxSuppressionV5:()=>np,NotEqual:()=>Lo,OP_SCOPE_SUFFIX:()=>Fs,OneHot:()=>It,OnesLike:()=>gh,Optimizer:()=>Ua,Pack:()=>zr,PadV2:()=>oo,Pool:()=>zu,Pow:()=>yh,Prelu:()=>Br,Prod:()=>xh,RMSPropOptimizer:()=>Yo,RNN:()=>wl,Range:()=>sr,Rank:()=>up,Real:()=>Si,RealDiv:()=>Co,Reciprocal:()=>Bu,Reduction:()=>Ps,Relu:()=>Pl,Relu6:()=>Ti,Reshape:()=>Qr,ResizeBilinear:()=>vh,ResizeBilinearGrad:()=>Gs,ResizeNearestNeighbor:()=>te,ResizeNearestNeighborGrad:()=>bh,Reverse:()=>Do,RotateWithOffset:()=>ra,Round:()=>zl,Rsqrt:()=>Ca,SGDOptimizer:()=>oa,ScatterNd:()=>Fo,Select:()=>lo,Selu:()=>Pi,Sequential:()=>Qp,Sigmoid:()=>Oo,Sign:()=>$o,Sin:()=>ea,Sinh:()=>uo,Slice:()=>Qi,Softmax:()=>Vu,Softplus:()=>ta,SpaceToBatchND:()=>wh,SparseFillEmptyRows:()=>Na,SparseReshape:()=>na,SparseSegmentMean:()=>Sh,SparseSegmentSum:()=>Wu,SparseToDense:()=>Aa,SplitV:()=>Uu,Sqrt:()=>Bl,Square:()=>Gu,SquaredDifference:()=>Ul,Step:()=>qu,StridedSlice:()=>Th,StringNGrams:()=>Ra,StringSplit:()=>sn,StringToHashBucketFast:()=>Po,Sub:()=>Hs,Sum:()=>rp,SymbolicTensor:()=>yl,Tan:()=>Mh,Tanh:()=>_h,Tensor:()=>Un,TensorBuffer:()=>Pt,Tile:()=>zi,TopK:()=>Hu,Transform:()=>js,Transpose:()=>kh,Unique:()=>sp,Unpack:()=>La,UnsortedSegmentSum:()=>ju,Variable:()=>qs,ZerosLike:()=>ip,_FusedMatMul:()=>Vl,abs:()=>qr,acos:()=>lc,acosh:()=>Kl,add:()=>vt,addN:()=>uc,all:()=>Zo,any:()=>Jo,argMax:()=>Yl,argMin:()=>Gh,asin:()=>cc,asinh:()=>Hh,atan:()=>Uf,atan2:()=>bp,atanh:()=>Vf,avgPool:()=>wp,avgPool3d:()=>qh,backend:()=>F0,backend_util:()=>Pe,basicLSTMCell:()=>Sp,batchNorm:()=>Vr,batchNorm2d:()=>Cg,batchNorm3d:()=>Ng,batchNorm4d:()=>Ag,batchToSpaceND:()=>hc,bincount:()=>Tp,booleanMaskAsync:()=>V0,broadcastArgs:()=>Mp,broadcastTo:()=>_i,browser:()=>ne,buffer:()=>Pn,callbacks:()=>uE,cast:()=>Rt,ceil:()=>Hf,clipByValue:()=>Js,clone:()=>Xo,complex:()=>Ks,concat:()=>dr,concat1d:()=>pi,concat2d:()=>jf,concat3d:()=>Ql,concat4d:()=>Rg,constraints:()=>_t,conv1d:()=>dc,conv2d:()=>Wa,conv2dTranspose:()=>eu,conv3d:()=>qf,conv3dTranspose:()=>Xf,copyRegisteredKernels:()=>tg,cos:()=>Kh,cosh:()=>_p,cosineWindow:()=>cm,cumsum:()=>el,customGrad:()=>po,data:()=>Oc,denseBincount:()=>tl,deprecationWarn:()=>N0,depthToSpace:()=>tu,depthwiseConv2d:()=>fi,deregisterOp:()=>hE,device_util:()=>De,diag:()=>Yh,dilation2d:()=>Zh,disableDeprecationWarnings:()=>Uh,dispose:()=>_n,disposeVariables:()=>Rb,div:()=>an,divNoNan:()=>Jh,dot:()=>Kf,dropout:()=>Gg,einsum:()=>ki,elu:()=>yo,enableDebugMode:()=>C0,enableProdMode:()=>I0,enclosingPowerOfTwo:()=>Hg,engine:()=>aa,env:()=>nt,equal:()=>$s,erf:()=>kp,exp:()=>Qs,expandDims:()=>Is,expm1:()=>Ep,eye:()=>Ip,fft:()=>ld,fill:()=>Vh,findBackend:()=>D0,findBackendFactory:()=>$b,floor:()=>nu,floorDiv:()=>xp,fused:()=>Q,gather:()=>ru,gatherND:()=>Wg,gather_util:()=>ie,getBackend:()=>Fb,getGradient:()=>vf,getKernel:()=>op,getKernelsForBackend:()=>wf,grad:()=>$0,grads:()=>Pb,greater:()=>ms,greaterEqual:()=>ca,ifft:()=>wc,imag:()=>pc,image:()=>ji,inTopKAsync:()=>jg,initializers:()=>lt,input:()=>vS,io:()=>ue,irfft:()=>Dp,isFinite:()=>Yf,isInf:()=>Qh,isNaN:()=>Zf,keep:()=>ps,kernel_impls:()=>xt,layers:()=>yt,leakyRelu:()=>su,less:()=>ed,lessEqual:()=>Ga,linalg:()=>ix,linspace:()=>Jf,loadGraphModel:()=>BE,loadLayersModel:()=>R_,localResponseNormalization:()=>Qf,log:()=>ns,log1p:()=>nl,logSigmoid:()=>O0,logSoftmax:()=>em,logSumExp:()=>td,logicalAnd:()=>gi,logicalNot:()=>sl,logicalOr:()=>Cp,logicalXor:()=>Fg,losses:()=>Qb,matMul:()=>Fn,math:()=>ve,max:()=>ha,maxPool:()=>il,maxPool3d:()=>Np,maxPoolWithArgmax:()=>Ha,maximum:()=>Zs,mean:()=>Ir,memory:()=>yp,meshgrid:()=>zb,metrics:()=>wt,min:()=>xo,minimum:()=>ja,mirrorPad:()=>al,mod:()=>nd,model:()=>N_,models:()=>ht,moments:()=>ol,movingAverage:()=>W0,mul:()=>Se,multiRNNCell:()=>mc,multinomial:()=>iu,neg:()=>Er,nextFrame:()=>Gp,norm:()=>hd,notEqual:()=>da,oneHot:()=>Ph,ones:()=>$r,onesLike:()=>Os,op:()=>we,outerProduct:()=>rd,pad:()=>Ei,pad1d:()=>sd,pad2d:()=>$g,pad3d:()=>P0,pad4d:()=>z0,pool:()=>Ap,pow:()=>Ko,prelu:()=>yc,print:()=>a0,prod:()=>id,profile:()=>A0,rand:()=>Og,randomGamma:()=>Bb,randomNormal:()=>Tr,randomUniform:()=>Ii,range:()=>xc,ready:()=>R0,real:()=>bc,reciprocal:()=>nm,registerBackend:()=>Eg,registerCallbackConstructor:()=>L_,registerGradient:()=>Bn,registerKernel:()=>lp,registerOp:()=>cE,regularizers:()=>$t,relu:()=>rs,relu6:()=>bo,removeBackend:()=>L0,reshape:()=>Me,reverse:()=>ei,reverse1d:()=>Lp,reverse2d:()=>B0,reverse3d:()=>ad,reverse4d:()=>vc,rfft:()=>pa,round:()=>ou,rsqrt:()=>lu,scalar:()=>ln,scatterND:()=>G0,scatter_util:()=>oe,selu:()=>rm,separableConv2d:()=>ll,sequential:()=>A_,serialization:()=>J,setBackend:()=>Db,setPlatform:()=>Ob,setdiff1dAsync:()=>sm,sigmoid:()=>ua,sign:()=>im,signal:()=>sx,sin:()=>ys,sinh:()=>Ci,slice:()=>Gn,slice1d:()=>Ni,slice2d:()=>Bg,slice3d:()=>am,slice4d:()=>ul,slice_util:()=>H,softmax:()=>od,softplus:()=>fc,spaceToBatchND:()=>gc,sparse:()=>fd,sparseToDense:()=>Vg,spectral:()=>ry,split:()=>xs,sqrt:()=>Es,square:()=>hr,squaredDifference:()=>Ai,squeeze:()=>fa,stack:()=>yi,step:()=>Sc,stridedSlice:()=>om,string:()=>Wp,sub:()=>Yt,sum:()=>Qt,sumOutType:()=>Wo,tan:()=>Fp,tanh:()=>go,tensor:()=>cr,tensor1d:()=>bs,tensor2d:()=>cl,tensor3d:()=>h0,tensor4d:()=>U0,tensor5d:()=>$p,tensor6d:()=>Ug,tensor_util:()=>Ge,test_util:()=>K,tidy:()=>Re,tile:()=>mi,time:()=>Lb,topk:()=>lm,train:()=>hu,transpose:()=>Xn,truncatedNormal:()=>ud,unique:()=>Op,unregisterGradient:()=>Uo,unregisterKernel:()=>Da,unsortedSegmentSum:()=>Pp,unstack:()=>Ri,upcastType:()=>ui,util:()=>ge,valueAndGrad:()=>Pf,valueAndGrads:()=>zf,variable:()=>um,variableGrads:()=>Ig,version:()=>PO,version_converter:()=>mT,version_core:()=>E0,version_layers:()=>Bx,where:()=>fs,whereAsync:()=>Tc,zeros:()=>Kr,zerosLike:()=>Kn});var ge={};X.r(ge),X.d(ge,{arraysEqual:()=>He,assert:()=>F,assertNonNegativeIntegerDimensions:()=>Ds,assertNonNull:()=>Ue,assertShapesMatch:()=>qe,bytesFromStringArray:()=>Ym,bytesPerElement:()=>eo,checkConversionForErrors:()=>uf,clamp:()=>Ta,computeStrides:()=>hn,createScalarValue:()=>Oa,createShuffledIndices:()=>Ln,decodeString:()=>On,distSquared:()=>Ce,encodeString:()=>Bi,fetch:()=>xr,fingerPrint64:()=>Tf,flatten:()=>dt,getArrayFromDType:()=>Zn,getTypedArrayFromDType:()=>as,hasEncodingLoss:()=>Eo,hexToLong:()=>Ch,indexToLoc:()=>wu,inferDtype:()=>to,inferFromImplicitShape:()=>El,isBoolean:()=>zc,isFunction:()=>Vs,isInt:()=>Bt,isNumber:()=>Rd,isPromise:()=>Cl,isScalarShape:()=>en,isString:()=>Ma,isTypedArray:()=>Ms,isValidDtype:()=>jy,locToIndex:()=>Zi,makeOnesTypedArray:()=>Il,makeZerosNestedTypedArray:()=>_a,makeZerosTypedArray:()=>hs,nearestDivisor:()=>no,nearestLargerEven:()=>Pc,now:()=>wr,parseAxisParam:()=>Dn,randUniform:()=>xe,repeatedTry:()=>or,rightPad:()=>Hr,shuffle:()=>kl,shuffleCombo:()=>vu,sizeFromShape:()=>ke,sizeToSquarishShape:()=>yn,squeezeShape:()=>Yi,sum:()=>V,swap:()=>_e,tanh:()=>gn,toNestedArray:()=>wi,toTypedArray:()=>Wt});var Ge={};X.r(Ge),X.d(Ge,{assertTypesMatch:()=>Go,getTensorsInContainer:()=>Xs,isTensorInList:()=>za,makeTypesMatch:()=>Sr});var De={};X.r(De),X.d(De,{isBrowser:()=>Lh,isMobile:()=>Rh});var ue={};X.r(ue),X.d(ue,{browserFiles:()=>pg,browserHTTPRequest:()=>gp,concatenateArrayBuffers:()=>If,copyModel:()=>i0,decodeWeights:()=>jo,encodeWeights:()=>Dh,fromMemory:()=>Ys,getLoadHandlers:()=>Wi,getModelArtifactsForJSON:()=>Fh,getModelArtifactsInfoForJSON:()=>qo,getSaveHandlers:()=>Gt,http:()=>Lf,isHTTPScheme:()=>Rf,listModels:()=>Nf,loadWeights:()=>u0,moveModel:()=>_b,registerLoadRouter:()=>Wn,registerSaveRouter:()=>Qu,removeModel:()=>s0,weightsLoaderFactory:()=>mg,withSaveHandler:()=>c0});var ve={};X.r(ve),X.d(ve,{confusionMatrix:()=>Eb});var ne={};X.r(ne),X.d(ne,{fromPixels:()=>p0,fromPixelsAsync:()=>Ib,toPixels:()=>Cb});var ie={};X.r(ie),X.d(ie,{prepareAndValidate:()=>Df});var oe={};X.r(oe),X.d(oe,{calculateShapes:()=>Bh,validateInput:()=>xg,validateUpdateShape:()=>yg});var H={};X.r(H),X.d(H,{assertParamsValid:()=>bg,computeFlatOffset:()=>wg,computeOutShape:()=>f0,getNormalizedAxes:()=>x0,isSliceContinous:()=>vg,maskToAxes:()=>Ff,parseSliceParams:()=>$f,sliceInfo:()=>Sg,startForAxis:()=>S0,startIndicesWithElidedDims:()=>b0,stopForAxis:()=>T0,stopIndicesWithElidedDims:()=>v0,stridesForAxis:()=>w0,stridesWithElidedDims:()=>m0});var J={};X.r(J),X.d(J,{Serializable:()=>ac,SerializationMap:()=>Hi,registerClass:()=>St});var K={};X.r(K),X.d(K,{TEST_EPSILON_FLOAT16:()=>M0,encodeStrings:()=>kg,expectArrayBuffersEqual:()=>Xl,expectArraysClose:()=>Nb,expectArraysEqual:()=>k0,expectNumbersClose:()=>_g,expectPromiseToFail:()=>_0,expectValuesInRange:()=>Ab,testEpsilon:()=>Tg});var Q={};X.r(Q),X.d(Q,{conv2d:()=>dm,depthwiseConv2d:()=>Yg,matMul:()=>pm});var Te={};X.r(Te),X.d(Te,{collectGatherOpShapeInfo:()=>my,computeOutShape:()=>px,segOpComputeOptimalWindowSize:()=>dx});var Pe={};X.r(Pe),X.d(Pe,{ERF_A1:()=>qp,ERF_A2:()=>ay,ERF_A3:()=>vm,ERF_A4:()=>wm,ERF_A5:()=>oy,ERF_P:()=>gd,PARALLELIZE_THRESHOLD:()=>sy,SELU_SCALE:()=>jp,SELU_SCALEALPHA:()=>bm,applyActivation:()=>dd,assertAndGetBroadcastShape:()=>An,assertAxesAreInnerMostDims:()=>Cs,assertParamsConsistent:()=>md,assignToTypedArray:()=>ux,axesAreInnerMostDims:()=>Dg,calculateShapes:()=>Bh,checkEinsumDimSizes:()=>hy,combineLocations:()=>tm,complexWithEvenIndex:()=>ox,complexWithOddIndex:()=>lx,computeConv2DInfo:()=>ls,computeConv3DInfo:()=>Qo,computeDefaultPad:()=>Wf,computeDilation2DInfo:()=>Zl,computeOptimalWindowSize:()=>Ic,computeOutAndReduceShapes:()=>gs,computeOutShape:()=>qa,computePool2DInfo:()=>hi,computePool3DInfo:()=>la,convertConv2DDataFormat:()=>di,decodeEinsumEquation:()=>uy,eitherStridesOrDilationsAreOne:()=>ts,expandShapeToKeepDim:()=>br,exponent:()=>hx,exponents:()=>cx,fromStringArrayToUint8:()=>fx,fromUint8ToStringArray:()=>Cc,getAxesPermutation:()=>In,getBroadcastDims:()=>mo,getComplexWithIndex:()=>ly,getEinsumComputePath:()=>dy,getEinsumPermutation:()=>cy,getFusedBiasGradient:()=>Mc,getFusedDyActivation:()=>hm,getImageCenter:()=>Or,getInnerMostAxes:()=>Xr,getPermuted:()=>Cr,getReductionAxes:()=>Dr,getReshaped:()=>Hp,getReshapedPermuted:()=>du,getSliceBeginCoords:()=>xm,getSliceSize:()=>iy,getUndoAxesPermutation:()=>rl,isIdentityPermutation:()=>py,log:()=>Bc,mergeRealAndImagArrays:()=>hl,prepareAndValidate:()=>Df,prepareSplitSize:()=>fy,segment_util:()=>Te,shouldFuse:()=>Bp,slice_util:()=>H,splitRealAndImagArrays:()=>ax,tupleValuesAreOne:()=>Va,upcastType:()=>ui,validateInput:()=>xg,validateUpdateShape:()=>yg,warn:()=>Zr});var xt={};X.r(xt),X.d(xt,{nonMaxSuppressionV3Impl:()=>fm,nonMaxSuppressionV4Impl:()=>Up,nonMaxSuppressionV5Impl:()=>Vp,whereImpl:()=>cd});var _t={};X.r(_t),X.d(_t,{maxNorm:()=>ot,minMaxNorm:()=>dn,nonNeg:()=>kn,unitNorm:()=>Nt});var lt={};X.r(lt),X.d(lt,{constant:()=>a_,glorotNormal:()=>p_,glorotUniform:()=>d_,heNormal:()=>f_,heUniform:()=>m_,identity:()=>c_,leCunNormal:()=>g_,leCunUniform:()=>y_,ones:()=>i_,orthogonal:()=>x_,randomNormal:()=>l_,randomUniform:()=>o_,truncatedNormal:()=>u_,varianceScaling:()=>h_,zeros:()=>s_});var yt={};X.r(yt),X.d(yt,{Layer:()=>Qn,RNN:()=>wl,RNNCell:()=>Iy,activation:()=>Y_,add:()=>ik,alphaDropout:()=>Vk,average:()=>ak,averagePooling1d:()=>W1,averagePooling2d:()=>G1,averagePooling3d:()=>H1,avgPool1d:()=>mk,avgPool2d:()=>yk,avgPool3d:()=>bk,avgPooling1d:()=>gk,avgPooling2d:()=>xk,avgPooling3d:()=>vk,batchNormalization:()=>dk,bidirectional:()=>Dk,concatenate:()=>ok,conv1d:()=>U_,conv2d:()=>V_,conv2dTranspose:()=>W_,conv3d:()=>G_,conv3dTranspose:()=>H_,convLstm2d:()=>Nk,convLstm2dCell:()=>Ak,cropping2D:()=>q_,dense:()=>Z_,depthwiseConv2d:()=>K_,dot:()=>hk,dropout:()=>J_,elu:()=>F_,embedding:()=>sk,flatten:()=>ek,gaussianDropout:()=>Uk,gaussianNoise:()=>Bk,globalAveragePooling1d:()=>wk,globalAveragePooling2d:()=>Sk,globalMaxPool1d:()=>$k,globalMaxPool2d:()=>Ok,globalMaxPooling1d:()=>YS,globalMaxPooling2d:()=>ZS,gru:()=>Mk,gruCell:()=>_k,input:()=>vS,inputLayer:()=>D_,layerNormalization:()=>pk,leakyReLU:()=>O_,lstm:()=>kk,lstmCell:()=>Ek,masking:()=>Wk,maxPool1d:()=>Pk,maxPool2d:()=>zk,maxPooling1d:()=>JS,maxPooling2d:()=>QS,maxPooling3d:()=>Tk,maximum:()=>lk,minimum:()=>uk,multiply:()=>ck,permute:()=>rk,prelu:()=>P_,reLU:()=>$_,repeatVector:()=>tk,reshape:()=>nk,rnn:()=>Rk,separableConv2d:()=>j_,simpleRNN:()=>Ik,simpleRNNCell:()=>Ck,softmax:()=>z_,spatialDropout1d:()=>Q_,stackedRNNCells:()=>Lk,thresholdedReLU:()=>B_,timeDistributed:()=>Fk,upSampling2d:()=>X_,zeroPadding2d:()=>fk});var wt={};X.r(wt),X.d(wt,{MAPE:()=>eE,MSE:()=>rE,binaryAccuracy:()=>Gk,binaryCrossentropy:()=>Hk,categoricalAccuracy:()=>qk,categoricalCrossentropy:()=>Xk,cosineProximity:()=>Zk,mape:()=>tE,meanAbsoluteError:()=>Jk,meanAbsolutePercentageError:()=>Qk,meanSquaredError:()=>nE,mse:()=>sE,precision:()=>Kk,recall:()=>Yk,sparseCategoricalAccuracy:()=>jk});var ht={};X.r(ht),X.d(ht,{modelFromJSON:()=>C_});var $t={};X.r($t),X.d($t,{l1:()=>aE,l1l2:()=>iE,l2:()=>oE});var Ze={};X.r(Ze),X.d(Ze,{json:()=>dE});var Z={};X.r(Z),X.d(Z,{json:()=>pE});var Fe={};X.r(Fe),X.d(Fe,{json:()=>fE});var zt={};X.r(zt),X.d(zt,{json:()=>mE});var Jt={};X.r(Jt),X.d(Jt,{json:()=>gE});var on={};X.r(on),X.d(on,{json:()=>yE});var mn={};X.r(mn),X.d(mn,{json:()=>xE});var bn={};X.r(bn),X.d(bn,{json:()=>bE});var yr={};X.r(yr),X.d(yr,{json:()=>vE});var kr={};X.r(kr),X.d(kr,{json:()=>wE});var Rr={};X.r(Rr),X.d(Rr,{json:()=>SE});var is={};X.r(is),X.d(is,{json:()=>TE});var Ls={};X.r(Ls),X.d(Ls,{json:()=>ME});var _o={};X.r(_o),X.d(_o,{json:()=>_E});var Ml={};X.r(Ml),X.d(Ml,{json:()=>kE});var xu={};X.r(xu),X.d(xu,{json:()=>EE});var $c={};X.r($c),X.d($c,{json:()=>IE});var Qa={};X.r(Qa),X.d(Qa,{json:()=>CE});var ko={};X.r(ko),X.d(ko,{json:()=>NE});var Oc={};X.r(Oc),X.d(Oc,{CSVDataset:()=>ET,Dataset:()=>Dm,FileDataSource:()=>RT,TextLineDataset:()=>MT,URLDataSource:()=>LT,array:()=>tI,csv:()=>uI,func:()=>cI,generator:()=>hI,microphone:()=>pI,version_data:()=>DT,webcam:()=>dI,zip:()=>nI});var _l={};X.r(_l),X.d(_l,{addImpl:()=>UT,bincountImpl:()=>mw,bincountReduceImpl:()=>qT,ceilImpl:()=>XT,concatImpl:()=>KT,equalImpl:()=>JT,expImpl:()=>e2,expm1Impl:()=>n2,floorImpl:()=>i2,gatherNdImpl:()=>a2,gatherV2Impl:()=>o2,greaterEqualImpl:()=>u2,greaterImpl:()=>l2,lessEqualImpl:()=>h2,lessImpl:()=>c2,linSpaceImpl:()=>d2,logImpl:()=>p2,maxImpl:()=>f2,maximumImpl:()=>g2,minimumImpl:()=>y2,multiplyImpl:()=>gw,negImpl:()=>b2,notEqualImpl:()=>v2,prodImpl:()=>T2,rangeImpl:()=>M2,rsqrtImpl:()=>_2,sigmoidImpl:()=>SI,simpleAbsImpl:()=>WT,sliceImpl:()=>jT,sparseFillEmptyRowsImpl:()=>I2,sparseReshapeImpl:()=>C2,sparseSegmentReductionImpl:()=>Sw,sqrtImpl:()=>lR,squaredDifferenceImpl:()=>N2,stridedSliceImpl:()=>A2,stringNGramsImpl:()=>R2,stringSplitImpl:()=>L2,stringToHashBucketFastImpl:()=>D2,subImpl:()=>r2,tileImpl:()=>F2,topKImpl:()=>O2,transposeImpl:()=>pw,uniqueImpl:()=>z2});class Sa{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class bu{refCount(e){return oi("refCount")}incRef(e){return oi("incRef")}timerAvailable(){return!0}time(e){return oi("time")}read(e){return oi("read")}readSync(e){return oi("readSync")}numDataIds(){return oi("numDataIds")}disposeData(e,t){return oi("disposeData")}write(e,t,s){return oi("write")}move(e,t,s,i,o){return oi("move")}memory(){return oi("memory")}floatPrecision(){return oi("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return oi("dispose")}}function oi(r){throw new Error(`'${r}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function kl(r){let e=r.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,_e(r,e,t)}function vu(r,e){if(r.length!==e.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${r.length}Second array length was ${e.length}`);let t=r.length,s=0;for(;t>0;)s=Math.random()*t|0,t--,_e(r,t,s),_e(e,t,s)}function Ta(r,e,t){return Math.max(r,Math.min(e,t))}function Pc(r){return r%2==0?r:r+1}function _e(r,e,t){const s=r[e];r[e]=r[t],r[t]=s}function V(r){let e=0;for(let t=0;t<r.length;t++)e+=r[t];return e}function xe(r,e){const t=Math.random();return e*t+(1-t)*r}function Ce(r,e){let t=0;for(let s=0;s<r.length;s++){const i=Number(r[s])-Number(e[s]);t+=i*i}return t}function F(r,e){if(!r)throw new Error("string"==typeof e?e:e())}function qe(r,e,t=""){F(He(r,e),()=>t+` Shapes ${r} and ${e} must match`)}function Ue(r){F(null!=r,()=>"The input to the tensor constructor must be a non-null value.")}function dt(r,e=[],t=!1){if(null==e&&(e=[]),Array.isArray(r)||Ms(r)&&!t)for(let s=0;s<r.length;++s)dt(r[s],e,t);else e.push(r);return e}function ke(r){if(0===r.length)return 1;let e=r[0];for(let t=1;t<r.length;t++)e*=r[t];return e}function en(r){return 0===r.length}function He(r,e){if(r===e)return!0;if(null==r||null==e||r.length!==e.length)return!1;for(let t=0;t<r.length;t++)if(r[t]!==e[t])return!1;return!0}function Bt(r){return r%1==0}function gn(r){if(null!=Math.tanh)return Math.tanh(r);if(r===1/0)return 1;if(r===-1/0)return-1;{const e=Math.exp(2*r);return(e-1)/(e+1)}}function yn(r){const e=Math.ceil(Math.sqrt(r));return[e,Math.ceil(r/e)]}function Ln(r){const e=new Uint32Array(r);for(let t=0;t<r;++t)e[t]=t;return kl(e),e}function Hr(r,e){return e<=r.length?r:r+" ".repeat(e-r.length)}function or(r,e=(s=>0),t){return new Promise((s,i)=>{let o=0;const l=()=>{if(r())return void s();o++;const c=e(o);null!=t&&o>=t?i():setTimeout(l,c)};l()})}function El(r,e){let t=1,s=-1;for(let o=0;o<r.length;++o)if(r[o]>=0)t*=r[o];else if(-1===r[o]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(r[o]<0)throw Error(`Shapes can not be < 0. Found ${r[o]} at dim ${o}`);if(-1===s){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${r}`);return r}if(0===t)throw Error(`Cannot infer the missing size in [${r}] when there are 0 elements`);if(e%t!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const i=r.slice();return i[s]=e/t,i}function Dn(r,e){const t=e.length;return F((r=null==r?e.map((s,i)=>i):[].concat(r)).every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${r}`),F(r.every(s=>Bt(s)),()=>`All values in axis param must be integers but got axis ${r}`),r.map(s=>s<0?t+s:s)}function Yi(r,e){const t=[],s=[],i=null!=e&&Array.isArray(e)&&0===e.length,o=null==e||i?null:Dn(e,r).sort();let l=0;for(let c=0;c<r.length;++c){if(null!=o){if(o[l]===c&&1!==r[c])throw new Error(`Can't squeeze axis ${c} since its dim '${r[c]}' is not 1`);(null==o[l]||o[l]>c)&&1===r[c]&&(t.push(r[c]),s.push(c)),o[l]<=c&&l++}1!==r[c]&&(t.push(r[c]),s.push(c))}return{newShape:t,keptDims:s}}function as(r,e){let t=null;if(null==r||"float32"===r)t=new Float32Array(e);else if("int32"===r)t=new Int32Array(e);else{if("bool"!==r)throw new Error(`Unknown data type ${r}`);t=new Uint8Array(e)}return t}function Zn(r,e){let t=null;if(null==r||"float32"===r)t=new Float32Array(e);else if("int32"===r)t=new Int32Array(e);else if("bool"===r)t=new Uint8Array(e);else{if("string"!==r)throw new Error(`Unknown data type ${r}`);t=new Array(e)}return t}function uf(r,e){for(let t=0;t<r.length;t++){const s=r[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function jy(r){return"bool"===r||"complex64"===r||"float32"===r||"int32"===r||"string"===r}function Eo(r,e){return!("complex64"===e||"float32"===e&&"complex64"!==r||"int32"===e&&"float32"!==r&&"complex64"!==r||"bool"===e&&"bool"===r)}function Ms(r){return r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array}function eo(r){if("float32"===r||"int32"===r)return 4;if("complex64"===r)return 8;if("bool"===r)return 1;throw new Error(`Unknown dtype ${r}`)}function Ym(r){if(null==r)return 0;let e=0;return r.forEach(t=>e+=t.length),e}function Ma(r){return"string"==typeof r||r instanceof String}function zc(r){return"boolean"==typeof r}function Rd(r){return"number"==typeof r}function to(r){return Array.isArray(r)?to(r[0]):r instanceof Float32Array?"float32":r instanceof Int32Array||r instanceof Uint8Array?"int32":Rd(r)?"float32":Ma(r)?"string":zc(r)?"bool":"float32"}function Vs(r){return!!(r&&r.constructor&&r.call&&r.apply)}function no(r,e){for(let t=e;t<r;++t)if(r%t==0)return t;return r}function hn(r){const e=r.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=r[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*r[s+1];return t}function Zm(r,e,t,s=!1){const i=new Array;if(1===e.length){const o=e[0]*(s?2:1);for(let l=0;l<o;l++)i[l]=t[r+l]}else{const o=e[0],l=e.slice(1),c=l.reduce((p,d)=>p*d)*(s?2:1);for(let p=0;p<o;p++)i[p]=Zm(r+p*c,l,t,s)}return i}function wi(r,e,t=!1){if(0===r.length)return e[0];const s=r.reduce((i,o)=>i*o)*(t?2:1);if(0===s)return[];if(s!==e.length)throw new Error(`[${r}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return Zm(0,r,e,t)}function Il(r,e){const t=hs(r,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function hs(r,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(r);if("int32"===e)return new Int32Array(r);if("bool"===e)return new Uint8Array(r);throw new Error(`Unknown data type ${e}`)}function _a(r,e){const t=r.reduce((s,i)=>s*i,1);if(null==e||"float32"===e)return wi(r,new Float32Array(t));if("int32"===e)return wi(r,new Int32Array(t));if("bool"===e)return wi(r,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function Ds(r){r.forEach(e=>{F(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${r}].`)})}function Zi(r,e,t){if(0===e)return 0;if(1===e)return r[0];let s=r[r.length-1];for(let i=0;i<r.length-1;++i)s+=t[i]*r[i];return s}function wu(r,e,t){if(0===e)return[];if(1===e)return[r];const s=new Array(e);for(let i=0;i<s.length-1;++i)s[i]=Math.floor(r/t[i]),r-=s[i]*t[i];return s[s.length-1]=r,s}function Cl(r){return r&&r.then&&"function"==typeof r.then}function Zr(...r){nt().getBool("IS_TEST")||nt().getBool("PROD")||console.warn(...r)}function Bc(...r){nt().getBool("IS_TEST")||nt().getBool("PROD")||console.log(...r)}class Jm{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=qy,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&Zr(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},null!=this.urlFlags[e]){const i=this.urlFlags[e];Zr(`Setting feature override from URL ${e}: ${i}.`),this.set(e,i)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Cl(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach(t=>{const[s,i]=t.split(":");this.urlFlags[s]=function(o,l){if("true"===(l=l.toLowerCase())||"false"===l)return"true"===l;if(""+ +l===l)return+l;throw new Error(`Could not parse value flag value ${l} for flag ${o}.`)}(s,i)})}}function qy(r){const e={};return r.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>{return l=s[1],e[decodeURIComponent(s[0])]=decodeURIComponent(l||""),s.join("=");var l}),e}function nt(){return hf}let cf,hf=null;function Qm(){if(null==cf){let r;if("undefined"!=typeof window)r=window;else if(void 0!==X.g)r=X.g;else if("undefined"!=typeof process)r=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");r=self}cf=r}return cf}function Ld(r,e){const t=function(){const s=Qm();return null==s._tfGlobals&&(s._tfGlobals=new Map),s._tfGlobals}();if(t.has(r))return t.get(r);{const s=e();return t.set(r,s),t.get(r)}}const Su="Abs",Nl="Acos",Al="Acosh",Io="Add",Tu="AddN",Uc="All",Vc="Any",Wc="ArgMax",Mu="ArgMin",Rl="Asin",_u="Asinh",ku="Atan",Eu="Atanh",Iu="Atan2",Gc="AvgPool",Dd="AvgPoolGrad",Hc="AvgPool3D",Fd="AvgPool3DGrad",jc="BatchMatMul",qc="BatchToSpaceND",$d="Bincount",eg="BroadcastTo",df="BroadcastArgs",Cu="Cast",Nu="Ceil",Au="ClipByValue",Od="Complex",Xc="ComplexAbs",Kc="Concat",Yc="Conv2D",Pd="Conv2DBackpropFilter",Zc="Conv2DBackpropInput",Jc="Conv3D",zd="Conv3DBackpropFilterV2",Bd="Conv3DBackpropInputV2",Ru="Cos",Lu="Cosh",Qc="Cumsum",Ud="CropAndResize",Vd="DenseBincount",Wd="DepthToSpace",eh="DepthwiseConv2dNative",Ll="DepthwiseConv2dNativeBackpropFilter",Dl="DepthwiseConv2dNativeBackpropInput",Du="Diag",ka="Dilation2D",ro="Dilation2DBackpropInput",Fl="Dilation2DBackpropFilter",Co="RealDiv",th="Einsum",Fu="Elu",pf="EluGrad",nh="Erf",ds="Equal",so="Exp",$l="ExpandDims",No="Expm1",Gd="FFT",rh="Fill",sh="FlipLeftRight",Ol="Floor",$u="FloorDiv",ih="FusedBatchNorm",Ea="GatherV2",Hd="GatherNd",jd="Greater",Ao="GreaterEqual",ah="Identity",ff="IFFT",mf="Imag",oh="IsFinite",lh="IsInf",uh="IsNan",qd="LeakyRelu",Xd="Less",Kd="LessEqual",gf="LinSpace",ch="Log",hh="Log1p",Yd="LogicalAnd",dh="LogicalNot",io="LogicalOr",Ou="LogSoftmax",Zd="LRN",yf="LRNGrad",Jd="Max",ph="Maximum",Qd="MaxPool",xf="MaxPoolGrad",ep="MaxPool3D",bf="MaxPool3DGrad",fh="MaxPoolWithArgmax",Ji="Mean",Jr="Min",Ro="Minimum",Ia="MirrorPad",ao="Mod",Ws="Multinomial",jr="Multiply",Pu="Neg",Lo="NotEqual",mh="NonMaxSuppressionV3",tp="NonMaxSuppressionV4",np="NonMaxSuppressionV5",gh="OnesLike",It="OneHot",zr="Pack",oo="PadV2",zu="Pool",yh="Pow",Br="Prelu",xh="Prod",sr="Range",Si="Real",Bu="Reciprocal",Pl="Relu",Qr="Reshape",te="ResizeNearestNeighbor",bh="ResizeNearestNeighborGrad",vh="ResizeBilinear",Gs="ResizeBilinearGrad",Ti="Relu6",Do="Reverse",zl="Round",Ca="Rsqrt",Fo="ScatterNd",lo="Select",Pi="Selu",Qi="Slice",ea="Sin",uo="Sinh",$o="Sign",Oo="Sigmoid",ta="Softplus",Bl="Sqrt",rp="Sum",wh="SpaceToBatchND",Uu="SplitV",Vu="Softmax",Na="SparseFillEmptyRows",na="SparseReshape",Sh="SparseSegmentMean",Wu="SparseSegmentSum",Aa="SparseToDense",Ul="SquaredDifference",Gu="Square",Th="StridedSlice",Ra="StringNGrams",sn="StringSplit",Po="StringToHashBucketFast",Hs="Sub",Mh="Tan",_h="Tanh",zi="Tile",Hu="TopK",js="Transform",kh="Transpose",sp="Unique",La="Unpack",ju="UnsortedSegmentSum",ip="ZerosLike",qu="Step",zo="FromPixels",ra="RotateWithOffset",Vl="_FusedMatMul",Bo="FusedConv2D",ap="FusedDepthwiseConv2D",Eh=Ld("kernelRegistry",()=>new Map),Ih=Ld("gradRegistry",()=>new Map);function op(r,e){const t=Fa(r,e);return Eh.get(t)}function vf(r){return Ih.get(r)}function wf(r){const e=Eh.entries(),t=[];for(;;){const{done:s,value:i}=e.next();if(s)break;const[o,l]=i,[c]=o.split("_");c===r&&t.push(l)}return t}function lp(r){const{kernelName:e,backendName:t}=r,s=Fa(e,t);Eh.has(s)&&Zr(`The kernel '${e}' for backend '${t}' is already registered`),Eh.set(s,r)}function Bn(r){const{kernelName:e}=r;Ih.has(e)&&nt().getBool("DEBUG")&&Zr(`Overriding the gradient for '${e}'`),Ih.set(e,r)}function Da(r,e){const t=Fa(r,e);if(!Eh.has(t))throw new Error(`The kernel '${r}' for backend '${e}' is not registered`);Eh.delete(t)}function Uo(r){if(!Ih.has(r))throw new Error(`The gradient '${r}' for backend is not registered`);Ih.delete(r)}function tg(r,e){wf(r).forEach(t=>{lp(Object.assign({},t,{backendName:e}))})}function Fa(r,e){return`${e}_${r}`}var Xu=X(43720);const sa=X.n(Xu)()||Xu;function Ch(r){return sa.fromString(r,!0,16)}const Sf=Ch("c3a5c85c97cb3127"),Vo=Ch("b492b66fbe98f273"),_s=Ch("9ae16a3b2f90404f");function Ur(r){return r.xor(r.shru(47))}function Xy(r,e,t){const s=r.slice(e,e+t);return sa.fromBytes(Array.from(s),!0,!0)}function En(r,e){return Xy(r,e,8)}function ng(r,e){return Xy(r,e,4)}function ur(r,e){return 0===e?r:r.shru(e).or(r.shl(64-e))}function $a(r,e,t=Ch("9ddfea08eb382d69")){let s=r.xor(e).mul(t);s=s.xor(s.shru(47));let i=e.xor(s).mul(t);return i=i.xor(i.shru(47)),i=i.mul(t),i}function Nh(r,e,t,s){return function(i,o,l,c,p,d){p=p.add(i),d=ur(d.add(p).add(c),21);const f=p;return p=(p=p.add(o)).add(l),d=d.add(ur(p,44)),[p.add(c),d.add(f)]}(En(r,e),En(r,e+8),En(r,e+16),En(r,e+24),t,s)}function Tf(r,e=r.length){const t=sa.fromNumber(81,!0);if(e<=32)return e<=16?function(y,v=y.length){if(v>=8){const S=_s.add(2*v),_=En(y,0).add(_s),k=En(y,v-8);return $a(ur(k,37).mul(S).add(_),ur(_,25).add(k).mul(S),S)}if(v>=4){const S=_s.add(2*v);return $a(ng(y,0).shl(3).add(v),ng(y,v-4),S)}if(v>0){const _=v+(y[v-1]<<2);return Ur(_s.mul(y[0]+(y[v>>1]<<8)).xor(Sf.mul(_))).mul(_s)}return _s}(r,e):function(y,v=y.length){const S=_s.add(2*v),_=En(y,0).mul(Vo),k=En(y,8),I=En(y,v-8).mul(S),A=En(y,v-16).mul(_s);return $a(ur(_.add(k),43).add(ur(I,30)).add(A),_.add(ur(k.add(_s),18)).add(I),S)}(r,e);if(e<=64)return function(y,v=y.length){const S=_s.add(2*v),_=En(y,0).mul(_s),k=En(y,8),I=En(y,v-8).mul(S),A=En(y,v-16).mul(_s),R=ur(_.add(k),43).add(ur(I,30)).add(A),P=$a(R,_.add(ur(k.add(_s),18)).add(I),S),U=En(y,16).mul(S),W=En(y,24),se=R.add(En(y,v-32)).mul(S),G=P.add(En(y,v-24)).mul(S);return $a(ur(U.add(W),43).add(ur(se,30)).add(G),U.add(ur(W.add(_),18)).add(se),S)}(r,e);let s=t,i=t.mul(Vo).add(113),o=Ur(i.mul(_s).add(113)).mul(_s),l=[sa.UZERO,sa.UZERO],c=[sa.UZERO,sa.UZERO];s=s.mul(_s).add(En(r,0));let p=0;const d=64*(e-1>>6),f=d+(e-1&63)-63;do{s=ur(s.add(i).add(l[0]).add(En(r,p+8)),37).mul(Vo),i=ur(i.add(l[1]).add(En(r,p+48)),42).mul(Vo),s=s.xor(c[1]),i=i.add(l[0]).add(En(r,p+40)),o=ur(o.add(c[0]),33).mul(Vo),l=Nh(r,p,l[1].mul(Vo),s.add(c[0])),c=Nh(r,p+32,o.add(c[1]),i.add(En(r,p+16))),[o,s]=[s,o],p+=64}while(p!==d);const m=Vo.add(o.and(255).shl(1));return p=f,c[0]=c[0].add(e-1&63),l[0]=l[0].add(c[0]),c[0]=c[0].add(l[0]),s=ur(s.add(i).add(l[0]).add(En(r,p+8)),37).mul(m),i=ur(i.add(l[1]).add(En(r,p+48)),42).mul(m),s=s.xor(c[1].mul(9)),i=i.add(l[0].mul(9).add(En(r,p+40))),o=ur(o.add(c[0]),33).mul(m),l=Nh(r,p,l[1].mul(m),s.add(c[0])),c=Nh(r,p+32,o.add(c[1]),i.add(En(r,p+16))),[o,s]=[s,o],$a($a(l[0],c[0],m).add(Ur(i).mul(Sf)).add(o),$a(l[1],c[1],m).add(s),m)}function Oa(r,e){return"string"===e?Bi(r):Wt([r],e)}function Wt(r,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(r)&&(r=dt(r)),nt().getBool("DEBUG")&&uf(r,e),s=e,(t=r)instanceof Float32Array&&"float32"===s||t instanceof Int32Array&&"int32"===s||t instanceof Uint8Array&&"bool"===s)return r;var t,s;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(r);if("int32"===e)return new Int32Array(r);if("bool"===e){const t=new Uint8Array(r.length);for(let s=0;s<t.length;++s)0!==Math.round(r[s])&&(t[s]=1);return t}throw new Error(`Unknown data type ${e}`)}function wr(){return nt().platform.now()}function xr(r,e){return nt().platform.fetch(r,e)}function Bi(r,e="utf-8"){return e=e||"utf-8",nt().platform.encode(r,e)}function On(r,e="utf-8"){return e=e||"utf-8",nt().platform.decode(r,e)}class Ky{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Zy)}profileKernel(e,t,s){let i;const o=()=>{i=s()};let l;const c=wr();if(this.backendTimer.timerAvailable())l=this.backendTimer.time(o);else{o();for(const p of i)p.dataSync();l=Promise.resolve({kernelMs:wr()-c})}if(nt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let p=0;p<i.length;p++){const d=i[p];d.data().then(f=>{Yy(f,d.dtype,e)})}return{kernelName:e,outputs:i,inputs:t,timeMs:l.then(p=>p.kernelMs),extraInfo:l.then(p=>null!=p.getExtraProfileInfo?p.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:i,inputs:o,extraInfo:l}=e;s.forEach(c=>{Promise.all([c.data(),i,l]).then(p=>{this.logger.logKernelProfile(t,c,p[0],p[1],o,p[2])})})}}function Yy(r,e,t){if("float32"!==e)return!1;for(let s=0;s<r.length;s++){const i=r[s];if(isNaN(i)||!isFinite(i))return console.warn(`Found ${i} in the result of '${t}'`),!0}return!1}class Zy{logKernelProfile(e,t,s,i,o,l){const c="number"==typeof i?Hr(`${i}ms`,9):i.error,p=Hr(e,25),d=t.rank,f=t.size,m=Hr(t.shape.toString(),14);let y="";for(const v in o){const S=o[v];if(null!=S){const _=S.shape||t.shape,k=_.length;y+=`${v}: ${k}D ${k>0?_:""} `}}console.log(`%c${p}\t%c${c}\t%c${d}D ${m}\t%c${f}\t%c${y}\t%c${l}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Jy(r,e,t,s){const i=hn(e),o=function(d,f,m,y){const v=ke(f),S=y[y.length-1],_=new Array(S).fill(0),k=f.length,I="complex64"===m?Ah(d):d;if(k>1)for(let A=0;A<v/S;A++){const R=A*S;for(let P=0;P<S;P++)_[P]=Math.max(_[P],Wl(I[R+P],0,m).length)}return _}(r,e,t,i),l=e.length,c=Ku(r,e,t,i,o),p=["Tensor"];return s&&(p.push(`  dtype: ${t}`),p.push(`  rank: ${l}`),p.push(`  shape: [${e}]`),p.push("  values:")),p.push(c.map(d=>"    "+d).join("\n")),p.join("\n")}function Wl(r,e,t){let s;return s=Array.isArray(r)?`${parseFloat(r[0].toFixed(7))} + ${parseFloat(r[1].toFixed(7))}j`:Ma(r)?`'${r}'`:"bool"===t?rg(r):parseFloat(r.toFixed(7)).toString(),Hr(s,e)}function rg(r){return 0===r?"false":"true"}function Ku(r,e,t,s,i,o=!0){const l="complex64"===t?2:1,c=e[0],p=e.length;if(0===p)return"complex64"===t?[Wl(Ah(r)[0],0,t)]:"bool"===t?[rg(r[0])]:[r[0].toString()];if(1===p){if(c>20){let k=Array.from(r.slice(0,3*l)),I=Array.from(r.slice((c-3)*l,c*l));return"complex64"===t&&(k=Ah(k),I=Ah(I)),["["+k.map((A,R)=>Wl(A,i[R],t)).join(", ")+", ..., "+I.map((A,R)=>Wl(A,i[c-3+R],t)).join(", ")+"]"]}return["["+("complex64"===t?Ah(r):Array.from(r)).map((_,k)=>Wl(_,i[k],t)).join(", ")+"]"]}const d=e.slice(1),f=s.slice(1),m=s[0]*l,y=[];if(c>20){for(let _=0;_<3;_++){const k=_*m;y.push(...Ku(r.slice(k,k+m),d,t,f,i,!1))}y.push("...");for(let _=c-3;_<c;_++){const k=_*m;y.push(...Ku(r.slice(k,k+m),d,t,f,i,_===c-1))}}else for(let _=0;_<c;_++){const k=_*m;y.push(...Ku(r.slice(k,k+m),d,t,f,i,_===c-1))}const v=2===p?",":"";y[0]="["+y[0]+v;for(let _=1;_<y.length-1;_++)y[_]=" "+y[_]+v;let S=",\n";for(let _=2;_<p;_++)S+="\n";return y[y.length-1]=" "+y[y.length-1]+"]"+(o?"":S),y}function Ah(r){const e=[];for(let t=0;t<r.length;t+=2)e.push([r[t],r[t+1]]);return e}class Pt{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=ke(e),null!=s){const i=s.length;F(i===this.size,()=>`Length of values '${i}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Zn(t,this.size),this.strides=hn(e)}set(e,...t){0===t.length&&(t=[0]),F(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const i of e){if(i<0||i>=this.shape[t])throw new Error(`Requested out of range element at ${e}.   Buffer shape=${this.shape}`);t++}let s=e[e.length-1];for(let i=0;i<e.length-1;++i)s+=this.strides[i]*e[i];return this.values[s]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Pa().makeTensor(this.values,this.shape,this.dtype)}}let Pa=null,Yu=null,Mb=null;class Un{constructor(e,t,s,i){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=ke(e),this.strides=hn(e),this.dataId=s,this.id=i,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Yu.buffer(this.shape,this.dtype,e)}bufferSync(){return Yu.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return wi(this.shape,e,"complex64"===this.dtype)}arraySync(){return wi(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Pa().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(s=>On(s))}catch(s){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Pa().readSync(this.dataId);if("string"===this.dtype)try{return e.map(t=>On(t))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Pa().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Pa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Yu.print(this,e)}clone(){return this.throwIfDisposed(),Yu.clone(this)}toString(e=!1){return Jy(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Yu.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),Pa().makeVariable(this,e,t,s)}}function Qe(){return Ld("Tensor",()=>Un)}Object.defineProperty(Un,Symbol.hasInstance,{value:r=>!!r&&null!=r.data&&null!=r.dataSync&&null!=r.throwIfDisposed}),Qe();class qs extends Un{constructor(e,t,s,i){super(e.shape,e.dtype,e.dataId,i),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!He(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Pa().disposeTensor(this),this.dataId=e.dataId,Pa().incRef(this,null)}dispose(){Pa().disposeVariable(this),this.isDisposedInternal=!0}}var up,Gl,li,Zu,os,r;Object.defineProperty(qs,Symbol.hasInstance,{value:r=>r instanceof Un&&null!=r.assign&&r.assign instanceof Function}),(r=up||(up={})).R0="R0",r.R1="R1",r.R2="R2",r.R3="R3",r.R4="R4",r.R5="R5",r.R6="R6",function(r){r.float32="float32",r.int32="int32",r.bool="int32",r.complex64="complex64"}(Gl||(Gl={})),function(r){r.float32="float32",r.int32="int32",r.bool="bool",r.complex64="complex64"}(li||(li={})),function(r){r.float32="float32",r.int32="float32",r.bool="float32",r.complex64="complex64"}(Zu||(Zu={})),function(r){r.float32="complex64",r.int32="complex64",r.bool="complex64",r.complex64="complex64"}(os||(os={}));const wn={float32:Zu,int32:Gl,bool:li,complex64:os};function ui(r,e){if("string"===r||"string"===e){if("string"===r&&"string"===e)return"string";throw new Error(`Can not upcast ${r} with ${e}`)}return wn[r][e]}function Wo(r){return ui(r,"int32")}function Sr(r,e){if(r.dtype===e.dtype)return[r,e];const t=ui(r.dtype,e.dtype);return[r.cast(t),e.cast(t)]}function Go(r,e){F(r.dtype===e.dtype,()=>`The dtypes of the first(${r.dtype}) and second(${e.dtype}) input must match`)}function za(r,e){return e.some(t=>t.id===r.id)}function Xs(r){const e=[];return Mf(r,e,new Set),e}function Mf(r,e,t){if(null==r)return;if(r instanceof Un)return void e.push(r);if(s=r,!Array.isArray(s)&&"object"!=typeof s)return;var s;const i=r;for(const o in i){const l=i[o];t.has(l)||(t.add(l),Mf(l,e,t))}}function cp(r){return null!=r.kernelName}class _f{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ho{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new _f}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success)return void await this.setBackend(s)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(Zr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ky(this.backendInstance),!0}setupRegisteredKernels(){wf(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){wf(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(!s||s instanceof bu||"function"!=typeof s.then)return this.registry[e]=s,{success:!0,asyncInit:!1};{const i=++this.pendingBackendInitId,o=s.then(l=>!(i<this.pendingBackendInitId||(this.registry[e]=l,this.pendingBackendInit=null,0))).catch(l=>(i<this.pendingBackendInitId||(this.pendingBackendInit=null,Zr(`Initialization of backend ${e} failed`),Zr(l.stack||l.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}}catch(s){return Zr(`Initialization of backend ${e} failed`),Zr(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:i,asyncInit:o}=this.initializeBackend(s);if(o||i)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),i=s.backend,o=this.readSync(t),l=i.refCount(t);i.disposeData(t,!0),s.backend=e,e.move(t,o,s.shape,s.dtype,l),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s,i=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");i=e}return this.scopedRun(()=>this.startScope(i),()=>this.endScope(s),()=>(s=t(),s instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),s))}scopedRun(e,t,s){e();try{const i=s();return t(),i}catch(i){throw t(),i}}nextTensorId(){return Ho.nextTensorId++}nextVariableId(){return Ho.nextVariableId++}clone(e){const t=be.runKernel(ah,{x:e});return this.addTapeNode(this.state.activeScope.name,{x:e},[t],i=>({x:()=>be.runKernel(Cu,{x:i},{dtype:"float32"})}),[],{}),t}runKernel(e,t,s){if(null==op(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const i=this.backend.numDataIds();let o=0;s.forEach(p=>{o+="complex64"===p.dtype?3:1});const c=i-t-o-this.state.numDataMovesStack[this.state.numDataMovesStack.length-1];if(c>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${c} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const i=this.isTapeOn(),o=this.state.numBytes,l=this.state.numTensors;let c,p;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const d=cp(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(cp(e)){const{kernelName:S,inputs:_,attrs:k}=e,I=op(S,this.backendName);F(null!=I,()=>`Cannot find registered kernel '${S}' for backend '${this.backendName}'`),c=()=>{const A=this.backend.numDataIds();p=I.kernelFunc({inputs:_,attrs:k,backend:this.backend});const R=Array.isArray(p)?p:[p];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(S,A,R);const P=R.map(U=>{if(null!=U.rank)return U;const{dataId:W,shape:se,dtype:G}=U;return this.makeTensorFromDataId(W,se,G)});if(i){const U=this.getTensorsForGradient(S,_,P);s=this.saveTensorsForBackwardMode(U)}return P}}else{const{forwardFunc:S}=e,_=k=>{i&&(s=k.map(I=>this.keep(this.clone(I))))};c=()=>{const k=this.backend.numDataIds();p=this.tidy(()=>S(this.backend,_));const I=Array.isArray(p)?p:[p];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(d,k,I),I}}const{inputs:f,attrs:m}=e,y=cp(e)?null:e.backwardsFunc;let v;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(v=this.profiler.profileKernel(d,f,()=>c()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(v),t=v.outputs):t=c()}),i&&this.addTapeNode(d,f,t,y,s,m),this.state.profiling&&this.state.activeProfile.kernels.push({name:d,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-l,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(f).map(S=>null!=f[S]?f[S].shape:null),outputShapes:t.map(S=>S.shape),kernelTimeMs:v.timeMs,extraInfo:v.extraInfo}),Array.isArray(p)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(e,t,s){const i=vf(e);if(null!=i){const o=i.inputsToSave||[],l=i.outputsToSave||[];let c;i.saveAllInputs?(F(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),c=Object.keys(t).map(d=>t[d])):c=o.map(d=>t[d]);const p=s.filter((d,f)=>l[f]);return c.concat(p)}return[]}makeTensor(e,t,s,i){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");i=i||this.backend;let o=e;"string"===(s=s||"float32")&&Ma(e[0])&&(o=e.map(p=>Bi(p)));const l=i.write(o,t,s),c=new Un(t,s,l,this.nextTensorId());if(this.trackTensor(c,i),"string"===s){const p=this.state.tensorInfo.get(l),d=Ym(o);this.state.numBytes+=d-p.bytes,p.bytes=d}return c}makeTensorFromDataId(e,t,s,i){const o=new Un(t,s=s||"float32",e,this.nextTensorId());return this.trackTensor(o,i),o}makeVariable(e,t=!0,s,i){s=s||this.nextVariableId().toString(),null!=i&&i!==e.dtype&&(e=e.cast(i));const o=new qs(e,t,s,this.nextTensorId());if(null!=this.state.registeredVariables[o.name])throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let s=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(s=e.size*eo(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof qs||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const s=e.size*eo(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables)this.disposeVariable(this.state.registeredVariables[e])}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(i=>i.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const i of this.state.activeProfile.kernels)i.kernelTimeMs=await i.kernelTimeMs,i.extraInfo=await i.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,s,i,o,l){const c={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:o},p=vf(e);null!=p&&(i=p.gradFunc),null!=i&&(c.gradient=d=>(d=d.map((f,m)=>{if(null==f){const y=s[m],v=hs(y.size,y.dtype);return this.makeTensor(v,y.shape,y.dtype)}return f}),i(d.length>1?d:d[0],o,l))),this.state.activeTape.push(c)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Xs(e),s=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const l=this.state.activeScope.track[o];l.kept||s.has(l.id)||l.dispose()}const i=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{o.kept||o.scopeId!==i.id||this.track(o)})}gradients(e,t,s,i=!1){if(F(t.length>0,()=>"gradients() received an empty list of xs."),null!=s&&"float32"!==s.dtype)throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));F(o instanceof Un,()=>"The result y returned by f() must be a tensor.");const l=function(c,p,d){const f={},m={};for(let _=0;_<p.length;_++)f[p[_].id]=!0;for(let _=0;_<c.length;_++){const k=c[_],I=k.inputs;for(const A in I){const R=I[A];let P=!1;for(let U=0;U<p.length;U++)if(f[R.id]){k.outputs.forEach(W=>f[W.id]=!0),P=!0,m[k.id]=!0;break}if(P)break}}const y={};y[d.id]=!0;const v={};for(let _=c.length-1;_>=0;_--){const k=c[_],I=k.inputs;for(let A=0;A<k.outputs.length;A++)if(y[k.outputs[A].id]){for(const R in I)y[I[R].id]=!0,v[k.id]=!0;break}}const S=[];for(let _=0;_<c.length;_++){const k=c[_];if(m[k.id]&&v[k.id]){const I={};for(const R in k.inputs){const P=k.inputs[R];f[P.id]&&(I[R]=P)}const A=Object.assign({},k);A.inputs=I,A.outputs=k.outputs,S.push(A)}}return S}(this.state.activeTape,t,o);if(!i&&0===l.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const c={};c[o.id]=null==s?function(d){const f=Il(ke(d),"float32");return be.makeTensor(f,d,"float32")}(o.shape):s,function(d,f,m,y){for(let v=f.length-1;v>=0;v--){const S=f[v],_=[];if(S.outputs.forEach(I=>{const A=d[I.id];_.push(null!=A?A:null)}),null==S.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${S.kernelName}.`);const k=S.gradient(_);for(const I in S.inputs){if(!(I in k))throw new Error(`Cannot backprop through input ${I}. Available gradients found: ${Object.keys(k)}.`);const A=m(()=>k[I]());if("float32"!==A.dtype)throw new Error(`Error in gradient for op ${S.kernelName}. The gradient of input ${I} must have 'float32' dtype, but has '${A.dtype}'`);const R=S.inputs[I];if(!He(A.shape,R.shape))throw new Error(`Error in gradient for op ${S.kernelName}. The gradient of input '${I}' has shape '${A.shape}', which does not match the shape of the input '${R.shape}'`);if(null==d[R.id])d[R.id]=A;else{const P=d[R.id];d[R.id]=y(P,A),P.dispose()}}}}(c,l,d=>this.tidy(d),kf);const p=t.map(d=>c[d.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(d=>{for(const f of d.saved)f.dispose()}),this.state.activeTape=null),{value:o,grads:p}})}customGrad(e){return F(Vs(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let s;F(t.every(o=>o instanceof Un),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const i={};return t.forEach((o,l)=>{i[l]=o}),this.runKernelFunc({forwardFunc:(o,l)=>(s=e(...t,l),F(s.value instanceof Un,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),F(Vs(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),backwardsFunc:(o,l)=>{const c=s.gradFunc(o,l),p=Array.isArray(c)?c:[c];F(p.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),F(p.every(f=>f instanceof Un),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return p.forEach((f,m)=>{d[m]=()=>f}),d},inputs:i})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=wr(),s=await this.backend.time(e);return s.wallMs=wr()-t,s}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new _f;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function hp(){const r=Qm();if(null==r._tfengine){const t=new Jm(r);r._tfengine=new Ho(t)}return hf=r._tfengine.ENV,Pa=()=>r._tfengine,r._tfengine}Ho.nextTensorId=0,Ho.nextVariableId=0;const be=hp();function kf(r,e){return be.runKernel(Io,{a:r,b:e})}function Rh(r){if(r||"undefined"!=typeof navigator&&null!=navigator){if(r||(r=navigator),"ReactNative"===r.product)return!0;const e=r.userAgent||r.vendor||("undefined"!=typeof window?window.opera:"");if(!e){const t=r;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function Lh(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Ui=nt();function Vi(r,e){let t=r;if(Ms(r))return"string"===e?[]:[r.length];if(!Array.isArray(r))return[];const s=[];for(;Array.isArray(t)||Ms(t)&&"string"!==e;)s.push(t.length),t=t[0];return Array.isArray(r)&&nt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&es(r,s,[]),s}function es(r,e,t){if(t=t||[],!Array.isArray(r)&&!Ms(r))return void F(0===e.length,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);F(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${r.length} elements`),F(r.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${r.length} elements`);const s=e.slice(1);for(let i=0;i<r.length;++i)es(r[i],s,t.concat(i))}function dp(r,e,t,s){if("string_or_numeric"!==r){if(null==r)throw new Error("Expected dtype cannot be null.");if("numeric"!==r&&r!==e||"numeric"===r&&"string"===e)throw new Error(`Argument '${t}' passed to '${s}' must be ${r} tensor, but got ${e} tensor`)}}function j(r,e,t,s="numeric"){if(r instanceof Un)return dp(s,r.dtype,e,t),r;let i=to(r);if("string"!==i&&["bool","int32","float32"].indexOf(s)>=0&&(i=s),dp(s,i,e,t),null==r||!Ms(r)&&!Array.isArray(r)&&"number"!=typeof r&&"boolean"!=typeof r&&"string"!=typeof r)throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${null==r?"null":r.constructor.name}'`);const o=Vi(r,i);Ms(r)||Array.isArray(r)||(r=[r]);const l="string"!==i?Wt(r,i):dt(r,[],!0);return be.makeTensor(l,o,i)}function co(r,e,t,s="numeric"){if(!Array.isArray(r))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return r.map((i,o)=>j(i,`${e}[${o}]`,t,s))}Ui.registerFlag("DEBUG",()=>!1,r=>{r&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Ui.registerFlag("IS_BROWSER",()=>Lh()),Ui.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),Ui.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Ui.registerFlag("PROD",()=>!1),Ui.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ui.getBool("DEBUG")),Ui.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Ui.registerFlag("IS_TEST",()=>!1),Ui.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),Ui.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);const Fs="__op";function we(r){const e=Object.keys(r);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=r[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t+=Fs;const i=(...o)=>{be.startScope(t);try{const l=s(...o);return Cl(l)&&console.error("Cannot return a Promise inside of tidy."),be.endScope(l),l}catch(l){throw be.endScope(null),l}};return Object.defineProperty(i,"name",{value:t,configurable:!0}),i}const Ks=we({complex_:function(r,e){const t=j(r,"real","complex"),s=j(e,"imag","complex");return qe(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`),be.runKernel(Od,{real:t,imag:s})}});function ia(r,e,t,s){if(null==s&&(s=to(r)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Ms(r)&&!Array.isArray(r)&&"number"!=typeof r&&"boolean"!=typeof r&&"string"!=typeof r)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){Ds(e);const i=ke(e),o=ke(t);F(i===o,()=>`Based on the provided shape, [${e}], the tensor should have ${i} values but has ${o}`);for(let l=0;l<t.length;++l){const c=t[l],p=l!==t.length-1||c!==ke(e.slice(l));F(t[l]===e[l]||!p,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return Ms(r)||Array.isArray(r)||(r=[r]),e=e||t,r="string"!==s?Wt(r,s):dt(r,[],!0),be.makeTensor(r,e,s)}function cr(r,e,t){return ia(r,e,Vi(r,t),t)}const Hl={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Dh(r,e){const t=[],s=[],i=Array.isArray(r)?r.map(o=>o.name):Object.keys(r);for(let o=0;o<i.length;++o){const l=i[o],c=Array.isArray(r)?r[o].tensor:r[l];if("float32"!==c.dtype&&"int32"!==c.dtype&&"bool"!==c.dtype&&"string"!==c.dtype&&"complex64"!==c.dtype)throw new Error(`Unsupported dtype in weight '${l}': ${c.dtype}`);const p={name:l,shape:c.shape,dtype:c.dtype};if("string"===c.dtype){const d=new Promise(async f=>{const m=await c.bytes(),y=m.reduce((_,k)=>_+k.length,0)+4*m.length,v=new Uint8Array(y);let S=0;for(let _=0;_<m.length;_++){const k=m[_],I=new Uint8Array(new Uint32Array([k.length]).buffer);v.set(I,S),S+=4,v.set(k,S),S+=k.length}f(v)});s.push(d)}else s.push(c.data());null!=e&&(p.group=e),t.push(p)}return{data:Ef(await Promise.all(s)),specs:t}}function jo(r,e){const t={};let s,i=0;for(const o of e){const l=o.name,c=o.dtype,p=o.shape,d=ke(p);let f;if("quantization"in o){const m=o.quantization;if("uint8"===m.dtype||"uint16"===m.dtype){if(!("min"in m)||!("scale"in m))throw new Error(`Weight ${o.name} with quantization ${m.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==m.dtype)throw new Error(`Weight ${o.name} has unknown quantization dtype ${m.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==c)throw new Error(`Weight ${o.name} is quantized with ${m.dtype} which only supports weights of type float32 not ${c}.`)}const y=Hl[m.dtype],v=r.slice(i,i+d*y),S="uint8"===m.dtype?new Uint8Array(v):new Uint16Array(v);if("float32"===c)if("uint8"===m.dtype||"uint16"===m.dtype){f=new Float32Array(S.length);for(let _=0;_<S.length;_++)f[_]=S[_]*m.scale+m.min}else{if("float16"!==m.dtype)throw new Error(`Unsupported quantization type ${m.dtype} for weight type float32.`);void 0===s&&(s=e0()),f=s(S)}else{if("int32"!==c)throw new Error(`Unsupported dtype in weight '${l}': ${c}`);if("uint8"!==m.dtype&&"uint16"!==m.dtype)throw new Error(`Unsupported quantization type ${m.dtype} for weight type int32.`);f=new Int32Array(S.length);for(let _=0;_<S.length;_++)f[_]=Math.round(S[_]*m.scale+m.min)}i+=d*y}else if("string"===c){const m=ke(o.shape);f=[];for(let y=0;y<m;y++){const v=new Uint32Array(r.slice(i,i+4))[0];i+=4;const S=new Uint8Array(r.slice(i,i+v));f.push(S),i+=v}}else{const m=Hl[c],y=r.slice(i,i+d*m);if("float32"===c)f=new Float32Array(y);else if("int32"===c)f=new Int32Array(y);else if("bool"===c)f=new Uint8Array(y);else{if("complex64"!==c)throw new Error(`Unsupported dtype in weight '${l}': ${c}`);{f=new Float32Array(y);const v=new Float32Array(f.length/2),S=new Float32Array(f.length/2);for(let I=0;I<v.length;I++)v[I]=f[2*I],S[I]=f[2*I+1];const _=cr(v,p,"float32"),k=cr(S,p,"float32");t[l]=Ks(_,k),_.dispose(),k.dispose()}}i+=d*m}"complex64"!==c&&(t[l]=cr(f,p,c))}return t}function Ef(r){if(null===r)throw new Error(`Invalid input value: ${JSON.stringify(r)}`);let e=0;const t=[];r.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(e);let i=0;return t.forEach(o=>{s.set(new Uint8Array(o.buffer),i),i+=o.byteLength}),s.buffer}const pp="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Qy(r){return pp?Buffer.byteLength(r):new Blob([r]).size}function If(r){if(1===r.length)return r[0];let e=0;r.forEach(i=>{e+=i.byteLength});const t=new Uint8Array(e);let s=0;return r.forEach(i=>{t.set(new Uint8Array(i),s),s+=i.byteLength}),t.buffer}function Ba(r){for(r=r.trim();r.endsWith("/");)r=r.slice(0,r.length-1);const e=r.split("/");return e[e.length-1]}function Ju(r,e){const t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy,weightsManifest:e};return null!=r.signature&&(t.signature=r.signature),null!=r.userDefinedMetadata&&(t.userDefinedMetadata=r.userDefinedMetadata),null!=r.modelInitializer&&(t.modelInitializer=r.modelInitializer),null!=r.trainingConfig&&(t.trainingConfig=r.trainingConfig),t}async function Fh(r,e){const t={modelTopology:r.modelTopology,format:r.format,generatedBy:r.generatedBy,convertedBy:r.convertedBy};if(null!=r.trainingConfig&&(t.trainingConfig=r.trainingConfig),null!=r.weightsManifest){const[s,i]=await e(r.weightsManifest);t.weightSpecs=s,t.weightData=i}return null!=r.signature&&(t.signature=r.signature),null!=r.userDefinedMetadata&&(t.userDefinedMetadata=r.userDefinedMetadata),null!=r.modelInitializer&&(t.modelInitializer=r.modelInitializer),t}function qo(r){if(r.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==r.modelTopology?0:Qy(JSON.stringify(r.modelTopology)),weightSpecsBytes:null==r.weightSpecs?0:Qy(JSON.stringify(r.weightSpecs)),weightDataBytes:null==r.weightData?0:r.weightData.byteLength}}function e0(){const r=function(){const s=o=>{let l=o<<13,c=0;for(;0==(8388608&l);)c-=8388608,l<<=1;return l&=-8388609,c+=947912704,l|c},i=new Uint32Array(2048);i[0]=0;for(let o=1;o<1024;o++)i[o]=s(o);for(let o=1024;o<2048;o++)i[o]=939524096+(o-1024<<13);return i}(),e=function(){const s=new Uint32Array(64);s[0]=0,s[31]=1199570944,s[32]=2147483648,s[63]=3347054592;for(let i=1;i<31;i++)s[i]=i<<23;for(let i=33;i<63;i++)s[i]=2147483648+(i-32<<23);return s}(),t=function(){const s=new Uint32Array(64);for(let i=0;i<64;i++)s[i]=1024;return s[0]=s[32]=0,s}();return s=>{const i=new ArrayBuffer(4*s.length),o=new Uint32Array(i);for(let l=0;l<s.length;l++){const c=s[l];o[l]=r[t[c>>10]+(1023&c)]+e[c>>10]}return new Float32Array(i)}}class Lr{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Lr.instance&&(Lr.instance=new Lr),Lr.instance}static registerSaveRouter(e){Lr.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Lr.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Lr.getHandlers(e,"save")}static getLoadHandlers(e,t){return Lr.getHandlers(e,"load",t)}static getHandlers(e,t,s){const i=[];return("load"===t?Lr.getInstance().loadRouters:Lr.getInstance().saveRouters).forEach(o=>{const l=o(e,s);null!==l&&i.push(l)}),i}}const Qu=r=>Lr.registerSaveRouter(r),Wn=r=>Lr.registerLoadRouter(r),Gt=r=>Lr.getSaveHandlers(r),Wi=(r,e)=>Lr.getLoadHandlers(r,e),sg="tensorflowjs",ec="models_store",jl="model_info_store";function t0(){if(!nt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const r="undefined"==typeof window?self:window,e=r.indexedDB||r.mozIndexedDB||r.webkitIndexedDB||r.msIndexedDB||r.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function ig(r){const e=r.result;e.createObjectStore(ec,{keyPath:"modelPath"}),e.createObjectStore(jl,{keyPath:"modelPath"})}class tc{constructor(e){if(this.indexedDB=t0(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,i)=>{const o=this.indexedDB.open(sg,1);o.onupgradeneeded=()=>ig(o),o.onsuccess=()=>{const l=o.result;if(null==t){const c=l.transaction(ec,"readonly"),p=c.objectStore(ec).get(this.modelPath);p.onsuccess=()=>{if(null==p.result)return l.close(),i(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(p.result.modelArtifacts)},p.onerror=d=>(l.close(),i(p.error)),c.oncomplete=()=>l.close()}else{const c=qo(t),p=l.transaction(jl,"readwrite");let d=p.objectStore(jl);const f=d.put({modelPath:this.modelPath,modelArtifactsInfo:c});let m;f.onsuccess=()=>{m=l.transaction(ec,"readwrite");const y=m.objectStore(ec).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:c});y.onsuccess=()=>s({modelArtifactsInfo:c}),y.onerror=v=>{d=p.objectStore(jl);const S=d.delete(this.modelPath);S.onsuccess=()=>(l.close(),i(y.error)),S.onerror=_=>(l.close(),i(y.error))}},f.onerror=y=>(l.close(),i(f.error)),p.oncomplete=()=>{null==m?l.close():m.oncomplete=()=>l.close()}}},o.onerror=l=>i(o.error)})}}tc.URL_SCHEME="indexeddb://";const $h=r=>{return nt().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(tc.URL_SCHEME)?(e=r.slice(tc.URL_SCHEME.length),new tc(e)):null;var e};Lr.registerSaveRouter($h),Lr.registerLoadRouter($h);class Oh{constructor(){this.indexedDB=t0()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(sg,1);s.onupgradeneeded=()=>ig(s),s.onsuccess=()=>{const i=s.result,o=i.transaction(jl,"readonly"),l=o.objectStore(jl).getAll();l.onsuccess=()=>{const c={};for(const p of l.result)c[p.modelPath]=p.modelArtifactsInfo;e(c)},l.onerror=c=>(i.close(),t(l.error)),o.oncomplete=()=>i.close()},s.onerror=i=>t(s.error)})}async removeModel(e){var t;return e=(t=e).startsWith(tc.URL_SCHEME)?t.slice(tc.URL_SCHEME.length):t,new Promise((s,i)=>{const o=this.indexedDB.open(sg,1);o.onupgradeneeded=()=>ig(o),o.onsuccess=()=>{const l=o.result,c=l.transaction(jl,"readwrite"),p=c.objectStore(jl),d=p.get(e);let f;d.onsuccess=()=>{if(null==d.result)return l.close(),i(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const m=p.delete(e),y=()=>{f=l.transaction(ec,"readwrite");const v=f.objectStore(ec).delete(e);v.onsuccess=()=>s(d.result.modelArtifactsInfo),v.onerror=S=>i(d.error)};m.onsuccess=y,m.onerror=v=>(y(),l.close(),i(d.error))}},d.onerror=m=>(l.close(),i(d.error)),c.oncomplete=()=>{null==f?l.close():f.oncomplete=()=>l.close()}},o.onerror=l=>i(o.error)})}}const ks="/",nc="tensorflowjs_models",ag="info",ho="model_topology",og="weight_specs",fp="weight_data",n0="model_metadata";function mp(r){return{info:[nc,r,ag].join(ks),topology:[nc,r,ho].join(ks),weightSpecs:[nc,r,og].join(ks),weightData:[nc,r,fp].join(ks),modelMetadata:[nc,r,n0].join(ks)}}function lg(r){for(const e of Object.values(r))window.localStorage.removeItem(e)}function ug(r){const e=r.split(ks);if(e.length<3)throw new Error(`Invalid key format: ${r}`);return e.slice(1,e.length-1).join(ks)}class Gi{constructor(e){if(!nt().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=mp(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),i=qo(e);try{return this.LS.setItem(this.keys.info,JSON.stringify(i)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,function(l){if(pp)return Buffer.from(l).toString("base64");const c=new Uint8Array(l);let p="";for(let d=0,f=c.length;d<f;d++)p+=String.fromCharCode(c[d]);return btoa(p)}(e.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0})),{modelArtifactsInfo:i}}catch(o){throw lg(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${i.modelTopologyBytes}, weightSpecsBytes=${i.weightSpecsBytes}, weightDataBytes=${i.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(null==s)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const i=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==i)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=i;const o=this.LS.getItem(this.keys.modelMetadata);if(null!=o){const c=JSON.parse(o);t.format=c.format,t.generatedBy=c.generatedBy,t.convertedBy=c.convertedBy,null!=c.signature&&(t.signature=c.signature),null!=c.userDefinedMetadata&&(t.userDefinedMetadata=c.userDefinedMetadata),null!=c.modelInitializer&&(t.modelInitializer=c.modelInitializer),null!=c.trainingConfig&&(t.trainingConfig=c.trainingConfig)}const l=this.LS.getItem(this.keys.weightData);if(null==l)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(c){if(pp){const f=Buffer.from(c,"base64");return f.buffer.slice(f.byteOffset,f.byteOffset+f.byteLength)}const p=atob(c),d=new Uint8Array(p.length);for(let f=0;f<p.length;++f)d.set([p.charCodeAt(f)],f);return d.buffer}(l),t}}Gi.URL_SCHEME="localstorage://";const rc=r=>{return nt().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(Gi.URL_SCHEME)?(e=r.slice(Gi.URL_SCHEME.length),new Gi(e)):null;var e};Lr.registerSaveRouter(rc),Lr.registerLoadRouter(rc);class r0{constructor(){F(nt().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),F("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=nc+ks,s=ks+ag;for(let i=0;i<this.LS.length;++i){const o=this.LS.key(i);o.startsWith(t)&&o.endsWith(s)&&(e[ug(o)]=JSON.parse(this.LS.getItem(o)))}return e}async removeModel(e){var t;const s=mp(e=(t=e).startsWith(Gi.URL_SCHEME)?t.slice(Gi.URL_SCHEME.length):t);if(null==this.LS.getItem(s.info))throw new Error(`Cannot find model at path '${e}'`);const i=JSON.parse(this.LS.getItem(s.info));return lg(s),i}}const sc="://";class Mi{constructor(){this.managers={}}static getInstance(){return null==Mi.instance&&(Mi.instance=new Mi),Mi.instance}static registerManager(e,t){F(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(sc)&&(e=e.slice(0,e.indexOf(sc))),F(e.length>0,()=>"scheme must not be an empty string.");const s=Mi.getInstance();F(null==s.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function Cf(r){if(-1===r.indexOf(sc))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Mi.getSchemes().join(",")}`);return{scheme:r.split(sc)[0],path:r.split(sc)[1]}}async function cg(r,e,t=!1){F(r!==e,()=>`Old path and new path are the same: '${r}'`);const s=Lr.getLoadHandlers(r);F(s.length>0,()=>`Copying failed because no load handler is found for source URL ${r}.`),F(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${r}.`);const i=s[0],o=Lr.getSaveHandlers(e);F(o.length>0,()=>`Copying failed because no save handler is found for destination URL ${e}.`),F(o.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${e}.`);const l=o[0],c=Cf(r).scheme,p=Cf(r).path,d=c===Cf(r).scheme,f=await i.load();t&&d&&await Mi.getManager(c).removeModel(p);const m=await l.save(f);return t&&!d&&await Mi.getManager(c).removeModel(p),m.modelArtifactsInfo}async function Nf(){const r=Mi.getSchemes(),e={};for(const t of r){const s=await Mi.getManager(t).listModels();for(const i in s)e[t+sc+i]=s[i]}return e}async function s0(r){const e=Cf(r);return Mi.getManager(e.scheme).removeModel(e.path)}async function i0(r,e){return cg(r,e,!1)}async function _b(r,e){return cg(r,e,!0)}class kb{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(nt().get("IS_BROWSER")){nt().setPlatform("browser",new kb);try{Mi.registerManager(Gi.URL_SCHEME,new r0)}catch(r){}try{Mi.registerManager(tc.URL_SCHEME,new Oh)}catch(r){}}let hg;function Pn(r,e="float32",t){return e=e||"float32",Ds(r),new Pt(r,e,t)}nt().get("IS_NODE")&&nt().setPlatform("node",new class{constructor(){this.util=X(61758),this.textEncoder=new this.util.TextEncoder}fetch(r,e){return null!=nt().global.fetch?nt().global.fetch(r,e):(null==hg&&(hg=X(78352)),hg(r,e))}now(){const r=process.hrtime();return 1e3*r[0]+r[1]/1e6}encode(r,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(r)}decode(r,e){return 0===r.length?"":new this.util.TextDecoder(e).decode(r)}});const Rt=we({cast_:function(r,e){const t=j(r,"x","cast");if(!jy(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==t.dtype||"string"!==e&&"string"===t.dtype)throw new Error("Only strings can be casted to strings");return be.runKernel(Cu,{x:t},{dtype:e})}}),Xo=we({clone_:function(r){const e={x:j(r,"x","clone","string_or_numeric")};return be.runKernel(ah,e)}});function a0(r,e=!1){console.log(r.toString(e))}function o0(r){return new Promise(e=>setTimeout(e)).then(r)}hp(),Yu={buffer:Pn,cast:Rt,clone:Xo,print:a0};class ic{constructor(e){if(!nt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ic.URL_SCHEME)&&(e=e.slice(ic.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=Ju(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),i=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),o=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=i,await o0(()=>o.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const l=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;l.download=this.weightDataFileName,l.href=t,await o0(()=>l.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:qo(e)}}}}ic.URL_SCHEME="downloads://";class dg{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const s=new FileReader;s.onload=i=>{const o=JSON.parse(i.target.result),l=o.modelTopology;if(null==l)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==o.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:l});const c=Fh(o,p=>this.loadWeights(p));e(c)},s.onerror=i=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(e){const t=[],s=[];for(const l of e)t.push(...l.weights),s.push(...l.paths);const i=this.checkManifestAndWeightFiles(e),o=s.map(l=>this.loadWeightsFile(l,i[l]));return Promise.all(o).then(l=>[t,If(l)])}loadWeightsFile(e,t){return new Promise((s,i)=>{const o=new FileReader;o.onload=l=>{s(l.target.result)},o.onerror=l=>i(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],s=this.weightsFiles.map(o=>Ba(o.name)),i={};for(const o of e)o.paths.forEach(l=>{const c=Ba(l);if(-1!==t.indexOf(c))throw new Error(`Duplicate file basename found in weights manifest: '${c}'`);if(t.push(c),-1===s.indexOf(c))throw new Error(`Weight file with basename '${c}' is not provided.`);i[l]=this.weightsFiles[s.indexOf(c)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return i}}function pg(r){return new dg(r)}function fg(r,e,t,s){var o;F(null!=(o=r)&&Array.isArray(o)&&o.length>0,()=>"promises must be a none empty array"),function(o,l){F(o>=0&&o<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${o}`),F(l>=0&&l<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${l}`),F(l>=o,()=>`startFraction must be no more than endFraction, but got startFraction ${o} and endFraction ${l}`)}(t=null==t?0:t,s=null==s?1:s);let i=0;return Promise.all(r.map(o=>(o.then(l=>{const c=t+ ++i/r.length*(s-t);return e(c),l}),o)))}async function l0(r,e){null==e&&(e={});const t=null==e.fetchFunc?nt().platform.fetch:e.fetchFunc,s=r.map(o=>t(o,e.requestInit,{isBinary:!0})),i=(null==e.onProgress?await Promise.all(s):await fg(s,e.onProgress,0,.5)).map(o=>o.arrayBuffer());return null==e.onProgress?await Promise.all(i):await fg(i,e.onProgress,.5,1)}async function u0(r,e="",t,s){return mg(i=>l0(i,{requestInit:s}))(r,e,t)}function mg(r){return async(e,t="",s)=>{const i=e.map(()=>!1),o={},l=null!=s?s.map(()=>!1):[],c=[];if(e.forEach((v,S)=>{let _=0;v.weights.forEach(k=>{const A=Hl["quantization"in k?k.quantization.dtype:k.dtype]*ke(k.shape),R=()=>{i[S]=!0,null==o[S]&&(o[S]=[]),o[S].push({manifestEntry:k,groupOffset:_,sizeBytes:A})};null!=s?s.forEach((P,U)=>{P===k.name&&(R(),l[U]=!0)}):R(),c.push(k.name),_+=A})}),!l.every(v=>v)){const v=s.filter((S,_)=>!l[_]);throw new Error(`Could not find weights in manifest with names: ${v.join(", ")}. \nManifest JSON has weights with names: ${c.join(", ")}.`)}const p=i.reduce((v,S,_)=>(S&&v.push(_),v),[]),d=[];p.forEach(v=>{e[v].paths.forEach(S=>{const _=t+(t.endsWith("/")?"":"/")+S;d.push(_)})});const f=await r(d),m={};let y=0;return p.forEach(v=>{const S=e[v].paths.length;let _=0;for(let R=0;R<S;R++)_+=f[y+R].byteLength;const k=new ArrayBuffer(_),I=new Uint8Array(k);let A=0;for(let R=0;R<S;R++){const P=new Uint8Array(f[y+R]);I.set(P,A),A+=P.byteLength}o[v].forEach(R=>{const P=jo(k.slice(R.groupOffset,R.groupOffset+R.sizeBytes),[R.manifestEntry]);for(const U in P)m[U]=P[U]}),y+=S}),m}}Lr.registerSaveRouter(r=>nt().getBool("IS_BROWSER")&&!Array.isArray(r)&&r.startsWith(ic.URL_SCHEME)?function(e="model"){return new ic(e)}(r.slice(ic.URL_SCHEME.length)):null);class Af{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(F("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=nt().platform.fetch,F(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&F(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=Ju(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(s)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const i=await this.fetch(this.path,t);if(i.ok)return{modelArtifactsInfo:qo(e),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(o){let l=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?l+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":l+=" Please make sure the server is serving valid JSON for this request.",new Error(l)}if(null==t.modelTopology&&null==t.weightsManifest)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Fh(t,o=>this.loadWeights(o))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,i]=function(d){const f=d.lastIndexOf("/"),m=d.lastIndexOf("?");return[d.substring(0,f)+"/",m>f?d.substring(m):""]}(t),o=this.weightPathPrefix||s,l=[];for(const d of e)l.push(...d.weights);const c=[],p=[];for(const d of e)for(const f of d.paths)null!=this.weightUrlConverter?p.push(this.weightUrlConverter(f)):c.push(o+f+i);return this.weightUrlConverter&&c.push(...await Promise.all(p)),[l,If(await l0(c,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Rf(r){return null!=r.match(Af.URL_SCHEME_REGEX)}Af.URL_SCHEME_REGEX=/^https?:\/\//;const gg=(r,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let t=!0;if(t=Array.isArray(r)?r.every(s=>Rf(s)):Rf(r),t)return Lf(r,e)}return null};function Lf(r,e){return new Af(r,e)}function gp(r,e){return Lf(r,e)}Lr.registerSaveRouter(gg),Lr.registerLoadRouter(gg);class ql{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class ci{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Ys(r,e,t,s){return 1===arguments.length?null!=r.modelTopology||null!=r.weightSpecs?new ql(r):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ql({modelTopology:r})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ql({modelTopology:r,weightSpecs:e,weightData:t,trainingConfig:s}))}function c0(r){return new ci(r)}const Fn=we({matMul_:function(r,e,t=!1,s=!1){let i=j(r,"a","matMul"),o=j(e,"b","matMul");return[i,o]=Sr(i,o),be.runKernel(jc,{a:i,b:o},{transposeA:t,transposeB:s})}}),Ph=we({oneHot_:function(r,e,t=1,s=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const i={indices:j(r,"indices","oneHot","int32")};return be.runKernel(It,i,{depth:e,onValue:t,offValue:s})}}),Xn=we({transpose_:function(r,e){const t=j(r,"x","transpose");return null==e&&(e=t.shape.map((o,l)=>l).reverse()),F(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of perm ${e}.`),e.forEach(o=>{F(o>=0&&o<t.rank,()=>"All entries in 'perm' must be between 0 and "+(t.rank-1)+` but got ${e}`)}),t.rank<=1?t.clone():be.runKernel(kh,{x:t},{perm:e})}}),Eb=we({confusionMatrix_:function(r,e,t){const s=j(r,"labels","confusionMatrix"),i=j(e,"predictions","confusionMatrix");F(null==t||t>0&&Number.isInteger(t),()=>`If provided, numClasses must be a positive integer, but got ${t}`),F(1===s.rank,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),F(1===i.rank,()=>`Expected the rank of predictions to be 1, but got ${i.rank}`),F(s.shape[0]===i.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${i.shape[0]}. Labels and predictions should have the same number of elements.`),F(t>0&&Number.isInteger(t),()=>`numClasses is required to be a positive integer, but got ${t}`);const o=Ph(Rt(s,"int32"),t),l=Ph(Rt(i,"int32"),t),c=Xn(o),p=Fn(c,l);return Rt(p,"int32")}});function h0(r,e,t){if(Ue(r),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const s=Vi(r,t);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ia(r,e,s,t)}let zh;function d0(r,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==r)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let t=!1,s=!1,i=!1,o=!1,l=!1,c=!1;if(r.data instanceof Uint8Array)t=!0;else if("undefined"!=typeof ImageData&&r instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement)i=!0;else if("undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement)o=!0;else if(null!=r.getContext)l=!0;else{if(!("undefined"!=typeof ImageBitmap&&r instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${r.constructor.name}`);c=!0}if(i){const y=2;if(i&&r.readyState<y)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=op(zo,be.backendName))return be.runKernel(zo,{pixels:r},{numChannels:e});const[p,d]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height];let f,m;if(l?f=r.getContext("2d").getImageData(0,0,p,d).data:s||t?f=r.data:(o||i||c)&&(null==zh&&(zh=document.createElement("canvas").getContext("2d")),zh.canvas.width=p,zh.canvas.height=d,zh.drawImage(r,0,0,p,d),f=zh.getImageData(0,0,p,d).data),4===e)m=new Int32Array(f);else{const y=p*d;m=new Int32Array(y*e);for(let v=0;v<y;v++)for(let S=0;S<e;++S)m[v*e+S]=f[4*v+S]}return h0(m,[d,p,e],"int32")}async function Ib(r,e=3){let t=null;if(!nt().getBool("WRAP_TO_IMAGEBITMAP")||(s=r,"undefined"==typeof window||"undefined"==typeof ImageBitmap||!window.hasOwnProperty("createImageBitmap")||s instanceof ImageBitmap||null==(i=s)||0===i.width||0===i.height||function(i){return null!=i&&i.data instanceof Uint8Array}(s)))t=r;else{let s;try{s=await createImageBitmap(r,{premultiplyAlpha:"none"})}catch(i){s=null}t=null!=s&&s.width===r.width&&s.height===r.height?s:r}var s,i;return d0(t,e)}async function Cb(r,e){let t=j(r,"img","toPixels");if(!(r instanceof Un)){const d=t;t=Rt(d,"int32"),d.dispose()}if(2!==t.rank&&3!==t.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${t.rank}.`);const[s,i]=t.shape.slice(0,2),o=2===t.rank?1:t.shape[2];if(o>4||2===o)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${o}`);if("float32"!==t.dtype&&"int32"!==t.dtype)throw new Error(`Unsupported type for toPixels: ${t.dtype}. Please use float32 or int32 tensors.`);const l=await t.data(),c="float32"===t.dtype?255:1,p=new Uint8ClampedArray(i*s*4);for(let d=0;d<s*i;++d){const f=[0,0,0,255];for(let y=0;y<o;y++){const v=l[d*o+y];if("float32"===t.dtype){if(v<0||v>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${v}.`)}else if("int32"===t.dtype&&(v<0||v>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${v}.`);1===o?(f[0]=v*c,f[1]=v*c,f[2]=v*c):f[y]=v*c}const m=4*d;p[m+0]=Math.round(f[0]),p[m+1]=Math.round(f[1]),p[m+2]=Math.round(f[2]),p[m+3]=Math.round(f[3])}if(null!=e){e.width=i,e.height=s;const d=e.getContext("2d"),f=new ImageData(p,i,s);d.putImageData(f,0,0)}return t!==r&&t.dispose(),p}const p0=we({fromPixels_:d0});function Df(r,e){const t=r.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(0===ke(r.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${r.shape}.`);const i=e.shape,o=i[i.length-1];let l=1;for(let m=0;m<i.length-1;++m)l*=i[m];const c=r.shape,p=i.slice();p.pop();let d=1;for(let m=o;m<t;++m)d*=c[m],p.push(c[m]);const f=[...hn(r.shape).map(m=>m/d),1].slice(0,o);return[p,l,d,f]}function yg(r,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,i=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${r}, sliceDim: ${s}, and batchDim: ${i}.`;if(t.rank<i)throw new Error(o+` update.rank < ${i}. `);if(r.length<s+(t.rank-i))throw new Error(o+` Output shape length < ${s+(t.rank-i)}`);if(t.rank!==i+r.length-s)throw new Error(o+" update.rank != "+(i+r.length-s));for(let l=0;l<i;++l)if(t.shape[l]!==e.shape[l])throw new Error(o+` updates.shape[${l}] (${t.shape[l]}) != indices.shape[${l}] (${e.shape[l]}).`);for(let l=0;l<t.rank-i;++l)if(t.shape[l+i]!==r[l+s])throw new Error(o+` updates.shape[${l+i}] (${t.shape[l+i]}) != shape[${l+i}] (${r[l+i]})`)}function xg(r,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(r.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${r.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(0===t.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===r.size)throw new Error(`Updates specified for empty output. updates shape: ${r.shape}`)}yg(t,e,r)}function Bh(r,e,t){const s=e.shape.length,i=s>1?e.shape[s-1]:1,o=t.length;let l=1;for(let p=i;p<o;++p)l*=t[p];const c=i<1?1:i;return{sliceRank:i,numUpdates:ke(e.shape)/c,sliceSize:l,strides:[...hn(t.slice(0,i)),1],outputSize:ke(t)}}function bg(r,e,t){const s=r.shape.length;F(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),F(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let i=0;i<s;++i)F(e[i]+t[i]<=r.shape[i],()=>`Error in slice${s}D: begin[${i}] + size[${i}] (${e[i]+t[i]}) would overflow input.shape[${i}] (${r.shape[i]})`)}function Ff(r){const e=[];let t=0;for(;r>0;)1&r&&e.push(t),r/=2,t++;return e}function f0(r,e,t){const s=[];for(let i=0;i<r.length;i++)s[i]=Math.ceil((e[i]-r[i])/t[i]);return s}function m0(r,e,t,s){const i=[...r];for(let o=i.length;o<s.length;o++)i.push(1);for(let o=0;o<t;o++)0===o?i[e]=1:(i.splice(e,0,1),i.pop());return i}function g0(r,e,t){return t<=r?t:t-(e-1)}function y0(r,e){const t=[];for(let s=0;s<r;s++)t.push(e+s);return t}function x0(r,e,t,s,i,o,l,c,p){const d=r.length;let f=new Array(d),m=new Array(d),y=new Array(d);if(e.length&&t>0){const v=e[0],S=t+1;f=b0(l,v,S,s,r),m=v0(c,v,S,i,r),y=m0(o,v,S,r)}else for(let v=0;v<d;v++)f[v]=S0(l,s,o,r,v,p),m[v]=T0(c,i,o,r,v,p),y[v]=w0(o,v,p);return{begin:f,end:m,strides:y}}function b0(r,e,t,s,i){const o=[...i],l=y0(t,e);for(let c=0;c<o.length;c++)if(l.indexOf(c)>-1)o[c]=0;else{const p=g0(e,t,c);let d=s[p];r&1<<p&&(d=0),o[c]=d}return o}function v0(r,e,t,s,i){const o=[...i],l=y0(t,e);for(let c=0;c<o.length;c++)if(l.indexOf(c)>-1)o[c]=Number.MAX_SAFE_INTEGER;else{const p=g0(e,t,c);let d=s[p];r&1<<p&&(d=Number.MAX_SAFE_INTEGER),o[c]=d}for(let c=0;c<o.length;c++){const p=i[c];o[c]<0&&(o[c]+=p),o[c]=Ta(0,o[c],i[c])}return o}function w0(r,e,t){let s=r[e];return(t&1<<e||null==s)&&(s=1),s}function S0(r,e,t,s,i,o){let l=e[i];(r&1<<i||o&1<<i||null==l)&&(l=(t[i]||1)>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const p=s[i];return l<0&&(l+=p),l=Ta(0,l,p-1),l}function T0(r,e,t,s,i,o){let l=e[i];const c=t[i]||1;(r&1<<i||o&1<<i||null==l)&&(l=c>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const p=s[i];return l<0&&(l+=p),l=c>0?Ta(0,l,p):Ta(-1,l,p-1),l}function vg(r,e,t){let s=t.length;for(let i=0;i<t.length;i++)if(t[i]>1){s=i;break}for(let i=s+1;i<t.length;i++)if(e[i]>0||t[i]!==r[i])return!1;return!0}function wg(r,e){let t=r.length>0?r[r.length-1]:1;for(let s=0;s<r.length-1;s++)t+=r[s]*e[s];return t}function $f(r,e,t){let s;const i=r.shape.length;let o;return s="number"==typeof e?[e,...new Array(i-1).fill(0)]:e.length<i?e.concat(new Array(i-e.length).fill(0)):e.slice(),s.forEach(l=>{F(-1!==l,()=>"slice() does not support negative begin indexing.")}),o=null==t?new Array(i).fill(-1):"number"==typeof t?[t,...new Array(i-1).fill(-1)]:t.length<i?t.concat(new Array(i-t.length).fill(-1)):t,o=o.map((l,c)=>l>=0?l:(F(-1===l,()=>`Negative size values should be exactly -1 but got ${l} for the slice() size at index ${c}.`),r.shape[c]-s[c])),[s,o]}function Sg(r,e,t,s,i,o,l,c,p){let d=e.slice(),f=t.slice(),m=s;null==s&&(m=new Array(d.length));const y=Ff(l);if(y.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==l&&0!==c)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==l&&0!==p)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const v=r.length-d.length,S=Ff(c),_=r.slice();S.forEach(W=>{d[W]=0,f[W]=1,_.splice(W,0,1)});const{begin:k,end:I,strides:A}=x0(_,y,v,d,f,m,i,o,l);d=k,f=I,m=A;const R=Ff(p);R.forEach(W=>{f[W]=d[W]+1,m[W]=1});const P=f0(d,f,m),U=P.filter((W,se)=>-1===R.indexOf(se));return{nonStrided:m.every(W=>1===W),$begin:d,$end:f,$strides:m,size:P,newShape:_,outShape:U}}class ac{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Hi{constructor(){this.classNameMap={}}static getMap(){return null==Hi.instance&&(Hi.instance=new Hi),Hi.instance}static register(e){Hi.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function St(r){F(null!=r.className,()=>"Class being registered does not have the static className property defined."),F("string"==typeof r.className,()=>"className is required to be a string, but got type "+typeof r.className),F(r.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Hi.register(r)}const M0=.1;function Nb(r,e,t){return null==t&&(t=Tg()),Mg(r,e,(s,i)=>Of(s,i,t))}function Tg(){return 32===be.backend.floatPrecision()?.001:M0}function Mg(r,e,t){let s=!0;if((Ms(r)||Ms(e))&&(s=!1),Ms(r)&&Ms(e)&&(s=!0),s){const l=r.constructor.name,c=e.constructor.name;if(l!==c)throw new Error(`Arrays are of different type. Actual: ${l}. Expected: ${c}`)}if(Array.isArray(r)&&Array.isArray(e)){const l=Vi(r),c=Vi(e);if(!He(l,c))throw new Error(`Arrays have different shapes. Actual: [${l}]. Expected: [${c}]`)}const i=Ms(r)?r:dt(r),o=Ms(e)?e:dt(e);if(i.length!==o.length)throw new Error(`Arrays have different lengths actual: ${i.length} vs expected: ${o.length}.\nActual:   ${i}.\nExpected: ${o}.`);for(let l=0;l<o.length;++l){const c=i[l],p=o[l];if(!t(c,p))throw new Error(`Arrays differ: actual[${l}] = ${c}, expected[${l}] = ${p}.\nActual:   ${i}.\nExpected: ${o}.`)}}function _0(r,e){r().then(()=>e.fail(),()=>e())}function k0(r,e){const t="string"==typeof e||"number"==typeof e||"boolean"==typeof e?[e]:e;return Ma(r)||Ma(r[0])||Ma(e)||Ma(e[0])?Mg(r,t,(s,i)=>s==i):Mg(r,e,(s,i)=>Of(s,i,0))}function _g(r,e,t){if(null==t&&(t=Tg()),!Of(r,e,t))throw new Error(`Numbers differ: actual === ${r}, expected === ${e}`)}function Of(r,e,t){return!isFinite(r)&&!isFinite(e)||!(isNaN(r)||isNaN(e)||Math.abs(r-e)>t)}function Ab(r,e,t){for(let s=0;s<r.length;s++)if(r[s]<e||r[s]>t)throw new Error(`Value out of range:${r[s]} low: ${e}, high: ${t}`)}function Xl(r,e){expect(new Float32Array(r)).toEqual(new Float32Array(e))}function kg(r){for(let e=0;e<r.length;e++){const t=r[e];Array.isArray(t)?kg(t):r[e]=Bi(t)}return r}const E0="3.9.0";function I0(){nt().set("PROD",!0)}function C0(){nt().set("DEBUG",!0)}function Uh(){nt().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function N0(r){nt().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(r+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Rb(){be.disposeVariables()}function aa(){return be}function yp(){return be.memory()}function A0(r){return be.profile(r)}function Re(r,e){return be.tidy(r,e)}function _n(r){Xs(r).forEach(e=>e.dispose())}function ps(r){return be.keep(r)}function Lb(r){return be.time(r)}function Db(r){return be.setBackend(r)}function R0(){return be.ready()}function Fb(){return be.backendName}function L0(r){be.removeBackend(r)}function D0(r){return be.findBackend(r)}function $b(r){return be.findBackendFactory(r)}function Eg(r,e,t=1){return be.registerBackend(r,e,t)}function F0(){return be.backend}function Ob(r,e){nt().setPlatform(r,e)}Mb=N0;const vt=we({add_:function(r,e){let t=j(r,"a","add"),s=j(e,"b","add");return[t,s]=Sr(t,s),be.runKernel(Io,{a:t,b:s})}}),xp=we({floorDiv_:function(r,e){let t=j(r,"a","floorDiv"),s=j(e,"b","floorDiv");return[t,s]=Sr(t,s),be.runKernel($u,{a:t,b:s})}}),an=we({div_:function(r,e){let t=j(r,"a","div"),s=j(e,"b","div");return[t,s]=Sr(t,s),"int32"===t.dtype&&"int32"===s.dtype?xp(t,s):be.runKernel(Co,{a:t,b:s},{})}}),Se=we({mul_:function(r,e){let t=j(r,"a","mul"),s=j(e,"b","mul");return[t,s]=Sr(t,s),be.runKernel(jr,{a:t,b:s})}}),Es=we({sqrt_:function(r){const e={x:j(r,"x","sqrt")};return be.runKernel(Bl,e)}}),hr=we({square_:function(r){const e=j(r,"x","square");return be.runKernel("Square",{x:e},{})}}),Kn=we({zerosLike_:function(r){const e={x:j(r,"x","zerosLike")};return be.runKernel(ip,e)}});function $0(r){return F(Vs(r),()=>"The f passed in grad(f) must be a function"),(e,t)=>{const s=j(e,"x","tf.grad","string_or_numeric"),i=null!=t?j(t,"dy","tf.grad"):null;return be.tidy(()=>{const{value:o,grads:l}=be.gradients(()=>r(s),[s],i);return null!=i&&qe(o.shape,i.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Bf(l),l[0]})}}function Pb(r){return F(Vs(r),()=>"The f passed in grads(f) must be a function"),(e,t)=>{F(Array.isArray(e),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const s=co(e,"args","tf.grads","string_or_numeric"),i=null!=t?j(t,"dy","tf.grads"):null;return be.tidy(()=>{const{value:o,grads:l}=be.gradients(()=>r(...s),s,i);return null!=i&&qe(o.shape,i.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Bf(l),l})}}function Pf(r){return F(Vs(r),()=>"The f passed in valueAndGrad(f) must be a function"),(e,t)=>{F(e instanceof Un,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),F(null==t||t instanceof Un,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:i}=be.gradients(()=>r(e),[e],t);return Bf(s),{grad:s[0],value:i}}}function zf(r){return F(Vs(r),()=>"The f passed in valueAndGrads(f) must be a function"),(e,t)=>{F(Array.isArray(e)&&e.every(i=>i instanceof Un),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),F(null==t||t instanceof Un,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=be.gradients(()=>r(...e),e,t);return null!=t&&qe(s.value.shape,t.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Bf(s.grads),s}}function Ig(r,e){F(Vs(r),()=>"The f passed in variableGrads(f) must be a function"),F(null==e||Array.isArray(e)&&e.every(p=>p instanceof qs),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=null!=e;if(!t){e=[];for(const p in be.registeredVariables)e.push(be.registeredVariables[p])}const s=t?e.filter(p=>!p.trainable):null,i=e.length;F((e=e.filter(p=>p.trainable)).length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${i} variables is trainable.`);const{value:o,grads:l}=be.gradients(r,e,null,!0);F(l.some(p=>null!=p),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),F(0===o.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${o.rank} tensor`);const c={};return e.forEach((p,d)=>{null!=l[d]&&(c[p.name]=l[d])}),null!=s&&s.forEach(p=>c[p.name]=null),{value:o,grads:c}}function po(r){return be.customGrad(r)}function Bf(r){if(r.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function ln(r,e){if((Ms(r)&&"string"!==e||Array.isArray(r))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&Ms(r)&&!(r instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ia(r,[],[],e)}class Ua extends ac{minimize(e,t=!1,s){const{value:i,grads:o}=this.computeGradients(e,s);if(null!=s){const l=s.map(c=>({name:c.name,tensor:o[c.name]}));this.applyGradients(l)}else this.applyGradients(o);return _n(o),t?i:(i.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Ig(e,t)}dispose(){null!=this.iterations_&&_n(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ln(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ua,Symbol.hasInstance,{value:r=>null!=r.minimize&&null!=r.computeGradients&&null!=r.applyGradients});class fo extends Ua{constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==s&&(this.epsilon=be.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,s)=>{const i=be.registeredVariables[t];null==this.accumulatedGrads[s]&&(this.accumulatedGrads[s]={originalName:`${t}/accum_grad`,variable:Re(()=>Kn(i).variable(!1))}),null==this.accumulatedUpdates[s]&&(this.accumulatedUpdates[s]={originalName:`${t}/accum_var`,variable:Re(()=>Kn(i).variable(!1))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedGrads[s].variable,c=this.accumulatedUpdates[s].variable;Re(()=>{const p=vt(Se(l,this.rho),Se(hr(o),1-this.rho)),d=Se(an(Es(vt(c,this.epsilon)),Es(vt(l,this.epsilon))),o),f=vt(Se(c,this.rho),Se(hr(d),1-this.rho));l.assign(p),c.assign(f);const m=vt(Se(d,-this.learningRate),i);i.assign(m)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(_n(this.accumulatedGrads.map(e=>e.variable)),_n(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(!1)})),this.accumulatedUpdates=e.slice(t,2*t).map(s=>({originalName:s.name,variable:s.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Vh(r,e,t){return be.runKernel(rh,{},{shape:r,value:e,dtype:t})}fo.className="Adadelta",St(fo);class Wh extends Ua{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,s)=>{const i=be.registeredVariables[t];if(null==this.accumulatedGrads[s]){const c=!1;this.accumulatedGrads[s]={originalName:`${t}/accumulator`,variable:Re(()=>Vh(i.shape,this.initialAccumulatorValue).variable(c))}}const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedGrads[s].variable;Re(()=>{const c=vt(l,hr(o));l.assign(c);const p=vt(Se(an(o,Es(vt(c,be.backend.epsilon()))),-this.learningRate),i);i.assign(p)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&_n(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Wh.className="Adagrad",St(Wh);const Ko=we({pow_:function(r,e){let t=j(r,"base","pow"),s=j(e,"exp","pow");return[t,s]=Sr(t,s),be.runKernel(yh,{a:t,b:s})}}),Yt=we({sub_:function(r,e){let t=j(r,"a","sub"),s=j(e,"b","sub");return[t,s]=Sr(t,s),be.runKernel(Hs,{a:t,b:s})}});class lr extends Ua{constructor(e,t,s,i=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=i,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Re(()=>{this.accBeta1=ln(t).variable(),this.accBeta2=ln(s).variable()}),null==i&&(this.epsilon=be.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);Re(()=>{const s=Yt(1,this.accBeta1),i=Yt(1,this.accBeta2);t.forEach((o,l)=>{const c=be.registeredVariables[o];null==this.accumulatedFirstMoment[l]&&(this.accumulatedFirstMoment[l]={originalName:`${o}/m`,variable:Re(()=>Kn(c).variable(!1))}),null==this.accumulatedSecondMoment[l]&&(this.accumulatedSecondMoment[l]={originalName:`${o}/v`,variable:Re(()=>Kn(c).variable(!1))});const p=Array.isArray(e)?e[l].tensor:e[o];if(null==p)return;const d=this.accumulatedFirstMoment[l].variable,f=this.accumulatedSecondMoment[l].variable,m=vt(Se(d,this.beta1),Se(p,1-this.beta1)),y=vt(Se(f,this.beta2),Se(hr(p),1-this.beta2)),v=an(m,s),S=an(y,i);d.assign(m),f.assign(y);const _=vt(Se(an(v,vt(Es(S),this.epsilon)),-this.learningRate),c);c.assign(_)}),this.accBeta1.assign(Se(this.accBeta1,this.beta1)),this.accBeta2.assign(Se(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&_n(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&_n(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),Re(()=>{this.accBeta1.assign(Ko(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ko(this.beta2,this.iterations_+1))});const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map(s=>({originalName:s.name,variable:s.tensor.variable(!1)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(s=>({originalName:s.name,variable:s.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}lr.className="Adam",St(lr);const qr=we({abs_:function(r){const e=j(r,"x","abs");return be.runKernel("complex64"===e.dtype?Xc:Su,{x:e})}});function mo(r,e){const t=r.length,s=[];for(let i=0;i<t;i++){const o=t-1-i,l=r[o]||1;(e[e.length-1-i]||1)>1&&1===l&&s.unshift(o)}return s}function Dr(r,e){const t=[];for(let s=0;s<e.length;s++){const i=r[r.length-s-1],o=e.length-s-1,l=e[o];(null==i||1===i&&l>1)&&t.unshift(o)}return t}function An(r,e){const t=[],s=Math.max(r.length,e.length);for(let i=0;i<s;i++){let o=r[r.length-i-1];null==o&&(o=1);let l=e[e.length-i-1];if(null==l&&(l=1),1===o)t.unshift(l);else if(1===l)t.unshift(o);else{if(o!==l)throw Error(`Operands could not be broadcast together with shapes ${r} and ${e}.`);t.unshift(o)}}return t}const Zs=we({maximum_:function(r,e){let t=j(r,"a","maximum"),s=j(e,"b","maximum");return[t,s]=Sr(t,s),"bool"===t.dtype&&(t=Rt(t,"int32"),s=Rt(s,"int32")),An(t.shape,s.shape),be.runKernel(ph,{a:t,b:s})}});class Fr extends Ua{constructor(e,t,s,i=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=i,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Re(()=>{this.iteration=ln(0).variable(),this.accBeta1=ln(t).variable()}),null==i&&(this.epsilon=be.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);Re(()=>{const s=Yt(1,this.accBeta1),i=an(-this.learningRate,vt(Se(this.iteration,this.decay),1));t.forEach((o,l)=>{const c=be.registeredVariables[o];null==this.accumulatedFirstMoment[l]&&(this.accumulatedFirstMoment[l]={originalName:`${o}/m`,variable:Kn(c).variable(!1)}),null==this.accumulatedWeightedInfNorm[l]&&(this.accumulatedWeightedInfNorm[l]={originalName:`${o}/v`,variable:Kn(c).variable(!1)});const p=Array.isArray(e)?e[l].tensor:e[o];if(null==p)return;const d=this.accumulatedFirstMoment[l].variable,f=this.accumulatedWeightedInfNorm[l].variable,m=vt(Se(d,this.beta1),Se(p,1-this.beta1)),y=Se(f,this.beta2),v=qr(p),S=Zs(y,v);d.assign(m),f.assign(S);const _=vt(Se(an(i,s),an(m,vt(S,this.epsilon))),c);c.assign(_)}),this.iteration.assign(vt(this.iteration,1)),this.accBeta1.assign(Se(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&_n(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&_n(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Fr.className="Adamax",St(Fr);class oa extends Ua{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,s)=>{const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=be.registeredVariables[t];Re(()=>{const l=vt(Se(this.c,i),o);o.assign(l)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ps(ln(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}oa.className="SGD",St(oa);class oc extends oa{constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=ln(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,s)=>{const i=be.registeredVariables[t];if(null==this.accumulations[s]){const c=!1;this.accumulations[s]={originalName:`${t}/momentum`,variable:Re(()=>Kn(i).variable(c))}}const o=this.accumulations[s].variable,l=Array.isArray(e)?e[s].tensor:e[t];null!=l&&Re(()=>{let c;const p=vt(Se(this.m,o),l);c=vt(Se(this.c,this.useNesterov?vt(l,Se(p,this.m)):p),i),o.assign(p),i.assign(c)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&_n(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(t=>({originalName:t.name,variable:t.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}oc.className="Momentum",St(oc);class Yo extends Ua{constructor(e,t=.9,s=0,i=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=i,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,null==i&&(this.epsilon=be.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,s)=>{const i=be.registeredVariables[t],o=!1;null==this.accumulatedMeanSquares[s]&&(this.accumulatedMeanSquares[s]={originalName:`${t}/rms`,variable:Re(()=>Kn(i).variable(o))}),null==this.accumulatedMoments[s]&&(this.accumulatedMoments[s]={originalName:`${t}/momentum`,variable:Re(()=>Kn(i).variable(o))}),null==this.accumulatedMeanGrads[s]&&this.centered&&(this.accumulatedMeanGrads[s]={originalName:`${t}/mg`,variable:Re(()=>Kn(i).variable(o))});const l=Array.isArray(e)?e[s].tensor:e[t];if(null==l)return;const c=this.accumulatedMeanSquares[s].variable,p=this.accumulatedMoments[s].variable;Re(()=>{const d=vt(Se(c,this.decay),Se(hr(l),1-this.decay));if(this.centered){const f=this.accumulatedMeanGrads[s].variable,m=vt(Se(f,this.decay),Se(l,1-this.decay)),y=an(Se(l,this.learningRate),Es(Yt(d,vt(hr(m),this.epsilon)))),v=vt(Se(p,this.momentum),y);c.assign(d),f.assign(m),p.assign(v);const S=Yt(i,v);i.assign(S)}else{const f=vt(Se(c,this.decay),Se(hr(l),1-this.decay)),m=vt(Se(p,this.momentum),an(Se(l,this.learningRate),Es(vt(f,this.epsilon))));c.assign(f),p.assign(m);const y=Yt(i,m);i.assign(y)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&_n(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&_n(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&_n(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,2*t).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(i=>({originalName:i.name,variable:i.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Yo.className="RMSProp",St(Yo);const lc=we({acos_:function(r){const e={x:j(r,"x","acos")};return be.runKernel(Nl,e)}}),Kl=we({acosh_:function(r){const e={x:j(r,"x","acosh")};return be.runKernel(Al,e)}}),uc=we({addN_:function(r){F(Array.isArray(r),()=>"The argument passed to tf.addN() must be a list of tensors"),F(r.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${r.length}`);const e=r.map((i,o)=>j(i,`tensors${o}`,"addN")),t=e[0];return e.forEach(i=>{if(i.dtype!==t.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),e.forEach(i=>{if(!He(i.shape,t.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}),be.runKernel(Tu,e)}}),Zo=we({all_:function(r,e=null,t=!1){const s={x:j(r,"x","all","bool")};return be.runKernel(Uc,s,{axis:e,keepDims:t})}}),Jo=we({any_:function(r,e=null,t=!1){const s={x:j(r,"x","any","bool")};return be.runKernel(Vc,s,{axis:e,keepDims:t})}}),Yl=we({argMax_:function(r,e=0){const t={x:j(r,"x","argMax")};return be.runKernel(Wc,t,{axis:e})}}),Gh=we({argMin_:function(r,e=0){const t={x:j(r,"x","argMin")};return be.runKernel(Mu,t,{axis:e})}}),cc=we({asin_:function(r){const e={x:j(r,"x","asin")};return be.runKernel(Rl,e)}}),Hh=we({asinh_:function(r){const e={x:j(r,"x","asinh")};return be.runKernel(_u,e)}}),Uf=we({atan_:function(r){const e={x:j(r,"x","atan")};return be.runKernel(ku,e)}}),bp=we({atan2_:function(r,e){let t=j(r,"a","atan2"),s=j(e,"b","atan2");return[t,s]=Sr(t,s),be.runKernel(Iu,{a:t,b:s})}}),Vf=we({atanh_:function(r){const e={x:j(r,"x","atanh")};return be.runKernel(Eu,e)}});function Zl(r,e,t,s,i="NHWC",o){return ls(r,[...e,r[3]],t,o,s,null,null,di(i))}function hi(r,e,t,s,i,o,l="channelsLast"){const[c,p]=vp(e);let d;if("channelsLast"===l)d=[c,p,r[3],r[3]];else{if("channelsFirst"!==l)throw new Error(`Unknown dataFormat ${l}`);d=[c,p,r[1],r[1]]}return ls(r,d,t,s,i,o,!1,l)}function la(r,e,t,s,i,o,l="NDHWC"){const[c,p,d]=Gf(e);let f,m;if("NDHWC"===l)m="channelsLast",f=[c,p,d,r[4],r[4]];else{if("NCDHW"!==l)throw new Error(`Unknown dataFormat ${l}`);m="channelsFirst",f=[c,p,d,r[1],r[1]]}return Qo(r,f,t,s,i,!1,m,o)}function ls(r,e,t,s,i,o,l=!1,c="channelsLast"){let[p,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===c)[p,d,f,m]=r;else{if("channelsFirst"!==c)throw new Error(`Unknown dataFormat ${c}`);[p,m,d,f]=r}const[y,v,,S]=e,[_,k]=vp(t),[I,A]=vp(s),R=jh(y,I),P=jh(v,A),{padInfo:U,outHeight:W,outWidth:se}=function(de,ye,Ee,Ne,Be,je,Ye,Xe,Je){let Ke,tt,mt;if("number"==typeof de){Ke={top:de,bottom:de,left:de,right:de,type:0===de?"VALID":"NUMBER"};const Et=function(Tt,Dt,Ft,jt,Kt){null==jt&&(jt=Wf(Tt,Dt,Ft));const un=Tt[1];return[Jl((Tt[0]-Dt+2*jt)/Ft+1,Kt),Jl((un-Dt+2*jt)/Ft+1,Kt)]}([ye,Ee],je,Ne,de,Xe);tt=Et[0],mt=Et[1]}else if("same"===de){tt=Math.ceil(ye/Ne),mt=Math.ceil(Ee/Be);const Et=Math.max(0,(tt-1)*Ne+je-ye),Tt=Math.max(0,(mt-1)*Be+Ye-Ee),Dt=Math.floor(Et/2),Ft=Et-Dt,jt=Math.floor(Tt/2);Ke={top:Dt,bottom:Ft,left:jt,right:Tt-jt,type:"SAME"}}else if("valid"===de)Ke={top:0,bottom:0,left:0,right:0,type:"VALID"},tt=Math.ceil((ye-je+1)/Ne),mt=Math.ceil((Ee-Ye+1)/Be);else{if("object"!=typeof de)throw Error(`Unknown padding parameter: ${de}`);{const Et="channelsLast"===Je?de[1][0]:de[2][0],Tt="channelsLast"===Je?de[1][1]:de[2][1],Dt="channelsLast"===Je?de[2][0]:de[3][0],Ft="channelsLast"===Je?de[2][1]:de[3][1];Ke={top:Et,bottom:Tt,left:Dt,right:Ft,type:0===Et&&0===Tt&&0===Dt&&0===Ft?"VALID":"EXPLICIT"},tt=Jl((ye-je+Et+Tt)/Ne+1,Xe),mt=Jl((Ee-Ye+Dt+Ft)/Be+1,Xe)}}return{padInfo:Ke,outHeight:tt,outWidth:mt}}(i,d,f,_,k,R,P,o,c),G=l?S*m:S;let pe;return"channelsFirst"===c?pe=[p,G,W,se]:"channelsLast"===c&&(pe=[p,W,se,G]),{batchSize:p,dataFormat:c,inHeight:d,inWidth:f,inChannels:m,outHeight:W,outWidth:se,outChannels:G,padInfo:U,strideHeight:_,strideWidth:k,filterHeight:y,filterWidth:v,effectiveFilterHeight:R,effectiveFilterWidth:P,dilationHeight:I,dilationWidth:A,inShape:r,outShape:pe,filterShape:e}}function Qo(r,e,t,s,i,o=!1,l="channelsLast",c){let[p,d,f,m,y]=[-1,-1,-1,-1,-1];if("channelsLast"===l)[p,d,f,m,y]=r;else{if("channelsFirst"!==l)throw new Error(`Unknown dataFormat ${l}`);[p,y,d,f,m]=r}const[v,S,_,,k]=e,[I,A,R]=Gf(t),[P,U,W]=Gf(s),se=jh(v,P),G=jh(S,U),pe=jh(_,W),{padInfo:de,outDepth:ye,outHeight:Ee,outWidth:Ne}=function(Ye,Xe,Je,Ke,tt,mt,Et,Tt,Dt,Ft,jt){let Kt,un,Sn,Mn;if("number"==typeof Ye){Kt={top:Ye,bottom:Ye,left:Ye,right:Ye,front:Ye,back:Ye,type:0===Ye?"VALID":"NUMBER"};const pn=function(Rn,zn,qn,Nn,Vn,rr){null==Vn&&(Vn=Wf(Rn,zn,Nn));const Rs=Rn[1],vi=Rn[2];return[Jl((Rn[0]-zn+2*Vn)/Nn+1,rr),Jl((Rs-zn+2*Vn)/Nn+1,rr),Jl((vi-zn+2*Vn)/Nn+1,rr),1]}([Xe,Je,Ke,1],Tt,0,tt,Ye,jt);un=pn[0],Sn=pn[1],Mn=pn[2]}else if("same"===Ye){un=Math.ceil(Xe/tt),Sn=Math.ceil(Je/mt),Mn=Math.ceil(Ke/Et);const pn=(un-1)*tt+Tt-Xe,Rn=(Sn-1)*mt+Dt-Je,zn=(Mn-1)*Et+Ft-Ke,qn=Math.floor(pn/2),Nn=pn-qn,Vn=Math.floor(Rn/2),rr=Rn-Vn,Rs=Math.floor(zn/2);Kt={top:Vn,bottom:rr,left:Rs,right:zn-Rs,front:qn,back:Nn,type:"SAME"}}else{if("valid"!==Ye)throw Error(`Unknown padding parameter: ${Ye}`);Kt={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},un=Math.ceil((Xe-Tt+1)/tt),Sn=Math.ceil((Je-Dt+1)/mt),Mn=Math.ceil((Ke-Ft+1)/Et)}return{padInfo:Kt,outDepth:un,outHeight:Sn,outWidth:Mn}}(i,d,f,m,I,A,R,se,G,pe,c),Be=o?k*y:k;let je;return"channelsFirst"===l?je=[p,Be,ye,Ee,Ne]:"channelsLast"===l&&(je=[p,ye,Ee,Ne,Be]),{batchSize:p,dataFormat:l,inDepth:d,inHeight:f,inWidth:m,inChannels:y,outDepth:ye,outHeight:Ee,outWidth:Ne,outChannels:Be,padInfo:de,strideDepth:I,strideHeight:A,strideWidth:R,filterDepth:v,filterHeight:S,filterWidth:_,effectiveFilterDepth:se,effectiveFilterHeight:G,effectiveFilterWidth:pe,dilationDepth:P,dilationHeight:U,dilationWidth:W,inShape:r,outShape:je,filterShape:e}}function Wf(r,e,t,s=1){const i=jh(e,s);return Math.floor((r[0]*(t-1)-t+i)/2)}function vp(r){return"number"==typeof r?[r,r,r]:2===r.length?[r[0],r[1],1]:r}function Gf(r){return"number"==typeof r?[r,r,r]:r}function jh(r,e){return e<=1?r:r+(r-1)*(e-1)}function Jl(r,e){if(!e)return Math.trunc(r);switch(e){case"round":return Math.round(r);case"ceil":return Math.ceil(r);case"floor":return Math.floor(r);default:throw new Error(`Unknown roundingMode ${e}`)}}function Va(r){const[e,t,s]=vp(r);return 1===e&&1===t&&1===s}function ts(r,e){return Va(r)||Va(e)}function di(r){if("NHWC"===r)return"channelsLast";if("NCHW"===r)return"channelsFirst";throw new Error(`Unknown dataFormat ${r}`)}const Me=we({reshape_:function(r,e){const t={x:j(r,"x","reshape","string_or_numeric")};return be.runKernel(Qr,t,{shape:e})}}),wp=we({avgPool_:function(r,e,t,s,i){const o=j(r,"x","avgPool","float32");F(ts(t,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '1'`);let l=o,c=!1;3===o.rank&&(c=!0,l=Me(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(4===l.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${l.rank}.`),null!=i&&F(Bt(s),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);let f=be.runKernel(Gc,{x:l},{filterSize:e,strides:t,pad:s,dimRoundingMode:i});return f=Rt(f,o.dtype),c?Me(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),qh=we({avgPool3d_:function(r,e,t,s,i,o="NDHWC"){const l=j(r,"x","avgPool3d","float32");let c=l,p=!1;4===l.rank&&(p=!0,c=Me(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),F(5===c.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${c.rank}.`),F("NDHWC"===o,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),null!=i&&F(Bt(s),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);let m=be.runKernel(Hc,{x:c},{filterSize:e,strides:t,pad:s,dimRoundingMode:i,dataFormat:o});return m=Rt(m,c.dtype),p?Me(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),dr=we({concat_:function(r,e=0){F(r.length>=1,()=>"Pass at least one tensor to concat");const t=co(r,"tensors","concat","string_or_numeric");return"complex64"===t[0].dtype&&t.forEach(o=>{if("complex64"!==o.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${o.dtype}. `)}),1===t.length?Xo(t[0]):be.runKernel(Kc,t,{axis:e})}}),ua=we({sigmoid_:function(r){const e={x:j(r,"x","sigmoid")};return be.runKernel(Oo,e)}}),Gn=we({slice_:function(r,e,t){const s=j(r,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");return be.runKernel(Qi,{x:s},{begin:e,size:t})}}),go=we({tanh_:function(r){const e={x:j(r,"x","tanh")};return be.runKernel(_h,e)}}),Sp=we({basicLSTMCell_:function(r,e,t,s,i,o){const l=j(r,"forgetBias","basicLSTMCell"),c=j(e,"lstmKernel","basicLSTMCell"),p=j(t,"lstmBias","basicLSTMCell"),d=j(s,"data","basicLSTMCell"),f=j(i,"c","basicLSTMCell"),m=j(o,"h","basicLSTMCell"),y=dr([d,m],1),v=Fn(y,c),S=vt(v,p),k=S.shape[1]/4,I=[S.shape[0],k],A=Gn(S,[0,0],I),R=Gn(S,[0,k],I),P=Gn(S,[0,2*k],I),U=Gn(S,[0,3*k],I),W=vt(Se(ua(A),go(R)),Se(f,ua(vt(l,P))));return[W,Se(go(W),ua(U))]}}),hc=we({batchToSpaceND_:function(r,e,t){const s=j(r,"x","batchToSpaceND"),i=e.reduce((c,p)=>c*p);return F(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),F(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),F(s.shape[0]%i==0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${i}`),be.runKernel(qc,{x:s},{blockShape:e,crops:t})}}),Vr=we({batchNorm_:function(r,e,t,s,i,o){null==o&&(o=.001);const l=j(r,"x","batchNorm"),c=j(e,"mean","batchNorm"),p=j(t,"variance","batchNorm");let d,f;null!=i&&(d=j(i,"scale","batchNorm")),null!=s&&(f=j(s,"offset","batchNorm")),F(c.rank===p.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(null==f||c.rank===f.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(null==d||c.rank===d.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const m={x:function(S){let _;return _=0===S.rank||1===S.rank?Me(S,[1,1,1,S.size]):2===S.rank?Me(S,[1,1,S.shape[0],S.shape[1]]):3===S.rank?Me(S,[1,S.shape[0],S.shape[1],S.shape[2]]):S,_}(l),scale:d,offset:f,mean:c,variance:p},v=be.runKernel(ih,m,{varianceEpsilon:o});return Me(v,l.shape)}}),Cg=we({batchNorm2d_:function(r,e,t,s,i,o){const l=j(r,"x","batchNorm"),c=j(e,"mean","batchNorm"),p=j(t,"variance","batchNorm");let d,f;return null!=i&&(d=j(i,"scale","batchNorm")),null!=s&&(f=j(s,"offset","batchNorm")),F(2===l.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`),F(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${c.rank}.`),F(2===p.rank||1===p.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${p.rank}.`),null!=d&&F(2===d.rank||1===d.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${d.rank}.`),null!=f&&F(2===f.rank||1===f.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${f.rank}.`),Vr(l,c,p,f,d,o)}}),Ng=we({batchNorm3d_:function(r,e,t,s,i,o){const l=j(r,"x","batchNorm"),c=j(e,"mean","batchNorm"),p=j(t,"variance","batchNorm");let d,f;return null!=i&&(d=j(i,"scale","batchNorm")),null!=s&&(f=j(s,"offset","batchNorm")),F(3===l.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`),F(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${c.rank}.`),F(3===p.rank||1===p.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${p.rank}.`),null!=d&&F(3===d.rank||1===d.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${d.rank}.`),null!=f&&F(3===f.rank||1===f.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${f.rank}.`),Vr(l,c,p,f,d,o)}}),Ag=we({batchNorm4d_:function(r,e,t,s,i,o){const l=j(r,"x","batchNorm"),c=j(e,"mean","batchNorm"),p=j(t,"variance","batchNorm");let d,f;return null!=i&&(d=j(i,"scale","batchNorm")),null!=s&&(f=j(s,"offset","batchNorm")),F(4===l.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`),F(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${c.rank}.`),F(4===p.rank||1===p.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${p.rank}.`),null!=d&&F(4===d.rank||1===d.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${d.rank}.`),null!=f&&F(4===f.rank||1===f.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${f.rank}.`),Vr(l,c,p,f,d,o)}}),Tp=we({bincount_:function(r,e,t){const s=j(r,"x","bincount"),i=j(e,"weights","bincount");return F("int32"===s.dtype,()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),F(t>=0,()=>`size must be non-negative, but got ${t}.`),F(i.size===s.size||0===i.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${i.shape}.`),be.runKernel($d,{x:s,weights:i},{size:t})}}),Mp=we({broadcastArgs_:function(r,e){const t=j(r,"s0","broadcastArgs","int32"),s=j(e,"s1","broadcastArgs","int32");if(1!==t.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${t.rank}`);if(1!==s.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);return be.runKernel(df,{s0:t,s1:s})}}),_i=we({broadcastTo_:function(r,e){let t=j(r,"broadcastTo","x");const s=t.shape;if(e.some(p=>!(p>0)||p%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const p=t.shape.slice();for(;p.length<e.length;)p.unshift(1);t=Me(t,p)}const i=t.shape,o=Array.from(e);for(let p=e.length-1;p>=0;p--)if(i[p]===e[p])o[p]=1;else if(1!==t.shape[p])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);return 0===o.map((p,d)=>p>1?d:-1).filter(p=>p>=0).length?Xo(t):be.runKernel(zi,{x:t},{reps:o})}}),Hf=we({ceil_:function(r){const e={x:j(r,"x","ceil")};return be.runKernel(Nu,e)}}),Js=we({clipByValue_:function(r,e,t){const s=j(r,"x","clipByValue");return F(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),be.runKernel(Au,{x:s},{clipValueMin:e,clipValueMax:t})}}),pi=we({concat1d_:function(r){return dr(r,0)}}),jf=we({concat2d_:function(r,e){return dr(r,e)}}),Ql=we({concat3d_:function(r,e){return dr(r,e)}}),Rg=we({concat4d_:function(r,e){return dr(r,e)}}),Wa=we({conv2d_:function(r,e,t,s,i="NHWC",o=[1,1],l){const c=j(r,"x","conv2d"),p=j(e,"filter","conv2d");let d=c,f=!1;3===c.rank&&(f=!0,d=Me(c,[1,c.shape[0],c.shape[1],c.shape[2]])),F(4===d.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${d.rank}.`),F(4===p.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${p.rank}.`),null!=l&&F(Bt(s),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${s}.`);const m="NHWC"===i?d.shape[3]:d.shape[1];F(m===p.shape[2],()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`),F(ts(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const S=be.runKernel(Yc,{x:d,filter:p},{strides:t,pad:s,dataFormat:i,dilations:o,dimRoundingMode:l});return f?Me(S,[S.shape[1],S.shape[2],S.shape[3]]):S}}),dc=we({conv1d_:function(r,e,t,s,i="NWC",o=1,l){const c=j(r,"x","conv1d"),p=j(e,"filter","conv1d");let d=c,f=!1;2===c.rank&&(f=!0,d=Me(c,[1,c.shape[0],c.shape[1]])),F(3===d.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${d.rank}.`),F(3===p.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${p.rank}.`),null!=l&&F(Bt(s),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${s}.`),F(d.shape[2]===p.shape[1],()=>`Error in conv1d: depth of input (${d.shape[2]}) must match input depth for filter ${p.shape[1]}.`),F(ts(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),F("NWC"===i,()=>`Error in conv1d: got dataFormat of ${i} but only NWC is currently supported.`);const m=Me(p,[1,p.shape[0],p.shape[1],p.shape[2]]),y=Me(d,[d.shape[0],1,d.shape[1],d.shape[2]]),v=Wa(y,m,[1,t],s,"NHWC",[1,o],l);return Me(v,f?[v.shape[2],v.shape[3]]:[v.shape[0],v.shape[2],v.shape[3]])}}),Xh=we({conv2DBackpropInput_:function(r,e,t,s,i,o="NHWC",l){F(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let c=r,p=e,d=!1;3===e.rank&&(d=!0,p=Me(e,[1,e.shape[0],e.shape[1],e.shape[2]]),c=[1,r[0],r[1],r[2]]),F(4===c.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${c.length}.`),F(4===p.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`),F(4===t.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const f="NHWC"===o?c[3]:c[1],m="NHWC"===o?p.shape[3]:p.shape[1];F(f===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${t.shape[2]}.`),F(m===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${t.shape[3]}.`),null!=l&&F(Bt(i),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${l} but got pad ${i}.`);const S=be.runKernel(Zc,{dy:p,filter:t},{strides:s,pad:i,dataFormat:o,dimRoundingMode:l,inputShape:c});return d?Me(S,[S.shape[1],S.shape[2],S.shape[3]]):S}}),eu=we({conv2dTranspose_:function(r,e,t,s,i,o){const l=j(r,"x","conv2dTranspose"),c=j(e,"filter","conv2dTranspose");return Xh(t,l,c,s,i,"NHWC",o)}}),qf=we({conv3d_:function(r,e,t,s,i="NDHWC",o=[1,1,1]){const l=j(r,"x","conv3d"),c=j(e,"filter","conv3d");let p=l,d=!1;4===l.rank&&(d=!0,p=Me(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),F(5===p.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${p.rank}.`),F(5===c.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${c.rank}.`),F(p.shape[4]===c.shape[3],()=>`Error in conv3d: depth of input (${p.shape[4]}) must match input depth for filter ${c.shape[3]}.`),F(ts(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),F("NDHWC"===i,()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`);const y=be.runKernel(Jc,{x:p,filter:c},{strides:t,pad:s,dataFormat:i,dilations:o});return d?Me(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),Lg=we({conv3DBackpropInput_:function(r,e,t,s,i){F(r.length===e.rank,()=>`Length of inShape (${r.length}) and rank of dy (${e.rank}) must match`);let o=r,l=e,c=!1;4===e.rank&&(c=!0,l=Me(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,r[0],r[1],r[2],r[3]]);const p=o[4],d=l.shape[4];F(5===o.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),F(5===l.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${l.rank}`),F(5===t.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),F(p===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${t.shape[3]}.`),F(d===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${t.shape[4]}.`);const y=be.runKernel(Bd,{dy:l,filter:t},{pad:i,strides:s,inputShape:o});return c?Me(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),Xf=we({conv3dTranspose_:function(r,e,t,s,i){const o=j(r,"x","conv3dTranspose"),l=j(e,"filter","conv3dTranspose");return Lg(t,o,l,s,i)}}),Kh=we({cos_:function(r){const e={x:j(r,"x","cos")};return be.runKernel(Ru,e)}}),_p=we({cosh_:function(r){const e={x:j(r,"x","cosh")};return be.runKernel(Lu,e)}}),el=we({cumsum_:function(r,e=0,t=!1,s=!1){const i={x:j(r,"x","cumsum")};return be.runKernel(Qc,i,{axis:e,exclusive:t,reverse:s})}}),tl=we({denseBincount_:function(r,e,t,s=!1){const i=j(r,"x","denseBincount"),o=j(e,"weights","denseBincount");return F("int32"===i.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${i.dtype}`),F(i.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${i.rank}.`),F(t>=0,()=>`size must be non-negative, but got ${t}.`),F(o.size===i.size||0===o.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${i.shape}, weights shape: ${o.shape}.`),be.runKernel(Vd,{x:i,weights:o},{size:t,binaryOutput:s})}}),tu=we({depthToSpace_:function(r,e,t="NHWC"){const s=j(r,"x","depthToSpace"),i="NHWC"===t?s.shape[1]:s.shape[2],o="NHWC"===t?s.shape[2]:s.shape[3],l="NHWC"===t?s.shape[3]:s.shape[1];return F(i*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${e}  for depthToSpace with input shape\n    ${s.shape}`),F(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${o} and ${e} for depthToSpace with input shape\n        ${s.shape}`),F(l%(e*e)==0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${l} for depthToSpace with input shape ${s.shape}`),be.runKernel(Wd,{x:s},{blockSize:e,dataFormat:t})}}),fi=we({depthwiseConv2d_:function(r,e,t,s,i="NHWC",o=[1,1],l){const c=j(r,"x","depthwiseConv2d"),p=j(e,"filter","depthwiseConv2d");let d=c,f=!1;3===c.rank&&(f=!0,d=Me(c,[1,c.shape[0],c.shape[1],c.shape[2]])),F(4===d.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`),F(4===p.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`),F(d.shape[3]===p.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),null!=l&&F(Bt(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${s}.`);const v=be.runKernel(eh,{x:d,filter:p},{strides:t,pad:s,dataFormat:i,dilations:o,dimRoundingMode:l});return f?Me(v,[v.shape[1],v.shape[2],v.shape[3]]):v}}),Yh=we({diag_:function(r){const e={x:j(r,"x","diag")};return be.runKernel(Du,e)}}),Zh=we({dilation2d_:function(r,e,t,s,i=[1,1],o="NHWC"){const l=j(r,"x","dilation2d"),c=j(e,"filter","dilation2d");F(3===l.rank||4===l.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${l.rank}.`),F(3===c.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${c.rank}.`),F("NHWC"===o,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let p=l,d=!1;3===l.rank&&(p=Me(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=!0);const y=be.runKernel(ka,{x:p,filter:c},{strides:t,pad:s,dilations:i});return d?Me(y,[y.shape[1],y.shape[2],y.shape[3]]):y}}),$s=we({equal_:function(r,e){let t=j(r,"a","equal","string_or_numeric"),s=j(e,"b","equal","string_or_numeric");return[t,s]=Sr(t,s),An(t.shape,s.shape),be.runKernel(ds,{a:t,b:s})}}),fs=we({where_:function(r,e,t){const s=j(e,"a","where"),i=j(t,"b","where"),o=j(r,"condition","where","bool"),l=An(An(o.shape,s.shape),i.shape),c={condition:_i(o,l),t:_i(s,l),e:_i(i,l)};return be.runKernel(lo,c)}}),Jh=we({divNoNan_:function(r,e){let t=j(r,"a","div"),s=j(e,"b","div");[t,s]=Sr(t,s);const i=an(t,s),o=Kn(i),l=$s(s,o);return fs(l,o,i)}}),Kf=we({dot_:function(r,e){const t=j(r,"t1","dot"),s=j(e,"t2","dot");F(!(1!==t.rank&&2!==t.rank||1!==s.rank&&2!==s.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const i=1===t.rank?t.size:t.shape[1],o=1===s.rank?s.size:s.shape[0];if(F(i===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${o}.`),1===t.rank&&1===s.rank){const l=Me(t,[1,-1]),c=Me(s,[-1,1]),p=Fn(l,c);return Me(p,[])}if(1===t.rank&&2===s.rank){const l=Me(t,[1,-1]),c=Me(s,[s.shape[0],s.shape[1]]),p=Fn(l,c);return Me(p,[p.size])}if(2===t.rank&&1===s.rank){const l=Me(s,[-1,1]),c=Fn(t,l);return Me(c,[c.size])}{const l=Me(s,[s.shape[0],s.shape[1]]);return Fn(t,l)}}}),ki=we({einsum_:function(r,...e){const t=e.map((i,o)=>j(i,`tensors${o}`,"einsum"));return be.runKernel(th,t,{equation:r})}}),yo=we({elu_:function(r){const e={x:j(r,"x","elu")};return be.runKernel(Fu,e)}}),kp=we({erf_:function(r){let e=j(r,"x","erf");return F("int32"===e.dtype||"float32"===e.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===e.dtype&&(e=Rt(e,"float32")),be.runKernel(nh,{x:e})}}),Qs=we({exp_:function(r){const e={x:j(r,"x","exp")};return be.runKernel(so,e)}}),Is=we({expandDims_:function(r,e=0){const t=j(r,"x","expandDims","string_or_numeric");return F(e<=t.rank,()=>"Axis must be <= rank of the tensor"),be.runKernel($l,{input:t},{dim:e})}}),Ep=we({expm1_:function(r){const e={x:j(r,"x","expm1")};return be.runKernel(No,e)}}),mi=we({tile_:function(r,e){const t=j(r,"x","tile","string_or_numeric");return F(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`),be.runKernel(zi,{x:t},{reps:e})}}),Ip=we({eye_:function(r,e,t,s="float32"){null==e&&(e=r);const i=Pn([r,e],s),o=r<=e?r:e;for(let c=0;c<o;++c)i.set(1,c,c);const l=Me(i.toTensor(),[r,e]);if(null==t)return l;if(1===t.length)return mi(Is(l,0),[t[0],1,1]);if(2===t.length)return mi(Is(Is(l,0),0),[t[0],t[1],1,1]);if(3===t.length)return mi(Is(Is(Is(l,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}}),nu=we({floor_:function(r){const e={x:j(r,"x","floor")};return be.runKernel(Ol,e)}}),ru=we({gather_:function(r,e,t=0,s=0){const i={x:j(r,"x","gather"),indices:j(e,"indices","gather","int32")};return be.runKernel(Ea,i,{axis:t,batchDims:s})}}),ms=we({greater_:function(r,e){let t=j(r,"a","greater","string_or_numeric"),s=j(e,"b","greater","string_or_numeric");return[t,s]=Sr(t,s),An(t.shape,s.shape),be.runKernel(jd,{a:t,b:s})}}),ca=we({greaterEqual_:function(r,e){let t=j(r,"a","greaterEqual","string_or_numeric"),s=j(e,"b","greaterEqual","string_or_numeric");return[t,s]=Sr(t,s),An(t.shape,s.shape),be.runKernel(Ao,{a:t,b:s})}}),pc=we({imag_:function(r){const e={input:j(r,"input","imag")};return be.runKernel(mf,e)}}),Yf=we({isFinite_:function(r){const e={x:j(r,"x","isFinite")};return be.runKernel(oh,e)}}),Qh=we({isInf_:function(r){const e={x:j(r,"x","isInf")};return be.runKernel(lh,e)}}),Zf=we({isNaN_:function(r){const e={x:j(r,"x","isNaN")};return be.runKernel(uh,e)}}),su=we({leakyRelu_:function(r,e=.2){const t={x:j(r,"x","leakyRelu")};return be.runKernel(qd,t,{alpha:e})}}),ed=we({less_:function(r,e){let t=j(r,"a","less","string_or_numeric"),s=j(e,"b","less","string_or_numeric");return[t,s]=Sr(t,s),An(t.shape,s.shape),be.runKernel(Xd,{a:t,b:s})}}),Ga=we({lessEqual_:function(r,e){let t=j(r,"a","lessEqual","string_or_numeric"),s=j(e,"b","lessEqual","string_or_numeric");return[t,s]=Sr(t,s),An(t.shape,s.shape),be.runKernel(Kd,{a:t,b:s})}});function Jf(r,e,t){if(t<=0)throw new Error("The number of values should be positive.");return be.runKernel(gf,{},{start:r,stop:e,num:t})}const Qf=we({localResponseNormalization_:function(r,e=5,t=1,s=1,i=.5){const o=j(r,"x","localResponseNormalization");F(4===o.rank||3===o.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${o.rank}.`),F(Bt(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let l=o,c=!1;3===o.rank&&(c=!0,l=Me(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const f=be.runKernel(Zd,{x:l},{depthRadius:e,bias:t,alpha:s,beta:i});return c?Me(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),ns=we({log_:function(r){const e={x:j(r,"x","log")};return be.runKernel(ch,e)}}),nl=we({log1p_:function(r){const e={x:j(r,"x","log1p")};return be.runKernel(hh,e)}}),Er=we({neg_:function(r){const e={x:j(r,"x","neg")};return be.runKernel(Pu,e)}}),fc=we({softplus_:function(r){const e={x:j(r,"x","softplus")};return be.runKernel(ta,e)}}),O0=we({logSigmoid_:function(r){const e=j(r,"x","logSigmoid");return po(t=>({value:Er(fc(Er(t))),gradFunc:s=>Se(s,ua(Er(t)))}))(e)}}),ha=we({max_:function(r,e=null,t=!1){const s={x:j(r,"x","max")};return be.runKernel(Jd,s,{reductionIndices:e,keepDims:t})}}),Qt=we({sum_:function(r,e=null,t=!1){let s=j(r,"x","sum");return"bool"===s.dtype&&(s=Rt(s,"int32")),be.runKernel(rp,{x:s},{axis:e,keepDims:t})}}),em=we({logSoftmax_:function(r,e=-1){const t=j(r,"logits","logSoftmax");if(-1===e&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return po((s,i)=>{const o=ha(s,e,!0),l=Yt(s,o),c=Yt(Rt(l,"float32"),ns(Qt(Qs(l),e,!0)));return i([c]),{value:c,gradFunc:(p,d)=>{const[f]=d,m=Qs(f);return Yt(p,Se(Qt(p,e,!0),m))}}})(t)}});function Dg(r,e){for(let t=0;t<r.length;++t)if(r[r.length-t-1]!==e-1-t)return!1;return!0}function tm(r,e,t){const s=r.length+e.length,i=[];let o=0,l=0;for(let c=0;c<s;c++)-1===t.indexOf(c)?i.push(r[o++]):i.push(e[l++]);return i}function gs(r,e){const t=[],s=r.length;for(let i=0;i<s;i++)-1===e.indexOf(i)&&t.push(r[i]);return[t,e.map(i=>r[i])]}function br(r,e){return tm(r,e.map(t=>1),e)}function Cs(r,e,t){F(Dg(e,t),()=>`${r} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function In(r,e){if(Dg(r,e))return null;const t=[];for(let s=0;s<e;++s)-1===r.indexOf(s)&&t.push(s);return r.forEach(s=>t.push(s)),t}function rl(r){return r.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Xr(r,e){const t=[];for(let s=e-r;s<e;++s)t.push(s);return t}const td=we({logSumExp_:function(r,e=null,t=!1){const s=j(r,"x","logSumExp"),i=Dn(e,s.shape),o=ha(s,i,!0),l=Yt(s,o),c=Qs(l),p=Qt(c,i),d=ns(p),f=vt(Me(o,d.shape),d);if(t){const m=br(f.shape,i);return Me(f,m)}return f}}),gi=we({logicalAnd_:function(r,e){const t=j(r,"a","logicalAnd","bool"),s=j(e,"b","logicalAnd","bool");return An(t.shape,s.shape),be.runKernel(Yd,{a:t,b:s})}}),sl=we({logicalNot_:function(r){const e={x:j(r,"x","logicalNot","bool")};return be.runKernel(dh,e)}}),Cp=we({logicalOr_:function(r,e){const t=j(r,"a","logicalOr","bool"),s=j(e,"b","logicalOr","bool");return An(t.shape,s.shape),be.runKernel(io,{a:t,b:s})}}),Fg=we({logicalXor_:function(r,e){const t=j(r,"a","logicalXor","bool"),s=j(e,"b","logicalXor","bool");return An(t.shape,s.shape),gi(Cp(r,e),sl(gi(r,e)))}}),il=we({maxPool_:function(r,e,t,s,i){const o=j(r,"x","maxPool");let l=o,c=!1;3===o.rank&&(c=!0,l=Me(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(4===l.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${l.rank}.`),F(ts(t,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '1'`),null!=i&&F(Bt(s),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const f=be.runKernel(Qd,{x:l},{filterSize:e,strides:t,pad:s,dimRoundingMode:i});return c?Me(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Np=we({maxPool3d_:function(r,e=[1,1,1],t,s,i,o="NDHWC"){const l=j(r,"x","maxPool3d");let c=l,p=!1;4===l.rank&&(p=!0,c=Me(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),F(5===c.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${c.rank}.`),F("NDHWC"===o,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),null!=i&&F(Bt(s),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const m=be.runKernel(ep,{x:c},{filterSize:e,strides:t,pad:s,dimRoundingMode:i,dataFormat:o});return p?Me(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),Ha=we({maxPoolWithArgmax_:function(r,e,t,s,i=!1){const o={x:j(r,"x","maxPoolWithArgmax")},c=be.runKernel(fh,o,{filterSize:e,strides:t,pad:s,includeBatchInIndex:i});return{result:c[0],indexes:c[1]}}}),Ir=we({mean_:function(r,e=null,t=!1){const s={x:j(r,"x","mean")};return be.runKernel(Ji,s,{axis:e,keepDims:t})}});function Kr(r,e="float32"){if("complex64"===e){const s=Kr(r,"float32"),i=Kr(r,"float32");return Ks(s,i)}const t=hs(ke(r),e);return be.makeTensor(t,r,e)}function $r(r,e="float32"){if("complex64"===e){const s=$r(r,"float32"),i=Kr(r,"float32");return Ks(s,i)}const t=Il(ke(r),e);return be.makeTensor(t,r,e)}function zb(r,e,{indexing:t="xy"}={}){if("xy"!==t&&"ij"!==t)throw new TypeError(`${t} is not a valid third argument to meshgrid`);if(void 0===r)return[];let s=j(r,"x","meshgrid",r instanceof Un?r.dtype:"float32");if(void 0===e)return[s];let i=j(e,"y","meshgrid",e instanceof Un?e.dtype:"float32");const o=ke(s.shape),l=ke(i.shape);return"xy"===t?(s=Me(s,[1,-1]),i=Me(i,[-1,1]),[Fn($r([l,1],s.dtype),s),Fn(i,$r([1,o],i.dtype))]):(s=Me(s,[-1,1]),i=Me(i,[1,-1]),[Fn(s,$r([1,l],s.dtype)),Fn($r([o,1],i.dtype),i)])}const xo=we({min_:function(r,e=null,t=!1){const s={x:j(r,"x","min")};return be.runKernel(Jr,s,{axis:e,keepDims:t})}}),ja=we({minimum_:function(r,e){let t=j(r,"a","minimum"),s=j(e,"b","minimum");return[t,s]=Sr(t,s),"bool"===t.dtype&&(t=Rt(t,"int32"),s=Rt(s,"int32")),An(t.shape,s.shape),be.runKernel(Ro,{a:t,b:s})}}),al=we({mirrorPad_:function(r,e,t){F("reflect"===t||"symmetric"===t,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=j(r,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");F(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const i="reflect"===t?1:0;for(let c=0;c<s.rank;c++)F(2===e[c].length,()=>"Invalid number of paddings. Must be length of 2 each."),F(e[c][0]>=0&&e[c][0]<=s.shape[c]-i&&e[c][1]>=0&&e[c][1]<=s.shape[c]-i,()=>`Padding in dimension ${c} cannot be greater than or equal to ${s.shape[c]-i} or less than 0 for input of shape ${s.shape}`);return be.runKernel(Ia,{x:s},{paddings:e,mode:t})}}),nd=we({mod_:function(r,e){let t=j(r,"a","mod"),s=j(e,"b","mod");return[t,s]=Sr(t,s),be.runKernel(ao,{a:t,b:s})}}),ol=we({moments_:function(r,e=null,t=!1){const s=Dn(e,(r=j(r,"x","moments")).shape),i=Ir(r,s,t);let o=i.shape;t||(o=br(i.shape,s));const l=hr(Yt(Rt(r,"float32"),Me(i,o)));return{mean:i,variance:Ir(l,s,t)}}}),mc=we({multiRNNCell_:function(r,e,t,s){const i=j(e,"data","multiRNNCell"),o=co(t,"c","multiRNNCell"),l=co(s,"h","multiRNNCell");let c=i;const p=[];for(let m=0;m<r.length;m++){const y=r[m](c,o[m],l[m]);p.push(y[0]),p.push(y[1]),c=y[1]}const d=[],f=[];for(let m=0;m<p.length;m+=2)d.push(p[m]),f.push(p[m+1]);return[d,f]}}),iu=we({multinomial_:function(r,e,t,s=!1){const i=j(r,"logits","multinomial"),o=i.size,l=i.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(l>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${l}`);t=t||Math.random();const c={logits:1===l?Me(i,[1,-1]):i},d=be.runKernel(Ws,c,{numSamples:e,seed:t,normalized:s});return 1===l?Me(d,[d.size]):d}}),da=we({notEqual_:function(r,e){let t=j(r,"a","notEqual","string_or_numeric"),s=j(e,"b","notEqual","string_or_numeric");return[t,s]=Sr(t,s),An(t.shape,s.shape),be.runKernel(Lo,{a:t,b:s})}}),Os=we({onesLike_:function(r){const e={x:j(r,"x","onesLike")};return be.runKernel(gh,e)}}),rd=we({outerProduct_:function(r,e){const t=j(r,"v1","outerProduct"),s=j(e,"v2","outerProduct");F(1===t.rank&&1===s.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${t.rank} and ${s.rank}.`);const i=Me(t,[-1,1]),o=Me(s,[1,-1]);return Fn(i,o)}}),Ei=we({pad_:function(r,e,t=0){const s=j(r,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");return be.runKernel(oo,{x:s},{paddings:e,constantValue:t})}}),sd=we({pad1d_:function(r,e,t=0){return F(2===e.length,()=>"Invalid number of paddings. Must be length of 2."),Ei(r,[e],t)}}),$g=we({pad2d_:function(r,e,t=0){return F(2===e.length&&2===e[0].length&&2===e[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ei(r,e,t)}}),P0=we({pad3d_:function(r,e,t=0){return F(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ei(r,e,t)}}),z0=we({pad4d_:function(r,e,t=0){return F(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),Ei(r,e,t)}}),gc=we({spaceToBatchND_:function(r,e,t){const s=j(r,"x","spaceToBatchND");return F(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),F(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),F(s.shape.reduce((l,c,p)=>p>0&&p<=e.length?l&&(c+t[p-1][0]+t[p-1][1])%e[p-1]==0:l,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`),be.runKernel(wh,{x:s},{blockShape:e,paddings:t})}}),Ap=we({pool_:function(r,e,t,s,i,o){null==i&&(i=[1,1]),null==o&&(o=1),0===s&&(s="valid");const l=j(r,"x","maxPool");let c=l,p=!1;3===l.rank&&(p=!0,c=Me(l,[1,l.shape[0],l.shape[1],l.shape[2]])),F(ts(o,i),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${i}'`);const d=hi(c.shape,e,o,i,s),f=[d.dilationHeight,d.dilationWidth];let m;m="same"===s?function(R,P){const U=R.map((G,pe)=>G+(G-1)*(P[pe]-1)).map(G=>G-1),W=U.map(G=>Math.floor(G/2)),se=U.map((G,pe)=>G-W[pe]);return U.map((G,pe)=>[W[pe],se[pe]])}([d.filterHeight,d.filterWidth],f):[[0,0],[0,0]];const y=1===f[0]&&1===f[1],[v,S]=function(R,P,U){const W=U.map(ye=>ye[0]),se=U.map(ye=>ye[1]),G=R.concat(W,se),pe=P.map((ye,Ee)=>(ye-G[Ee]%ye)%ye),de=se.map((ye,Ee)=>ye+pe[Ee]);return[P.map((ye,Ee)=>[W[Ee],de[Ee]]),P.map((ye,Ee)=>[0,pe[Ee]])]}([d.inHeight,d.inWidth],f,m),_=y?s:"valid",k=y?c:gc(c,f,v),I=("avg"===t?()=>wp(k,e,o,_):()=>il(k,e,o,_))(),A=y?I:hc(I,f,S);return p?Me(A,[A.shape[1],A.shape[2],A.shape[3]]):A}}),yc=we({prelu_:function(r,e){const t={x:j(r,"x","prelu"),alpha:j(e,"alpha","prelu")};return be.runKernel(Br,t)}}),id=we({prod_:function(r,e=null,t=!1){let s=j(r,"x","prod");return"bool"===s.dtype&&(s=Rt(s,"int32")),be.runKernel(xh,{x:s},{axis:e,keepDims:t})}}),Og=we({rand_:function(r,e,t){const s=ke(r);let i=null;if(null==t||"float32"===t)i=new Float32Array(s);else if("int32"===t)i=new Int32Array(s);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);i=new Uint8Array(s)}for(let o=0;o<s;o++)i[o]=e();return be.makeTensor(i,r,t)}});var au=X(36377);class Rp{constructor(e,t,s,i,o){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=i,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const l=o||Math.random();this.random=au.alea(l.toString())}nextValue(){if(!isNaN(this.nextVal)){const i=this.nextVal;return this.nextVal=NaN,i}let e,t,s=!1;for(;!s;){let i,o,l;do{i=2*this.random()-1,o=2*this.random()-1,l=i*i+o*o}while(l>=1||0===l);const c=Math.sqrt(-2*Math.log(l)/l);e=this.mean+this.stdDev*i*c,t=this.mean+this.stdDev*o*c,this.truncated&&!this.isValidTruncated(e)||(s=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Pg{constructor(e,t,s,i){this.alpha=e,this.beta=1/t,this.dtype=s;const o=i||Math.random();this.randu=au.alea(o.toString()),this.randn=new Rp(0,1,s,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,s,i,o,l;for(;;){do{i=this.randn.nextValue(),l=1+this.c*i}while(l<=0);if(l*=l*l,e=i*i,t=1-.331*e*e,s=.5*e+this.d*(1-l+Math.log(l)),o=this.randu(),o<t||Math.log(o)<s)break}return l*=1/this.beta*this.d,this.alpha<1&&(l*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(l)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class zg{constructor(e=0,t=1,s,i){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=s,null==i&&(i=Math.random()),"number"==typeof i&&(i=i.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=au.alea(i)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Bb=we({randomGamma_:function(r,e,t=1,s="float32",i){if(null==t&&(t=1),null==s&&(s="float32"),"float32"!==s&&"int32"!==s)throw new Error(`Unsupported data type ${s}`);const o=new Pg(e,t,s,i),l=Pn(r,s);for(let c=0;c<l.values.length;c++)l.values[c]=o.nextValue();return l.toTensor()}}),Tr=we({randomNormal_:function(r,e=0,t=1,s,i){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const o=new Rp(e,t,s,!1,i),l=Pn(r,s);for(let c=0;c<l.values.length;c++)l.values[c]=o.nextValue();return l.toTensor()}}),Ii=we({randomUniform_:function(r,e=0,t=1,s="float32",i){const o=Pn(r,s),l=new zg(e,t,null,i);for(let c=0;c<o.values.length;c++)o.values[c]=l.nextValue();return o.toTensor()}});function xc(r,e,t=1,s="float32"){if(0===t)throw new Error("Cannot have a step of zero");return be.runKernel(sr,{},{start:r,stop:e,step:t,dtype:s})}const bc=we({real_:function(r){const e={input:j(r,"input","real")};return be.runKernel(Si,e)}}),nm=we({reciprocal_:function(r){const e={x:j(r,"x","reciprocal")};return be.runKernel(Bu,e)}}),rs=we({relu_:function(r){const e={x:j(r,"x","relu")};return be.runKernel(Pl,e)}}),bo=we({relu6_:function(r){const e={x:j(r,"x","relu6")};return be.runKernel(Ti,e)}}),ei=we({reverse_:function(r,e){const t={x:j(r,"x","reverse")};return be.runKernel(Do,t,{dims:e})}}),Lp=we({reverse1d_:function(r){const e=j(r,"x","reverse");return F(1===e.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${e.rank}.`),ei(e,0)}}),B0=we({reverse2d_:function(r,e){const t=j(r,"x","reverse");return F(2===t.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${t.rank}.`),ei(t,e)}}),ad=we({reverse3d_:function(r,e){const t=j(r,"x","reverse");return F(3===t.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${t.rank}.`),ei(t,e)}}),vc=we({reverse4d_:function(r,e){const t=j(r,"x","reverse");return F(4===t.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${t.rank}.`),ei(t,e)}}),ou=we({round_:function(r){const e={x:j(r,"x","round")};return be.runKernel(zl,e)}}),lu=we({rsqrt_:function(r){const e={x:j(r,"x","rsqrt")};return be.runKernel(Ca,e)}}),rm=we({selu_:function(r){const e={x:j(r,"x","selu")};return be.runKernel(Pi,e)}}),ll=we({separableConv2d_:function(r,e,t,s,i,o=[1,1],l="NHWC"){const c=j(r,"x","separableConv2d"),p=j(e,"depthwiseFilter","separableConv2d"),d=j(t,"pointwiseFilter","separableConv2d");let f=c,m=!1;if(3===c.rank&&(m=!0,f=Me(c,[1,c.shape[0],c.shape[1],c.shape[2]])),"NCHW"===l)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");F(4===f.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${f.rank}.`),F(4===p.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`),F(4===d.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`),F(1===d.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${d.shape[0]}.`),F(1===d.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${d.shape[1]}.`);const y=p.shape[2],v=p.shape[3];F(d.shape[2]===y*v,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*v}, but got ${d.shape[2]}.`);const S=fi(f,p,s,i,l,o),_=Wa(S,d,1,"valid",l);return m?Me(_,[_.shape[1],_.shape[2],_.shape[3]]):_}}),sm=async function(r,e){const t=j(r,"x","setdiff1d"),s=j(e,"y","setdiff1d");F(t.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${t.dtype}) and y (${s.dtype}).`),F(1===t.rank,()=>`x should be 1D tensor, but got x (${t.shape}).`),F(1===s.rank,()=>`y should be 1D tensor, but got y (${s.shape}).`);const i=await t.data(),o=await s.data(),l=new Set(o);let c=0;for(let f=0;f<i.length;f++)l.has(i[f])||c++;const p=new Pt([c],t.dtype),d=new Pt([c],"int32");for(let f=0,m=0;f<i.length;f++)l.has(i[f])||(p.values[m]=i[f],d.values[m]=f,m++);return[p.toTensor(),d.toTensor()]},im=we({sign_:function(r){const e={x:j(r,"x","sign")};return be.runKernel($o,e)}}),ys=we({sin_:function(r){const e={x:j(r,"x","sin")};return be.runKernel(ea,e)}}),Ci=we({sinh_:function(r){const e={x:j(r,"x","sinh")};return be.runKernel(uo,e)}}),Ni=we({slice1d_:function(r,e,t){const s=j(r,"x","slice1d");return F(1===s.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Gn(s,[e],[t])}}),Bg=we({slice2d_:function(r,e,t){const s=j(r,"x","slice2d");return F(2===s.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Gn(s,e,t)}}),am=we({slice3d_:function(r,e,t){const s=j(r,"x","slice3d");return F(3===s.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Gn(s,e,t)}}),ul=we({slice4d_:function(r,e,t){const s=j(r,"x","slice4d");return F(4===s.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Gn(s,e,t)}}),od=we({softmax_:function(r,e=-1){const t=j(r,"logits","softmax","float32");if(-1===e&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);return be.runKernel(Vu,{logits:t},{dim:e})}}),ld=we({fft_:function(r){return F("complex64"===r.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${r.dtype}.`),be.runKernel(Gd,{input:r})}}),wc=we({ifft_:function(r){return F("complex64"===r.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${r.dtype}.`),be.runKernel(ff,{input:r})}}),Dp=we({irfft_:function(r){const e=r.shape[r.shape.length-1],t=r.size/e;let s;if(e<=2){const i=Me(r,[t,e]);s=wc(i)}else{const i=[t,2*(e-1)],o=Me(bc(r),[t,e]),l=Me(pc(r),[t,e]),c=ei(Gn(o,[0,1],[t,e-2]),1),p=Se(ei(Gn(l,[0,1],[t,e-2]),1),ln(-1)),d=dr([o,c],1),f=dr([l,p],1),m=Me(Ks(d,f),[i[0],i[1]]);s=wc(m)}if(s=bc(s),3===r.rank&&0!==r.shape[0]){const i=s,o=r.shape[0];s=Me(s,[o,s.shape[0]/o,s.shape[1]]),i.dispose()}return s}}),xs=we({split_:function(r,e,t=0){const s={x:j(r,"x","split")};return be.runKernel(Uu,s,{numOrSizeSplits:e,axis:t})}}),pa=we({rfft_:function(r,e){F("float32"===r.dtype,()=>`The dtype for rfft() must be real value but got ${r.dtype}`);let t=r.shape[r.shape.length-1];const s=r.size/t;let i;if(null!=e&&e<t){const S=r.shape.map(k=>0),_=r.shape.map(k=>k);_[r.shape.length-1]=e,i=Gn(r,S,_),t=e}else if(null!=e&&e>t){const S=r.shape.map(_=>_);S[r.shape.length-1]=e-t,i=dr([r,Kr(S)],r.shape.length-1),t=e}else i=r;const o=Kn(i),l=Me(Ks(i,o),[s,t]),c=ld(l),p=Math.floor(t/2)+1,d=bc(c),f=pc(c),m=xs(d,[p,t-p],d.shape.length-1),y=xs(f,[p,t-p],f.shape.length-1),v=i.shape.slice();return v[i.shape.length-1]=p,Me(Ks(m[0],y[0]),v)}}),Ai=we({squaredDifference_:function(r,e){let t=j(r,"a","squaredDifference"),s=j(e,"b","squaredDifference");return[t,s]=Sr(t,s),An(t.shape,s.shape),be.runKernel(Ul,{a:t,b:s},{})}}),fa=we({squeeze_:function(r,e){const t=j(r,"x","squeeze");return Me(t,Yi(t.shape,e).newShape)}}),yi=we({stack_:function(r,e=0){const t=co(r,"tensors","stack","string_or_numeric");return F(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&F(e<=t[0].rank,()=>"Axis must be <= rank of the tensor"),be.runKernel(zr,t,{axis:e})}}),Sc=we({step_:function(r,e=0){const t={x:j(r,"x","step")};return be.runKernel(qu,t,{alpha:e})}}),om=we({stridedSlice_:function(r,e,t,s,i=0,o=0,l=0,c=0,p=0){const d={x:j(r,"x","stridedSlice","string_or_numeric")};return be.runKernel(Th,d,{begin:e,end:t,strides:s,beginMask:i,endMask:o,ellipsisMask:l,newAxisMask:c,shrinkAxisMask:p})}}),Fp=we({tan_:function(r){const e={x:j(r,"x","tan")};return be.runKernel(Mh,e)}});function bs(r,e){Ue(r);const t=Vi(r,e);if(1!==t.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ia(r,null,t,e)}function cl(r,e,t){if(Ue(r),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const s=Vi(r,t);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ia(r,e,s,t)}function U0(r,e,t){if(Ue(r),null!=e&&4!==e.length)throw new Error("tensor4d() requires shape to have four numbers");const s=Vi(r,t);if(4!==s.length&&1!==s.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ia(r,e,s,t)}function $p(r,e,t){if(Ue(r),null!=e&&5!==e.length)throw new Error("tensor5d() requires shape to have five numbers");const s=Vi(r,t);if(5!==s.length&&1!==s.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return ia(r,e,s,t)}function Ug(r,e,t){if(Ue(r),null!=e&&6!==e.length)throw new Error("tensor6d() requires shape to have six numbers");const s=Vi(r,t);if(6!==s.length&&1!==s.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===s.length&&null==e)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return ia(r,e=e||s,s,t)}const lm=we({topk_:function(r,e=1,t=!0){const s=j(r,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${e}`);const o={x:s},l={k:e,sorted:t},[c,p]=be.runKernel(Hu,o,l);return{values:c,indices:p}}}),ud=we({truncatedNormal_:function(r,e=0,t=1,s,i){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const o=new Rp(e,t,s,!0,i),l=Pn(r,s);for(let c=0;c<l.values.length;c++)l.values[c]=o.nextValue();return l.toTensor()}}),Op=we({unique_:function(r,e=0){const t=j(r,"x","unique","string_or_numeric");F(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},i={axis:e},[o,l]=be.runKernel(sp,s,i);return{values:o,indices:l}}}),Pp=we({unsortedSegmentSum_:function(r,e,t){const s=j(r,"x","unsortedSegmentSum"),i=j(e,"segmentIds","unsortedSegmentSum","int32");return F(Bt(t),()=>"numSegments must be of dtype int"),be.runKernel(ju,{x:s,segmentIds:i},{numSegments:t})}}),Ri=we({unstack_:function(r,e=0){const t=j(r,"x","unstack","string_or_numeric");return F(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`),be.runKernel(La,{value:t},{axis:e})}});function um(r,e=!0,t,s){return be.makeVariable(r,e,t,s)}function cd(r,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const s=Pn(r,"int32"),i=Pn([t.length,r.length],"int32");for(let o=0;o<t.length;o++){const l=s.indexToLoc(t[o]);i.values.set(l,o*r.length)}return i.toTensor()}const Tc=async function(r){const e=j(r,"condition","whereAsync","bool"),t=await e.data(),s=cd(e.shape,t);return r!==e&&e.dispose(),s},V0=async function(r,e,t){const s=j(r,"tensor","boolMask"),i=j(e,"mask","boolMask","bool"),o=null==t?0:t,l=i.rank,c=s.shape;F(l>0,()=>"mask cannot be scalar"),qe(c.slice(o,o+l),i.shape,"mask's shape must match the first K dimensions of tensor's shape,");let p=1;for(let _=o;_<o+l;_++)p*=c[_];const d=c.slice(0,o).concat([p],c.slice(o+l)),f=Me(s,d),m=Me(i,[-1]),y=await Tc(m),v=fa(y,[1]),S=ru(f,v,o);return r!==s&&s.dispose(),e!==i&&i.dispose(),v.dispose(),f.dispose(),m.dispose(),y.dispose(),S};function zp(r,e,t=null){if(0===r.rank)return qr(r);if(1!==r.rank&&null===t)return zp(Me(r,[-1]),e,t);if(1===r.rank||"number"==typeof t||Array.isArray(t)&&1===t.length){if(1===e)return Qt(qr(r),t);if(e===1/0)return ha(qr(r),t);if(e===-1/0)return xo(qr(r),t);if("euclidean"===e||2===e)return Es(Qt(Ko(qr(r),ln(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&2===t.length){if(1===e)return ha(Qt(qr(r),t[0]),t[1]-1);if(e===1/0)return ha(Qt(qr(r),t[1]),t[0]);if(e===-1/0)return xo(Qt(qr(r),t[1]),t[0]);if("fro"===e||"euclidean"===e)return Es(Qt(hr(r),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const hd=we({norm_:function(r,e="euclidean",t=null,s=!1){const i=zp(r=j(r,"x","norm"),e,t);let o=i.shape;if(s){const l=Dn(t,r.shape);o=br(i.shape,l)}return Me(i,o)}}),W0=we({movingAverage_:function(r,e,t,s,i=!0){const o=j(r,"v","movingAverage"),l=j(e,"x","movingAverage"),c=j(t,"decay","movingAverage");Go(o,l),F(He(o.shape,l.shape),()=>"Shape mismatch in v and x");const p=ln(1),d=Yt(p,c);let f=Se(Yt(l,o),d);if(i){F(null!=s,()=>"When using zeroDebias: true, step is required.");const m=j(s,"step","movingAverage");f=an(f,Yt(p,Ko(c,m)))}return vt(o,f)}}),G0=we({scatterND_:function(r,e,t){const s=j(r,"indices","scatterND","int32"),i=j(e,"updates","scatterND");return xg(i,s,t),be.runKernel(Fo,{indices:s,updates:i},{shape:t})}}),Vg=we({sparseToDense_:function(r,e,t,s=0){const i=j(r,"sparseIndices","sparseToDense","int32"),o=j(e,"sparseValues","sparseToDense"),l=j(s,"defaultValue","sparseToDense",o.dtype);return function(d,f,m,y){if("int32"!==d.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${d.dtype}.`);if(d.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${d.shape}.`);const v=d.rank>0?d.shape[0]:1,S=d.rank>1?d.shape[1]:1;if(m.length!==S)throw new Error(`outputShape has incorrect number of elements:, ${m.length}, should be: ${S}.`);if(0!==f.rank&&(1!==f.rank||f.size!==v))throw new Error(`sparseValues has incorrect shape ${f.shape}, should be [] or [${v}]`);if(f.dtype!==y.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(i,o,t,l),be.runKernel(Aa,{sparseIndices:i,sparseValues:o,defaultValue:l},{outputShape:t})}}),Wg=we({gatherND_:function(r,e){const t=j(e,"indices","gatherND","int32"),s={params:j(r,"x","gatherND","string_or_numeric"),indices:t};return be.runKernel(Hd,s)}}),Gg=we({dropout_:function(r,e,t,s){const i=j(r,"x","dropout");if(F("float32"===i.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${i.dtype} tensor instead.`),F(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),0===e)return r instanceof Un?i.clone():i;const o=function(p,d){if(null==d)return p.shape.slice();if(He(p.shape,d))return d;if(p.shape.length===d.length){const f=[];for(let m=0;m<p.shape.length;m++)f.push(null==d[m]&&null!=p.shape[m]?p.shape[m]:d[m]);return f}return d}(i,t),l=1-e,c=an(nu(vt(Ii(o,0,1,"float32",s),l)),l);return Se(i,c)}});function Hg(r){return Math.floor(Math.pow(2,Math.ceil(Math.log(r)/Math.log(2))))}function cm(r,e,t){const s=1-r%2,i=new Float32Array(r);for(let o=0;o<r;++o){const l=2*Math.PI*o/(r+s-1);i[o]=e-t*Math.cos(l)}return bs(i,"float32")}const jg=async function(r,e,t=1){const s=j(r,"predictions","inTopK"),i=j(e,"targets","inTopK");F(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),F(s.rank-1===i.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${i.rank}`),qe(s.shape.slice(0,s.shape.length-1),i.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const o=s.shape[s.shape.length-1];F(t>0&&t<=o,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${o}), but got ${t}`);const l=await s.data(),c=await i.data(),[p,d]=[l.length/o,o],f=as("bool",p);for(let m=0;m<p;m++){const y=m*d,v=l.subarray(y,y+d),S=[];for(let _=0;_<v.length;_++)S.push({value:v[_],index:_});S.sort((_,k)=>k.value-_.value),f[m]=0;for(let _=0;_<t;_++)if(S[_].index===c[m]){f[m]=1;break}}return r!==s&&s.dispose(),e!==i&&i.dispose(),cr(f,i.shape,"bool")},qg=we({conv2DBackpropFilter_:function(r,e,t,s,i,o="NHWC",l){let c=r;3===r.rank&&(c=Me(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let p=e;3===p.rank&&(p=Me(e,[1,e.shape[0],e.shape[1],e.shape[2]])),F(4===c.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${c.shape}.`),F(4===p.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`),F(4===t.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const d="NHWC"===o?c.shape[3]:c.shape[1],f="NHWC"===o?p.shape[3]:p.shape[1];return F(d===t[2],()=>`Error in conv2dDerFilter: depth of input ${d}) must match input depth in filter (${t[2]}.`),F(f===t[3],()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${t[3]}).`),null!=l&&F(Bt(i),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${l} but got pad ${i}.`),be.runKernel(Pd,{x:c,dy:p},{strides:s,pad:i,dataFormat:o,dimRoundingMode:l,filterShape:t})}});function hm(r,e,t){if(null==t||"linear"===t)return r;if("relu"===t)return Se(r,Sc(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function Mc(r,e){let t=e;const s=Dr(r.shape,e.shape);return s.length>0&&(t=Qt(t,s)),Me(t,r.shape)}function dd(r,e,t,s){if("linear"===e)return r;if("relu"===e)return rs(r);if("elu"===e)return yo(r);if("relu6"===e)return bo(r);if("prelu"===e)return yc(r,t);if("leakyrelu"===e)return su(r,s);if("sigmoid"===e)return ua(r);throw new Error(`Unknown fused activation ${e}.`)}const Bp=(r,e)=>!(r>0)||"linear"===e,dm=we({fusedConv2d_:function({x:r,filter:e,strides:t,pad:s,dataFormat:i="NHWC",dilations:o=[1,1],dimRoundingMode:l,bias:c,activation:p="linear",preluActivationWeights:d,leakyreluAlpha:f}){if(!1===Bp(be.state.gradientDepth,p=p||"linear")){let U=Wa(r,e,t,s,i,o,l);return null!=c&&(U=vt(U,c)),dd(U,p,d,f)}const m=j(r,"x","conv2d"),y=j(e,"filter","conv2d");let v=m,S=!1;3===m.rank&&(S=!0,v=Me(m,[1,m.shape[0],m.shape[1],m.shape[2]])),F(4===v.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${v.rank}.`),F(4===y.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${y.rank}.`),null!=l&&F(Bt(s),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${s}.`),F(v.shape[3]===y.shape[2],()=>`Error in conv2d: depth of input (${v.shape[3]}) must match input depth for filter ${y.shape[2]}.`),F(ts(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),F("NHWC"===i,()=>`Error in conv2d: got dataFormat of ${i} but only NHWC is currently supported.`);const _=ls(v.shape,y.shape,t,o,s,l);let k,I;null!=c&&(k=j(c,"bias","fused conv2d"),[k]=Sr(k,m),An(_.outShape,k.shape)),null!=d&&(I=j(d,"prelu weights","fused conv2d"));const A=(U,W)=>{const[se,G,pe,de]=W,ye=hm(U,pe,p);F(Va(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const Ee=[Xh(G.shape,ye,se,t,s),qg(G,ye,se.shape,t,s)];if(null!=de){const Ne=Mc(de,ye);Ee.push(Ne)}return Ee},R={x:v,filter:y,bias:k,preluActivationWeights:I},P={strides:t,pad:s,dataFormat:i,dilations:o,dimRoundingMode:l,activation:p,leakyreluAlpha:f};return null==c?po((U,W,se)=>{let G=be.runKernel(Bo,R,P);return se([W,U,G]),S&&(G=Me(G,[G.shape[1],G.shape[2],G.shape[3]])),{value:G,gradFunc:A}})(v,y):po((U,W,se,G)=>{let pe=be.runKernel(Bo,R,P);return G([W,U,pe,se]),S&&(pe=Me(pe,[pe.shape[1],pe.shape[2],pe.shape[3]])),{value:pe,gradFunc:A}})(v,y,k)}}),Xg=we({depthwiseConv2dNativeBackpropFilter_:function(r,e,t,s,i,o=[1,1],l){let c=r;3===r.rank&&(c=Me(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let p=e;return 3===p.rank&&(p=Me(e,[1,e.shape[0],e.shape[1],e.shape[2]])),be.runKernel(Ll,{x:c,dy:p},{strides:s,pad:i,dimRoundingMode:l,dilations:o,filterShape:t})}}),Kg=we({depthwiseConv2dNativeBackpropInput_:function(r,e,t,s,i,o=[1,1],l){let c=e,p=!1;3===e.rank&&(p=!0,c=Me(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const m=be.runKernel(Dl,{dy:c,filter:t},{strides:s,pad:i,dimRoundingMode:l,dilations:o,inputShape:r});return p?Me(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Yg=we({fusedDepthwiseConv2d_:function({x:r,filter:e,strides:t,pad:s,dataFormat:i="NHWC",dilations:o=[1,1],dimRoundingMode:l,bias:c,activation:p="linear",preluActivationWeights:d,leakyreluAlpha:f}){if(!1===Bp(be.state.gradientDepth,p)){let U=fi(r,e,t,s,i,o,l);return null!=c&&(U=vt(U,c)),dd(U,p,d,f)}const m=j(r,"x","depthwiseConv2d"),y=j(e,"filter","depthwiseConv2d");let v=m,S=!1;3===m.rank&&(S=!0,v=Me(m,[1,m.shape[0],m.shape[1],m.shape[2]])),F(4===v.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${v.rank}.`),F(4===y.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${y.rank}.`),F(v.shape[3]===y.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${v.shape[3]}) must match the inChannels dimension in filter ${y.shape[2]}.`),null==o&&(o=[1,1]),F(ts(t,o),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),null!=l&&F(Bt(s),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${l} but got pad ${s}.`);const _=ls(v.shape,y.shape,t,o,s,l,!0);let k,I;null!=c&&(k=j(c,"bias","fused conv2d"),[k]=Sr(k,m),An(_.outShape,k.shape)),null!=d&&(I=j(d,"prelu weights","fused depthwiseConv2d"));const A=(U,W)=>{F(Va(o),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[se,G,pe,de]=W,ye=hm(U,pe,p),Ee=Kg(G.shape,ye,se,t,s,o,l),Ne=Xg(G,ye,se.shape,t,s,o,l);return null!=de?[Ee,Ne,Mc(k,ye)]:[Ee,Ne]},R={x:v,filter:y,bias:k,preluActivationWeights:I},P={strides:t,pad:s,dataFormat:i,dilations:o,dimRoundingMode:l,activation:p,leakyreluAlpha:f};return null==c?po((U,W,se)=>{let G=be.runKernel(ap,R,P);return se([W,U,G]),S&&(G=Me(G,[G.shape[1],G.shape[2],G.shape[3]])),{value:G,gradFunc:A}})(v,y):po((U,W,se,G)=>{let pe=be.runKernel(ap,R,P);return G([W,U,pe,se]),S&&(pe=Me(pe,[pe.shape[1],pe.shape[2],pe.shape[3]])),{value:pe,gradFunc:A}})(v,y,k)}}),pm=we({fusedMatMul_:function({a:r,b:e,transposeA:t=!1,transposeB:s=!1,bias:i,activation:o="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===Bp(be.state.gradientDepth,o)){let de=Fn(r,e,t,s);return null!=i&&(de=vt(de,i)),dd(de,o,l,c)}let p=j(r,"a","fused matMul"),d=j(e,"b","fused matMul");[p,d]=Sr(p,d);const f=t?p.shape[p.rank-2]:p.shape[p.rank-1],m=s?d.shape[d.rank-1]:d.shape[d.rank-2],y=t?p.shape[p.rank-1]:p.shape[p.rank-2],v=s?d.shape[d.rank-2]:d.shape[d.rank-1],S=p.shape.slice(0,-2),_=d.shape.slice(0,-2),k=ke(S),I=ke(_);F(p.rank>=2&&d.rank>=2&&p.rank===d.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${p.rank} and ${d.rank}.`),F(He(S,_),()=>`Error in fused matMul: outer dimensions (${S}) and (${_}) of Tensors with shapes ${p.shape} and ${d.shape} must match.`),F(f===m,()=>`Error in fused matMul: inner shapes (${f}) and (${m}) of Tensors with shapes ${p.shape} and ${d.shape} and transposeA=${t} and transposeB=${s} must match.`);const A=p.shape.slice(0,-2).concat([y,v]),R=Me(p,t?[k,f,y]:[k,y,f]),P=Me(d,s?[I,v,m]:[I,m,v]);let U,W;null!=i&&(U=j(i,"bias","fused matMul"),[U]=Sr(U,p),An(A,U.shape)),null!=l&&(W=j(l,"prelu weights","fused matMul"));const se=(de,ye)=>{const[Ee,Ne,Be,je]=ye,Ye=hm(Me(de,Be.shape),Be,o);let Xe,Je;return t||s?!t&&s?(Xe=Fn(Ye,Ne,!1,!1),Je=Fn(Ye,Ee,!0,!1)):t&&!s?(Xe=Fn(Ne,Ye,!1,!0),Je=Fn(Ee,Ye,!1,!1)):(Xe=Fn(Ne,Ye,!0,!0),Je=Fn(Ye,Ee,!0,!0)):(Xe=Fn(Ye,Ne,!1,!0),Je=Fn(Ee,Ye,!0,!1)),null!=i?[Xe,Je,Mc(je,Ye)]:[Xe,Je]},G={a:R,b:P,bias:U,preluActivationWeights:W},pe={transposeA:t,transposeB:s,activation:o,leakyreluAlpha:c};return null==i?po((de,ye,Ee)=>{const Ne=be.runKernel(Vl,G,pe);return Ee([de,ye,Ne]),{value:Me(Ne,A),gradFunc:se}})(R,P):po((de,ye,Ee,Ne)=>{const Be=be.runKernel(Vl,G,pe);return Ne([de,ye,Be,Ee]),{value:Me(Be,A),gradFunc:se}})(R,P,U)}}),H0=we({hammingWindow_:function(r){return cm(r,.54,.46)}}),Zg=we({hannWindow_:function(r){return cm(r,.5,.5)}}),uu=we({frame_:function(r,e,t,s=!1,i=0){let o=0;const l=[];for(;o+e<=r.size;)l.push(Gn(r,o,e)),o+=t;if(s)for(;o<r.size;){const c=o+e-r.size,p=dr([Gn(r,o,e-c),Vh([c],i)]);l.push(p),o+=t}return 0===l.length?cl([],[0,e]):Me(dr(l),[l.length,e])}}),j0=we({stft_:function(r,e,t,s,i=Zg){null==s&&(s=Hg(e));const o=uu(r,e,t),l=Se(o,i(e));return pa(l,s)}}),Ub=we({cropAndResize_:function(r,e,t,s,i="bilinear",o=0){const l=j(r,"image","cropAndResize"),c=j(e,"boxes","cropAndResize","float32"),p=j(t,"boxInd","cropAndResize","int32"),d=c.shape[0];return F(4===l.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${l.rank}.`),F(2===c.rank&&4===c.shape[1],()=>`Error in cropAndResize: boxes must be have size [${d},4] but had shape ${c.shape}.`),F(1===p.rank&&p.shape[0]===d,()=>`Error in cropAndResize: boxInd must be have size [${d}] but had shape ${c.shape}.`),F(2===s.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),F(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),F("bilinear"===i||"nearest"===i,()=>`method must be bilinear or nearest, but was ${i}`),be.runKernel(Ud,{image:l,boxes:c,boxInd:p},{method:i,extrapolationValue:o,cropSize:s})}}),_c=we({flipLeftRight_:function(r){const e=j(r,"image","flipLeftRight","float32");return F(4===e.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`),be.runKernel(sh,{image:e},{})}}),Vb=we({grayscaleToRGB_:function(r){const e=j(r,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];F(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),F(1===s,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const i=new Array(e.rank);return i.fill(1,0,t),i[t]=3,mi(e,i)}}),Jg=we({rotateWithOffset_:function(r,e,t=0,s=.5){const i=j(r,"image","rotateWithOffset","float32");return F(4===i.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`),be.runKernel(ra,{image:i},{radians:e,fillValue:t,center:s})}});function ma(r,e,t,s,i,o){null==s&&(s=.5),null==i&&(i=Number.NEGATIVE_INFINITY),null==o&&(o=0);const l=r.shape[0];return t=Math.min(t,l),F(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),F(2===r.rank,()=>`boxes must be a 2D tensor, but was of rank '${r.rank}'`),F(4===r.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${r.shape[1]}`),F(1===e.rank,()=>"scores must be a 1D tensor"),F(e.shape[0]===l,()=>`scores has incompatible shape with boxes. Expected ${l}, but was ${e.shape[0]}`),F(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:i,softNmsSigma:o}}const q0=we({nonMaxSuppression_:function(r,e,t,s=.5,i=Number.NEGATIVE_INFINITY){const o=j(r,"boxes","nonMaxSuppression"),l=j(e,"scores","nonMaxSuppression"),c=ma(o,l,t,s,i),p={maxOutputSize:t=c.maxOutputSize,iouThreshold:s=c.iouThreshold,scoreThreshold:i=c.scoreThreshold};return be.runKernel(mh,{boxes:o,scores:l},p)}});function Wb(r,e,t){const s=function(p,d,f){let m=0,y=p.length,v=0,S=!1;for(;m<y;){v=m+(y-m>>>1);const _=f(d,p[v]);_>0?m=v+1:(y=v,S=!_)}return S?m:-m-1}(r,e,t||kc);r.splice(s<0?-(s+1):s,0,e)}function kc(r,e){return r>e?1:r<e?-1:0}function fm(r,e,t,s,i){return Qg(r,e,t,s,i,0)}function Up(r,e,t,s,i,o){return Qg(r,e,t,s,i,0,!1,o,!0)}function Vp(r,e,t,s,i,o){return Qg(r,e,t,s,i,o,!0)}function Qg(r,e,t,s,i,o,l=!1,c=!1,p=!1){const d=[];for(let k=0;k<e.length;k++)e[k]>i&&d.push({score:e[k],boxIndex:k,suppressBeginIndex:0});d.sort(X0);const f=o>0?-.5/o:0,m=[],y=[];for(;m.length<t&&d.length>0;){const k=d.pop(),{score:I,boxIndex:A,suppressBeginIndex:R}=k;if(I<i)break;let P=!1;for(let U=m.length-1;U>=R;--U){const W=ey(r,A,m[U]);if(W>=s){P=!0;break}if(k.score=k.score*Gb(s,f,W),k.score<=i)break}k.suppressBeginIndex=m.length,P||(k.score===I?(m.push(A),y.push(k.score)):k.score>i&&Wb(d,k,X0))}const v=m.length,S=t-v;c&&S>0&&(m.push(...new Array(S).fill(0)),y.push(...new Array(S).fill(0)));const _={selectedIndices:m};return l&&(_.selectedScores=y),p&&(_.validOutputs=v),_}function ey(r,e,t){const s=r.subarray(4*e,4*e+4),i=r.subarray(4*t,4*t+4),o=Math.min(s[0],s[2]),l=Math.min(s[1],s[3]),c=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=Math.min(i[0],i[2]),f=Math.min(i[1],i[3]),m=Math.max(i[0],i[2]),y=Math.max(i[1],i[3]),v=(c-o)*(p-l),S=(m-d)*(y-f);if(v<=0||S<=0)return 0;const _=Math.max(o,d),k=Math.max(l,f),I=Math.min(c,m),A=Math.min(p,y),R=Math.max(I-_,0)*Math.max(A-k,0);return R/(v+S-R)}function Gb(r,e,t){const s=Math.exp(e*t*t);return t<=r?s:0}function X0(r,e){return r.score-e.score||r.score===e.score&&e.boxIndex-r.boxIndex}const Hb=we({nonMaxSuppressionWithScore_:function(r,e,t,s=.5,i=Number.NEGATIVE_INFINITY,o=0){const l=j(r,"boxes","nonMaxSuppression"),c=j(e,"scores","nonMaxSuppression"),p=ma(l,c,t,s,i,o),f={maxOutputSize:t=p.maxOutputSize,iouThreshold:s=p.iouThreshold,scoreThreshold:i=p.scoreThreshold,softNmsSigma:o=p.softNmsSigma},m=be.runKernel(np,{boxes:l,scores:c},f);return{selectedIndices:m[0],selectedScores:m[1]}}}),jb=we({nonMaxSuppressionPadded_:function(r,e,t,s=.5,i=Number.NEGATIVE_INFINITY,o=!1){const l=j(r,"boxes","nonMaxSuppression"),c=j(e,"scores","nonMaxSuppression"),p=ma(l,c,t,s,i,null),m=be.runKernel(tp,{boxes:l,scores:c},{maxOutputSize:p.maxOutputSize,iouThreshold:p.iouThreshold,scoreThreshold:p.scoreThreshold,padToMaxOutputSize:o});return{selectedIndices:m[0],validOutputs:m[1]}}}),K0=we({resizeBilinear_:function(r,e,t=!1,s=!1){const i=j(r,"images","resizeBilinear");F(3===i.rank||4===i.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`),F(2===e.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),F(!1===s||!1===t,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=i,l=!1;3===i.rank&&(l=!0,o=Me(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=e,d=be.runKernel(vh,{images:o},{alignCorners:t,halfPixelCenters:s,size:e});return l?Me(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Y0=we({resizeNearestNeighbor_:function(r,e,t=!1,s=!1){const i=j(r,"images","resizeNearestNeighbor");F(3===i.rank||4===i.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`),F(2===e.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),F("float32"===i.dtype||"int32"===i.dtype,()=>"`images` must have `int32` or `float32` as dtype"),F(!1===s||!1===t,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=i,l=!1;3===i.rank&&(l=!0,o=Me(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=e,d=be.runKernel(te,{images:o},{alignCorners:t,halfPixelCenters:s,size:e});return l?Me(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),qb=we({threshold_:function(r,e="binary",t=!1,s=.5){const i=j(r,"image","threshold"),o=i.shape[0]*i.shape[1];let l,c,p,d,f=Se(bs([s]),255);if(F(3===i.rank,()=>`Error in threshold: image must be rank 3,but got rank ${i.rank}.`),F(3===i.shape[2]||1===i.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${i.shape[2]}.`),F("int32"===i.dtype||"float32"===i.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${i.dtype}.`),F("otsu"===e||"binary"===e,()=>`Method must be binary or otsu, but was ${e}`),3===i.shape[2]){[l,c,p]=xs(i,[1,1,1],-1);const y=Se(l,.2989),v=Se(c,.587),S=Se(p,.114);d=vt(vt(y,v),S)}else d=r;"otsu"===e&&(f=function(y,v){let S,_,k,I,A,R,P=bs([-1]),U=bs([0]),W=bs([0]);for(let se=0;se<y.size-1;se++){S=Gn(y,0,se+1),_=Gn(y,se+1),A=an(Qt(S),v),R=an(Qt(_),v);const G=Qt(Se(S,xc(0,S.size)));k=an(G,Qt(S));const pe=Vh(_.shape,S.size),de=vt(xc(0,_.size),pe),ye=Se(_,de);I=an(Qt(ye),Qt(_));const Ee=Yt(k,I),Ne=Yt(k,I),Be=Se(A,R);W=Se(Se(Be,Ee),Ne);const je=ms(W,U);U=fs(je,W,U),P=fs(je,bs([se]),P)}return P}(Tp(Rt(ou(d),"int32"),cr([]),256),o));const m=t?Ga(d,f):ms(d,f);return Rt(Se(m,255),"int32")}}),er=we({transform_:function(r,e,t="nearest",s="constant",i=0,o){const l=j(r,"image","transform","float32"),c=j(e,"transforms","transform","float32");return F(4===l.rank,()=>`Error in transform: image must be rank 4,but got rank ${l.rank}.`),F(2===c.rank&&(c.shape[0]===l.shape[0]||1===c.shape[0])&&8===c.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),F(null==o||2===o.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`),be.runKernel(js,{image:l,transforms:c},{interpolation:t,fillMode:s,fillValue:i,outputShape:o})}}),Z0=we({bandPart_:function(r,e,t){F(e%1==0,()=>`bandPart(): numLower must be an integer, got ${e}.`),F(t%1==0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);const s=j(r,"a","bandPart");F(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const i=s.shape,[o,l]=s.shape.slice(-2);if(!(e<=o))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`);if(!(t<=l))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${l}).`);e<0&&(e=o),t<0&&(t=l);const c=Me(xc(0,o,1,"int32"),[-1,1]),p=xc(0,l,1,"int32"),d=Yt(c,p),f=gi(Ga(d,ln(+e,"int32")),ca(d,ln(-t,"int32"))),m=Kr([o,l],s.dtype);return Me(yi(Ri(Me(s,[-1,o,l])).map(y=>fs(f,y,m))),i)}}),Xb=we({gramSchmidt_:function(r){let e;if(Array.isArray(r)){e=!1,F(null!=r&&r.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const i=r[0].shape[0];for(let o=1;o<r.length;++o)F(r[o].shape[0]===i,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${r[o].shape[0]} vs. ${i})`)}else e=!0,r=xs(r,r.shape[0],0).map(i=>fa(i,[0]));F(r.length<=r[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${r.length}) exceeds number of dimensions (${r[0].shape[0]}).`);const t=[],s=r;for(let i=0;i<r.length;++i)t.push(be.tidy(()=>{let o=s[i];if(i>0)for(let l=0;l<i;++l){const c=Se(Qt(Se(t[l],o)),t[l]);o=Yt(o,c)}return an(o,hd(o,"euclidean"))}));return e?yi(t,0):t}});function ty(r,e=!1){return be.tidy(()=>{F(2===r.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${r.shape.length}D Tensor.`);const t=r.shape[0],s=r.shape[1];let i=Ip(t),o=Xo(r);const l=cl([[1]],[1,1]);let c=Xo(l);const p=t>=s?s:t;for(let d=0;d<p;++d){const f=o,m=c,y=i;[c,o,i]=be.tidy(()=>{const v=Gn(o,[d,d],[t-d,1]),S=hd(v),_=Gn(o,[d,d],[1,1]),k=fs(ms(_,0),cl([[-1]]),cl([[1]])),I=Yt(_,Se(k,S)),A=an(v,I);c=1===A.shape[0]?Xo(l):dr([l,Gn(A,[1,0],[A.shape[0]-1,A.shape[1]])],0);const R=Er(an(Fn(k,I),S)),P=Gn(o,[d,0],[t-d,s]),U=Se(R,c),W=Xn(c);if(0===d)o=Yt(P,Fn(U,Fn(W,P)));else{const pe=Yt(P,Fn(U,Fn(W,P)));o=dr([Gn(o,[0,0],[d,s]),pe],0)}const se=Xn(U),G=Gn(i,[0,d],[t,i.shape[1]-d]);if(0===d)i=Yt(G,Fn(Fn(G,c),se));else{const pe=Yt(G,Fn(Fn(G,c),se));i=dr([Gn(i,[0,0],[t,d]),pe],1)}return[c,o,i]}),_n([f,m,y])}return!e&&t>s&&(i=Gn(i,[0,0],[t,s]),o=Gn(o,[0,0],[s,s])),[i,o]})}const mm=we({qr_:function(r,e=!1){if(F(r.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${r.rank}`),2===r.rank)return ty(r,e);{const t=r.shape.slice(0,r.shape.length-2).reduce((l,c)=>l*c),s=Ri(Me(r,[t,r.shape[r.shape.length-2],r.shape[r.shape.length-1]]),0),i=[],o=[];return s.forEach(l=>{const[c,p]=ty(l,e);i.push(c),o.push(p)}),[Me(yi(i,0),r.shape),Me(yi(o,0),r.shape)]}}});var Ps;!function(r){r[r.NONE=0]="NONE",r[r.MEAN=1]="MEAN",r[r.SUM=2]="SUM",r[r.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Ps||(Ps={}));const vo=we({computeWeightedLoss_:function(r,e,t=Ps.SUM_BY_NONZERO_WEIGHTS){const s=j(r,"losses","computeWeightedLoss");let i=null;null!=e&&(i=j(e,"weights","computeWeightedLoss"));const o=null==i?s:Se(s,i);if(t===Ps.NONE)return o;if(t===Ps.SUM)return Qt(o);if(t===Ps.MEAN){if(null==i)return Ir(o);{const l=s.size/i.size,c=an(Qt(o),Qt(i));return l>1?an(c,ln(l)):c}}if(t===Ps.SUM_BY_NONZERO_WEIGHTS){if(null==i)return an(Qt(o),ln(s.size));{const l=Se(i,$r(s.shape)),c=Rt(Qt(da(l,ln(0))),"float32");return an(Qt(o),c)}}throw Error(`Unknown reduction: ${t}`)}}),Kb=we({absoluteDifference_:function(r,e,t,s=Ps.SUM_BY_NONZERO_WEIGHTS){const i=j(r,"labels","absoluteDifference"),o=j(e,"predictions","absoluteDifference");let l=null;null!=t&&(l=j(t,"weights","absoluteDifference")),qe(i.shape,o.shape,"Error in absoluteDifference: ");const c=qr(Yt(i,o));return vo(c,l,s)}}),J0=we({cosineDistance_:function(r,e,t,s,i=Ps.SUM_BY_NONZERO_WEIGHTS){const o=j(r,"labels","cosineDistance"),l=j(e,"predictions","cosineDistance");let c=null;null!=s&&(c=j(s,"weights","cosineDistance")),qe(o.shape,l.shape,"Error in cosineDistance: ");const p=ln(1),d=Yt(p,Qt(Se(o,l),t,!0));return vo(d,c,i)}}),ny=we({hingeLoss_:function(r,e,t,s=Ps.SUM_BY_NONZERO_WEIGHTS){let i=j(r,"labels","hingeLoss");const o=j(e,"predictions","hingeLoss");let l=null;null!=t&&(l=j(t,"weights","hingeLoss")),qe(i.shape,o.shape,"Error in hingeLoss: ");const c=ln(1);i=Yt(Se(ln(2),i),c);const p=rs(Yt(c,Se(i,o)));return vo(p,l,s)}}),Yb=we({huberLoss_:function(r,e,t,s=1,i=Ps.SUM_BY_NONZERO_WEIGHTS){const o=j(r,"labels","huberLoss"),l=j(e,"predictions","huberLoss");let c=null;null!=t&&(c=j(t,"weights","huberLoss")),qe(o.shape,l.shape,"Error in huberLoss: ");const p=ln(s),d=qr(Yt(l,o)),f=ja(d,p),m=Yt(d,f),y=vt(Se(ln(.5),hr(f)),Se(p,m));return vo(y,c,i)}}),Zb=we({logLoss_:function(r,e,t,s=1e-7,i=Ps.SUM_BY_NONZERO_WEIGHTS){const o=j(r,"labels","logLoss"),l=j(e,"predictions","logLoss");let c=null;null!=t&&(c=j(t,"weights","logLoss")),qe(o.shape,l.shape,"Error in logLoss: ");const p=ln(1),d=ln(s),f=Er(Se(o,ns(vt(l,d)))),m=Se(Yt(p,o),ns(vt(Yt(p,l),d))),y=Yt(f,m);return vo(y,c,i)}}),Q0=we({meanSquaredError_:function(r,e,t,s=Ps.SUM_BY_NONZERO_WEIGHTS){const i=j(r,"labels","meanSquaredError"),o=j(e,"predictions","meanSquaredError");let l=null;null!=t&&(l=j(t,"weights","meanSquaredError")),qe(i.shape,o.shape,"Error in meanSquaredError: ");const c=Ai(i,o);return vo(c,l,s)}}),pd=we({sigmoidCrossEntropy_:function(r,e,t,s=0,i=Ps.SUM_BY_NONZERO_WEIGHTS){let o=j(r,"multiClassLabels","sigmoidCrossEntropy");const l=j(e,"logits","sigmoidCrossEntropy");let c=null;if(null!=t&&(c=j(t,"weights","sigmoidCrossEntropy")),qe(o.shape,l.shape,"Error in sigmoidCrossEntropy: "),s>0){const d=ln(s),f=ln(1),m=ln(.5);o=vt(Se(o,Yt(f,d)),Se(m,d))}const p=function(d,f){const m=j(d,"labels","sigmoidCrossEntropyWithLogits"),y=j(f,"logits","sigmoidCrossEntropyWithLogits");qe(m.shape,y.shape,"Error in sigmoidCrossEntropyWithLogits: ");const v=rs(y),S=Se(y,m),_=nl(Qs(Er(qr(y))));return vt(Yt(v,S),_)}(o,l);return vo(p,c,i)}}),ex=we({softmaxCrossEntropy_:function(r,e,t,s=0,i=Ps.SUM_BY_NONZERO_WEIGHTS){let o=j(r,"onehotLabels","softmaxCrossEntropy");const l=j(e,"logits","softmaxCrossEntropy");let c=null;if(null!=t&&(c=j(t,"weights","softmaxCrossEntropy")),qe(o.shape,l.shape,"Error in softmaxCrossEntropy: "),s>0){const d=ln(s),f=ln(1),m=ln(o.shape[1]);o=vt(Se(o,Yt(f,d)),an(d,m))}const p=function(d,f,m=-1){if(-1===m&&(m=f.rank-1),m!==f.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${f.rank} and dim was ${m}`);return po((y,v,S)=>{const _=td(v,[m],!0),k=Yt(Rt(v,"float32"),_);S([y,k]);const I=Er(Se(k,y));return{value:Qt(I,[m]),gradFunc:(A,R)=>{const[P,U]=R,W=br(A.shape,[m]);return[Se(Me(A,W),Yt(Rt(P,"float32"),Qs(U))),Se(Me(A,W),Yt(Qs(U),Rt(P,"float32")))]}}})(d,f)}(o,l);return vo(p,c,i)}}),gm=we({sparseFillEmptyRows_:function(r,e,t,s){const i=j(r,"indices","sparseFillEmptyRows"),o=j(e,"values","sparseFillEmptyRows"),l=j(t,"denseShape","sparseFillEmptyRows"),c=j(s,"defaultValue","sparseFillEmptyRows",o.dtype);if(2!==i.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${i.shape}`);if(1!==o.rank)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(1!==l.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${l.shape}`);if(0!==c.rank)throw new Error(`Default value should be a scalar but received shape ${c.shape}`);const d=be.runKernel(Na,{indices:i,values:o,denseShape:l,defaultValue:c});return{outputIndices:d[0],outputValues:d[1],emptyRowIndicator:d[2],reverseIndexMap:d[3]}}}),tx=we({sparseReshape_:function(r,e,t){const s=j(r,"inputIndices","sparseReshape"),i=j(e,"inputShape","sparseReshape"),o=j(t,"newShape","sparseReshape");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==i.rank)throw new Error(`Input shape should be Tensor1D but received shape ${i.shape}`);if(1!==o.rank)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const c=be.runKernel(na,{inputIndices:s,inputShape:i,newShape:o});return{outputIndices:c[0],outputShape:c[1]}}}),nx=we({sparseSegmentMean_:function(r,e,t){const s=j(r,"data","sparseSegmentMean"),i=j(e,"indices","sparseSegmentMean"),o=j(t,"segmentIds","sparseSegmentMean");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${i.shape}`);if(1!==o.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${o.shape}`);return be.runKernel(Sh,{data:s,indices:i,segmentIds:o})}}),rx=we({sparseSegmentSum_:function(r,e,t){const s=j(r,"data","sparseSegmentSum"),i=j(e,"indices","sparseSegmentSum"),o=j(t,"segmentIds","sparseSegmentSum");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${i.shape}`);if(1!==o.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${o.shape}`);return be.runKernel(Wu,{data:s,indices:i,segmentIds:o})}}),Jb=we({stringNGrams_:function(r,e,t,s,i,o,l,c){const p=j(r,"data","stringNGrams","string");if("string"!==p.dtype)throw new Error("Data must be of datatype string");if(1!==p.shape.length)throw new Error(`Data must be a vector, saw: ${p.shape}`);const d=j(e,"dataSplits","stringNGrams");if("int32"!==d.dtype)throw new Error("Data splits must be of datatype int32");const y=be.runKernel(Ra,{data:p,dataSplits:d},{separator:t,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:c});return{nGrams:y[0],nGramsSplits:y[1]}}}),cu=we({stringSplit_:function(r,e,t=!0){const s=j(r,"input","stringSplit","string"),i=j(e,"delimiter","stringSplit","string");if(1!==s.rank)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==i.rank)throw new Error(`Delimiter should be a scalar but received shape ${i.shape}`);const c=be.runKernel(sn,{input:s,delimiter:i},{skipEmpty:t});return{indices:c[0],values:c[1],shape:c[2]}}}),ym=we({stringToHashBucketFast_:function(r,e){const t=j(r,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");return be.runKernel(Po,{input:t},s)}}),ry={fft:ld,ifft:wc,rfft:pa,irfft:Dp},sx={hammingWindow:H0,hannWindow:Zg,frame:uu,stft:j0},ji={flipLeftRight:_c,grayscaleToRGB:Vb,resizeNearestNeighbor:Y0,resizeBilinear:K0,rotateWithOffset:Jg,cropAndResize:Ub,nonMaxSuppression:q0,nonMaxSuppressionAsync:async function(r,e,t,s=.5,i=Number.NEGATIVE_INFINITY){const o=j(r,"boxes","nonMaxSuppressionAsync"),l=j(e,"scores","nonMaxSuppressionAsync"),c=ma(o,l,t,s,i);t=c.maxOutputSize,s=c.iouThreshold,i=c.scoreThreshold;const p=await Promise.all([o.data(),l.data()]),d=p[0],f=p[1],{selectedIndices:m}=fm(d,f,t,s,i);return o!==r&&o.dispose(),l!==e&&l.dispose(),bs(m,"int32")},nonMaxSuppressionWithScore:Hb,nonMaxSuppressionWithScoreAsync:async function(r,e,t,s=.5,i=Number.NEGATIVE_INFINITY,o=0){const l=j(r,"boxes","nonMaxSuppressionAsync"),c=j(e,"scores","nonMaxSuppressionAsync"),p=ma(l,c,t,s,i,o);t=p.maxOutputSize,s=p.iouThreshold,i=p.scoreThreshold,o=p.softNmsSigma;const d=await Promise.all([l.data(),c.data()]),f=d[0],m=d[1],{selectedIndices:y,selectedScores:v}=Vp(f,m,t,s,i,o);return l!==r&&l.dispose(),c!==e&&c.dispose(),{selectedIndices:bs(y,"int32"),selectedScores:bs(v)}},nonMaxSuppressionPadded:jb,nonMaxSuppressionPaddedAsync:async function(r,e,t,s=.5,i=Number.NEGATIVE_INFINITY,o=!1){const l=j(r,"boxes","nonMaxSuppressionAsync"),c=j(e,"scores","nonMaxSuppressionAsync"),p=ma(l,c,t,s,i,null),d=p.maxOutputSize,f=p.iouThreshold,m=p.scoreThreshold,[y,v]=await Promise.all([l.data(),c.data()]),{selectedIndices:S,validOutputs:_}=Up(y,v,d,f,m,o);return l!==r&&l.dispose(),c!==e&&c.dispose(),{selectedIndices:bs(S,"int32"),validOutputs:ln(_,"int32")}},threshold:qb,transform:er},ix={bandPart:Z0,gramSchmidt:Xb,qr:mm},Qb={absoluteDifference:Kb,computeWeightedLoss:vo,cosineDistance:J0,hingeLoss:ny,huberLoss:Yb,logLoss:Zb,meanSquaredError:Q0,sigmoidCrossEntropy:pd,softmaxCrossEntropy:ex},fd={sparseFillEmptyRows:gm,sparseReshape:tx,sparseSegmentMean:nx,sparseSegmentSum:rx},Wp={stringNGrams:Jb,stringSplit:cu,stringToHashBucketFast:ym};class Ec{static sgd(e){return new oa(e)}static momentum(e,t,s=!1){return new oc(e,t,s)}static rmsprop(e,t=.9,s=0,i=null,o=!1){return new Yo(e,t,s,i,o)}static adam(e=.001,t=.9,s=.999,i=null){return new lr(e,t,s,i)}static adadelta(e=.001,t=.95,s=null){return new fo(e,t,s)}static adamax(e=.002,t=.9,s=.999,i=null,o=0){return new Fr(e,t,s,i,o)}static adagrad(e,t=.1){return new Wh(e,t)}}const hu={sgd:Ec.sgd,momentum:Ec.momentum,adadelta:Ec.adadelta,adagrad:Ec.adagrad,rmsprop:Ec.rmsprop,adamax:Ec.adamax,adam:Ec.adam},ev="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:r=>r();function Gp(){return new Promise(r=>ev(()=>r()))}function md(r,e){const t=r[0].length;r.forEach((i,o)=>{F(i.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),F(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=r[0];r.forEach((i,o)=>{for(let l=0;l<t;l++)F(l===e||i[l]===s[l],()=>`Error in concat${t}D: Shape of tensors[${o}] (${i}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function qa(r,e){const t=r[0].slice();for(let s=1;s<r.length;s++)t[e]+=r[s][e];return t}const sy=30;function Ic(r){return r<=sy?r:no(r,Math.floor(Math.sqrt(r)))}function Or(r,e,t){return[t*("number"==typeof r?r:r[0]),e*("number"==typeof r?r:r[1])]}function Hp(r,e,t,s=!0){let i=[];if(s)i=i.concat(e.slice(0)),i.push(r[0]/t),i=i.concat(r.slice(1));else{i=i.concat(r[0]);const o=e.length;for(let l=0;l<o;++l)i=i.concat([r[l+1]/e[l],e[l]]);i=i.concat(r.slice(o+1))}return i}function Cr(r,e,t=!0){const s=[];if(t){s.push(e);for(let i=e+1;i<r;++i)i<=2*e?(s.push(i),s.push(i-(e+1))):s.push(i)}else{const i=[],o=[];for(let l=1;l<r;++l)l>=2*e+1||l%2==1?o.push(l):i.push(l);s.push(...i),s.push(0),s.push(...o)}return s}function du(r,e,t,s=!0){const i=[];i.push(s?r[0]/t:r[0]*t);for(let o=1;o<r.length;++o)i.push(o<=e.length?s?e[o-1]*r[o]:r[o]/e[o-1]:r[o]);return i}function xm(r,e){const t=[0];for(let s=0;s<e;++s)t.push(r[s][0]);return t}function iy(r,e,t){const s=r.slice(0,1);for(let i=0;i<t;++i)s.push(r[i+1]-e[i][0]-e[i][1]);return s}const bm=1.7580993408473768,jp=1.0507009873554805,gd=.3275911,qp=.254829592,ay=-.284496736,vm=1.421413741,wm=-1.453152027,oy=1.061405429;function hl(r,e){if(r.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${r.length}, imag: ${e.length}.`);const t=new Float32Array(2*r.length);for(let s=0;s<t.length;s+=2)t[s]=r[s/2],t[s+1]=e[s/2];return t}function ax(r){const e=new Float32Array(r.length/2),t=new Float32Array(r.length/2);for(let s=0;s<r.length;s+=2)e[s/2]=r[s],t[s/2]=r[s+1];return{real:e,imag:t}}function ox(r){const e=Math.ceil(r.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let i=0;i<r.length;i+=4)t[Math.floor(i/4)]=r[i],s[Math.floor(i/4)]=r[i+1];return{real:t,imag:s}}function lx(r){const e=Math.floor(r.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let i=2;i<r.length;i+=4)t[Math.floor(i/4)]=r[i],s[Math.floor(i/4)]=r[i+1];return{real:t,imag:s}}function ly(r,e){return{real:r[2*e],imag:r[2*e+1]}}function ux(r,e,t,s){r[2*s]=e,r[2*s+1]=t}function cx(r,e){const t=new Float32Array(r/2),s=new Float32Array(r/2);for(let i=0;i<Math.ceil(r/2);i++){const o=(e?2:-2)*Math.PI*(i/r);t[i]=Math.cos(o),s[i]=Math.sin(o)}return{real:t,imag:s}}function hx(r,e,t){const s=(t?2:-2)*Math.PI*(r/e);return{real:Math.cos(s),imag:Math.sin(s)}}const tv=/->/g;function uy(r,e){const t=((r=r.replace(/\s/g,"")).length-r.replace(tv,"").length)/"->".length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error('Equation must contain exactly one arrow ("->").');const[s,i]=r.split("->");F(-1===s.indexOf("..."),()=>'The ellipsis notation ("...") is not supported yet.');const o=s.split(","),l=o.length;if(e!==l)throw new Error(`Expected ${l} input tensors, received ${e}`);if(l>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const c=[];for(let m=0;m<i.length;++m){const y=i[m];if(!o.some(v=>-1!==v.indexOf(y)))throw new Error(`Output subscripts contain the label ${y} not present in the input subscripts.`);-1===c.indexOf(y)&&c.push(y)}for(let m=0;m<s.length;++m){const y=s[m];-1===c.indexOf(y)&&","!==y&&c.push(y)}const p=new Array(o.length);for(let m=0;m<l;++m){if(new Set(o[m].split("")).size!==o[m].length)throw new Error(`Found duplicate axes in input component ${o[m]}. Support for duplicate axes in input is not implemented yet.`);p[m]=[];for(let y=0;y<o[m].length;++y)p[m].push(c.indexOf(o[m][y]))}const d=c.length,f=[];for(let m=i.length;m<d;++m)f.push(m);return{allDims:c,summedDims:f,idDims:p}}function cy(r,e){let t=new Array(r);t.fill(-1);for(let i=0;i<e.length;++i)t[e[i]]=i;const s=[];for(let i=0;i<r;++i)-1===t[i]&&s.push(i);return t=t.filter(i=>-1!==i),{permutationIndices:t,expandDims:s}}function hy(r,e,t){const s=new Array(r);for(let i=0;i<t.length;++i){const o=t[i].shape;for(let l=0;l<e[i].length;++l)void 0===s[e[i][l]]?s[e[i][l]]=o[l]:F(s[e[i][l]]===o[l],()=>`Expected dimension ${s[e[i][l]]} at axis ${l} of input shaped ${JSON.stringify(o)}, but got dimension ${o[l]}`)}}function dy(r,e){const t=r,s=[];let i=0;0===r.length&&t.push(-1),i=r.length+1;for(let l=0;l<i;++l)s.push([]);const o=[];for(let l=0;l<t.length;++l){const c=nv(e,t[l]);for(const p of c)-1===o.indexOf(p)&&(s[l].push(p),o.push(p))}return{path:t,steps:s}}function py(r){return r.every((e,t)=>e===t)}function nv(r,e){const t=[];for(let s=0;s<r.length;++s)0!==r[s].length&&-1===r[s].indexOf(e)&&-1!==e||t.push(s);return t}function fy(r,e,t=0){let s=[];if("number"==typeof e)F(r.shape[t]%e==0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(r.shape[t]/e);else{F(e.reduce((o,l)=>(-1===l&&(o+=1),o),0)<=1,()=>"There should be only one negative value in split array.");const i=e.indexOf(-1);if(-1!==i){const o=e.reduce((l,c)=>c>0?l+c:l);e[i]=r.shape[t]-o}F(r.shape[t]===e.reduce((o,l)=>o+l),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}function dx(r,e){let t,s=!1;for(r<=sy?(t=r,s=!0):t=no(r,Math.floor(Math.sqrt(r)));!s;)t>e||t===r?s=!0:t=no(r,t+1);return t}function px(r,e,t){const s=[],i=r.length;for(let o=0;o<i;o++)s.push(o!==e?r[o]:t);return s}function my(r,e,t,s){const i=e.shape.length,o=r.shape.length;if(0!==s&&(s<-i||s>i))throw new Error(`Expect batchDims in the range of [-${i}, ${i}], but got ${s}`);if(s<0&&(s+=i),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${o}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let m=0;m<s;++m)if(r.shape[m]!==e.shape[m])throw new Error(`x.shape[${m}]: ${r.shape[m]} should be equal to indices.shape[${m}]: ${e.shape[m]}.`);const l=r.shape[t],c=[];let p=1,d=1,f=1;for(let m=0;m<s;++m)c.push(r.shape[m]),p*=r.shape[m];for(let m=s;m<t;m++)c.push(r.shape[m]),d*=r.shape[m];for(let m=s;m<i;m++)c.push(e.shape[m]);for(let m=t+1;m<o;m++)c.push(r.shape[m]),f*=r.shape[m];return{batchSize:p,sliceSize:f,outerSize:d,dimSize:l,outputShape:c}}function Cc(r){try{return r.map(e=>On(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function fx(r){return r.map(e=>Bi(e))}const mx={kernelName:Su,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Se(r,Sc(Rt(t,"float32"),-1))}}},rv={kernelName:Nl,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>{const s=hr(Rt(t,"float32")),i=Es(Yt(ln(1),s));return Er(an(r,i))}}}},sv={kernelName:Al,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>{const s=Es(Yt(hr(Rt(t,"float32")),1));return an(r,s)}}}},iv={kernelName:Io,inputsToSave:["a","b"],gradFunc:(r,e)=>{const[t,s]=e,i=An(t.shape,s.shape);return{a:()=>{let o=r;const l=Dr(t.shape,i);return l.length>0&&(o=Qt(o,l)),Me(o,t.shape)},b:()=>{let o=r;const l=Dr(s.shape,i);return l.length>0&&(o=Qt(o,l)),Me(o,s.shape)}}}},av={kernelName:Tu,saveAllInputs:!0,gradFunc:(r,e)=>{const t={};return e.forEach((s,i)=>{t[i]=()=>r.clone()}),t}},ov={kernelName:Wc,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Kn(t)}}},lv={kernelName:Mu,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Kn(t)}}},uv={kernelName:Rl,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>an(r,Es(Yt(ln(1),hr(Rt(t,"float32")))))}}},cv={kernelName:_u,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>{const s=Es(vt(ln(1),hr(Rt(t,"float32"))));return an(r,s)}}}},hv={kernelName:Iu,inputsToSave:["a","b"],gradFunc:(r,e)=>{const[t,s]=e,i=An(t.shape,s.shape);return{a:()=>{const o=vt(hr(t),hr(s));let l=Se(r,an(s,o));const c=Dr(t.shape,i);return c.length>0&&(l=Qt(l,c)),Me(l,t.shape)},b:()=>{const o=vt(hr(t),hr(s));let l=Er(Se(r,an(t,o)));const c=Dr(s.shape,i);return c.length>0&&(l=Qt(l,c)),Me(l,s.shape)}}}},dv={kernelName:ku,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>an(r,vt(hr(Rt(t,"float32")),1))}}},pv={kernelName:Eu,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>an(r,Yt(ln(1),hr(Rt(t,"float32"))))}}},fv=we({avgPool3dGrad_:function(r,e,t,s,i,o){const l=j(r,"dy","avgPool3dGrad"),c=j(e,"input","avgPool3dGrad");let p=l,d=c,f=!1;4===c.rank&&(f=!0,p=Me(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Me(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),F(5===p.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`),F(5===d.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),null!=o&&F(Bt(i),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${o} but got pad ${i}.`);const v=be.runKernel(Fd,{dy:p,input:d},{filterSize:t,strides:s,pad:i,dimRoundingMode:o});return f?Me(v,[v.shape[1],v.shape[2],v.shape[3],v.shape[4]]):v}}),mv={kernelName:Hc,inputsToSave:["x"],gradFunc:(r,e,t)=>{const[s]=e,{filterSize:i,strides:o,pad:l,dimRoundingMode:c}=t;return{x:()=>fv(r,s,i,o,l,c)}}},gv=we({avgPoolGrad_:function(r,e,t,s,i){const o=j(r,"dy","avgPoolGrad"),l=j(e,"input","avgPoolGrad");F(l.rank===o.rank,()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`);let c=l,p=o,d=!1;3===l.rank&&(d=!0,c=Me(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=Me(o,[1,o.shape[0],o.shape[1],o.shape[2]])),F(4===p.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${p.rank}.`),F(4===c.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${c.rank}.`);const y=be.runKernel(Dd,{dy:p,input:c},{filterSize:t,strides:s,pad:i});return d?Me(y,[y.shape[1],y.shape[2],y.shape[3]]):y}}),b={kernelName:Gc,inputsToSave:["x"],gradFunc:(r,e,t)=>{const[s]=e,{filterSize:i,strides:o,pad:l}=t;return{x:()=>gv(r,s,i,o,l)}}},n={kernelName:jc,inputsToSave:["a","b"],gradFunc:(r,e,t)=>{const[s,i]=e,{transposeA:o,transposeB:l}=t;return o||l?!o&&l?{a:()=>Fn(r,i,!1,!1),b:()=>Fn(r,s,!0,!1)}:o&&!l?{a:()=>Fn(i,r,!1,!0),b:()=>Fn(s,r,!1,!1)}:{a:()=>Fn(i,r,!0,!0),b:()=>Fn(r,s,!0,!0)}:{a:()=>Fn(r,i,!1,!0),b:()=>Fn(s,r,!0,!1)}}},a={kernelName:qc,gradFunc:(r,e,t)=>{const{blockShape:s,crops:i}=t;return{x:()=>gc(r,s,i)}}},u={kernelName:eg,gradFunc:(r,e,t)=>{const i=t.inputShape,o=t.shape,l=Array.from(o);for(let p=i.length-1;p>=0;p--)if(i[p]===o[p])l[p]=1;else if(1!==i[p])throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${o}].`);const c=[];for(let p=0;p<l.length;p++)l[p]>1&&c.push(p);return{x:()=>Qt(r,c,!0)}}},h={kernelName:Cu,gradFunc:r=>({x:()=>r.clone()})},g={kernelName:Nu,gradFunc:r=>({x:()=>Kn(r)})},x={kernelName:Au,inputsToSave:["x"],gradFunc:(r,e,t)=>{const[s]=e,{clipValueMin:i,clipValueMax:o}=t;return{x:()=>fs(gi(ca(s,i),Ga(s,o)),r,Kn(r))}}},w={kernelName:Xc,inputsToSave:["x"],gradFunc:mx.gradFunc},T={kernelName:Kc,saveAllInputs:!0,gradFunc:(r,e,t)=>{const s=e.map(c=>c.shape),{axis:i}=t,o=Dn(i,e[0].shape)[0],l=s.map(c=>c[o]);return xs(r,l,o).map(c=>()=>c)}},M={kernelName:Yc,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{const[s,i]=e,{dilations:o,strides:l,pad:c,dataFormat:p}=t;return F(Va(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>Xh(s.shape,r,i,l,c,p),filter:()=>qg(s,r,i.shape,l,c,p)}}},E={kernelName:Zc,inputsToSave:["dy","filter"],gradFunc:(r,e,t)=>{const[s,i]=e,{strides:o,pad:l,dataFormat:c,dimRoundingMode:p}=t;return{dy:()=>Wa(r,i,o,l,c,1,p),filter:()=>qg(r,s,i.shape,o,l,c,p)}}},N=we({conv3DBackpropFilter_:function(r,e,t,s,i){let o=r;4===r.rank&&(o=Me(r,[1,r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));let l=e;return 4===l.rank&&(l=Me(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),F(5===o.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),F(5===l.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${l.shape}.`),F(5===t.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),F(o.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${t[3]}.`),F(l.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${l.shape[4]}) must match output depth for filter (${t[4]}).`),be.runKernel(zd,{x:o,dy:l},{strides:s,pad:i,filterShape:t})}}),C={kernelName:Jc,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{const{dilations:s,strides:i,pad:o}=t;F(Va(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[l,c]=e;return{x:()=>Lg(l.shape,r,c,i,o),filter:()=>N(l,r,c.shape,i,o)}}},L={kernelName:Ru,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Se(Er(ys(Rt(t,"float32"))),r)}}},D={kernelName:Lu,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Se(Ci(Rt(t,"float32")),r)}}},$={kernelName:Qc,inputsToSave:["x"],gradFunc:(r,e,t)=>{const[s]=e,{axis:i,exclusive:o,reverse:l}=t;return{x:()=>{const c=In([i],s.rank);let p=el(r,i,o,!l);return null!=c&&(p=Xn(p,c)),p}}}},B={kernelName:eh,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{const{dilations:s,strides:i,pad:o,dimRoundingMode:l}=t,c=null==s?[1,1]:s;F(Va(c),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${c}'`);const[p,d]=e;return F(4===p.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${p.rank}.`),F(4===d.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${d.rank}.`),F(p.shape[3]===d.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`),F(ts(i,c),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${i} and dilations '${c}'.`),null!=l&&F(Bt(o),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${o}.`),{x:()=>Kg(p.shape,r,d,i,o,c,l),filter:()=>Xg(p,r,d.shape,i,o,c,l)}}},O={kernelName:ka,inputsToSave:["x","filter"],gradFunc:(r,e,t)=>{const[s,i]=e,o={x:s,filter:i,dy:r},l={x:s,filter:i,dy:r};return{x:()=>be.runKernel(ro,o,t),filter:()=>be.runKernel(Fl,l,t)}}},q={kernelName:Fu,outputsToSave:[!0],gradFunc:(r,e)=>{const[t]=e,s={dy:r,y:t};return{x:()=>be.runKernel(pf,s)}}},ee={kernelName:nh,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e,s=Se(Qs(Er(hr(t))),2/Math.sqrt(Math.PI));return{x:()=>Se(r,s)}}},Y={kernelName:so,outputsToSave:[!0],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Se(r,t)}}},ce={kernelName:$l,inputsToSave:["input"],gradFunc:(r,e)=>{const[t]=e;return{input:()=>Me(r,t.shape)}}},he={kernelName:No,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Se(r,Qs(t))}}},Ie={kernelName:Ol,gradFunc:r=>({x:()=>Kn(r)})},Ae={kernelName:$u,inputsToSave:["a","b"],gradFunc:(r,e)=>{const[t,s]=e,i=An(t.shape,s.shape);return{a:()=>{const o=an(r,Rt(s,"float32")),l=Dr(t.shape,i);return l.length>0?Me(Qt(o,l),t.shape):o},b:()=>{let o=Se(r,Rt(t,"float32"));const l=Dr(s.shape,i);l.length>0&&(o=Me(Qt(o,l),s.shape));const c=hr(s);return Er(an(o,Rt(c,"float32")))}}}},We={kernelName:ih,inputsToSave:["x","mean","variance","scale"],gradFunc:(r,e,t)=>{const{varianceEpsilon:s}=t,[i,o,l,c]=e,p=null==c?ln(1):c,d=Dr(o.shape,i.shape),f=[];if(1===o.rank){for(let _=0;_<i.shape.length-1;++_)f.push(i.shape[_]);f.push(1)}const m=Yt(i,o),y=Se(r,p),v=lu(vt(l,ln(s))),S=Se(Se(Se(v,v),v),ln(-.5));return{x:()=>Me(Se(Se(r,1===o.rank?mi(Me(v,[1,1,1,o.shape[0]]),f):v),p),i.shape),mean:()=>{let _=Se(Se(v,ln(-1)),y);return 1===o.rank&&(_=Qt(_,d)),Me(_,o.shape)},variance:()=>{let _=Se(Se(S,m),y);return 1===o.rank&&(_=Qt(_,d)),Me(_,o.shape)},scale:()=>{const _=Se(m,v);let k=Se(r,_);return 1===o.rank&&(k=Qt(k,d)),Me(k,o.shape)},offset:()=>{let _=r;return 1===o.rank&&(_=Qt(_,d)),Me(_,o.shape)}}}},$e={kernelName:Ea,inputsToSave:["x","indices"],gradFunc:(r,e,t)=>{const[s,i]=e,{axis:o}=t,l=Dn(o,s.shape)[0];return{x:()=>{const c=s.shape,p=i.size,d=c.slice(0,l),f=d.length,m=c.slice(o,c.length).slice(1),y=m.length,v=Oe(0,f),S=Oe(f+1,f+1+y),_=At([d,[p],m]),k=Me(r,_),I=Me(i,[p]),A=At([[f],v,S]),R=Xn(k,A);let P=Pp(R,I,s.shape[l]);const U=rl(A);return P=Xn(P,U),P},indices:()=>i}}};function Oe(r,e){const t=[];for(let s=r;s<e;++s)t.push(s);return t}function At(r){const e=[];for(let t=0;t<r.length;++t)for(let s=0;s<r[t].length;++s)e.push(r[t][s]);return e}const bt={kernelName:Ao,inputsToSave:["a","b"],gradFunc:(r,e)=>{const[t,s]=e;return{a:()=>Kn(t),b:()=>Kn(s)}}},rt={kernelName:ah,gradFunc:r=>({x:()=>Rt(r,"float32")})},Mt={kernelName:oh,gradFunc:r=>({x:()=>Kn(r)})},qt={kernelName:lh,gradFunc:r=>({x:()=>Kn(r)})},Xt={kernelName:uh,gradFunc:r=>({x:()=>Kn(r)})},nn={kernelName:qd,inputsToSave:["x"],gradFunc:(r,e,t)=>{const[s]=e,{alpha:i}=t,o=ms(s,0);return{x:()=>fs(o,r,Se(r,i))}}},vn={kernelName:hh,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>an(r,vt(t,1))}}},fn={kernelName:ch,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>an(r,Rt(t,"float32"))}}},le={kernelName:Ou,inputsToSave:[],outputsToSave:[!0],gradFunc:(r,e,t)=>{const[s]=e,{axis:i}=t;return{logits:()=>{const o=Qs(s);return Yt(r,Se(Qt(r,i,!0),o))}}}},fe=we({localResponseNormalizationBackprop_:function(r,e,t,s=5,i=1,o=1,l=.5){return be.runKernel(yf,{x:r,y:e,dy:t},{depthRadius:s,bias:i,alpha:o,beta:l})}}),it={kernelName:Zd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{const[s,i]=e,{depthRadius:o,bias:l,alpha:c,beta:p}=t;return{x:()=>fe(s,i,r,o,l,c,p)}}};function ut(r,e,t,s){return e.rank<t.rank&&(e=Me(e,br(e.shape,s))),r.rank<t.rank&&(r=Me(r,br(r.shape,s))),{x:()=>Se(r,Rt($s(t,e),r.dtype))}}const st={kernelName:Jd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{const s=t,{reductionIndices:i}=s,o=e[0],l=ut(r,e[1],o,Dn(i,o.shape));return{x:()=>l.x()}}},kt={kernelName:ph,inputsToSave:["a","b"],gradFunc:(r,e)=>{const[t,s]=e;return{a:()=>Se(r,Rt(ca(t,s),"float32")),b:()=>Se(r,Rt(ed(t,s),"float32"))}}},Vt=we({maxPool3dGrad_:function(r,e,t,s,i,o,l){const c=j(r,"dy","maxPool3dGrad"),p=j(e,"input","maxPool3dGrad"),d=j(t,"output","maxPool3dGrad");let f=c,m=p,y=d,v=!1;4===p.rank&&(v=!0,f=Me(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),m=Me(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]]),y=Me(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),F(5===f.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${f.rank}.`),F(5===m.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${m.rank}.`),F(5===y.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${y.rank}.`),null!=l&&F(Bt(o),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${l} but got pad ${o}.`);const k=be.runKernel(bf,{dy:f,input:m,output:y},{filterSize:s,strides:i,pad:o,dimRoundingMode:l});return v?Me(k,[k.shape[1],k.shape[2],k.shape[3],k.shape[4]]):k}}),Ot={kernelName:ep,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{const[s,i]=e,{filterSize:o,strides:l,pad:c,dimRoundingMode:p}=t;return{x:()=>Vt(r,s,i,o,l,c,p)}}},Ve=we({maxPoolGrad_:function(r,e,t,s,i,o,l){const c=j(r,"dy","maxPoolGrad"),p=j(e,"input","maxPoolGrad"),d=j(t,"output","maxPoolGrad");return F(p.rank===c.rank,()=>`Rank of input (${p.rank}) does not match rank of dy (${c.rank})`),F(4===c.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${c.rank}.`),F(4===p.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${p.rank}.`),null!=l&&F(Bt(o),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${l} but got pad ${o}.`),be.runKernel(xf,{dy:c,input:p,output:d},{filterSize:s,strides:i,pad:o,dimRoundingMode:l})}}),re={kernelName:oo,inputsToSave:["x"],gradFunc:(r,e,t)=>{const s=e[0],{paddings:i}=t,o=i.map(l=>l[0]);return{x:()=>Gn(r,o,s.shape)}}},ze={kernelName:wh,gradFunc:(r,e,t)=>{const{blockShape:s,paddings:i}=t;return{x:()=>hc(r,s,i)}}},ft={kernelName:Uu,gradFunc:(r,e,t)=>{const{axis:s}=t;return{x:()=>dr(r,s)}}},et=[mx,rv,sv,iv,av,ov,lv,uv,cv,hv,dv,pv,mv,b,n,a,u,h,g,x,w,T,E,M,C,L,D,$,B,O,{kernelName:Co,inputsToSave:["a","b"],gradFunc:(r,e)=>{const[t,s]=e,i=An(t.shape,s.shape);return{a:()=>{const o=an(r,Rt(s,"float32")),l=Dr(t.shape,i);return l.length>0?Me(Qt(o,l),t.shape):o},b:()=>{let o=Se(r,Rt(t,"float32"));const l=Dr(s.shape,i);l.length>0&&(o=Me(Qt(o,l),s.shape));const c=hr(s);return Er(an(o,Rt(c,"float32")))}}}},q,ee,Y,ce,he,Ae,Ie,We,$e,bt,rt,Mt,qt,Xt,nn,vn,fn,le,it,st,st,kt,Ot,{kernelName:Qd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{const[s,i]=e,{filterSize:o,strides:l,pad:c}=t;return{x:()=>Ve(r,s,i,o,l,c)}}},{kernelName:Ji,inputsToSave:["x"],gradFunc:(r,e,t)=>{const[s]=e,{axis:i}=t,o=Dn(i,s.shape),l=ke(gs(s.shape,o)[1]);return{x:()=>{const c=s.shape.slice();o.forEach(d=>{c[d]=1});const p=Me(r,c);return an(Se(p,$r(s.shape,"float32")),l)}}}},{kernelName:Jr,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(r,e,t)=>{const s=t,{axis:i}=s,[o,l]=e,c=ut(r,l,o,Dn(i,o.shape));return{x:()=>c.x()}}},{kernelName:Ro,inputsToSave:["a","b"],gradFunc:(r,e)=>{const[t,s]=e;return{a:()=>Se(r,Rt(Ga(t,s),"float32")),b:()=>Se(r,Rt(ms(t,s),"float32"))}}},{kernelName:Ia,inputsToSave:["x"],gradFunc:(r,e,t)=>{const s=e[0],{paddings:i}=t,o=i.map(l=>l[0]);return{x:()=>Gn(r,o,s.shape)}}},{kernelName:ao,inputsToSave:["a","b"],gradFunc:(r,e)=>{const[t,s]=e,i=An(t.shape,s.shape);return{a:()=>{const o=Dr(t.shape,i);return o.length>0?Me(Qt(r,o),t.shape):r},b:()=>{const o=Se(r,Er(nu(an(t,s)))),l=Dr(s.shape,i);return l.length>0?Me(Qt(o,l),s.shape):o}}}},{kernelName:jr,inputsToSave:["a","b"],gradFunc:(r,e)=>{const[t,s]=e,i=An(t.shape,s.shape);return{a:()=>{const o=Se(r,Rt(s,"float32")),l=Dr(t.shape,i);return l.length>0?Me(Qt(o,l),t.shape):o},b:()=>{const o=Se(r,Rt(t,"float32")),l=Dr(s.shape,i);return l.length>0?Me(Qt(o,l),s.shape):o}}}},{kernelName:Pu,gradFunc:r=>({x:()=>Er(r)})},{kernelName:It,inputsToSave:["indices"],gradFunc:(r,e)=>{const t=e[0];return{indices:()=>Kr(t.shape,"float32")}}},{kernelName:gh,gradFunc:r=>({x:()=>Kn(r)})},{kernelName:zr,saveAllInputs:!0,gradFunc:(r,e,t)=>{const{axis:s}=t;return Ri(r,s).map(i=>()=>i)}},re,re,{kernelName:yh,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(r,e)=>{const[t,s,i]=e,o=t,l=s,c=An(o.shape,l.shape);return{a:()=>{const p=Rt(l,"float32");let d=Se(r,Se(p,Ko(o,Yt(p,ln(1)))));const f=Dr(o.shape,c);return f.length>0&&(d=Qt(d,f)),Me(d,o.shape)},b:()=>{const p=ms(o,0),d=fs(p,ns(o),Kn(o));let f=Se(r,Se(i,d));const m=Dr(l.shape,c);return m.length>0&&(f=Qt(f,m)),Me(f,l.shape)}}}},{kernelName:Br,inputsToSave:["x","alpha"],gradFunc:(r,e)=>{const[t,s]=e,i=ms(t,0);return{x:()=>fs(i,r,Se(r,s)),alpha:()=>{let o=fs(i,Kn(r),Se(r,t));const l=Dr(s.shape,r.shape);return l.length>0&&(o=Qt(o,l)),Me(o,s.shape)}}}},{kernelName:Bu,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>an(r,Er(hr(t)))}}},{kernelName:Ti,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e,s=Se(Ga(t,6),Sc(t));return{x:()=>Se(r,Rt(s,"float32"))}}},{kernelName:Pl,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Se(r,Rt(Sc(t),"float32"))}}},{kernelName:Qr,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Me(r,t.shape)}}},{kernelName:vh,inputsToSave:["images"],gradFunc:(r,e,t)=>{const[s]=e,i={dy:r,images:s};return{images:()=>be.runKernel(Gs,i,t)}}},{kernelName:te,inputsToSave:["images"],gradFunc:(r,e,t)=>{const[s]=e,i={dy:r,images:s};return{images:()=>be.runKernel(bh,i,t)}}},{kernelName:Do,gradFunc:(r,e,t)=>{const{dims:s}=t,i=Dn(s,r.shape);return{x:()=>ei(r,i)}}},{kernelName:zl,gradFunc:r=>({x:()=>Kn(r)})},{kernelName:Ca,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Er(an(r,Se(Ko(t,1.5),2)))}}},{kernelName:lo,inputsToSave:["condition"],gradFunc:(r,e)=>{const[t]=e;return{condition:()=>Rt(Kn(t),"float32"),t:()=>Se(r,Rt(t,r.dtype)),e:()=>Se(r,Rt(sl(t),r.dtype))}}},{kernelName:Pi,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>{const s=ms(t,ln(0)),i=ln(bm),o=ln(jp),l=Se(r,o),c=Se(Se(r,i),Qs(Rt(t,"float32")));return fs(s,l,c)}}}},{kernelName:Oo,outputsToSave:[!0],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Se(r,Se(t,Yt(ln(1),t)))}}},{kernelName:$o,gradFunc:r=>({x:()=>Kn(r)})},{kernelName:ea,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Se(Kh(Rt(t,"float32")),r)}}},{kernelName:uo,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Se(_p(Rt(t,"float32")),r)}}},{kernelName:Qi,inputsToSave:["x"],gradFunc:(r,e,t)=>{const[s]=e,{begin:i,size:o}=t,l=s.shape,[c,p]=$f(s,i,o),d=[];for(let f=0;f<r.rank;f++)d.push([c[f],l[f]-c[f]-p[f]]);return{x:()=>Ei(r,d)}}},{kernelName:Vu,outputsToSave:[!0],gradFunc:(r,e,t)=>{const[s]=e,{dim:i}=t,o=Se(r,s);return{logits:()=>Yt(o,Se(Qt(o,[i],!0),s))}}},{kernelName:ta,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Se(r,ua(t))}}},ze,ze,ft,ft,{kernelName:Bl,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>an(r,Se(Es(Rt(t,"float32")),2))}}},{kernelName:Ul,inputsToSave:["a","b"],gradFunc:(r,e)=>{const[t,s]=e,i=ln(2);return{a:()=>Se(r,Se(i,Yt(t,s))),b:()=>Se(r,Se(i,Yt(s,t)))}}},{kernelName:Gu,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Se(r,Se(Rt(t,"float32"),2))}}},{kernelName:qu,gradFunc:r=>({x:()=>Kn(r)})},{kernelName:Hs,inputsToSave:["a","b"],gradFunc:(r,e)=>{const[t,s]=e,i=An(t.shape,s.shape);return{a:()=>{let o=r;const l=Dr(t.shape,i);return l.length>0&&(o=Qt(o,l)),Me(o,t.shape)},b:()=>{let o=r;const l=Dr(s.shape,i);return l.length>0&&(o=Qt(o,l)),Me(Er(o),s.shape)}}}},{kernelName:rp,inputsToSave:["x"],gradFunc:(r,e,t)=>{const[s]=e,i=s.shape.slice(),{axis:o}=t;Dn(o,s.shape).forEach(p=>{i[p]=1});const l=Me(r,i),c=Se(l,$r(s.shape,"float32"));return{x:()=>c}}},{kernelName:Mh,inputsToSave:["x"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>an(r,hr(Kh(t)))}}},{kernelName:_h,outputsToSave:[!0],gradFunc:(r,e)=>{const[t]=e;return{x:()=>Se(Yt(ln(1),hr(t)),r)}}},{kernelName:zi,inputsToSave:["x"],gradFunc:(r,e,t)=>{const[s]=e,{reps:i}=t;return{x:()=>{let o=Kn(s);if(1===s.rank)for(let l=0;l<i[0];++l)o=vt(o,Gn(r,[l*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let l=0;l<i[0];++l)for(let c=0;c<i[1];++c)o=vt(o,Gn(r,[l*s.shape[0],c*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let l=0;l<i[0];++l)for(let c=0;c<i[1];++c)for(let p=0;p<i[2];++p)o=vt(o,Gn(r,[l*s.shape[0],c*s.shape[1],p*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let l=0;l<i[0];++l)for(let c=0;c<i[1];++c)for(let p=0;p<i[2];++p)for(let d=0;d<i[3];++d)o=vt(o,Gn(r,[l*s.shape[0],c*s.shape[1],p*s.shape[2],d*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return o}}}},{kernelName:kh,gradFunc:(r,e,t)=>{const s=t,{perm:i}=s,o=rl(i);return{x:()=>Xn(r,o)}}},{kernelName:La,gradFunc:(r,e,t)=>{const s=t,{axis:i}=s;return{value:()=>yi(r,i)}}},{kernelName:ju,inputsToSave:["segmentIds"],gradFunc:(r,e)=>{const[t]=e;return{x:()=>function(s,i){const o=Zs(i,Kn(i)),l=ru(s,o);let c=ca(i,ln(0,"int32"));const p=l.rank-c.rank;for(let f=0;f<p;++f)c=Is(c,f+1);c=gi(c,$r(l.shape,"bool"));const d=Kn(l);return fs(c,l,d)}(r,t)}}},{kernelName:ip,gradFunc:r=>({x:()=>Kn(r)})}];for(const r of et)Bn(r);let gt;function Lt(){return null==gt&&(gt=F0().epsilon()),gt}Qe().prototype.abs=function(){return this.throwIfDisposed(),qr(this)},Qe().prototype.acos=function(){return this.throwIfDisposed(),lc(this)},Qe().prototype.acosh=function(){return this.throwIfDisposed(),Kl(this)},Qe().prototype.add=function(r){return this.throwIfDisposed(),vt(this,r)},Qe().prototype.all=function(r,e){return this.throwIfDisposed(),Zo(this,r,e)},Qe().prototype.any=function(r,e){return this.throwIfDisposed(),Jo(this,r,e)},Qe().prototype.argMax=function(r){return this.throwIfDisposed(),Yl(this,r)},Qe().prototype.argMin=function(r){return this.throwIfDisposed(),Gh(this,r)},Qe().prototype.asScalar=function(){return this.throwIfDisposed(),F(1===this.size,()=>"The array must have only 1 element."),Me(this,[])},Qe().prototype.asType=function(r){return this.throwIfDisposed(),Rt(this,r)},Qe().prototype.as1D=function(){return this.throwIfDisposed(),Me(this,[this.size])},Qe().prototype.as2D=function(r,e){return this.throwIfDisposed(),Me(this,[r,e])},Qe().prototype.as3D=function(r,e,t){return this.throwIfDisposed(),Me(this,[r,e,t])},Qe().prototype.as4D=function(r,e,t,s){return this.throwIfDisposed(),Me(this,[r,e,t,s])},Qe().prototype.as5D=function(r,e,t,s,i){return this.throwIfDisposed(),Me(this,[r,e,t,s,i])},Qe().prototype.asin=function(){return this.throwIfDisposed(),cc(this)},Qe().prototype.asinh=function(){return this.throwIfDisposed(),Hh(this)},Qe().prototype.atan=function(){return this.throwIfDisposed(),Uf(this)},Qe().prototype.atan2=function(r){return this.throwIfDisposed(),bp(this,r)},Qe().prototype.atanh=function(){return this.throwIfDisposed(),Vf(this)},Qe().prototype.avgPool=function(r,e,t,s){return this.throwIfDisposed(),wp(this,r,e,t,s)},Qe().prototype.batchToSpaceND=function(r,e){return this.throwIfDisposed(),hc(this,r,e)},Qe().prototype.batchNorm=function(r,e,t,s,i){return this.throwIfDisposed(),Vr(this,r,e,t,s,i)},Qe().prototype.broadcastTo=function(r){return this.throwIfDisposed(),_i(this,r)},Qe().prototype.cast=function(r){return this.throwIfDisposed(),Rt(this,r)},Qe().prototype.ceil=function(){return this.throwIfDisposed(),Hf(this)},Qe().prototype.clipByValue=function(r,e){return this.throwIfDisposed(),Js(this,r,e)},Qe().prototype.concat=function(r,e){return this.throwIfDisposed(),r instanceof Un&&(r=[r]),dr([this,...r],e)},Qe().prototype.conv1d=function(r,e,t,s,i,o){return this.throwIfDisposed(),dc(this,r,e,t,s,i,o)},Qe().prototype.conv2dTranspose=function(r,e,t,s,i){return this.throwIfDisposed(),eu(this,r,e,t,s,i)},Qe().prototype.conv2d=function(r,e,t,s,i,o){return this.throwIfDisposed(),Wa(this,r,e,t,s,i,o)},Qe().prototype.cos=function(){return this.throwIfDisposed(),Kh(this)},Qe().prototype.cosh=function(){return this.throwIfDisposed(),_p(this)},Qe().prototype.cumsum=function(r,e,t){return this.throwIfDisposed(),el(this,r,e,t)},Qe().prototype.depthToSpace=function(r,e){return this.throwIfDisposed(),tu(this,r,e)},Qe().prototype.depthwiseConv2d=function(r,e,t,s,i,o){return this.throwIfDisposed(),fi(this,r,e,t,s,i,o)},Qe().prototype.dilation2d=function(r,e,t,s,i){return this.throwIfDisposed(),Zh(this,r,e,t,s,i)},Qe().prototype.divNoNan=function(r){return this.throwIfDisposed(),Jh(this,r)},Qe().prototype.div=function(r){return this.throwIfDisposed(),an(this,r)},Qe().prototype.dot=function(r){return this.throwIfDisposed(),Kf(this,r)},Qe().prototype.elu=function(){return this.throwIfDisposed(),yo(this)},Qe().prototype.equal=function(r){return this.throwIfDisposed(),$s(this,r)},Qe().prototype.erf=function(){return this.throwIfDisposed(),kp(this)},Qe().prototype.exp=function(){return this.throwIfDisposed(),Qs(this)},Qe().prototype.expandDims=function(r){return this.throwIfDisposed(),Is(this,r)},Qe().prototype.expm1=function(){return this.throwIfDisposed(),Ep(this)},Qe().prototype.fft=function(){return this.throwIfDisposed(),ld(this)},Qe().prototype.flatten=function(){return this.throwIfDisposed(),Me(this,[this.size])},Qe().prototype.floor=function(){return this.throwIfDisposed(),nu(this)},Qe().prototype.floorDiv=function(r){return this.throwIfDisposed(),xp(this,r)},Qe().prototype.gather=function(r,e){return this.throwIfDisposed(),ru(this,r,e)},Qe().prototype.greaterEqual=function(r){return this.throwIfDisposed(),ca(this,r)},Qe().prototype.greater=function(r){return this.throwIfDisposed(),ms(this,r)},Qe().prototype.ifft=function(){return this.throwIfDisposed(),wc(this)},Qe().prototype.irfft=function(){return this.throwIfDisposed(),Dp(this)},Qe().prototype.isFinite=function(){return this.throwIfDisposed(),Yf(this)},Qe().prototype.isInf=function(){return this.throwIfDisposed(),Qh(this)},Qe().prototype.isNaN=function(){return this.throwIfDisposed(),Zf(this)},Qe().prototype.leakyRelu=function(r){return this.throwIfDisposed(),su(this,r)},Qe().prototype.lessEqual=function(r){return this.throwIfDisposed(),Ga(this,r)},Qe().prototype.less=function(r){return this.throwIfDisposed(),ed(this,r)},Qe().prototype.localResponseNormalization=function(r,e,t,s){return this.throwIfDisposed(),Qf(this,r,e,t,s)},Qe().prototype.logSigmoid=function(){return this.throwIfDisposed(),O0(this)},Qe().prototype.logSoftmax=function(r){return this.throwIfDisposed(),em(this,r)},Qe().prototype.logSumExp=function(r,e){return this.throwIfDisposed(),td(this,r,e)},Qe().prototype.log=function(){return this.throwIfDisposed(),ns(this)},Qe().prototype.log1p=function(){return this.throwIfDisposed(),nl(this)},Qe().prototype.logicalAnd=function(r){return this.throwIfDisposed(),gi(this,r)},Qe().prototype.logicalNot=function(){return this.throwIfDisposed(),sl(this)},Qe().prototype.logicalOr=function(r){return this.throwIfDisposed(),Cp(this,r)},Qe().prototype.logicalXor=function(r){return this.throwIfDisposed(),Fg(this,r)},Qe().prototype.matMul=function(r,e,t){return this.throwIfDisposed(),Fn(this,r,e,t)},Qe().prototype.maxPool=function(r,e,t,s){return this.throwIfDisposed(),il(this,r,e,t,s)},Qe().prototype.max=function(r,e){return this.throwIfDisposed(),ha(this,r,e)},Qe().prototype.maximum=function(r){return this.throwIfDisposed(),Zs(this,r)},Qe().prototype.mean=function(r,e){return this.throwIfDisposed(),Ir(this,r,e)},Qe().prototype.min=function(r,e){return this.throwIfDisposed(),xo(this,r,e)},Qe().prototype.minimum=function(r){return this.throwIfDisposed(),ja(this,r)},Qe().prototype.mirrorPad=function(r,e){return this.throwIfDisposed(),al(this,r,e)},Qe().prototype.mod=function(r){return this.throwIfDisposed(),nd(this,r)},Qe().prototype.mul=function(r){return this.throwIfDisposed(),Se(this,r)},Qe().prototype.neg=function(){return this.throwIfDisposed(),Er(this)},Qe().prototype.norm=function(r,e,t){return this.throwIfDisposed(),hd(this,r,e,t)},Qe().prototype.notEqual=function(r){return this.throwIfDisposed(),da(this,r)},Qe().prototype.oneHot=function(r,e=1,t=0){return this.throwIfDisposed(),Ph(this,r,e,t)},Qe().prototype.onesLike=function(){return this.throwIfDisposed(),Os(this)},Qe().prototype.pad=function(r,e){return this.throwIfDisposed(),Ei(this,r,e)},Qe().prototype.pool=function(r,e,t,s,i){return this.throwIfDisposed(),Ap(this,r,e,t,s,i)},Qe().prototype.pow=function(r){return this.throwIfDisposed(),Ko(this,r)},Qe().prototype.prelu=function(r){return this.throwIfDisposed(),yc(this,r)},Qe().prototype.prod=function(r,e){return this.throwIfDisposed(),id(this,r,e)},Qe().prototype.reciprocal=function(){return this.throwIfDisposed(),nm(this)},Qe().prototype.relu=function(){return this.throwIfDisposed(),rs(this)},Qe().prototype.relu6=function(){return this.throwIfDisposed(),bo(this)},Qe().prototype.reshapeAs=function(r){return this.throwIfDisposed(),Me(this,r.shape)},Qe().prototype.reshape=function(r){return this.throwIfDisposed(),Me(this,r)},Qe().prototype.resizeBilinear=function(r,e,t){return this.throwIfDisposed(),K0(this,r,e,t)},Qe().prototype.resizeNearestNeighbor=function(r,e,t){return this.throwIfDisposed(),Y0(this,r,e,t)},Qe().prototype.reverse=function(r){return this.throwIfDisposed(),ei(this,r)},Qe().prototype.rfft=function(){return this.throwIfDisposed(),pa(this)},Qe().prototype.round=function(){return this.throwIfDisposed(),ou(this)},Qe().prototype.rsqrt=function(){return this.throwIfDisposed(),lu(this)},Qe().prototype.selu=function(){return this.throwIfDisposed(),rm(this)},Qe().prototype.separableConv2d=function(r,e,t,s,i,o){return this.throwIfDisposed(),ll(this,r,e,t,s,i,o)},Qe().prototype.sigmoid=function(){return this.throwIfDisposed(),ua(this)},Qe().prototype.sign=function(){return this.throwIfDisposed(),im(this)},Qe().prototype.sin=function(){return this.throwIfDisposed(),ys(this)},Qe().prototype.sinh=function(){return this.throwIfDisposed(),Ci(this)},Qe().prototype.slice=function(r,e){return this.throwIfDisposed(),Gn(this,r,e)},Qe().prototype.softmax=function(r){return this.throwIfDisposed(),od(this,r)},Qe().prototype.softplus=function(){return this.throwIfDisposed(),fc(this)},Qe().prototype.spaceToBatchND=function(r,e){return this.throwIfDisposed(),gc(this,r,e)},Qe().prototype.split=function(r,e){return this.throwIfDisposed(),xs(this,r,e)},Qe().prototype.sqrt=function(){return this.throwIfDisposed(),Es(this)},Qe().prototype.square=function(){return this.throwIfDisposed(),hr(this)},Qe().prototype.squaredDifference=function(r){return this.throwIfDisposed(),Ai(this,r)},Qe().prototype.squeeze=function(r){return this.throwIfDisposed(),fa(this,r)},Qe().prototype.stack=function(r,e){this.throwIfDisposed();const t=r instanceof Un?[this,r]:[this,...r];return yi(t,e)},Qe().prototype.step=function(r){return this.throwIfDisposed(),Sc(this,r)},Qe().prototype.stridedSlice=function(r,e,t,s,i,o,l,c){return this.throwIfDisposed(),om(this,r,e,t,s,i,o,l,c)},Qe().prototype.sub=function(r){return this.throwIfDisposed(),Yt(this,r)},Qe().prototype.sum=function(r,e){return this.throwIfDisposed(),Qt(this,r,e)},Qe().prototype.tan=function(){return this.throwIfDisposed(),Fp(this)},Qe().prototype.tanh=function(){return this.throwIfDisposed(),go(this)},Qe().prototype.tile=function(r){return this.throwIfDisposed(),mi(this,r)},Qe().prototype.toBool=function(){return this.throwIfDisposed(),Rt(this,"bool")},Qe().prototype.toFloat=function(){return this.throwIfDisposed(),Rt(this,"float32")},Qe().prototype.toInt=function(){return this.throwIfDisposed(),Rt(this,"int32")},Qe().prototype.topk=function(r,e){return this.throwIfDisposed(),lm(this,r,e)},Qe().prototype.transpose=function(r){return this.throwIfDisposed(),Xn(this,r)},Qe().prototype.unique=function(r){return this.throwIfDisposed(),Op(this,r)},Qe().prototype.unsortedSegmentSum=function(r,e){return this.throwIfDisposed(),Pp(this,r,e)},Qe().prototype.unstack=function(r){return this.throwIfDisposed(),Ri(this,r)},Qe().prototype.where=function(r,e){return this.throwIfDisposed(),fs(r,this,e)},Qe().prototype.zerosLike=function(){return this.throwIfDisposed(),Kn(this)};class Ut extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ut.prototype)}}class tn extends Error{constructor(e){super(e),Object.setPrototypeOf(this,tn.prototype)}}class me extends Error{constructor(e){super(e),Object.setPrototypeOf(this,me.prototype)}}class Ht extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ht.prototype)}}class us extends Error{constructor(e){super(e),Object.setPrototypeOf(this,us.prototype)}}function Yn(r,e){if(Array.isArray(r)){let t=[];for(let s=0;s<e;s++)t=t.concat(r);return t}{const t=new Array(e);return t.fill(r),t}}function vr(r,e){if(!r)throw new us(e)}function Li(r,e){let t=0;for(const s of r)s===e&&t++;return t}function ss(r){return 1===r.length?r[0]:r}function ir(r){return Array.isArray(r)?r:[r]}function xi(r){const e=r.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==e[0]?e:"private"+e}function Ns(r){return r.length<=1||-1===r.indexOf("_")?r:r.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let Nr={};function Ct(r){if(null==r)return null;const e={};return e.className=r.getClassName(),e.config=r.getConfig(),e}function Sm(r){if(null!=r&&"object"==typeof r)if(Array.isArray(r))r.forEach(e=>Sm(e));else{const e=Object.keys(r);for(const t of e){const s=r[t];null!=s&&"object"==typeof s&&(Array.isArray(s)||"ndarray"!==s.type||"number"!=typeof s.value?Sm(s):r[t]=s.value)}}}function yd(r,e={},t={},s="object",i=!1){if("string"==typeof r){const o=r;let l;if(o in t)l=t[o];else if(o in Nr)l=Nr[o];else if(l=e[o],null==l)throw new me(`Unknown ${s}: ${r}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return l}{const o=r;if(null==o.className||null==o.config)throw new me(`${s}: Improper config format: ${JSON.stringify(o)}.\n'className' and 'config' must set.`);const l=o.className;let c,p;if(l in t?[c,p]=t[l]:l in Nr?[c,p]=Nr.className:l in e&&([c,p]=e[l]),null==c)throw new me(`Unknown ${s}: ${l}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=p){const d={};for(const y of Object.keys(Nr))d[y]=Nr[y];for(const y of Object.keys(t))d[y]=t[y];o.config.customObjects=d;const f=Object.assign({},Nr);for(const y of Object.keys(t))Nr[y]=t[y];Sm(o.config);const m=p(c,o.config,t,i);return Nr=Object.assign({},f),m}{const d=Object.assign({},Nr);for(const m of Object.keys(t))Nr[m]=t[m];const f=new c(o.config);return Nr=Object.assign({},d),f}}}function ti(r,e){return-1*((t=r)<(s=e)?-1:t>s?1:0);var t,s}function dl(r){if(null==r)return r;const e=[];for(const t of r)-1===e.indexOf(t)&&e.push(t);return e}function gx(r){if(null==r)throw new me(`Invalid value in obj: ${JSON.stringify(r)}`);for(const e in r)if(r.hasOwnProperty(e))return!1;return!0}function pu(r,e,t){if(null!=t&&r.indexOf(t)<0)throw new me(`${t} is not a valid ${e}.  Valid values are ${r} or null/undefined.`)}function Xp(r,e,t=0,s=1/0){return vr(t>=0),vr(s>=t),Array.isArray(r)&&r.length>=t&&r.length<=s&&r.every(i=>typeof i===e)}function cs(r,e){Array.isArray(r)?(F(r.length>0,()=>`${e} is unexpectedly an empty array.`),r.forEach((t,s)=>cs(t,`element ${s+1} of ${e}`))):F(Number.isInteger(r)&&r>0,()=>`Expected ${e} to be a positive integer, but got ${gy(r)}.`)}function gy(r){return null===r?"null":Array.isArray(r)?"["+r.map(e=>gy(e)).join(",")+"]":"string"==typeof r?`"${r}"`:`${r}`}function fu(r){return"relu"===r?"relu":"linear"===r?"linear":"elu"===r?"elu":null}function Tm(r,e){return Re(()=>Es(Qt(Se(r,r),e,!0)))}class xd extends ac{getConfig(){return{}}}class bd extends xd{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Re(()=>{const t=Tm(e,this.axis),s=Js(t,0,this.maxValue);return Se(e,an(s,vt(Lt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}bd.className="MaxNorm",St(bd);class yy extends xd{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Re(()=>an(e,vt(Lt(),Tm(e,this.axis))))}getConfig(){return{axis:this.axis}}}yy.className="UnitNorm",St(yy);class Kp extends xd{apply(e){return rs(e)}}Kp.className="NonNeg",St(Kp);class Mm extends xd{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Re(()=>{const t=Tm(e,this.axis),s=vt(Se(this.rate,Js(t,this.minValue,this.maxValue)),Se(1-this.rate,t));return Se(e,an(s,vt(Lt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Mm.className="MinMaxNorm",St(Mm);const xy={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ae(r){return Ct(r)}function at(r,e={}){return yd(r,Hi.getMap().classNameMap,e,"constraint")}function Le(r){return null==r?null:"string"==typeof r?at({className:r in xy?xy[r]:r,config:{}}):r instanceof xd?r:at(r)}function ot(r){return new bd(r)}function Nt(r){return new yy(r)}function kn(){return new Kp}function dn(r){return new Mm(r)}const Cn=["channelsFirst","channelsLast"],Hn=["nearest","bilinear"],pr=["valid","same","causal"],tr=["max","avg"],jn=["sum","mul","concat","ave"],Tn=new Map;function fr(r){pu(Cn,"DataFormat",r)}function Jn(r){pu(pr,"PaddingMode",r)}function pl(r){pu(tr,"PoolMode",r)}const bi=[];function qi(r,e){bi.push(r);try{const t=e();return bi.pop(),t}catch(t){throw bi.pop(),t}}function fl(r){if(!zs(r))throw new Error("Not a valid tensor name: '"+r+"'");return(0===bi.length?"":bi.join("/")+"/")+r}function vs(r){if(!zs(r))throw new Error("Not a valid tensor name: '"+r+"'");Tn.has(r)||Tn.set(r,0);const e=Tn.get(r);if(Tn.set(r,Tn.get(r)+1),e>0){const t=`${r}_${e}`;return Tn.set(t,1),t}return r}const wo=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function zs(r){return!!r.match(wo)}function As(r,e,t){null==e&&(e=0),null==t&&(t=r.length);let s=1;for(let i=e;i<t;++i)s*=r[i];return s}function ni(r){if(0===r.length)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<r.length;t++){const s=r[t];s<e&&(e=s)}return e}function vd(r){if(0===r.length)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<r.length;t++){const s=r[t];s>e&&(e=s)}return e}function ml(r,e){if(e<r)throw new me(`end (${e}) < begin (${r}) is forbidden.`);const t=[];for(let s=r;s<e;++s)t.push(s);return t}function yx(r,e){return Rt(r,e)}function by(r,e=-1){const t=r.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),Me(r,t)}function Yp(r,e,t){return Re(()=>{switch(r.rank){case 1:return Ni(r,e,t);case 2:return Bg(r,[e,0],[t,r.shape[1]]);case 3:return am(r,[e,0,0],[t,r.shape[1],r.shape[2]]);case 4:return ul(r,[e,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3]]);case 5:return Gn(r,[e,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4]]);case 6:return Gn(r,[e,0,0,0,0,0],[t,r.shape[1],r.shape[2],r.shape[3],r.shape[4],r.shape[5]]);default:throw new me(`sliceAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}})}function yv(r,e,t){return Re(()=>{switch(r.rank){case 1:return Ni(r,e,t);case 2:return Bg(r,[0,e],[r.shape[0],t]);case 3:return am(r,[0,0,e],[r.shape[0],r.shape[1],t]);case 4:return ul(r,[0,0,0,e],[r.shape[0],r.shape[1],r.shape[2],t]);default:throw new me(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function xx(r,e,t,s){return Re(()=>{switch(r.rank){case 1:return Ni(r,e,t);case 2:switch(s){case 1:return Yp(r,e,t);case 2:return yv(r,e,t);default:throw new me(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Yp(r,e,t);case 2:return am(r,[0,e,0],[r.shape[0],t,r.shape[2]]);case 3:return yv(r,e,t);default:throw new me(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Yp(r,e,t);case 2:return ul(r,[0,e,0,0],[r.shape[0],t,r.shape[2],r.shape[3]]);case 3:return ul(r,[0,0,e,0],[r.shape[0],r.shape[1],t,r.shape[3]]);case 4:return yv(r,e,t);default:throw new me(`The axis is not within the rank of the tensor ${s}`)}default:throw new me(`sliceAlongLastAxis() received an unsupported tensor rank: ${r.rank}`)}})}function xv(r,e=-1){let t;return e<0&&(t=r[0].rank,e=0!==t?t:0),e===r[0].rank&&(e=-1),dr(r,e)}function zw(r,e){switch(r.rank){case 1:return pi([r,e]);case 2:return jf([r,e],0);case 3:return Ql([r,e],0);case 4:return Rg([r,e],0);default:throw new me(`concatAlongFirstAxis() received an unsupported tensor rank: ${r.rank}`)}}function bv(r,e){if(Array.isArray(e)||(e=[e]),r.rank!==e.length)throw new me(`The length of input n (${e.length}) does not match the number of dimensions in input x (${r.rank})`);return mi(r,e)}function bx(r,e=0,t=1,s,i){return Tr(r,e,t,s,i)}function Nc(r,e,t,s){if(r.rank<2||e.rank<2)throw new Ht(`dot requires both inputs to be rank >= 2 but got x shape = ${r.shape} and y shape = ${e.shape}`);if(e.rank>=3&&r.shape.slice(-1)[0]!==e.shape.slice(-2)[0])throw new Ht(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${r.shape} and  y shape = ${e.shape}`);if(2===r.rank&&2===e.rank)return pm({a:r,b:e,transposeA:!1,transposeB:!1,bias:s?vv(r.rank,s,"channelsLast"):null,activation:t});{const i=r.shape.slice(),o=i.pop();r=Me(r,[-1,o]);const l=e.shape.slice(),c=l.pop(),p=l.pop(),d=[...l,c],f=Array.from({length:e.rank},(y,v)=>0===v?e.rank-2:v<=e.rank-2?v-1:v);e=Me(Xn(e,f),[p,-1]);const m=[...i,...d];return Me(pm({a:r,b:e,transposeA:!1,transposeB:!1,bias:s?vv(r.rank,s,"channelsLast"):null,activation:t}),m)}}function Bw(r,e,t){return Re(()=>(e=Array.isArray(e)?bs(e,"int32"):Rt(e,"int32"),ru(r,e,t)))}function vy(r){return Se(r,r)}function vv(r,e,t){const s=e.shape;if(1!==e.rank&&e.rank!==r)throw new me(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${r}`);if(5===r){if("channelsFirst"===t)return Me(e,1===s.length?[1,s[0],1,1,1]:[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===t)return Me(e,1===s.length?[1,1,1,1,s[0]]:[1].concat(s))}else if(4===r){if("channelsFirst"===t)return Me(e,1===s.length?[1,s[0],1,1]:[1,s[2],s[0],s[1]]);if("channelsLast"===t)return Me(e,1===s.length?[1,1,1,s[0]]:[1].concat(s))}else if(3===r){if("channelsFirst"===t)return Me(e,1===s.length?[1,s[0],1]:[1,s[1],s[0]]);if("channelsLast"===t)return Me(e,1===s.length?[1,1,s[0]]:[1].concat(s))}else if(r<3)return e;throw new me(`Unsupported input rank by biasAdd: ${e.rank}`)}function gl(r,e,t){return Re(()=>(null==t&&(t="channelsLast"),fr(t),vt(r,vv(r.rank,e,t))))}function Uw(r,e,t,s){return Re(()=>Gg(r,e,t,s))}function wy(r,e,t=!1){return t?r():e()}const n_=["fanIn","fanOut","fanAvg"],r_=["normal","uniform","truncatedNormal"];class So extends ac{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class wv extends So{apply(e,t){return Kr(e,t)}}wv.className="Zeros",St(wv);class vx extends So{apply(e,t){return $r(e,t)}}vx.className="Ones",St(vx);class Sv extends So{constructor(e){if(super(),"object"!=typeof e)throw new me(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new me(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Re(()=>Se(ln(this.value),$r(e,t)))}getConfig(){return{value:this.value}}}Sv.className="Constant",St(Sv);class Tv extends So{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Ii(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Tv.className="RandomUniform",St(Tv);class Mv extends So{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Ht(`randomNormal does not support dType ${t}.`);return bx(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Mv.className="RandomNormal",St(Mv);class _v extends So{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Ht(`truncatedNormal does not support dType ${t}.`);return ud(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}_v.className="TruncatedNormal",St(_v);class kv extends So{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Re(()=>{if(2!==e.length||e[0]!==e[1])throw new me("Identity matrix initializer can only be used for 2D square matrices.");return Se(this.gain,Ip(e[0]))})}getConfig(){return{gain:this.gain}}}kv.className="Identity",St(kv);class Xi extends So{constructor(e){if(super(),e.scale<0)throw new me(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,pu(n_,"FanMode",this.mode),this.distribution=null==e.distribution?"normal":e.distribution,pu(r_,"Distribution",this.distribution),this.seed=e.seed}apply(e,t){const s=function(c,p="channelsLast"){let d,f;if(fr(p),2===c.length)d=c[0],f=c[1];else if(-1!==[3,4,5].indexOf(c.length)){if("channelsFirst"===p){const m=As(c,2);d=c[1]*m,f=c[0]*m}else if("channelsLast"===p){const m=As(c,0,c.length-2);d=c[c.length-2]*m,f=c[c.length-1]*m}}else{const m=As(c);d=Math.sqrt(m),f=Math.sqrt(m)}return[d,f]}(e),i=s[0],o=s[1];let l=this.scale;if(l/="fanIn"===this.mode?Math.max(1,i):"fanOut"===this.mode?Math.max(1,o):Math.max(1,(i+o)/2),"normal"===this.distribution){const c=Math.sqrt(l);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Ht(`${this.getClassName()} does not support dType ${t}.`);return ud(e,0,c,t,this.seed)}{const c=Math.sqrt(3*l);return Ii(e,-c,c,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Xi.className="VarianceScaling",St(Xi);class wx extends Xi{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Xi.className}}wx.className="GlorotUniform",St(wx);class Sx extends Xi{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Xi.className}}Sx.className="GlorotNormal",St(Sx);class Tx extends Xi{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Xi.className}}Tx.className="HeNormal",St(Tx);class Mx extends Xi{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Xi.className}}Mx.className="HeUniform",St(Mx);class _x extends Xi{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Xi.className}}_x.className="LeCunNormal",St(_x);class kx extends Xi{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Xi.className}}kx.className="LeCunNormal",St(kx);class Ev extends So{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Ht("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Re(()=>{if(e.length<2)throw new Ht("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const s=bx(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let i=ix.gramSchmidt(s);return e[0]>e[1]&&(i=Xn(i)),Se(this.gain,i)})}getConfig(){return{gain:this.gain,seed:this.seed}}}Ev.className="Orthogonal",St(Ev);const Vw={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ww(r,e={}){return yd(r,Hi.getMap().classNameMap,e,"initializer")}function Yr(r){return Ct(r)}function Wr(r){if("string"==typeof r){const e=r in Vw?Vw[r]:r;if("GlorotNormal"===e)return new Sx;if("GlorotUniform"===e)return new wx;if("HeNormal"===e)return new Tx;if("HeUniform"===e)return new Mx;if("LeCunNormal"===e)return new _x;if("LeCunUniform"===e)return new kx;{const t={};return t.className=e,t.config={},Ww(t)}}return r instanceof So?r:Ww(r)}function s_(){return new wv}function i_(){return new vx}function a_(r){return new Sv(r)}function o_(r){return new Tv(r)}function l_(r){return new Mv(r)}function u_(r){return new _v(r)}function c_(r){return new kv(r)}function h_(r){return new Xi(r)}function d_(r){return new wx(r)}function p_(r){return new Sx(r)}function f_(r){return new Tx(r)}function m_(r){return new Mx(r)}function g_(r){return new _x(r)}function y_(r){return new kx(r)}function x_(r){return new Ev(r)}let b_=0;function Gw(){return b_++}const Ex={};function Ix(r=""){return r in Ex||(Ex[r]=0),Ex[r]+=1,r+Ex[r].toString()}function Iv(r){return Array.isArray(r)&&Array.isArray(r[0])}function Cx(r){return 0===r.length?[]:Array.isArray(r[0])?r:[r]}function $n(r){let e;if(Array.isArray(r)){if(1!==r.length)throw new me(`Expected Tensor length to be 1; got ${r.length}`);e=r[0]}else e=r;return e}function mr(r){if(Array.isArray(r)&&Array.isArray(r[0])){if(1===r.length)return(r=r)[0];throw new me(`Expected exactly 1 Shape; got ${r.length}`)}return r}function Nx(r){let e=0;for(const t of r)e+=0===t.shape.length?1:t.shape.reduce((s,i)=>s*i);return e}class Hw{constructor(e,t="float32",s="Variable",i=!0,o=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Gw(),this.originalName=fl(s=null==s?"Variable":s),this.name=vs(this.originalName),this.trainable_=i,this.constraint=o,this.val=um(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(t,s){if(t.shape.toString()!==s.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(t.shape)+" vs. "+JSON.stringify(s.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Cv(r){return r.map(e=>e.read())}function Nv(r){r.forEach(e=>{e[0].write(e[1])})}class ws{constructor(e){this.dtype=e.dtype,this.shape=e.shape,this.ndim=null!=e.shape?e.shape.length:e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class yl{constructor(e,t,s,i,o,l,c){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=i,this.callArgs=o,this.outputTensorIndex=c,this.id=Gw(),null!=l&&(this.originalName=fl(l),this.name=vs(this.originalName)),this.rank=t.length}}let v_=0;class Ax{constructor(e,t){this.callArgs=t,this.id=v_++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)null!=s&&s.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)e.push(null!=t?t.name:null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let w_=0;class Qn extends ac{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=w_++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=xi(s)+"_"+Ix(s)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let s;if(null!=e.batchInputShape)s=e.batchInputShape;else if(null!=e.inputShape){let o=null;null!=e.batchSize&&(o=e.batchSize),s=[o].concat(e.inputShape)}this.batchInputShape=s;let i=e.dtype;null==i&&(i=e.inputDType),null==i&&(i="float32"),this.dtype=i}this.initialWeights=null!=e.weights?e.weights:null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new tn(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new me(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return ss(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return ss(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ut(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Ut(`Layer ${this.name} is not connected, no input to return.`);return ss(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Ut(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ut(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ss(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ir(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=ir(this.inputSpec);if(e.length!==t.length)throw new me(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let s=0;s<e.length;s++){const i=e[s],o=t[s];if(null==o)continue;const l=i.rank;if(null!=o.ndim&&l!==o.ndim)throw new me(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${l}`);if(null!=o.maxNDim&&l>o.maxNDim)throw new me(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${l}`);if(null!=o.minNDim&&l<o.minNDim)throw new me(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${l}.`);if(null!=o.dtype&&i.dtype!==o.dtype)throw new me(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${i.dtype}.`);if(o.axes){const c=i.shape;for(const p in o.axes){const d=Number(p),f=o.axes[p],m=d>=0?c[d]:c[c.length+d];if(null!=f&&-1===[f,null].indexOf(m))throw new me(`Input ${s} is incompatible with layer ${this.name}: expected axis ${d} of input shape to have value ${f} but got shape ${c}.`)}}if(null!=o.shape)for(let c=0;c<o.shape.length;++c){const p=o.shape[c],d=i.shape[c];if(null!=p&&null!=d&&p!==d)throw new me(`Input ${s} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${i.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=ir(e);let i=!0;for(const l of s)if(!(l instanceof yl)){i=!1;break}let o=!0;for(const l of s)if(l instanceof yl){o=!1;break}if(i===o)throw new me("Arguments to apply() must be all SymbolicTensors or all Tensors");return qi(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const l=[];for(const c of ir(e))l.push(c.shape);this.build(ss(l)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let l=this.call(e,t);const c=ir(l),p=[];for(let d of c)-1!==s.indexOf(d)&&(d=d.clone()),p.push(d);if(l=ss(p),null!=this.activityRegularizer)throw new Ht("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return l}{const l=function(f){f=ir(f);const m=[];for(const y of f)m.push(y.shape);return ss(m)}(e),c=this.computeOutputShape(l);let p;const d="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?l[0]:l),p=null!=c&&c.length>0&&Array.isArray(c[0])?c.map((f,m)=>new yl(d,f,this,ir(e),t,this.name,m)):new yl(d,c,this,ir(e),t,this.name),this.addInboundNode(e,p,null,null,l,c,t),this._refCount++,null!=this.activityRegularizer)throw new Ht("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return p}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,i)=>{null!=s&&null!=e[i]&&e[i]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Ut(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);-1===e.indexOf(s)&&e.push(s)}if(1===e.length){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&1===t.length?t[0]:t}throw new Ut(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new tn(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Nx(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Cv(e?this.trainableWeights:this.weights)}setWeights(e){Re(()=>{const t=this.weights;if(t.length!==e.length)throw new me(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const s=[],i=Cv(t);for(let o=0;o<i.length;++o){const l=i[o],c=t[o],p=e[o];if(!He(l.shape,p.shape))throw new me(`Layer weight shape ${l.shape} not compatible with provided weight shape ${p.shape}`);s.push([c,p])}Nv(s)})}addWeight(e,t,s,i,o,l,c){if(-1!==this._addedWeightNames.indexOf(e))throw new me(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==s&&(s="float32"),this.fastWeightInitDuringBuild&&(i=Wr("zeros"));const p=i.apply(t,s),d=new Hw(p,s,e,l,c);return p.dispose(),null!=o&&this.addLoss(()=>o.apply(d.read())),null==l&&(l=!0),l?this._trainableWeights.push(d):this._nonTrainableWeights.push(d),d}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ir(e),null!=this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(s=>{if(null!=s)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}addInboundNode(e,t,s,i,o,l,c=null){const p=ir(e);t=ir(t),s=ir(s),i=ir(i),o=Cx(o),l=Cx(l);const d=[],f=[],m=[];for(const y of p)d.push(y.sourceLayer),f.push(y.nodeIndex),m.push(y.tensorIndex);new Ax({outboundLayer:this,inboundLayers:d,nodeIndices:f,tensorIndices:m,inputTensors:p,outputTensors:t,inputMasks:s,outputMasks:i,inputShapes:o,outputShapes:l},c);for(let y=0;y<t.length;y++)t[y].sourceLayer=this,t[y].nodeIndex=this.inboundNodes.length-1,t[y].tensorIndex=y}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function jw(r,e,t){if((null==e||null!=t&&t>0)&&(e=r.sourceLayer,t=r.nodeIndex),0===e.inboundNodes.length)return[r];{const s=e.inboundNodes[t];if(0===s.inboundLayers.length)return s.inputTensors;{const i=[];for(let o=0;o<s.inboundLayers.length;o++){const l=jw(s.inputTensors[o],s.inboundLayers[o],s.nodeIndices[o]);for(const c of l)-1===i.indexOf(c)&&i.push(c)}return i}}}class _m extends Qn{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Ix("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new me("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new me("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new me("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const i=new yl(this.dtype,this.batchInputShape,this,[],{},this.name);i.nodeIndex=0,i.tensorIndex=0,new Ax({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[i],outputTensors:[i],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new me(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function qw(r){if(null==r.batchShape&&null==r.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=r.batchShape&&null!=r.shape)throw new me("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=r.batchShape;null!=r.shape&&null==e&&(e=[null].concat(r.shape));let t=r.dtype;return null==t&&(t="float32"),new _m({batchInputShape:e,name:r.name,dtype:t,sparse:r.sparse}).inboundNodes[0].outputTensors[0]}async function wd(r){if(null==r)return;const e=[],t=[],s=[];for(const i in r){const o=r[i];if("number"!=typeof o){const l=o;e.push(l.data()),t.push(i),s.push(l)}}if(e.length>0){const i=await Promise.all(e);for(let o=0;o<i.length;++o)r[t[o]]=i[o][0];_n(s)}}function Xw(r){if(null!=r)for(const e in r){const t=r[e];"number"!=typeof t&&t.dispose()}}var Kw;_m.className="InputLayer",St(_m),function(r){r[r.SILENT=0]="SILENT",r[r.VERBOSE=1]="VERBOSE"}(Kw||(Kw={}));class km{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Yw{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class S_ extends km{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const s=null==t.size?0:t.size;this.seen+=s;for(const i in t){const o=t[i];if("number"==typeof o)this.totals.hasOwnProperty(i)||(this.totals[i]=0),this.totals[i]=this.totals[i]+o*s;else{let l;i in this.totals?l=this.totals[i]:this.totals[i]=0;const c=Re(()=>vt(this.totals[i],Se(o,s)));this.totals[i]=c,null!=l&&l.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const s of this.params.metrics)null!=this.totals[s]&&("number"==typeof this.totals[s]?t[s]=this.totals[s]/this.seen:Re(()=>{const i=Se(an(1,this.seen),this.totals[s]);t[s]=i,this.totals[s].dispose(),ps(t[s])}))}}class Zw extends km{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const s in t)null==this.history[s]&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const o in this.history){const l=this.history[o];for(let c=0;c<l.length;++c)"number"!=typeof l[c]&&(e.push(l[c].data()),t.push(o),s.push(c))}const i=await Promise.all(e);for(let o=0;o<i.length;++o)this.history[t[o]][s[o]].dispose(),this.history[t[o]][s[o]]=i[o][0]}}class Jw extends km{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Rd(this.yieldEvery)&&(this.maybeWait=function(s,i){let o,l=wr();return(...c)=>{const p=wr();return p-l<i||(l=p,o=s(...c)),o}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const i=[];null!=this.yield&&(await wd(s),i.push(this.yield(e,t,s))),i.push(Gp()),await Promise.all(i)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await wd(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];null!=this.epochEnd&&(await wd(t),s.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&s.push(Gp()),await Promise.all(s)}async onBatchBegin(e,t){null!=this.batchBegin&&(await wd(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];null!=this.batchEnd&&(await wd(t),s.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?s.push(Gp()):Rd(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){null!=this.trainBegin&&(await wd(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await wd(e),await this.trainEnd(e))}}function Qw(r,e){return null==r&&(r={}),r instanceof km?[r]:Array.isArray(r)&&r[0]instanceof km?r:ir(r).map(t=>new Jw(t,e))}class Xa{constructor(){}static registerCallbackConstructor(e,t){F(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),Xa.checkForDuplicate(t),null==Xa.constructors[e]&&(Xa.constructors[e]=[]),Xa.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Xa.constructors)Xa.constructors[+t].forEach(s=>{if(s===e)throw new me("Duplicate callback constructor.")})}static clear(){Xa.constructors={}}static createCallbacks(e){const t=[];for(const s in Xa.constructors){const i=+s;e>=i&&t.push(...Xa.constructors[i])}return t.map(s=>new s)}}function eS(r,e,t,s,i,o,l,c,p){const d=new Zw,f=[new S_,...Xa.createCallbacks(e)];null!=r&&f.push(...r),f.push(d);const m=new Yw(f);return m.setParams({epochs:t,initialEpoch:s,samples:i,steps:o,batchSize:l,verbose:e,doValidation:c,metrics:p}),{callbackList:m,history:d}}function xl(r,e={},t=!1){return yd(r,Hi.getMap().classNameMap,e,"layer",t)}function Rx(r,e){return Re(()=>{"float32"!==r.dtype&&(r=Rt(r,"float32"));const t=Qt(vy(r),e,!0),s=Vh(t.shape,Lt()),i=Es(Zs(t,s));return an(r,i)})}function Zp(r,e){return Re(()=>Ir(vy(Yt(e,r)),-1))}function Lx(r,e){return Re(()=>Ir(qr(Yt(e,r)),-1))}function Em(r,e){return Re(()=>{const t=Yt(r,e),s=Js(qr(r),Lt(),Number.MAX_VALUE),i=qr(an(t,s));return Se(100,Ir(i,-1))})}function Sy(r,e,t=!1){return Re(()=>{if(t)e=od(e);else{const s=Qt(e,e.shape.length-1,!0);e=an(e,s)}return e=Js(e,Lt(),1-Lt()),Er(Qt(Se(Rt(r,"float32"),ns(e)),e.shape.length-1))})}function Dx(r,e,t=!1){return Re(()=>{const s=Rt(nu(function(o){const l=[As(o.shape)];return Me(o,l)}(r)),"int32"),i=(e=Js(e,Lt(),1-Lt())).shape;return Sy(Me(Ph(s,i[i.length-1]),i),e,t)})}function Fx(r,e){return Re(()=>{let t;return t=Js(e,Lt(),1-Lt()),t=ns(an(t,Yt(1,t))),Ir(function(s,i){if(!He(s.shape,i.shape))throw new me(`logits and labels must have the same shape, but got shapes ${JSON.stringify(s.shape)} and ${JSON.stringify(i.shape)}`);return Re(()=>{const o=rs(i),l=Er(qr(i));return vt(Yt(o,Se(i,s)),nl(Qs(l)))})}(r,t),-1)})}function Av(r,e){return Re(()=>{const t=Rx(r,-1),s=Rx(e,-1),i=Se(t,s);return Er(Qt(i,-1))})}Xa.constructors={};const $x={meanSquaredError:Zp,meanAbsoluteError:Lx,meanAbsolutePercentageError:Em,meanSquaredLogarithmicError:function(r,e){return Re(()=>{const t=Js(e,Lt(),Number.MAX_VALUE),s=ns(vt(1,t)),i=Js(r,Lt(),Number.MAX_VALUE),o=ns(vt(1,i));return Ir(vy(Yt(s,o)),-1)})},squaredHinge:function(r,e){return Re(()=>{const t=Zs(0,Yt(1,Se(r,e)));return Ir(vy(t),-1)})},hinge:function(r,e){return Re(()=>{const t=Zs(0,Yt(1,Se(r,e)));return Ir(t,-1)})},categoricalHinge:function(r,e){return Re(()=>{const t=Qt(Se(r,e),-1),s=ha(Se(Yt(1,r),e),-1);return Zs(0,vt(1,Yt(s,t)))})},logcosh:function(r,e){return Re(()=>{const t=Math.log(2),s=Yt(e,r),i=Yt(vt(s,fc(Se(-2,s))),t);return Ir(i,-1)})},categoricalCrossentropy:Sy,sparseCategoricalCrossentropy:Dx,binaryCrossentropy:Fx,kullbackLeiblerDivergence:function(r,e){return Re(()=>{const t=Js(r,Lt(),1),s=Js(e,Lt(),1);return Qt(Se(r,ns(an(t,s))),-1)})},poisson:function(r,e){return Re(()=>{const t=ns(vt(Lt(),e));return Ir(Yt(e,Se(r,t)),-1)})},cosineProximity:Av};function Rv(r){if("string"==typeof r){if(r in $x)return $x[r];let e=`Unknown loss ${r}`;throw r.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${r}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new me(e)}return r}function Lv(r,e){return Re(()=>{const t=Se(.5,Os(e)),s=yx(ms(e,t),r.dtype);return Ir($s(r,s),-1)})}function Dv(r,e){return Re(()=>yx($s(Yl(r,-1),Yl(e,-1)),"float32"))}function tS(r,e){return Re(()=>Rt(Qt(gi($s(r,1),$s(e,1))),"float32"))}function nS(r,e){return Re(()=>{const t=tS(r,e),s=(o=r,l=e,Re(()=>Rt(Qt(gi($s(o,0),$s(l,1))),"float32"))),i=vt(t,s);var o,l;return Rt(fs(ms(i,0),an(t,i),0),"float32")})}function rS(r,e){return Fx(r,e)}function sS(r,e){return r.rank===e.rank&&(r=fa(r,[r.rank-1])),(e=Yl(e,-1)).dtype!==r.dtype&&(e=Rt(e,r.dtype)),Rt($s(r,e),"float32")}const Fv=Sy,iS=Dx,Ox={binaryAccuracy:Lv,categoricalAccuracy:Dv,precision:nS,categoricalCrossentropy:Fv,sparseCategoricalCrossentropy:iS,mse:Zp,MSE:Zp,mae:Lx,MAE:Lx,mape:Em,MAPE:Em,cosine:Av};function T_(r){if("string"==typeof r&&r in Ox)return Ox[r];if("string"!=typeof r&&null!=r)return r;throw new me(`Unknown metric ${r}`)}function Px(r){if(vr(null!==r,`Unknown LossOrMetricFn ${r}`),"string"==typeof r)return r;{let e;for(const t of Object.keys($x))if($x[t]===r){e=t;break}if(void 0!==e)return e;for(const t of Object.keys(Ox))if(Ox[t]===r){e=t;break}return void 0!==e?e:r.name}}function aS(r,e,t=!1){if(null==r||"object"!=typeof r||Object.getPrototypeOf(r)!==Object.prototype||!$v(r))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(r);s.length>1048576&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function $v(r){if(null===r)return!0;if("object"==typeof r){if(Object.getPrototypeOf(r)===Object.prototype){const e=Object.keys(r);for(const t of e)if("string"!=typeof t||!$v(r[t]))return!1;return!0}if(Array.isArray(r)){for(const e of r)if(!$v(e))return!1;return!0}return!1}{const e=typeof r;return"string"===e||"number"===e||"boolean"===e}}function zx(r,e,t=console.log){let s="";for(let i=0;i<r.length;++i)i>0&&(s=s.slice(0,s.length-1)+" "),s+=r[i],s=s.slice(0,e[i]),s+=" ".repeat(e[i]-s.length);t(s)}function M_(r,e,t){let s;try{s=JSON.stringify(r.outputShape)}catch(i){s="multiple"}zx([`${r.name} (${r.getClassName()})`,s,r.countParams().toString()],e,t)}function __(r,e,t,s){let i;try{i=JSON.stringify(r.outputShape)}catch(d){i="multiple"}const o=[];for(const d of r.inboundNodes)if(!(null!=t&&t.length>0&&-1===t.indexOf(d)))for(let f=0;f<d.inboundLayers.length;++f)o.push(`${d.inboundLayers[f].name}[${d.nodeIndices[f]}][${d.tensorIndices[f]}]`);const l=r.name,c=r.getClassName(),p=0===o.length?"":o[0];zx([`${l} (${c})`,i,r.countParams().toString(),p],e,s);for(let d=1;d<o.length;++d)zx(["","","",o[d]],e,s)}function oS(r,e,t){return("inboundNodes"===r||"outputLayers"===r||"inputLayers"===r)&&0===e&&"string"==typeof t}function Ty(r,e){if(null===r)return null;if("string"==typeof r)return Ns(r);if("number"==typeof r||"boolean"==typeof r)return r;if(r instanceof Array){const t=[],s=r.length;for(let i=0;i<s;++i){const o=r[i];oS(e,i,o)?t.push(o):t.push(Ty(o,e))}return t}{const t={};for(const s of Object.keys(r)){const i=r[s];if("name"===s&&"string"==typeof i)t[s]=i;else{const o=Ns(s);t[o]=Ty(i,o)}}return t}}function Ov(r,e){if(null==r)return null;if("string"==typeof r)return xi(r);if("number"==typeof r||"boolean"==typeof r)return r;if(r instanceof Array){const t=[],s=r.length;for(let i=0;i<s;++i){const o=r[i];oS(e,i,o)?t.push(o):t.push(Ov(o,e))}return t}{const t={};for(const s of Object.keys(r)){const i=r[s];t[xi(s)]="name"!==s&&"className"!==s||"string"!=typeof i?Ov(i,s):i}return t}}const Bx="3.9.0";class Sd{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Sd)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(null!=this.id2Value[e.id])throw new me(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(i,o){if(null==i.dtype||i.dtype===o.dtype)return o;try{return Rt(o,i.dtype)}catch(l){throw new me(`The dtype of the feed (${o.dtype}) can not be cast to the dtype of the key '${i.name}' (${i.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=s&&(this.id2Mask[e.id]=s),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof yl){if(null==this.id2Value[e.id])throw new me(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new me(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof yl){if(null==this.id2Value[e.id])throw new me(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new me(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&_n(this.id2Mask)}}const Pv={},lS={};function My(r,e,t,s){const i=null!=t&&t.training,o=Array.isArray(r),l=o?r:[r],c=l.map(S=>S.name),p=[],d=e.names();for(const S of c)-1!==d.indexOf(S)?p.push(e.getValue(S)):p.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const f=c.join(",")+"|"+e.names().join(",");let m,y;if(null==Pv[f]){const S=function(_,k){F(null!=_&&_.length>0,()=>"Expected at least one fetch, got none");let I=[],A={};if(1===_.length){const R=uS(_[0],k);I=R.sorted,A=R.recipientMap}else{const R=new Set;for(const P of _){const{sorted:U,recipientMap:W}=uS(P,k);for(const se of U)R.has(se.name)||(I.push(se),R.add(se.name));for(const se in W)null==A[se]&&(A[se]=new Set),W[se].forEach(G=>A[se].add(G))}}return{sorted:I,recipientCounts:k_(A)}}(l,e);m=S.sorted,y=S.recipientCounts,Pv[f]=m,lS[f]=y}m=Pv[f],y={},i||Object.assign(y,lS[f]);const v=new Sd(e);for(let S=0;S<m.length;++S){if(null!=s){const pe=yp().numTensors;pe>s.maxNumTensors&&(s.maxNumTensors=pe),pe<s.minNumTensors&&(s.minNumTensors=pe)}const _=m[S],k=_.sourceLayer;if(k instanceof _m)continue;const I=[],A=[],R=[];let P=!1;for(const pe of _.inputs){const de=v.getValue(pe),ye=v.getMask(pe);I.push(de),A.push(ye),null!=ye&&(P=!0),i||(y[pe.name]--,0!==y[pe.name]||e.hasKey(pe)||-1!==c.indexOf(pe.name)||de.isDisposed||!0===pe.sourceLayer.stateful||R.push(de))}P&&((t=t||{}).mask=A[0]);const U=ir(k.apply(I,t));let W=null;k.supportsMasking&&(W=k.computeMask(I,A));const se=E_(_),G=Array.isArray(se)?se:[se];for(let pe=0;pe<G.length;++pe){v.hasKey(G[pe])||v.add(G[pe],U[pe],Array.isArray(W)?W[0]:W);const de=c.indexOf(G[pe].name);-1!==de&&(p[de]=U[pe])}i||_n(R)}return v.disposeMasks(),o?p:p[0]}function k_(r){const e={};for(const t in r)e[t]=r[t].size;return e}function uS(r,e){const t=new Set,s=[],i={};for(const c of e.names())t.add(c);const o=[],l=[];for(o.push(r);o.length>0;){const c=o[o.length-1];if(t.has(c.name)){o.pop();continue}const p=l[l.length-1]===o.length-1;if(0===c.inputs.length||p)o.pop(),s.push(c),t.add(c.name),p&&l.pop();else{l.push(o.length-1);for(const d of c.inputs)null==i[d.name]&&(i[d.name]=new Set),i[d.name].add(c.name),t.has(d.name)||o.push(d)}}return{sorted:s,recipientMap:i}}function E_(r){let e;if(1===r.sourceLayer.inboundNodes.length)e=r.sourceLayer.output;else{let t=null;for(let s=0;s<r.sourceLayer.inboundNodes.length;++s)for(const i of r.sourceLayer.inboundNodes[s].outputTensors)if(i.id===r.id){t=s;break}e=r.sourceLayer.getOutputAt(t)}return e}class bl extends Qn{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const A=this.getClassName().toLowerCase();this.name=Ix(A)}if(this.supportsMasking=!1,this.trainable_=!0,this.inputs=Array.isArray(e.inputs)?e.inputs.slice():[e.inputs],this.outputs=Array.isArray(e.outputs)?e.outputs.slice():[e.outputs],dl(this.inputs).length!==this.inputs.length)throw new me(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(A=>A.name)}`);dl(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(A=>A.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const A of this.outputs){const P=A.nodeIndex,U=A.tensorIndex;this.outputLayers.push(A.sourceLayer),this.outputLayersNodeIndices.push(P),this.outputLayersTensorIndices.push(U)}for(const A of this.inputs){const R=A.sourceLayer,P=A.nodeIndex,U=A.tensorIndex;vr(0===P,"input layer has >1 nodes"),vr(0===U,"input layer has >1 tensors"),this.inputLayers.push(R),this.inputLayersNodeIndices.push(P),this.inputLayersTensorIndices.push(U)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let A=0;A<this.inputLayers.length;A++){const R=this.inputLayers[A];if(!(R instanceof _m))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${A} (0-based) originates from layer type ${R.getClassName()}.`);this.inputNames.push(R.name),this.feedInputShapes.push(R.batchInputShape),this.feedInputNames.push(R.name)}for(const A of this.outputLayers)this.outputNames.push(A.name);this.internalInputShapes=this.inputs.map(A=>A.shape),this.internalOutputShapes=this.outputs.map(A=>A.shape);const t={},s={},i={},o={},l={},c=[],p=(A,R,P,U,W,se)=>{null!=U&&null!=W&&null!=se||(U=A.sourceLayer,W=A.nodeIndex,se=A.tensorIndex);const G=U.inboundNodes[W];if(-1!==P.indexOf(G))throw new tn(`The tensor ${A.name} at layer "${U.name}" is part of a cycle.`);if(-1!==R.indexOf(G))return;this.containerNodes.add(bl.nodeKey(U,W)),U.id in l||(l[U.id]=Object.keys(l).length),-1===P.indexOf(G)&&P.push(G);const pe=G.inboundLayers.length;for(let de=0;de<pe;de++)p(G.inputTensors[de],R,P,G.inboundLayers[de],G.nodeIndices[de],G.tensorIndices[de]);for(R.push(G);P.indexOf(G)>=0;)P.splice(P.indexOf(G),1);c.push(G)},d=[],f=[];for(const A of this.outputs)p(A,d,f);const m=c.slice().reverse();for(const A of m){s[A.id]=A,A.id in t||(t[A.id]=0);let R=t[A.id];R=Math.max(R,null==i[A.outboundLayer.id]?0:i[A.outboundLayer.id]),i[A.outboundLayer.id]=R,o[A.outboundLayer.id]=A.outboundLayer,t[A.id]=R;for(let U=0;U<A.inboundLayers.length;U++){const G=A.inboundLayers[U].inboundNodes[A.nodeIndices[U]];t[G.id]=Math.max(R+1,null==t[G.id]?0:t[G.id]),s[G.id]=G}}const y={};for(const A in t){const R=t[A];R in y||(y[R]=[]),y[R].push(s[A])}const v={};for(const A in i){const R=i[A];R in v||(v[R]=[]),v[R].push(o[A])}let S=Object.keys(v).map(A=>parseInt(A,10)).sort(ti);this.layers=[];for(const A of S){const R=v[A];R.sort((P,U)=>{const W=l[P.id],se=l[U.id];return W<se?-1:W>se?1:0});for(const P of R)P instanceof bl&&this.internalContainerRefs.push(P),this.layers.push(P)}this.layersByDepth=v,S=Object.keys(y).map(A=>parseInt(A,10)).sort(ti);const _=this.inputs.slice(),k=[];for(const A of S)for(const R of y[A]){const P=R.outboundLayer;if(null!=P){for(const U of R.inputTensors)if(-1===_.indexOf(U))throw new tn(`Graph disconnected: cannot obtain value for tensor ${U} at layer "${P.name}". The following previous layers were accessed without issue: ${k}`);for(const U of R.outputTensors)_.push(U);k.push(P.name)}}this.nodesByDepth=y;const I=this.layers.map(A=>A.name);for(const A of I){const R=I.filter(P=>P===A).length;if(1!==R)throw new tn(`The name "${A}" is used ${R} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(I))}this.outboundNodes=[],this.inboundNodes=[],new Ax({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(A=>null),outputMasks:this.outputs.map(A=>null),inputShapes:this.inputs.map(A=>A.shape),outputShapes:this.outputs.map(A=>A.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new me("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let i=0;for(const l of this.layers)for(const c of l.weights){if(null!=s[c.originalName])throw new me(`Duplicate weight name: ${c.originalName}`);s[c.originalName]=c,i++}const o=[];for(const l in e){let c=l;if(null==s[l]){const p=l.split("/");c=p.slice(0,-2).concat([p[p.length-1]]).join("/")}if(null!=s[c])o.push([s[c],e[l]]);else if(t)throw new me(`Provided weight data has no target variable: ${l}`);delete s[c]}if(t){const l=[];for(const c in s)l.push(c);if(l.length>0)throw new me(`${l.length} of ${i} weights are not set: ${l}`)}Nv(o)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Bx}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=Ov(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return Re(()=>{e=ir(e);const s=new Sd;for(let i=0;i<this.inputs.length;++i)s.add(this.inputs[i],e[i]);return My(this.outputs,s,t)})}computeMask(e,t){return Re(()=>{let s;return e=ir(e),s=null==t?Yn(null,e.length):ir(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=Cx(e);if(t.length!==this.inputLayers.length)throw new me(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let c=0;c<t.length;c++)s[this.inputLayers[c].name+"_0_0"]=t[c];const i=Object.keys(this.nodesByDepth).map(c=>parseInt(c,10)).sort(ti);if(i.length>1)for(const c of i){const p=this.nodesByDepth[c];for(const d of p){const f=d.outboundLayer;if(-1!==this.inputLayers.map(S=>S.id).indexOf(f.id))continue;const m=[];for(let S=0;S<d.inboundLayers.length;S++)m.push(s[`${d.inboundLayers[S].name}_${d.nodeIndices[S]}_${d.tensorIndices[S]}`]);const y=Cx(f.computeOutputShape(ss(m))),v=f.inboundNodes.indexOf(d);for(let S=0;S<y.length;S++)s[`${f.name}_${v}_${S}`]=y[S]}}const o=[],l=[];for(let c=0;c<this.outputLayers.length;c++)l.push(`${this.outputLayers[c].name}_${this.outputLayersNodeIndices[c]}_${this.outputLayersTensorIndices[c]}`);for(let c=0;c<l.length;c++){const p=l[c];vr(p in s),o.push(s[p])}return ss(o)}runInternalGraph(e,t){null==t&&(t=Yn(null,e.length));const s={};for(let p=0;p<this.inputs.length;++p)s[this.inputs[p].id]=[e[p],t[p]];const i=Object.keys(this.nodesByDepth).map(p=>parseInt(p,10)).sort(ti);for(const p of i){const d=this.nodesByDepth[p];for(const f of d){const m=f.outboundLayer,y=f.inputTensors,v=f.outputTensors,S=new Array;for(const _ of y)_.id in s&&S.push(s[_.id]);if(S.length===y.length){let _,k,I,A,R={};if(null!=f.callArgs&&(R=f.callArgs),1===S.length){const[P,U]=S[0];null==R.mask&&(R.mask=U),I=ir(m.call(P,R)),A=ir(m.computeMask(P,U)),_=[P],k=[U]}else _=S.map(P=>P[0]),k=S.map(P=>P[1]),null==R.mask&&(R.mask=k),I=ir(m.call(_,R)),A=ir(m.computeMask(_,k));if(m.activityRegularizer)throw new Ht("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let P=0;P<v.length;++P)s[v[P].id]=[I[P],A[P]]}}}const o=[],l=[],c=[];for(const p of this.outputs){vr(p.id in s,`Could not compute output ${p.name} : ${p.id}`);const[d,f]=s[p.id];c.push(d.shape),o.push(d),l.push(f)}return[o,l,c]}buildNodeConversionMap(e){const t={};let s;for(const i of this.layers){s=i instanceof bl?1:0;for(let o=0;o<i.inboundNodes.length;o++){const l=bl.nodeKey(i,o);this.containerNodes.has(l)&&(t[l]=s,s+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new me(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new me("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===e)return s;throw new me(`No such layer: ${e}`)}calculateLosses(){return Re(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const i=bl.nodeKey(t,s);this.containerNodes.has(i)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const l of this.layers){const c=l.getClassName(),p=l.getConfig(),d=[];for(let m=0;m<l.inboundNodes.length;m++){const y=l.inboundNodes[m],v=bl.nodeKey(l,m);let S={};if(this.containerNodes.has(v)){if(y.callArgs)try{JSON.stringify(y.callArgs),S=y.callArgs}catch(_){console.warn(`Layer ${l.name} was passed non-serializable keyword arguments: ${y.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),S={}}if(y.inboundLayers.length>0){const _=[];for(let k=0;k<y.inboundLayers.length;k++){const I=y.inboundLayers[k],R=y.tensorIndices[k];let P=t[bl.nodeKey(I,y.nodeIndices[k])];null==P&&(P=0),_.push([I.name,P,R,S])}d.push(_)}}}const f={};f.name=l.name,f.className=c,f.config=p,f.inboundNodes=d,s.push(f)}e.layers=s;const i=[];for(let l=0;l<this.inputLayers.length;l++){const c=this.inputLayers[l],d=bl.nodeKey(c,this.inputLayersNodeIndices[l]);if(!this.containerNodes.has(d))continue;let f=t[d];null==f&&(f=0),i.push([c.name,f,this.inputLayersTensorIndices[l]])}e.inputLayers=i;const o=[];for(let l=0;l<this.outputLayers.length;l++){const c=this.outputLayers[l],d=bl.nodeKey(c,this.outputLayersNodeIndices[l]);if(!this.containerNodes.has(d))continue;let f=t[d];null==f&&(f=0),o.push([c.name,f,this.outputLayersTensorIndices[l]])}return e.outputLayers=o,e}static fromConfig(e,t,s={},i=!1){const o={},l={};function c(k,I){k.name in l?l[k.name].push(I):l[k.name]=[I]}function p(k,I){const A=[];let R;for(const P of I){const U=P[0],W=P[1],se=P[2];if(R=null==P[3]?{}:P[3],!(U in o))return void c(k,I);const G=o[U];if(G.inboundNodes.length<=W)return void c(k,I);A.push(G.inboundNodes[W].outputTensors[se])}A.length>0&&k.apply(ss(A),R)}function d(k){const I=k.name,A=xl(k,null!=t.customObjects?t.customObjects:{});A.setFastWeightInitDuringBuild(i),o[I]=A,k.inboundNodes.forEach(R=>{if(!(R instanceof Array))throw new me(`Corrupted configuration, expected array for nodeData: ${R}`);c(A,R)})}const f=t.name,m=t.layers;for(const k of m)d(k);for(;!gx(l);)for(const k of m){const I=o[k.name];if(I.name in l){const A=l[I.name];delete l[I.name];for(const R of A)p(I,R)}}const y=[],v=[],S=t.inputLayers;for(const k of S){const I=k[0],A=k[1],R=k[2];vr(I in o),y.push(o[I].inboundNodes[A].outputTensors[R])}const _=t.outputLayers;for(const k of _){const I=k[0],A=k[1],R=k[2];vr(I in o),v.push(o[I].inboundNodes[A].outputTensors[R])}return new e({inputs:y,outputs:v,name:f})}get stateful(){if(this._stateful)throw new me("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Re(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function cS(r,e){return function(t,s,i){const o=s.length;if(null==t||Array.isArray(t)&&0===t.length)return s.map(l=>null);if(1===o)return Array.isArray(t)&&1===t.length?t:"object"==typeof t&&s[0]in t?[t[s[0]]]:[t];if(Array.isArray(t)){if(t.length!==o)throw new Error(`Provided ${i} is an array of ${t.length} element(s), but the model has ${o} outputs. Make sure a set of weights is provided for each model output.`);return t}if("object"==typeof t&&Object.keys(t).length>0&&"object"==typeof t[Object.keys(t)[0]]){const l=[];return s.forEach(c=>{l.push(c in t?t[c]:null)}),l}throw new Error(`The model has multiple (${o}) outputs, so ${i} must be either an array with ${o} elements or an object with ${s} keys. Provided ${i} not understood: ${JSON.stringify(t)}`)}(r,e,"classWeight")}async function hS(r,e,t,s){if(null!=e||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=t){const i=Re(()=>{if(1===r.shape.length)return Xo(r);if(2===r.shape.length){if(r.shape[1]>1)return Yl(r,1);if(1===r.shape[1])return Me(r,[r.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${r.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${r.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await i.data());_n(i);const l=[];return o.forEach(c=>{if(null==t[c])throw new Error(`classWeight must contain all classes in the training data. The class ${c} exists in the data but not in classWeight`);l.push(t[c])}),bs(l,"float32")}return null}function I_(r,e){return Se(r,e)}function dS(r,e){let t,s;t=e.xs,s=e.ys,F(null!=t&&null!=s,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const o=pS("input",r.inputNames,t),l=pS("output",r.outputNames,s),c=o[0].shape[0];F(o.length===r.inputs.length,()=>`LayersModel has ${r.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(r.inputNames)})`),F(l.length===r.outputs.length,()=>`LayersModel has ${r.outputs.length} outputs, but the dataset provides ${l.length} outputs.  (Expected output keys: ${JSON.stringify(r.outputNames)})`);for(let p=0;p<o.length;p++)F(o[p].shape[0]===c,()=>`Batch size mismatch: input ${r.inputNames[p]} has ${o[p].shape[0]}; expected  ${c} based on input ${r.inputNames[0]}.`);for(let p=0;p<l.length;p++)F(l[p].shape[0]===c,()=>`Batch size mismatch: output ${r.outputNames[p]} has ${l[p].shape[0]}; expected  ${c} based on input ${r.inputNames[0]}.`);return{xs:o,ys:l}}function pS(r,e,t){if(t instanceof Un)return[t];if(Array.isArray(t))return F(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${r} keys ${e}.`),t;{const s=[];for(const i of e){if(null==t[i])throw new me(`The feature data generated by the dataset lacks the required ${r} key '${i}'.`);s.push(t[i])}return s}}function fS(r){return"function"==typeof r.iterator}function zv(r){F(r>0&&Number.isInteger(r),()=>`batchSize is required to be a positive integer, but got ${r}`)}function _y(r,e,t){return null==r?[null]:Array.isArray(r)?r.map(s=>Yp(s,e,t-e)):Yp(r,e,t-e)}function Bv(r,e){return Re(()=>null==r?null:Array.isArray(r)?r.map(t=>Bv(t,e)):Bw(r,"int32"===e.dtype?e:Rt(e,"int32")))}function Uv(r,e){const t=[];let s=0,i=null;for(;s<r;)i=s+e,i>=r&&(i=r),t.push([s,i]),s=i;return t}function mS(r){const e=[];r instanceof Un&&(r=[r]);for(let t=0;t<r.length;++t){const s=r[t];if(1===s.rank)e.push(by(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function Jp(r,e){if(null==r)return;const t=[];if(e instanceof Un)t.push(e.id);else if(Array.isArray(e))e.forEach(i=>t.push(i.id));else if(null!=e)for(const i in e)t.push(e[i].id);const s=[];if(r instanceof Un)-1===t.indexOf(r.id)&&s.push(r);else if(Array.isArray(r))r.forEach(i=>{-1===t.indexOf(i.id)&&s.push(i)});else if(null!=r)for(const i in r){const o=r[i];-1===t.indexOf(o.id)&&s.push(o)}s.forEach(i=>{i.isDisposed||i.dispose()})}function Vv(r){return Array.isArray(r)}function gS(r){return!(r instanceof Un||Vv(r))}function yS(r,e,t,s=!0,i=""){if(null==e||0===e.length){if(null!=r){let l=!1;if(Vv(r)&&r.length>0)l=!0;else if(gS(r)){for(const c in r)if(r.hasOwnProperty(c)){l=!0;break}}else l=!0;if(l)throw new me(`Error when checking model ${i} expected no data, but got ${r}`)}return[]}if(null==r)return e.map(l=>null);let o;if(gS(r)){r=r,o=[];for(const l of e){if(null==r[l])throw new me(`No data provided for "${l}". Need data for each key in: ${e}`);o.push(r[l])}}else if(Vv(r)){if((r=r).length!==e.length)throw new me(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${r}`);o=r}else{if(r=r,e.length>1)throw new me(`The model ${i} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${r.shape}`);o=[r]}if(o=mS(o),null!=t)for(let l=0;l<e.length;++l){if(null==t[l])continue;const c=o[l];if(c.shape.length!==t[l].length)throw new me(`Error when checking ${i}: expected ${e[l]} to have ${t[l].length} dimension(s). but got array with shape ${c.shape}`);for(let p=0;p<t[l].length;++p){if(0===p&&!s)continue;const d=c.shape[p],f=t[l][p];if(null!=f&&f>=0&&d!==f)throw new me(`${i} expected a batch of elements where each example has shape [${t[l].slice(1,t[l].length)}] (i.e.,tensor shape [*,${t[l].slice(1,t[l].length)}]) but the ${i} received an input with ${c.shape[0]} examples, each with shape [${c.shape.slice(1,c.shape.length)}] (tensor shape [${c.shape}])`)}}return o}function xS(r,e,t,s=!0,i=""){let o;if(Array.isArray(r)){if(r.length!==e.length)throw new me(`Error when checking model ${i}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${r.length} Tensors(s).`);o=r}else{if(e.length>1)throw new me(`The model expects ${e.length} ${i} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(r.shape)}.`);o=[r]}if(null!=t)for(let l=0;l<e.length;++l){if(null==t[l])continue;const c=o[l];if(c.shape.length!==t[l].length)throw new me(`Error when checking ${i}: expected ${e[l]} to have ${t[l].length} dimension(s), but got array with shape ${JSON.stringify(c.shape)}`);for(let p=0;p<t[l].length;++p){if(0===p&&!s)continue;const d=c.shape[p],f=t[l][p];if(null!=f&&f!==d)throw new me(`Error when checking ${i}: expected ${e[l]} to have shape ${JSON.stringify(t[l])} but got array with shape ${JSON.stringify(c.shape)}.`)}}}class Ac extends bl{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new me("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(i,o,l,c=console.log){const p=function(S){let _=!0;const k=[],I=[];for(const A in S.nodesByDepth)k.push(S.nodesByDepth[A]);for(const A of k){if(A.length>1||1===A.length&&A[0].inboundLayers.length>1){_=!1;break}I.push(...A)}if(_)for(const A of S.layers){let R=!1;for(const P of A.inboundNodes)if(-1!==I.indexOf(P)){if(R){_=!1;break}R=!0}if(!_)break}return _}(i),d=["Layer (type)","Output shape","Param #"];let f;if(p?(o=o||65,l=l||[.45,.85,1]):(o=o||98,l=l||[.33,.55,.67,1]),l[l.length-1]<=1&&(l=l.map(S=>Math.floor(o*S))),!p){d.push("Receives inputs"),f=[];for(const S in i.nodesByDepth)f.push(...i.nodesByDepth[S])}c("_".repeat(o)),zx(d,l,c),c("=".repeat(o));const m=i.layers;for(let S=0;S<m.length;++S)p?M_(m[S],l,c):__(m[S],l,f,c),c((S===m.length-1?"=":"_").repeat(o));i.checkTrainableWeightsConsistency();const y=function(S){let _;return _=Nx(null!=S.collectedTrainableWeights?S.collectedTrainableWeights:S.trainableWeights),_}(i),v=Nx(i.nonTrainableWeights);c(`Total params: ${y+v}`),c(`Trainable params: ${y}`),c(`Non-trainable params: ${v}`),c("_".repeat(o))}(this,e,t,s)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(l){const c={Adagrad:()=>hu.adagrad(.01),Adadelta:()=>hu.adadelta(1,.95,Lt()),Adam:()=>hu.adam(.001,.9,.999,Lt()),Adamax:()=>hu.adamax(.002,.9,.999,Lt(),0),RMSProp:()=>hu.rmsprop(.001,.9,0,Lt()),SGD:()=>hu.sgd(.01)};if(c.adagrad=c.Adagrad,c.adadelta=c.Adadelta,c.adam=c.Adam,c.adamax=c.Adamax,c.rmsprop=c.RMSProp,c.sgd=c.SGD,l in c)return c[l]();throw new me(`Unknown Optimizer ${l}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Ua))throw new me("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new me(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(c=>Rv(c))}else{const l=Rv(e.loss);this.outputs.forEach(c=>{t.push(l)})}else{e.loss=e.loss;for(const l in e.loss)if(-1===this.outputNames.indexOf(l))throw new me(`Unknown entry in loss dictionary: "${l}". Only expected the following keys: ${this.outputNames}`);for(const l of this.outputNames)null==e.loss[l]&&console.warn(`Output "${l}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${l} during training`),t.push(Rv(e.loss[l]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let l=0;l<this.outputs.length;++l){const c=this.internalOutputShapes[l];this.feedOutputNames.push(this.outputNames[l]),this.feedOutputShapes.push(c),this.feedLossFns.push(this.lossFunctions[l])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],qi("loss",()=>{for(let l=0;l<this.outputs.length;++l){if(-1!==s.indexOf(l))continue;const c=this.lossFunctions[l];this.outputs.length>1&&(this.metricsTensors.push([c,l]),this.metricsNames.push(this.outputNames[l]+"_loss"))}});const i=function(l,c){if(null==l||Array.isArray(l)&&0===l.length)return c.map(d=>[]);let p;if("string"==typeof l||"function"==typeof l)p=[l];else{if(!Array.isArray(l)&&"object"!=typeof l)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${l}`);p=l}if(Array.isArray(p))return c.map(d=>p);{const d=[];for(const f of c){let m=p.hasOwnProperty(f)?p[f]:[];Array.isArray(m)||(m=[m]),d.push(m)}return d}}(e.metrics,this.outputNames),o=(l,c,p)=>{this.outputNames.length>1&&(c=this.outputNames[l]+"_"+c),this.metricsNames.push(c),this.metricsTensors.push([p,l])};qi("metric",()=>{for(let l=0;l<this.outputs.length;++l)-1===s.indexOf(l)&&(c=>{let p,d,f;for(const m of c){if("string"==typeof m&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(m)){const v=this.internalOutputShapes[l];let S;1===v[v.length-1]||this.lossFunctions[l]===Fx?-1!==["accuracy","acc"].indexOf(m)?d=Lv:-1!==["crossentropy","ce"].indexOf(m)&&(d=rS):this.lossFunctions[l]===Dx?-1!==["accuracy","acc"].indexOf(m)?d=sS:-1!==["crossentropy","ce"].indexOf(m)&&(d=iS):-1!==["accuracy","acc"].indexOf(m)?d=Dv:-1!==["crossentropy","ce"].indexOf(m)&&(d=Fv),-1!==["accuracy","acc"].indexOf(m)?S="acc":-1!==["crossentropy","ce"].indexOf(m)&&(S="ce"),f=d,p=""+S}else f=T_(m),p=""+Px(m);let y;qi(p,()=>{y=f}),o(l,p,y)}})(i[l])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const i=null==s.batchSize?32:s.batchSize;zv(i);const o=this.standardizeUserDataXY(e,t,!0,i);try{const l=o[0].concat(o[1]);return this.makeTestFunction(),ss(this.testLoop(this.testFunction,l,i,s.verbose,s.steps))}finally{Jp(o[0],e),Jp(o[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(s,i,o){const l=null!=(o=o||{}).batches,c=s.testFunction;let p=[];if(o.verbose>0)throw new Ht("Verbose mode is not implemented yet.");F(!l||o.batches>0&&Number.isInteger(o.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(o.batches)}`);const d="function"==typeof i.next?i:await i.iterator();let f=0,m=0;for(;!l||m<o.batches;){const y=await d.next();if(p=Re(()=>{if(y.value){const{xs:v,ys:S}=dS(s,y.value),_=v.concat(S),k=Re(()=>c(_));if(_n(_),0===m)for(let A=0;A<k.length;++A)p.push(ln(0));const I=_[0].shape[0];for(let A=0;A<k.length;++A){const R=k[A],P=p[A];p[A]=Re(()=>vt(p[A],Se(I,R))),m>0&&_n(P)}_n(k),f+=I,++m}return p}),y.done){l&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${o.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let y=0;y<p.length;++y){const v=p[y];p[y]=an(p[y],f),_n(v)}return ss(p)}(this,e,t)}checkNumSamples(e,t,s,i="steps"){let o;if(null!=s){if(o=null,null!=t)throw new me(`If ${i} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new me(`Either the input data should have a defined shape, or ${i} shoud be specified.`);o=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return o}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new me("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),o=this.retrieveSymbolicTensors(s?t:[t]),l=new Sd;if(e instanceof Un&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new me(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let p=0;p<this.inputs.length;++p)l.add(this.inputs[p],e[p])}else for(const p of this.inputs){const d=e[p.name];if(null==d)throw new me(`No value is provided for the model's input ${p.name}`);l.add(p,d)}const c=My(o,l);return s?c:c[0]}retrieveSymbolicTensors(e){const t=Yn(null,e.length);let s=e.length;for(const i of this.layers){const o=Array.isArray(i.output)?i.output:[i.output],l=o.map(c=>c.name);for(let c=0;c<e.length;++c){const p=l.indexOf(e[c]);if(-1!==p&&(t[c]=o[p],s--),0===s)break}if(0===s)break}if(s>0){const i=[];throw t.forEach((o,l)=>{null==o&&i.push(e[l])}),new me(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(i)}`)}return t}predictLoop(e,t=32,s=!1){return Re(()=>{const i=this.checkNumSamples(e);if(s)throw new Ht("Verbose predictLoop() is not implemented yet.");const o=Uv(i,t),l=this.outputs.map(c=>[]);for(let c=0;c<o.length;++c)Re(()=>{const f=_y(e,o[c][0],o[c][1]),m=[];if(Array.isArray(f))for(let v=0;v<f.length;++v)m.push({key:this.inputs[v],value:f[v]});else m.push({key:this.inputs[0],value:f});const y=new Sd(m);return My(this.outputs,y)}).forEach((p,d)=>l[d].push(p));return ss(l.map(c=>dr(c,0)))})}predict(e,t={}){const s=mS(e);xS(s,this.inputNames,this.feedInputShapes,!1);try{const i=null==t.batchSize?32:t.batchSize;return zv(i),this.predictLoop(s,i)}finally{Jp(s,e)}}predictOnBatch(e){xS(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,i){if(null==this.optimizer_)throw new tn("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let l=0;l<this.feedOutputShapes.length;++l){const c=this.feedOutputShapes[l];o.push(this.feedLossFns[l]===Dx?c.slice(0,c.length-1).concat([1]):c)}if(function(l,c,p){const d=dl(l.map(m=>m.shape[0]));d.sort();const f=dl(c.map(m=>m.shape[0]));if(f.sort(),d.length>1)throw new me(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(l.map(m=>m.shape))}`);if(f.length>1)throw new me(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(c.map(m=>m.shape))}`);if(d.length>0&&f.length>0&&!He(d,f))throw new me(`Input Tensors should have the same number of samples as target Tensors. Found ${d[0]} input sample(s) and ${f[0]} target sample(s).`)}(e=yS(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=yS(t,this.feedOutputNames,o,!1,"target")),function(l,c,p){const d=[Zp,Fx,Sy];for(let f=0;f<l.length;++f){const m=l[f],y=c[f],v=p[f];if(null!=y){if(y===Sy&&1===m.shape[m.shape.length-1])throw new me(`You are passing a target array of shape ${m.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==d.indexOf(y)){const S=m.shape.slice(1),_=v.slice(1);for(let k=0;k<S.length;++k){const I=S[k],A=_[k];if(null!=A&&I!==A)throw new me(`A target Tensor with shape ${m.shape} was passed for an output of shape ${v}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=i&&i>0&&e[0].shape[0]%i!=0)throw new me(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${i}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,i,o=!0,l){const[c,p]=this.standardizeUserDataXY(e,t,o,l);if(null!=s)throw new Error("sample weight is not supported yet.");let d=null;if(null!=i){const f=cS(i,this.outputNames);d=[];for(let m=0;m<f.length;++m)d.push(await hS(p[m],null,f[m]))}return[c,p,d]}testLoop(e,t,s,i=0,o){return Re(()=>{const l=this.checkNumSamples(t,s,o,"steps"),c=[];if(i>0)throw new Ht("Verbose mode is not implemented yet.");if(null!=o)throw new Ht("steps mode in testLoop() is not implemented yet");{const p=Uv(l,s),d=bs(ml(0,l));for(let f=0;f<p.length;++f){const m=p[f][0],y=p[f][1],v=Yp(d,m,y-m),S=Bv(t,v),_=e(S);if(0===f)for(let k=0;k<_.length;++k)c.push(ln(0));for(let k=0;k<_.length;++k)c[k]=vt(c[k],Se(y-m,_[k]))}for(let f=0;f<c.length;++f)c[f]=an(c[f],l)}return c})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const i=e[s];let o=i;Li(e,i)>1&&(o+=`_${Li(e.slice(0,s),i)}`),t.push(o)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),i=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),l=[],c=this.collectedTrainableWeights.map(p=>p.read());return[this.optimizer_.minimize(()=>{const p=[];for(let y=0;y<this.inputs.length;++y)p.push({key:this.inputs[y],value:s[y]});const d=new Sd(p),f=My(this.outputs,d,{training:!0});let m;for(let y=0;y<this.lossFunctions.length;++y){let v=(0,this.lossFunctions[y])(i[y],f[y]);null!=o[y]&&(v=I_(v,o[y]));const S=Ir(v);t.push(S),m=0===y?v:vt(m,v)}for(let y=0;y<this.metricsTensors.length;++y){let v;if(this.outputs.length>1&&y<this.outputs.length)v=t[y];else{const _=this.metricsTensors[y][1];v=Ir((0,this.metricsTensors[y][0])(i[_],f[_]))}ps(v),l.push(v)}return m=Ir(m),this.calculateLosses().forEach(y=>{m=vt(m,y)}),m},!0,c)].concat(l)}}makeTestFunction(){this.testFunction=e=>Re(()=>{const t=[];let s;const i=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),l=[];for(let d=0;d<this.inputs.length;++d)l.push({key:this.inputs[d],value:i[d]});const c=new Sd(l),p=My(this.outputs,c);for(let d=0;d<this.lossFunctions.length;++d){const m=Ir((0,this.lossFunctions[d])(o[d],p[d]));s=0===d?m:vt(s,m),t.push(s)}for(let d=0;d<this.metricsTensors.length;++d){const m=this.metricsTensors[d][1],y=Ir((0,this.metricsTensors[d][0])(o[m],p[m]));t.push(y)}return t})}async fit(e,t,s={}){return async function(i,o,l,c={}){if(i.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let p,d,f,m,y,v,S;i.isTraining=!0;try{const _=null==c.batchSize?32:c.batchSize;zv(_);const k=!1,I=await i.standardizeUserData(o,l,c.sampleWeight,c.classWeight,k,_);p=I[0],d=I[1],S=I[2];let A,R=!1;if(null!=c.validationData&&c.validationData.length>0){if(R=!0,2!==c.validationData.length)throw 3===c.validationData.length?new Ht("validationData including sample weights is not supported yet."):new me(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${c.validationData} is invalid.`);f=c.validationData[0],m=c.validationData[1];const de=!0,ye=await i.standardizeUserData(f,m,null,null,de,_);y=ye[0],v=ye[1],A=y.concat(v)}else if(null!=c.validationSplit&&c.validationSplit>0&&c.validationSplit<1){R=!0;const de=Math.floor(p[0].shape[0]*(1-c.validationSplit)),ye=p[0].shape[0];y=_y(p,de,ye),p=_y(p,0,de),v=_y(d,de,ye),d=_y(d,0,de),A=y.concat(v)}else null!=c.validationSteps&&(R=!0);const P=p.concat(d).concat(S);i.checkTrainableWeightsConsistency();const U=i.makeTrainFunction(),W=i.getDedupedMetricsNames();let se,G;R?(i.makeTestFunction(),se=i.testFunction,G=W.slice().concat(W.map(de=>"val_"+de))):(se=null,A=[],G=W.slice());const pe=Qw(c.callbacks,c.yieldEvery);return await async function(de,ye,Ee,Ne,Be,je,Ye,Xe,Je,Ke,tt,mt,Et,Tt,Dt){null==Be&&(Be=32),null==je&&(je=1),null==tt&&(tt=!0),null==Et&&(Et=0);let Ft=!1;null!=Je&&null!=Ke&&(Ft=!0);const jt=de.checkNumSamples(Ee,Be,null,"steps_per_epoch");let Kt;null!=jt&&(Kt=ml(0,jt)),null==Ye&&(Ye=1);const{callbackList:un,history:Sn}=eS(Xe,Ye,je,Et,jt,null,Be,Ft,mt);un.setModel(de),de.history=Sn,await un.onTrainBegin(),de.stopTraining_=!1;for(let Mn=Et;Mn<je;++Mn){await un.onEpochBegin(Mn);const pn={};{if("batch"===tt)throw new Ht("batch shuffling is not implemneted yet");tt&&kl(Kt);const Rn=bs(Kt),zn=Uv(jt,Be);for(let qn=0;qn<zn.length;++qn){const Nn={};if(await un.onBatchBegin(qn,Nn),Re(()=>{const Vn=zn[qn][0],rr=zn[qn][1],Rs=Yp(Rn,Vn,rr-Vn);Nn.batch=qn,Nn.size=rr-Vn;const vi=Bv(Ee,Rs),ii=ye(vi);for(let Ar=0;Ar<Ne.length;++Ar){const ai=ii[Ar];Nn[Ne[Ar]]=ai,ps(ai)}if(qn===zn.length-1&&Ft){const Ar=de.testLoop(Je,Ke,Be);for(let va=0;va<Ne.length;++va){const ai=Ne[va],wa=Ar[va];ps(wa),pn["val_"+ai]=wa}}}),await un.onBatchEnd(qn,Nn),Xw(Nn),de.stopTraining_)break}Rn.dispose()}if(await un.onEpochEnd(Mn,pn),de.stopTraining_)break}return await un.onTrainEnd(),await de.history.syncData(),de.history}(i,U,P,W,_,c.epochs,c.verbose,pe,se,A,c.shuffle,G,c.initialEpoch)}finally{i.isTraining=!1,Jp(p,o),Jp(d,l),Jp(y,f),Jp(v,m),null!=S&&_n(S)}}(this,e,t,s)}async fitDataset(e,t){return async function(s,i,o){const l=null!=o.batchesPerEpoch;if(F(null!=s.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),F(null!=o,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),F(null!=o.epochs&&o.epochs>0&&Number.isInteger(o.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${o.epochs}`),F(!l||o.batchesPerEpoch>0&&Number.isInteger(o.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${o.batchesPerEpoch}`),F(null==o.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),s.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");s.isTraining=!0;try{const c=null!=o.validationData;let p,d;if(c)if(fS(o.validationData))F(null==o.validationBatches||o.validationBatches>0&&Number.isInteger(o.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${o.validationBatches}`);else{const R=function(P){if(3===P.length)throw new Ht("Validation with sample weights is not implemented yet.");return{xs:P[0],ys:P[1]}}(o.validationData);p=R.xs,d=R.ys}const f=s.makeTrainFunction(),m=s.getDedupedMetricsNames();let y;y=c?m.slice().concat(m.map(R=>"val_"+R)):m.slice();const v=Qw(o.callbacks,o.yieldEvery),S=null==o.verbose?1:o.verbose,{callbackList:_,history:k}=eS(v,S,o.epochs,null,null,function(R,P){let U=null;return null!=P.batchesPerEpoch?U=P.batchesPerEpoch:Number.isFinite(R.size)&&(U=R.size),U}(i,o),null,c,y);_.setModel(s),s.history=k,await _.onTrainBegin(),s.stopTraining_=!1;let I=null==o.initialEpoch?0:o.initialEpoch,A=await i.iterator();for(;I<o.epochs;){const R={};await _.onEpochBegin(I);let P=0,U=0;for(l||(A=await i.iterator());!l||P<o.batchesPerEpoch;){const W=await A.next();if(l&&W.done){console.warn(`You provided \`batchesPerEpoch\` as ${o.batchesPerEpoch}, but your dataset iterator ran out of data after ${P} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+o.batchesPerEpoch*o.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=W.value){const{xs:se,ys:G}=dS(s,W.value),pe={};pe.batch=U,pe.size=se[0].shape[0],await _.onBatchBegin(U,pe);const de=[];if(null!=o.classWeight){const Ne=cS(o.classWeight,s.outputNames);for(let Be=0;Be<Ne.length;++Be)de.push(await hS(G[Be],null,Ne[Be]))}const ye=se.concat(G).concat(de),Ee=f(ye);_n(ye);for(let Ne=0;Ne<m.length;++Ne){const je=Ee[Ne];pe[m[Ne]]=je,ps(je)}await _.onBatchEnd(U,pe),Xw(pe),U++,P++}if(l?P>=o.batchesPerEpoch:W.done){if(c){let se;se=fS(o.validationData)?ir(await s.evaluateDataset(o.validationData,{batches:o.validationBatches})):ir(s.evaluate(p,d,{batchSize:null==o.validationBatchSize?32:o.validationBatchSize,verbose:0}));for(let G=0;G<s.metricsNames.length;++G)R[`val_${s.metricsNames[G]}`]=se[G]}break}if(s.stopTraining_)break}if(await _.onEpochEnd(I,R),I++,s.stopTraining_)break}return await _.onTrainEnd(),await s.history.syncData(),s.history}finally{s.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),i=s[0],o=s[1],l=this.makeTrainFunction()(i.concat(o)),c=[];for(const p of l){const d=await p.data();c.push(d[0])}return _n(l),ss(c)}getNamedWeights(e){const t=[],s=null!=e&&e.trainableOnly,i=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let l=0;l<i.length;++l)s&&!i[l].trainable||t.push({name:i[l].originalName,tensor:o[l]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=yp().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-yp().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=xi(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if("string"!=typeof t)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>xi(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const i of t){if("string"!=typeof s[i])throw new Error("Serialization of non-string loss is not supported.");e[i]=xi(s[i])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[xi(Px(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>xi(Px(e)));{const e={};for(const t in this.metrics)e[t]=xi(Px(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=xl(Ty(e.optimizer_config));let s,i;if("string"==typeof e.loss)s=Ns(e.loss);else if(Array.isArray(e.loss))s=e.loss.map(o=>Ns(o));else if(null!=e.loss){s={};for(const o in e.loss)s[o]=Ns(e.loss[o])}if(Array.isArray(e.metrics))i=e.metrics.map(o=>Ns(o));else if(null!=e.metrics){i={};for(const o in e.metrics)i[o]=Ns(e.metrics[o])}this.compile({loss:s,metrics:i,optimizer:t})}async save(e,t){if("string"==typeof e){const o=Gt(e);if(0===o.length)throw new me(`Cannot find any save handlers for URL '${e}'`);if(o.length>1)throw new me(`Found more than one (${o.length}) save handlers for URL '${e}'`);e=o[0]}if(null==e.save)throw new me("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Dh(this.getNamedWeights(t)),i={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Bx}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){i.trainingConfig=this.getTrainingConfig();const o="optimizer",{data:l,specs:c}=await Dh(await this.optimizer.getWeights(),o);s.specs.push(...c),s.data=If([s.data,l])}return null!=this.userDefinedMetadata&&(aS(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=s.data,i.weightSpecs=s.specs,e.save(i)}setUserDefinedMetadata(e){aS(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ac.className="Model",St(Ac);class bS extends Ac{}async function C_(r,e){"modelTopology"in r||(r={modelTopology:r});let t=(r=r).modelTopology;null!=t.model_config&&(t=t.model_config);const s=xl(Ty(t),e);if(null!=r.weightsManifest){const i=await u0(r.weightsManifest,r.pathPrefix,s.weights.map(l=>l.originalName)),o={};for(const l of s.weights)o[l.originalName]=i[l.originalName];s.loadWeights(o),_n(i)}return s}bS.className="Functional",St(bS);class Qp extends Ac{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Ix("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new me(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Qp||e instanceof Ac;let s;if(t){if(s=e,1!==s.outputs.length)throw new me("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==s.inputs.length)throw new me("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new me("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const i=qw({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(i)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(1!==e.inboundNodes.length)throw new me(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new me("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=jw(this.outputs[0])}this.inboundNodes=[],new Ax({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Yn(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(i=>i.shape),outputShapes:this.outputs[0].shape})}else{const i=e.apply(this.outputs[0]);if(Array.isArray(i))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[i],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(mr(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ac({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new tn("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new tn("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new tn("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new tn("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},i=!1){let o,l={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new me("Legacy serialization format not supported yet.");o=t}else F(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=t.layers,delete t.layers,l=t;const c=new e(l);if(!(c instanceof Qp))throw new Ht(`Sequential.fromConfig called on non-Sequential input: ${c}`);for(const p of o){const d=xl(p,void 0,i);i&&d.setFastWeightInitDuringBuild(!0),c.add(d)}return c}set stopTraining(e){if(null==this.model)throw new me("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new me("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}function N_(r){return new Ac(r)}function A_(r){return new Qp(r)}function R_(r,e){return null==e&&(e={}),async function(t,s){if(null==s&&(s={}),"string"==typeof t){const i=Wi(t,s);if(0===i.length)i.push(gp(t,s));else if(i.length>1)throw new me(`Found more than one (${i.length}) load handlers for URL '${t}'`);t=i[0]}return async function(i,o,l){if(null==l&&(l={}),null==i.load)throw new me("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const c=await i.load();let p=c.modelTopology;null!=p.model_config&&(p=p.model_config);const d=null==l.strict||l.strict,f=null!=c.weightData&&null!=c.weightSpecs&&d,m=xl(Ty(p),void 0,f),y=c.trainingConfig;if(null!=y&&m.loadTrainingConfig(y),null!=c.userDefinedMetadata&&m.setUserDefinedMetadata(c.userDefinedMetadata),null!=c.weightData){if(null==c.weightSpecs)throw new me("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:v,optimizerWeights:S}=function(_,k){const I=jo(_,k),A={},R=[];return k.forEach(P=>{"optimizer"===P.group?R.push({name:P.name,tensor:I[P.name]}):A[P.name]=I[P.name]}),{modelWeights:A,optimizerWeights:R}}(c.weightData,c.weightSpecs);m.loadWeights(v,d),null!=m.optimizer&&S.length>0&&await m.optimizer.setWeights(S),_n(v),_n(S.map(_=>_.tensor))}return m}(t,0,s)}(r,e)}function vS(r){return qw(r)}function L_(r,e){Xa.registerCallbackConstructor(r,e)}Qp.className="Sequential",St(Qp);class Ki extends ac{getConfig(){return{}}}class wS extends Ki{apply(e,t=1){return function(s,i=1){if(1!==i)throw new Ht(`Support for alpha values other than 1 (${i}) is not implemented yet.`);return yo(s)}(e,t)}}wS.className="elu",St(wS);class SS extends Ki{apply(e){return rm(e)}}SS.className="selu",St(SS);class TS extends Ki{apply(e){return rs(e)}}TS.className="relu",St(TS);class MS extends Ki{apply(e){return Re(()=>ja(6,rs(e)))}}MS.className="relu6",St(MS);class _S extends Ki{apply(e){return e}}_S.className="linear",St(_S);class kS extends Ki{apply(e){return ua(e)}}kS.className="sigmoid",St(kS);class ES extends Ki{apply(e){return t=e,Re(()=>{const s=vt(.5,Se(.2,t));return Js(s,0,1)});var t}}ES.className="hardSigmoid",St(ES);class IS extends Ki{apply(e){return fc(e)}}IS.className="softplus",St(IS);class CS extends Ki{apply(e){return t=e,Re(()=>an(t,vt(qr(t),1)));var t}}CS.className="softsign",St(CS);class NS extends Ki{apply(e){return go(e)}}NS.className="tanh",St(NS);class Wv extends Ki{apply(e,t=-1){return od(e,t)}}Wv.className="softmax",St(Wv);class AS extends Ki{apply(e,t=-1){return em(e,t)}}AS.className="logSoftmax",St(AS);class RS extends Ki{apply(e,t=1){return Re(()=>Se(ua(Se(e,t)),e))}}RS.className="swish",St(RS);class LS extends Ki{apply(e){return Re(()=>Se(e,go(fc(e))))}}function Td(r){return r.getClassName()}function Gv(r,e={}){return yd(r,Hi.getMap().classNameMap,e,"activation")}function Md(r){if(null==r)return Gv({className:"linear",config:{}});if("string"==typeof r){const e={};return e.className=r,e.config={},Gv(e)}return r instanceof Ki?r:Gv(r)}function Hv(r){if(null!=r&&"object"!=typeof r)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${r}`)}LS.className="mish",St(LS);class DS extends ac{}class ky extends DS{constructor(e){super(),Hv(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Re(()=>{let t=Kr([1]);return this.hasL1&&(t=vt(t,Qt(Se(this.l1,qr(e))))),this.hasL2&&(t=vt(t,Qt(Se(this.l2,vy(e))))),Me(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}ky.className="L1L2",St(ky);const FS={l1l2:"L1L2"};function Mr(r){return Ct(r)}function $S(r,e={}){return yd(r,Hi.getMap().classNameMap,e,"regularizer")}function Gr(r){return null==r?null:"string"==typeof r?$S({className:r in FS?FS[r]:r,config:{}}):r instanceof DS?r:$S(r)}class jv extends Qn{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=$n(e);let s=rs(e);return null!=this.maxValue&&(s=Js(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}jv.className="ReLU",St(jv);class qv extends Qn{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=$n(e);return su(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}qv.className="LeakyReLU",St(qv);class Xv extends Qn{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Wr(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Gr(e.alphaRegularizer),this.alphaConstraint=Le(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new me(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=mr(e)).slice(1);if(null!=this.sharedAxes)for(const i of this.sharedAxes)t[i-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(null!=this.sharedAxes)for(let i=1;i<e.length;++i)s[i]=e[i];this.inputSpec=[new ws({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=$n(e),yc(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Yr(this.alphaInitializer),alphaRegularizer:Mr(this.alphaRegularizer),alphaConstraint:ae(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Xv.className="PReLU",St(Xv);class Kv extends Qn{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Ht(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=$n(e);return yo(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Kv.className="ELU",St(Kv);class Yv extends Qn{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const s=$n(e);return Se(s,Rt(ms(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Yv.className="ThresholdedReLU",St(Yv);class Zv extends Qn{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Wv).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const s=$n(e);return this.softmax(s,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Im(r,e,t){if("number"==typeof r)return Yn(r,e);if(r.length!==e)throw new me(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${r.length} elements.`);for(let i=0;i<e;++i){const o=r[i];if((s=o)!==parseInt(s.toString(),10))throw new me(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(r)} including a non-integer number ${o}`)}return r;var s}function vl(r,e,t,s,i=1){if(null==r)return r;let o;return o="same"===t?r:r-(e+(e-1)*(i-1))+1,Math.floor((o+s-1)/s)}function mu(r,e,t,s){if(null==r)return null;if("valid"===s)r=r*e+vd([t-e,0]);else{if("same"!==s)throw new me(`Unsupport padding mode: ${s}.`);r*=e}return r}function Jv(r,e){return Re(()=>(fr(e),"channelsFirst"===e?Xn(r,[0,2,3,1]):r))}function OS(r,e){return Re(()=>(fr(e),"channelsFirst"===e?Xn(r,[0,2,3,4,1]):r))}function PS(r,e,t,s=[1,1],i="valid",o,l,c=null){return Re(()=>{if(null==o&&(o="channelsLast"),fr(o),3!==r.rank&&4!==r.rank)throw new me(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${r.rank}.`);if(3!==e.rank&&4!==e.rank)throw new me(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${r.rank}.`);let p=Jv(r,o);if("causal"===i)throw new Ht("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return p=dm({x:p,filter:e,strides:s,pad:"same"===i?"same":"valid",dilations:l,dataFormat:"NHWC",bias:t,activation:c}),"channelsFirst"===o&&(p=Xn(p,[0,3,1,2])),p})}Zv.className="Softmax",St(Zv);class Ux extends Qn{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ux.verifyArgs(t),this.rank=e,cs(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Ht(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Im(t.kernelSize,e,"kernelSize"),this.strides=Im(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Jn(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,fr(this.dataFormat),this.activation=Md(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Wr(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Le(t.biasConstraint),this.biasRegularizer=Gr(t.biasRegularizer),this.activityRegularizer=Gr(t.activityRegularizer),this.dilationRate=Im(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new me(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new me(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new me(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(vr("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Xp(e.kernelSize,"number",1,3))throw new me(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Td(this.activation),useBias:this.useBias,biasInitializer:Yr(this.biasInitializer),biasRegularizer:Mr(this.biasRegularizer),activityRegularizer:Mr(this.activityRegularizer),biasConstraint:ae(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Cm extends Ux{constructor(e,t){super(e,t),this.kernel=null,Cm.verifyArgs(t),this.filters=t.filters,cs(this.filters,"filters"),this.kernelInitializer=Wr(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Le(t.kernelConstraint),this.kernelRegularizer=Gr(t.kernelRegularizer)}build(e){e=mr(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new me(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],i=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return Re(()=>{let s;e=$n(e);const i=null==this.bias?null:this.bias.read(),o=fu(this.activation.getClassName());if(null!=o&&2===this.rank)s=PS(e,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(1===this.rank)s=function(l,c,p,d=1,f="valid",m,y=1){return Re(()=>{if(null==m&&(m="channelsLast"),fr(m),3!==l.shape.length)throw new me(`The input of a conv1dWithBias operation should be 3, but is ${l.shape.length} instead.`);if(3!==c.shape.length)throw new me(`The kernel for a conv1dWithBias operation should be 3, but is ${c.shape.length} instead`);if(null!=p&&1!==p.shape.length)throw new me(`The bias for a conv1dWithBias operation should be 1, but is ${c.shape.length} instead`);if("channelsFirst"===m&&(l=Xn(l,[0,2,1])),"causal"===f)throw new Ht("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let v=dc(l,c,d,"same"===f?"same":"valid","NWC",y);return null!=p&&(v=gl(v,p)),v})}(e,this.kernel.read(),i,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)s=PS(e,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Ht("convolutions greater than 3D are not implemented yet.");s=function(l,c,p,d=[1,1,1],f="valid",m,y){return Re(()=>{if(null==m&&(m="channelsLast"),fr(m),4!==l.rank&&5!==l.rank)throw new me(`conv3dWithBias expects input to be of rank 4 or 5, but received ${l.rank}.`);if(4!==c.rank&&5!==c.rank)throw new me(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${l.rank}.`);let v=OS(l,m);if("causal"===f)throw new Ht("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return v=qf(v,c,d,"same"===f?"same":"valid","NDHWC",y),null!=p&&(v=gl(v,p)),"channelsFirst"===m&&(v=Xn(v,[0,4,1,2,3])),v})}(e,this.kernel.read(),i,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=mr(e);const t=[],s="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let o=0;o<s.length;++o){const l=vl(s[o],this.kernelSize[o],this.padding,this.strides[o],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[o]);t.push(l)}let i=[e[0]];return"channelsLast"===this.dataFormat?(i=i.concat(t),i.push(this.filters)):(i.push(this.filters),i=i.concat(t)),i}getConfig(){const e={filters:this.filters,kernelInitializer:Yr(this.kernelInitializer),kernelRegularizer:Mr(this.kernelRegularizer),kernelConstraint:ae(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new me(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Nm extends Cm{constructor(e){super(2,e),Nm.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Xp(e.kernelSize,"number",1,2))throw new me(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Nm.className="Conv2D",St(Nm);class Am extends Cm{constructor(e){super(3,e),Am.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new me(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Am.className="Conv3D",St(Am);class Qv extends Nm{constructor(e){if(super(e),this.inputSpec=[new ws({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new me(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=mr(e)).length)throw new me("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new me("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],i=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ws({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return Re(()=>{let s=$n(e);if(4!==s.shape.length)throw new me(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const i=s.shape;let l,c;"channelsFirst"===this.dataFormat?(l=2,c=3):(l=1,c=2);const d=i[c],m=this.kernelSize[1],v=this.strides[1],S=[i[0],mu(i[l],this.strides[0],this.kernelSize[0],this.padding),mu(d,v,m,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(s=Xn(s,[0,2,3,1]));let _=eu(s,this.kernel.read(),S,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(_=Xn(_,[0,3,1,2])),null!=this.bias&&(_=gl(_,this.bias.read(),this.dataFormat)),null!=this.activation&&(_=this.activation.apply(_)),_})}computeOutputShape(e){const t=(e=mr(e)).slice();let s,i,o;"channelsFirst"===this.dataFormat?(s=1,i=2,o=3):(s=3,i=1,o=2);const l=this.kernelSize[0],c=this.kernelSize[1],p=this.strides[0],d=this.strides[1];return t[s]=this.filters,t[i]=mu(t[i],p,l,this.padding),t[o]=mu(t[o],d,c,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Qv.className="Conv2DTranspose",St(Qv);class e1 extends Am{constructor(e){if(super(e),this.inputSpec=[new ws({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new me(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=mr(e)).length)throw new me("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new me("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],i=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",i,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ws({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return Re(()=>{let s=$n(e);if(5!==s.shape.length)throw new me(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const i=s.shape;let l,c,p;"channelsFirst"===this.dataFormat?(p=2,l=3,c=4):(p=1,l=2,c=3);const f=i[l],m=i[c],v=this.kernelSize[1],S=this.kernelSize[2],k=this.strides[1],I=this.strides[2],A=[i[0],mu(i[p],this.strides[0],this.kernelSize[0],this.padding),mu(f,k,v,this.padding),mu(m,I,S,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(s=Xn(s,[0,2,3,4,1]));let R=Xf(s,this.kernel.read(),A,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(R=Xn(R,[0,4,1,2,3])),null!==this.bias&&(R=gl(R,this.bias.read(),this.dataFormat)),null!==this.activation&&(R=this.activation.apply(R)),R})}computeOutputShape(e){const t=(e=mr(e)).slice();let s,i,o,l;"channelsFirst"===this.dataFormat?(s=1,i=2,o=3,l=4):(s=4,i=1,o=2,l=3);const c=this.kernelSize[0],p=this.kernelSize[1],d=this.kernelSize[2],f=this.strides[0],m=this.strides[1],y=this.strides[2];return t[s]=this.filters,t[i]=mu(t[i],f,c,this.padding),t[o]=mu(t[o],m,p,this.padding),t[l]=mu(t[l],y,d,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}e1.className="Conv3DTranspose",St(e1);class zS extends Cm{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new me("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new me("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new me(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Wr(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Gr(t.depthwiseRegularizer),this.depthwiseConstraint=Le(t.depthwiseConstraint),this.pointwiseInitializer=Wr(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Gr(t.pointwiseRegularizer),this.pointwiseConstraint=Le(t.pointwiseConstraint)}build(e){if((e=mr(e)).length<this.rank+2)throw new me(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new me(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],i=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let c=0;c<this.rank;++c)o.push(1);o.push(s*this.depthMultiplier,this.filters);const l=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",i,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,l,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,l,this.pointwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,l,this.biasConstraint):null,this.inputSpec=[new ws({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return Re(()=>{let s;if(e=$n(e),1===this.rank)throw new Ht("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Xn(e,[0,2,3,1])),s=ll(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=gl(s,this.bias.read(),this.dataFormat)),null!=this.activation&&(s=this.activation.apply(s)),"channelsFirst"===this.dataFormat&&(s=Xn(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Yr(this.depthwiseInitializer),e.pointwiseInitializer=Yr(this.pointwiseInitializer),e.depthwiseRegularizer=Mr(this.depthwiseRegularizer),e.pointwiseRegularizer=Mr(this.pointwiseRegularizer),e.depthwiseConstraint=ae(this.depthwiseConstraint),e.pointwiseConstraint=ae(this.pointwiseConstraint),e}}zS.className="SeparableConv";class t1 extends zS{constructor(e){super(2,e)}}t1.className="SeparableConv2D",St(t1);class Ey extends Cm{constructor(e){super(1,e),Ey.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Xp(e.kernelSize,"number",1,1))throw new me(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Ey.className="Conv1D",St(Ey);class n1 extends Qn{constructor(e){super(e),this.cropping="number"==typeof e.cropping?[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Re(()=>{if(e=$n(e),"channelsLast"===this.dataFormat){const s=xx(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return xx(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const s=xx(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return xx(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}n1.className="Cropping2D",St(n1);class r1 extends Qn{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,fr(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,pu(Hn,"InterpolationFormat",this.interpolation)}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],null==e[2]?null:this.size[0]*e[2],null==e[3]?null:this.size[1]*e[3]]:[e[0],null==e[1]?null:this.size[0]*e[1],null==e[2]?null:this.size[1]*e[2],e[3]]}call(e,t){return Re(()=>{let s=$n(e);const i=s.shape;if("channelsFirst"===this.dataFormat){s=Xn(s,[0,2,3,1]);const o=this.size[0]*i[2],l=this.size[1]*i[3],c="nearest"===this.interpolation?ji.resizeNearestNeighbor(s,[o,l]):ji.resizeBilinear(s,[o,l]);return Xn(c,[0,3,1,2])}{const o=this.size[0]*i[1],l=this.size[1]*i[2];return"nearest"===this.interpolation?ji.resizeNearestNeighbor(s,[o,l]):ji.resizeBilinear(s,[o,l])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}r1.className="UpSampling2D",St(r1);class s1 extends Ux{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Wr(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Le(e.depthwiseConstraint),this.depthwiseRegularizer=Gr(e.depthwiseRegularizer)}build(e){if((e=mr(e)).length<4)throw new me(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new me(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t];this.depthwiseKernel=this.addWeight("depthwise_kernel",[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier],null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.bias=this.useBias?this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return Re(()=>{let s=function(i,o,l=[1,1],c="valid",p,d){return Re(()=>{null==p&&(p="channelsLast"),fr(p);let f=Jv(i,p);if(4!==i.rank)throw new me(`Input for depthwiseConv2d is required to be 4-D, but is instead ${i.rank}-D`);if(4!==o.rank)throw new me(`depthwiseKernel is required to be 4-D, but is instead ${o.rank}-D`);return f=fi(f,o,l,"same"===c?"same":"valid","NHWC",d),"channelsFirst"===p&&(f=Xn(f,[0,3,1,2])),f})}(e=$n(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=gl(s,this.bias.read(),this.dataFormat)),null!=this.activation&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=mr(e);const s="channelsFirst"===this.dataFormat?e[3]:e[2],i="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=vl("channelsFirst"===this.dataFormat?e[2]:e[1],this.kernelSize[0],this.padding,this.strides[0]),l=vl(s,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],i,o,l]:[e[0],o,l,i]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Yr(this.depthwiseInitializer),e.depthwiseRegularizer=Mr(this.depthwiseRegularizer),e.depthwiseConstraint=ae(this.depthwiseRegularizer),e}}function BS(r,e,t,s){if(Array.isArray(r)){if(null!=e||null!=t)throw new me("When inputs is an array, neither initialState or constants should be provided");null!=s&&(t=r.slice(r.length-s,r.length),r=r.slice(0,r.length-s)),r.length>1&&(e=r.slice(1,r.length)),r=r[0]}function i(o){return null==o||Array.isArray(o)?o:[o]}return{inputs:r,initialState:e=i(e),constants:t=i(t)}}function US(r,e,t,s=!1,i,o,l=!1,c=!1){return Re(()=>{const p=e.shape.length;if(p<3)throw new me(`Input should be at least 3D, but is ${p}D.`);const d=[1,0].concat(ml(2,p));if(e=Xn(e,d),null!=o)throw new Ht("The rnn() functoin of the deeplearn.js backend does not support constants yet.");l&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=i&&((i=Rt(Rt(i,"bool"),"float32")).rank===p-1&&(i=Is(i,-1)),i=Xn(i,d)),s&&(e=ei(e,0),null!=i&&(i=ei(i,0)));const f=[];let m,y=t;const v=e.shape[0],S=Ri(e);let _,k;null!=i&&(_=Ri(i));for(let I=0;I<v;++I){const A=S[I],R=Re(()=>r(A,y));if(null==i)m=R[0],y=R[1];else{const P=Re(()=>{const U=_[I],W=Yt(Os(U),U);return{output:vt(Se(R[0],U),Se(y[0],W)),newStates:y.map((se,G)=>vt(Se(R[1][G],U),Se(se,W)))}});m=P.output,y=P.newStates}c&&f.push(m)}return c&&(k=yi(f,1)),[m,k,y]})}s1.className="DepthwiseConv2D",St(s1);class wl extends Qn{constructor(e){let t;if(super(e),null==e.cell)throw new me("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Gx({cells:e.cell}):e.cell,null==t.stateSize)throw new me("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new ws({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?ml(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Iv(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let i;if(i=this.returnSequences?[e[0],e[1],s]:[e[0],s],this.returnState){const o=[];for(const l of t)o.push([e[0],l]);return[i].concat(o)}return i}computeMask(e,t){return Re(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const i=this.states.map(o=>null);return[s].concat(i)}return s})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Ht("Constants support is not implemented in RNN yet.");Iv(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new ws({shape:[t,null,...s]});const i=[e[0]].concat(e.slice(2));let o;if(this.cell.build(i),o=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!He(this.stateSpec.map(l=>l.shape[l.shape.length-1]),o))throw new me(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(l=>new ws({shape:[null,l]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){Re(()=>{if(!this.stateful)throw new Ut("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(null==s)throw new me("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(i=>Kr([s,i])):[Kr([s,this.cell.stateSize])];else if(null==e)_n(this.states_),null!=this.keptStates&&(_n(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(i=>Kr([s,i])):this.states_[0]=Kr([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new me(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):_n(this.states_);for(let i=0;i<this.states_.length;++i){const o=e[i],l=Array.isArray(this.cell.stateSize)?this.cell.stateSize[i]:this.cell.stateSize,c=[s,l];if(!He(o.shape,c))throw new me(`State ${i} is incompatible with layer ${this.name}: expected shape=${c}, received shape=${o.shape}`);this.states_[i]=o}}this.states_=this.states_.map(i=>ps(i.clone()))})}apply(e,t){let s=null==t?null:t.initialState,i=null==t?null:t.constants;null==t&&(t={});const o=BS(e,s,i,this.numConstants);e=o.inputs,s=o.initialState,i=o.constants;let l=[],c=[];if(null!=s){t.initialState=s,l=l.concat(s),this.stateSpec=[];for(const p of s)this.stateSpec.push(new ws({shape:p.shape}));c=c.concat(this.stateSpec)}if(null!=i&&(t.constants=i,l=l.concat(i),this.numConstants=i.length),l[0]instanceof yl){const p=[e].concat(l),d=this.inputSpec.concat(c),f=this.inputSpec;this.inputSpec=d;const m=super.apply(p,t);return this.inputSpec=f,m}return super.apply(e,t)}call(e,t){return Re(()=>{const s=null==t?null:t.mask,i=null==t?null:t.training;let o=null==t?null:t.initialState;e=$n(e),null==o&&(o=this.stateful?this.states_:this.getInitialState(e));const l=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==l)throw new me(`RNN Layer has ${l} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const c={training:i},p=US((v,S)=>{const _=this.cell.call([v].concat(S),c);return[_[0],_.slice(1)]},e,o,this.goBackwards,s,null,this.unroll,this.returnSequences),d=p[0],f=p[1],m=p[2];this.stateful&&this.resetStates(m,i);const y=this.returnSequences?f:d;return this.returnState?[y].concat(m):y})}getInitialState(e){return Re(()=>{let t=Kr(e.shape);return t=Qt(t,[1,2]),t=by(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?bv(t,[1,s]):t):this.cell.stateSize>1?[bv(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===wl.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign({},s,e,t)}static fromConfig(e,t,s={}){const i=xl(t.cell,s);return new e(Object.assign(t,{cell:i}))}}wl.className="RNN",St(wl);class Iy extends Qn{}class Vx extends Iy{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,cs(this.units,"units"),this.activation=Md(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Wr(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wr(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wr(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Gr(e.kernelRegularizer),this.recurrentRegularizer=Gr(e.recurrentRegularizer),this.biasRegularizer=Gr(e.biasRegularizer),this.kernelConstraint=Le(e.kernelConstraint),this.recurrentConstraint=Le(e.recurrentConstraint),this.biasConstraint=Le(e.biasConstraint),this.dropout=ni([1,vd([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ni([1,vd([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=mr(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return Re(()=>{if(2!==(e=e).length)throw new me(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const i=null!=t.training&&t.training;let o;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=_d({ones:()=>Os(e),rate:this.dropout,training:i})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=_d({ones:()=>Os(s),rate:this.recurrentDropout,training:i}));const l=this.dropoutMask,c=this.recurrentDropoutMask;o=Nc(null!=l?Se(e,l):e,this.kernel.read()),null!=this.bias&&(o=gl(o,this.bias.read())),null!=c&&(s=Se(s,c));let p=vt(o,Nc(s,this.recurrentKernel.read()));return null!=this.activation&&(p=this.activation.apply(p)),[p,p]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Td(this.activation),useBias:this.useBias,kernelInitializer:Yr(this.kernelInitializer),recurrentInitializer:Yr(this.recurrentInitializer),biasInitializer:Yr(this.biasInitializer),kernelRegularizer:Mr(this.kernelRegularizer),recurrentRegularizer:Mr(this.recurrentRegularizer),biasRegularizer:Mr(this.biasRegularizer),activityRegularizer:Mr(this.activityRegularizer),kernelConstraint:ae(this.kernelConstraint),recurrentConstraint:ae(this.recurrentConstraint),biasConstraint:ae(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Vx.className="SimpleRNNCell",St(Vx);class i1 extends wl{constructor(e){e.cell=new Vx(e),super(e)}call(e,t){return Re(()=>(null!=this.cell.dropoutMask&&(_n(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_n(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return new e(t)}}i1.className="SimpleRNN",St(i1);class Wx extends Iy{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new me("GRUCell does not support reset_after parameter set to true.");this.units=e.units,cs(this.units,"units"),this.activation=Md(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Md(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Wr(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wr(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wr(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Gr(e.kernelRegularizer),this.recurrentRegularizer=Gr(e.recurrentRegularizer),this.biasRegularizer=Gr(e.biasRegularizer),this.kernelConstraint=Le(e.kernelConstraint),this.recurrentConstraint=Le(e.recurrentConstraint),this.biasConstraint=Le(e.biasConstraint),this.dropout=ni([1,vd([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ni([1,vd([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=mr(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.bias=this.useBias?this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):null,this.built=!0}call(e,t){return Re(()=>{if(2!==(e=e).length)throw new me(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=null!=t.training&&t.training;let i=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=_d({ones:()=>Os(e),rate:this.dropout,training:s,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=_d({ones:()=>Os(i),rate:this.recurrentDropout,training:s,count:3}));const l=this.recurrentDropoutMask;let c,p,d;0<this.dropout&&this.dropout<1&&(e=Se(e,this.dropoutMask[0]));let f=Nc(e,this.kernel.read());this.useBias&&(f=gl(f,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(i=Se(i,l[0]));const m=this.recurrentKernel.read(),[y,v]=xs(m,[2*this.units,this.units],m.rank-1),S=Nc(i,y),[_,k,I]=xs(f,3,f.rank-1),[A,R]=xs(S,2,S.rank-1);c=this.recurrentActivation.apply(vt(_,A)),p=this.recurrentActivation.apply(vt(k,R));const P=Nc(Se(p,i),v);d=this.activation.apply(vt(I,P));const U=vt(Se(c,i),Se(vt(1,Er(c)),d));return[U,U]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Td(this.activation),recurrentActivation:Td(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Yr(this.kernelInitializer),recurrentInitializer:Yr(this.recurrentInitializer),biasInitializer:Yr(this.biasInitializer),kernelRegularizer:Mr(this.kernelRegularizer),recurrentRegularizer:Mr(this.recurrentRegularizer),biasRegularizer:Mr(this.biasRegularizer),activityRegularizer:Mr(this.activityRegularizer),kernelConstraint:ae(this.kernelConstraint),recurrentConstraint:ae(this.recurrentConstraint),biasConstraint:ae(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Wx.className="GRUCell",St(Wx);class a1 extends wl{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Wx(e),super(e)}call(e,t){return Re(()=>(null!=this.cell.dropoutMask&&(_n(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_n(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}a1.className="GRU",St(a1);class Cy extends Iy{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,cs(this.units,"units"),this.activation=Md(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Md(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Wr(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wr(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wr(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Gr(e.kernelRegularizer),this.recurrentRegularizer=Gr(e.recurrentRegularizer),this.biasRegularizer=Gr(e.biasRegularizer),this.kernelConstraint=Le(e.kernelConstraint),this.recurrentConstraint=Le(e.recurrentConstraint),this.biasConstraint=Le(e.biasConstraint),this.dropout=ni([1,vd([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=ni([1,vd([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const s=(e=mr(e))[e.length-1];let i;if(this.kernel=this.addWeight("kernel",[s,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,l=this.units;i=new((t=class extends So{apply(c,p){const d=o.apply([l]),f=(new vx).apply([l]),m=o.apply([2*l]);return zw(zw(d,f),m)}}).className="CustomInit",t)}else i=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,i,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Re(()=>{const s=null!=t.training&&t.training;if(3!==(e=e).length)throw new me(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let i=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=_d({ones:()=>Os(e),rate:this.dropout,training:s,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=_d({ones:()=>Os(i),rate:this.recurrentDropout,training:s,count:4}));const c=this.recurrentDropoutMask;let p,d,f,m;0<this.dropout&&this.dropout<1&&(e=Se(e,this.dropoutMask[0]));let y=Nc(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(i=Se(i,c[0])),y=vt(y,Nc(i,this.recurrentKernel.read())),this.useBias&&(y=gl(y,this.bias.read()));const[v,S,_,k]=xs(y,4,y.rank-1);p=this.recurrentActivation.apply(v),d=this.recurrentActivation.apply(S),f=vt(Se(d,o),Se(p,this.activation.apply(_))),m=this.recurrentActivation.apply(k);const I=Se(m,this.activation.apply(f));return[I,I,f]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Td(this.activation),recurrentActivation:Td(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Yr(this.kernelInitializer),recurrentInitializer:Yr(this.recurrentInitializer),biasInitializer:Yr(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Mr(this.kernelRegularizer),recurrentRegularizer:Mr(this.recurrentRegularizer),biasRegularizer:Mr(this.biasRegularizer),activityRegularizer:Mr(this.activityRegularizer),kernelConstraint:ae(this.kernelConstraint),recurrentConstraint:ae(this.recurrentConstraint),biasConstraint:ae(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Cy.className="LSTMCell",St(Cy);class o1 extends wl{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Cy(e),super(e)}call(e,t){return Re(()=>(null!=this.cell.dropoutMask&&(_n(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_n(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}o1.className="LSTM",St(o1);class Gx extends Iy{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Re(()=>{let s=(e=e).slice(1);const i=[];for(const c of this.cells.slice().reverse())Array.isArray(c.stateSize)?i.push(s.splice(0,c.stateSize.length)):i.push(s.splice(0,1));i.reverse();const o=[];let l;for(let c=0;c<this.cells.length;++c){const p=this.cells[c];s=i[c],l=0===c?[e[0]].concat(s):[l[0]].concat(s),l=p.call(l,t),o.push(l.slice(1))}s=[];for(const c of o.slice().reverse())s.push(...c);return[l[0]].concat(s)})}build(e){let t;Iv(e)&&(e=e[0]),e=e,this.cells.forEach((s,i)=>{qi(`RNNCell_${i}`,()=>{s.build(e),t=Array.isArray(s.stateSize)?s.stateSize[0]:s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map(s=>({className:s.getClassName(),config:s.getConfig()}))};return Object.assign({},e,t)}static fromConfig(e,t,s={}){const i=[];for(const o of t.cells)i.push(xl(o,s));return new e({cells:i})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Cv(e)}setWeights(e){const t=[];for(const s of this.cells){const o=e.splice(s.weights.length);for(let l=0;l<s.weights.length;++l)t.push([s.weights[l],o[l]])}Nv(t)}}function _d(r){const{ones:e,rate:t,training:s=!1,count:i=1}=r,o=()=>Uw(e(),t),l=()=>wy(o,e,s);return!i||i<=1?ps(l().clone()):Array(i).fill(void 0).map(l).map(c=>ps(c.clone()))}Gx.className="StackedRNNCells",St(Gx);class VS extends wl{constructor(e){if(e.unroll)throw new Ht("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Ht("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new ws({ndim:5})]}call(e,t){return Re(()=>{if(null!=this.cell.dropoutMask&&(_n(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(_n(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new me("ConvRNN2D cell does not support constants");return super.call(e,{mask:null==t?null:t.mask,training:null==t?null:t.training,initialState:null==t?null:t.initialState})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Re(()=>{const{stateSize:t}=this.cell,i=this.computeSingleOutputShape(e.shape),o=Kr([i[0],...i.slice(2)]);return Array.isArray(t)?Array(t.length).fill(o):[o]})}resetStates(e,t=!1){Re(()=>{if(!this.stateful)throw new Ut("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,i=this.computeSingleOutputShape(s),o=[i[0],...i.slice(2)];if(null==s[0])throw new me("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())this.states_=Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(()=>Kr(o)):[Kr(o)];else if(null==e)_n(this.states_),null!=this.keptStates&&(_n(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Kr(o)):this.states_[0]=Kr(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new me(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):_n(this.states_);for(let l=0;l<this.states_.length;++l){const c=e[l],p=o;if(!He(c.shape,p))throw new me(`State ${l} is incompatible with layer ${this.name}: expected shape=${p}, received shape=${c.shape}`);this.states_[l]=c}}this.states_=this.states_.map(l=>ps(l.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:i,padding:o,strides:l,dilationRate:c}=this.cell,p="channelsFirst"===t,f=e[p?4:3],m=vl(e[p?3:2],i[0],o,l[0],c[0]),y=vl(f,i[1],o,l[1],c[1]);return[...e.slice(0,2),...p?[s,m,y]:[m,y,s]]}}VS.className="ConvRNN2D";class Hx extends Cy{constructor(e){const{filters:t,kernelSize:s,strides:i,padding:o,dataFormat:l,dilationRate:c}=e;super(Object.assign({},e,{units:t})),this.filters=t,cs(this.filters,"filters"),this.kernelSize=Im(s,2,"kernelSize"),this.kernelSize.forEach(p=>cs(p,"kernelSize")),this.strides=Im(i||1,2,"strides"),this.strides.forEach(p=>cs(p,"strides")),this.padding=o||"valid",Jn(this.padding),this.dataFormat=l||"channelsLast",fr(this.dataFormat),this.dilationRate=Im(c||1,2,"dilationRate"),this.dilationRate.forEach(p=>cs(p,"dilationRate"))}build(e){var t;e=mr(e);const s="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[s])throw new me(`The channel dimension of the input should be defined. Found ${e[s]}`);const o=this.kernelSize.concat([e[s],4*this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let c;if(this.unitForgetBias){const p=this.biasInitializer,d=this.filters;c=new((t=class extends So{apply(f,m){return xv([p.apply([d]),$r([d]),p.apply([2*d])])}}).className="CustomInit",t)}else c=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,c,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Re(()=>{if(3!==e.length)throw new me(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,i=e[0],o=e[1],l=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=_d({ones:()=>Os(i),rate:this.dropout,training:s,count:4}));const c=this.dropoutMask,p=(Je,Ke,tt)=>Ke&&Ke[tt]?Se(Ke[tt],Je):Je;let d=p(i,c,0),f=p(i,c,1),m=p(i,c,2),y=p(i,c,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=_d({ones:()=>Os(o),rate:this.recurrentDropout,training:s,count:4}));const v=this.recurrentDropoutMask;let S=p(o,v,0),_=p(o,v,1),k=p(o,v,2),I=p(o,v,3);const[A,R,P,U]=xs(this.kernel.read(),4,3),[W,se,G,pe]=this.useBias?xs(this.bias.read(),4):[null,null,null,null];d=this.inputConv(d,A,W,this.padding),f=this.inputConv(f,R,se,this.padding),m=this.inputConv(m,P,G,this.padding),y=this.inputConv(y,U,pe,this.padding);const[de,ye,Ee,Ne]=xs(this.recurrentKernel.read(),4,3);S=this.recurrentConv(S,de),_=this.recurrentConv(_,ye),k=this.recurrentConv(k,Ee),I=this.recurrentConv(I,Ne);const Be=this.recurrentActivation.apply(vt(d,S)),je=this.recurrentActivation.apply(vt(f,_)),Ye=vt(Se(je,l),Se(Be,this.activation.apply(vt(m,k)))),Xe=Se(this.recurrentActivation.apply(vt(y,I)),this.activation.apply(Ye));return[Xe,Xe,Ye]})}getConfig(){const s=function(o,l){var c={};for(var p in o)Object.prototype.hasOwnProperty.call(o,p)&&l.indexOf(p)<0&&(c[p]=o[p]);if(null!=o&&"function"==typeof Object.getOwnPropertySymbols){var d=0;for(p=Object.getOwnPropertySymbols(o);d<p.length;d++)l.indexOf(p[d])<0&&Object.prototype.propertyIsEnumerable.call(o,p[d])&&(c[p[d]]=o[p[d]])}return c}(super.getConfig(),["units"]);return Object.assign({},s,{filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides})}inputConv(e,t,s,i){const o=Wa(e,t,this.strides,i||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return s?gl(o,s,this.dataFormat):o}recurrentConv(e,t){return Wa(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Hx.className="ConvLSTM2DCell",St(Hx);class l1 extends VS{constructor(e){const t=new Hx(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}l1.className="ConvLSTM2D",St(l1);class jx extends Qn{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,s=[];for(let i=0;i<this.noiseShape.length;++i)s.push(null==this.noiseShape[i]?t[i]:this.noiseShape[i]);return s}call(e,t){return Re(()=>{this.invokeCallHook(e,t);const s=$n(e);if(0<this.rate&&this.rate<1){const i=null!=t.training&&t.training,o=this.getNoiseShape(s);return wy(()=>Uw(s,this.rate,o,this.seed),()=>s,i)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}jx.className="Dropout",St(jx);class u1 extends jx{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}u1.className="SpatialDropout1D",St(u1);class c1 extends Qn{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,cs(this.units,"units"),this.activation=Md(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Wr(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Wr(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Le(e.kernelConstraint),this.biasConstraint=Le(e.biasConstraint),this.kernelRegularizer=Gr(e.kernelRegularizer),this.biasRegularizer=Gr(e.biasRegularizer),this.activityRegularizer=Gr(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=mr(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=mr(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Re(()=>{this.invokeCallHook(e,t);const s=$n(e),i=fu(this.activation.getClassName());let o;return null!=i?o=Nc(s,this.kernel.read(),i,this.bias?this.bias.read():null):(o=Nc(s,this.kernel.read()),null!=this.bias&&(o=gl(o,this.bias.read())),null!=this.activation&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:Td(this.activation),useBias:this.useBias,kernelInitializer:Yr(this.kernelInitializer),biasInitializer:Yr(this.biasInitializer),kernelRegularizer:Mr(this.kernelRegularizer),biasRegularizer:Mr(this.biasRegularizer),activityRegularizer:Mr(this.activityRegularizer),kernelConstraint:ae(this.kernelConstraint),biasConstraint:ae(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}c1.className="Dense",St(c1);class h1 extends Qn{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=mr(e);for(const t of e.slice(1))if(null==t)throw new me(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],As(e,1)]}call(e,t){return Re(()=>{this.invokeCallHook(e,t);let s=$n(e);if("channelsFirst"===this.dataFormat&&s.rank>1){const i=[0];for(let o=2;o<s.rank;++o)i.push(o);i.push(1),s=Xn(s,i)}return function(i){if(i.rank<=1)throw new me(`batchFlatten requires a minimum rank of 2. Got rank: ${i.rank}.`);const o=[i.shape[0],As(i.shape,1)];return Me(i,o)}(s)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}h1.className="Flatten",St(h1);class d1 extends Qn{constructor(e){super(e),this.supportsMasking=!0,this.activation=Md(e.activation)}call(e,t){return Re(()=>{this.invokeCallHook(e,t);const s=$n(e);return this.activation.apply(s)})}getConfig(){const e={activation:Td(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}d1.className="Activation",St(d1);class p1 extends Qn{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Re(()=>{return e=$n(e),s=e,i=this.n,Re(()=>{if(2!==s.shape.length)throw new me(`repeat() expects a rank-2 tensor, but received a rank-${s.shape.length} tensor.`);return bv(by(s,1),[1,i,1])});var s,i})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}p1.className="RepeatVector",St(p1);class f1 extends Qn{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",i=t.slice();let o=1,l=null;for(let p=0;p<i.length;++p){const d=i[p];if(this.isUnknown(d)){if(null!==l)throw new me("Can only specifiy one unknown dimension.");l=p}else o*=d}const c=As(e);if(null!==l){if(0===o||c%o!=0)throw new me(s);i[l]=c/o}else if(c!==o)throw new me(s);return i}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Re(()=>{this.invokeCallHook(e,t);const s=$n(e),i=s.shape,o=i.slice(0,1).concat(this.fixUnknownDimension(i.slice(1),this.targetShape));return Me(s,o)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}f1.className="Reshape",St(f1);class m1 extends Qn{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=ml(1,e.dims.length+1);if(!He(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ws({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=mr(e)).slice();return this.dims.forEach((s,i)=>{t[i+1]=e[s]}),t}call(e,t){return Xn($n(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}m1.className="Permute",St(m1);class g1 extends Qn{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=$n(e);return Jo(da(s,this.maskValue),-1)}call(e,t){return Re(()=>{this.invokeCallHook(e,t);const s=$n(e),i=Jo(da(s,this.maskValue),-1,!0);return Se(s,Rt(i,s.dtype))})}}g1.className="Masking",St(g1);class y1 extends Qn{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=null==e.inputLength?[t,null]:[t].concat(ir(e.inputLength))}this.inputDim=e.inputDim,cs(this.inputDim,"inputDim"),this.outputDim=e.outputDim,cs(this.outputDim,"outputDim"),this.embeddingsInitializer=Wr(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Gr(e.embeddingsRegularizer),this.activityRegularizer=Gr(e.activityRegularizer),this.embeddingsConstraint=Le(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Re(()=>this.maskZero?(e=$n(e),da(e,Kn(e))):null)}computeOutputShape(e){if(e=mr(e),null==this.inputLength)return[...e,this.outputDim];const t=ir(this.inputLength);if(t.length!==e.length-1)throw new me(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let i=0;i<t.length;++i){const o=t[i],l=e[i+1];if(null!=o&&null!=l&&o!==l)throw new me(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==o&&(t[s]=l),s++}}return[e[0],...t,this.outputDim]}call(e,t){return Re(()=>{this.invokeCallHook(e,t);let s=$n(e);"int32"!==s.dtype&&(s=yx(s,"int32"));const i=Bw(this.embeddings.read(),Me(s,[s.size]));return Me(i,mr(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Yr(this.embeddingsInitializer),embeddingsRegularizer:Mr(this.embeddingsRegularizer),activityRegularizer:Mr(this.activityRegularizer),embeddingsConstraint:ae(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}y1.className="Embedding",St(y1);class ef extends Qn{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Ht}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const s=e.slice(0,e.length-t.length);for(let i=0;i<t.length;++i){const o=e[e.length-t.length+i],l=t[i];if(null==o||null==l||o<0||l<0)s.push(null);else if(1===o)s.push(l);else if(1===l)s.push(o);else{if(o!==l)throw new me("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(o)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[mr(e)]),(e=e).length<2)throw new me(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const o of e)null!=o&&null!==o[0]&&t.push(o[0]);if(t=dl(t),t.length>1)throw new me(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=null==e[0]?null:e[0].slice(1);for(let o=1;o<e.length;++o){const l=null==e[o]?null:e[o].slice(1);s=this.computeElementwiseOpOutputShape(s,l)}const i=e.map(o=>o.length);this.reshapeRequired=-1!==e.indexOf(null)||1!==dl(i).length}call(e,t){return Re(()=>{if(e=e,this.reshapeRequired){const s=[],i=e.map(o=>o.rank);if(-1===i.indexOf(null)){const o=vd(i);for(let l of e){const c=l.rank;for(let p=0;p<o-c;++p)l=by(l,1);s.push(l)}return this.mergeFunction(s)}{let o=!1;for(const p of e){const d=p.rank;if(null==d){const f=p.shape,m=f[0],y=f.slice(1).concat([m]);let v=Me(p,[m].concat(As(f.slice(1))));v=Xn(v,[1,0]),v=Me(v,y),s.push(v),o=!0}else if(d>1){const f=ml(1,d).concat([0]);s.push(Xn(p,f)),o=!0}else s.push(p)}let l=this.mergeFunction(s);const c=l.rank;if(o)if(null==c){const p=l.shape,d=p[p.length-1],f=[d].concat(p.slice(0,p.length-1));l=Me(Xn(Me(l,[-1,d]),[1,0]),f)}else if(c>1){const p=[c-1].concat(ml(0,c-1));l=Xn(l,p)}return l}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let i=1;i<e.length;++i){const o=null==e[i]?null:e[i].slice(1);t=this.computeElementwiseOpOutputShape(t,o)}let s=[];for(const i of e)null!=i&&null!==i[0]&&s.push(i[0]);return s=dl(s),t=1===s.length?s.concat(t):[null].concat(t),t}computeMask(e,t){return Re(()=>{if(null==t)return null;if(!Array.isArray(t))throw new me("`mask` should be an Array");if(!Array.isArray(e))throw new me("`inputs` should be an Array");if(t.length!==e.length)throw new me(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(i=>null==i))return null;let s=(t=t.map(i=>null==i?i:Is(i,0)))[0];for(let i=1;i<t.length-1;++i)s=gi(s,t[i]);return s})}}class x1 extends ef{constructor(e){super(e)}mergeFunction(e){return Re(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=vt(t,e[s]);return t})}}x1.className="Add",St(x1);class b1 extends ef{constructor(e){super(e)}mergeFunction(e){return Re(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=Se(t,e[s]);return t})}}b1.className="Multiply",St(b1);class v1 extends ef{constructor(e){super(e)}mergeFunction(e){return Re(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=vt(t,e[s]);return Se(1/e.length,t)})}}v1.className="Average",St(v1);class w1 extends ef{constructor(e){super(e)}mergeFunction(e){return Re(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Zs(t,e[s]);return t})}}w1.className="Maximum",St(w1);class S1 extends ef{constructor(e){super(e)}mergeFunction(e){return Re(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=ja(t,e[s]);return t})}}S1.className="Minimum",St(S1);class T1 extends ef{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new me("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const i of e)if(null!=i){t=!1;break}if(t)return;const s=[];for(let i=0;i<e.length;++i){const o=e[i].slice();o.splice(this.axis,1);let l=!1;for(const c of s)if(He(c,o)){l=!0;break}l||s.push(o)}if(s.length>1)throw new me("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Re(()=>xv(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new me("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),i=this.axis<0?s.length+this.axis:this.axis;for(const o of t.slice(1)){if(null==s[i]||null==o[i]){s[i]=null;break}s[i]+=o[i]}return s}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new me("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new me("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new me(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Re(()=>{let s=!0;if(t.forEach(l=>{null==l||(s=!1)}),s)return null;const i=[];for(let l=0;l<e.length;++l)i.push(null==t[l]?Rt(Os(e[l]),"bool"):t[l].rank<e[l].rank?Is(t[l],-1):t[l]);const o=dr(i,this.axis);return Zo(o,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Ny(r,e){for(;r<0;)r+=e;return r}T1.className="Concatenate",St(T1);class M1 extends ef{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){F(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new Ht("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(t,s);if(t[i[0]]!==s[i[1]])throw new me(`Dimension incompatibility: ${t[i[0]]} !== ${s[i[1]]}`)}mergeFunction(e){if(2!==e.length)throw new me(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,s=e[0],i=e[1];return t=Array.isArray(this.axes)?this.axes.map((o,l)=>Ny(o,e[l].shape.length)):[Ny(this.axes,s.shape.length),Ny(this.axes,i.shape.length)],this.normalize&&(s=Rx(s,t[0]),i=Rx(i,t[1])),function(o,l,c){if(o.shape.length>3||l.shape.length>3)throw new Ht("batchDot is not implemented for tensors of 4D or higher rank yet");if(F(o.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${o.shape.length}`),F(o.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${l.shape.length}`),"number"==typeof c&&(c=[c,c]),"complex64"===o.dtype||"complex64"===l.dtype)throw new Ht("batchDot is not implemented for complex64-type Tensors yet.");const p=o.shape.length,d=l.shape.length;null==c&&(c=[p-1,d-2]);const f=c;return Re(()=>{let m,y;if(p>d){m=p-d;const v=[];for(let S=0;S<m;++S)v.push(1);l=Me(l,l.shape.concat(v))}else if(d>p){m=d-p;const v=[];for(let S=0;S<m;++S)v.push(1);o=Me(o,o.shape.concat(v))}else m=0;if(y=2===o.shape.length&&2===l.shape.length?f[0]===f[1]?Qt(Se(o,l),f[0]):Qt(Se(Xn(o,[1,0]),l),f[1]):Fn(o,l,f[0]!==o.shape.length-1,f[1]===l.shape.length-1),m>0){let v;v=p>d?p+d-3:p-1;const S=[];for(let _=v;_<v+m;++_)S.push(_);y=fa(y,S)}return 1===y.shape.length&&(y=Is(y,1)),y})}(s,i,t)}interpretAxes(e,t){let s;return s=Array.isArray(this.axes)?this.axes:[Ny(this.axes,e.length),Ny(this.axes,t.length)],s}computeOutputShape(e){F(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new Ht("Dot layer does not support tensors of 4D or higher rank yet.");const i=this.interpretAxes(t,s);t.splice(i[0],1),s.splice(i[1],1),s.splice(0,1);const o=t.concat(s);return 1===o.length&&o.push(1),o}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}M1.className="Dot",St(M1);class _1 extends Qn{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Re(()=>{this.invokeCallHook(e,t);const s=$n(e);return wy(()=>vt(bx(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}_1.className="GaussianNoise",St(_1);class k1 extends Qn{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Re(()=>{this.invokeCallHook(e,t);const s=$n(e);return this.rate>0&&this.rate<1?wy(()=>{const i=Math.sqrt(this.rate/(1-this.rate));return Se(s,bx(s.shape,1,i))},()=>s,t.training||!1):s})}}k1.className="GaussianDropout",St(k1);class E1 extends Qn{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||$n(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Re(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return wy(()=>{const i=$n(e),o=-1.7580993408473766;let l=ca(Ii(s),this.rate);l=yx(l,"float32");const c=((1-this.rate)*(1+this.rate*o**2))**-.5,p=-c*o*this.rate,d=vt(Se(i,l),Se(vt(l,-1),o));return vt(Se(d,c),p)},()=>$n(e),t.training||!1)}return e})}}function Ay(r,e,t,s,i,o=.001){let l;if(2===r.rank)l=Cg(r,e,t,s,i,o);else if(3===r.rank)l=Ng(r,e,t,s,i,o);else{if(4!==r.rank)throw new Ht(`batchNormalization is not implemented for array of rank ${r.rank} yet`);l=Ag(r,e,t,s,i,o)}return l}E1.className="AlphaDropout",St(E1);class I1 extends Qn{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Wr(e.betaInitializer||"zeros"),this.gammaInitializer=Wr(e.gammaInitializer||"ones"),this.movingMeanInitializer=Wr(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Wr(e.movingVarianceInitializer||"ones"),this.betaConstraint=Le(e.betaConstraint),this.gammaConstraint=Le(e.gammaConstraint),this.betaRegularizer=Gr(e.betaRegularizer),this.gammaRegularizer=Gr(e.gammaRegularizer)}build(e){e=mr(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(null==s)throw new me(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new ws({ndim:e.length,axes:{[t]:s}})];const i=[s];this.scale&&(this.gamma=this.addWeight("gamma",i,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",i,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",i,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",i,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Re(()=>{const s=null!=t.training&&t.training,i=$n(e),o=i.shape,l=o.length,c=ml(0,l),p=this.axis>=0?this.axis:this.axis+l;c.splice(p,1);const d=Yn(1,l);d[p]=o[p];const f=c.slice();f.sort();const m=!He(f,ml(0,l).slice(0,l-1));if(!s)return(()=>{if(m){const k=Me(this.movingMean.read(),d),I=Me(this.movingVariance.read(),d),A=this.center?Me(this.beta.read(),d):null,R=this.scale?Me(this.gamma.read(),d):null;return Ay(i,k,I,A,R,this.epsilon)}return Ay(i,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[y,v,S]=function(k,I,A,R,P=.001){return He(R.slice().sort(),ml(0,k.rank-1))?function(U,W,se,G,pe=.001){return Re(()=>{const de=ol(U,G),ye=de.mean,Ee=de.variance;return[Ay(U,ye,Ee,se,W,pe),ye,Ee]})}(k,I,A,R,P):function(U,W,se,G,pe=.001){return Re(()=>{const de=ol(U,G),ye=de.mean,Ee=de.variance,Ne=[];for(const Je of ml(0,U.rank))-1!==G.indexOf(Je)?Ne.push(1):Ne.push(U.shape[Je]);const Be=Me(ye,Ne),je=Me(Ee,Ne),Ye=null==W?null:Me(W,Ne),Xe=null==se?null:Me(se,Ne);return[Ay(U,Be,je,Xe,Ye,pe),ye,Ee]})}(k,I,A,R,P)}(i,this.gamma.read(),this.beta.read(),c,this.epsilon),_=(k,I,A)=>{Re(()=>{const R=1-A,P=k.read(),U=Se(Yt(P,I),R);k.write(Yt(P,U))})};return(()=>{_(this.movingMean,v,this.momentum),_(this.movingVariance,S,this.momentum)})(),y})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Yr(this.betaInitializer),gammaInitializer:Yr(this.gammaInitializer),movingMeanInitializer:Yr(this.movingMeanInitializer),movingVarianceInitializer:Yr(this.movingVarianceInitializer),betaRegularizer:Mr(this.betaRegularizer),gammaRegularizer:Mr(this.gammaRegularizer),betaConstraint:ae(this.betaConstraint),gammaConstraint:ae(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}I1.className="BatchNormalization",St(I1);class C1 extends Qn{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Wr(e.betaInitializer||"zeros"),this.gammaInitializer=Wr(e.gammaInitializer||"ones"),this.betaRegularizer=Gr(e.betaRegularizer),this.gammaRegularizer=Gr(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=mr(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let i=0;i<this.axis.length;++i)this.axis[i]<0&&(this.axis[i]+=t);for(const i of this.axis)if(i<0||i>=t)throw new Error(`Invalid axis: ${i}`);if(this.axis.length!==dl(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(i=>e[i]);this.gamma=this.scale?this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,!0):null,this.beta=this.center?this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,!0):null,this.built=!0}call(e,t){const s=$n(e),i=s.shape,o=i.length;return Re(()=>{let{mean:l,variance:c}=ol(s,this.axis,!0);const p=Yn(1,o);for(const S of this.axis)p[S]=i[S];const d=S=>null!=S&&S.shape.length!==o&&this.axis!==[o-1]?Me(S,p):S;let f=d(this.gamma.read()),m=d(this.beta.read());const y=[],v=[];for(let S=0;S<o;++S)-1!==this.axis.indexOf(S)?(y.push(i[S]),v.push(1)):(y.push(1),v.push(i[S]));return l=mi(l,y),c=mi(c,y),f=mi(f,v),m=mi(m,v),Ay(s,l,c,m,f,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Yr(this.betaInitializer),gammaInitializer:Yr(this.gammaInitializer),betaRegularizer:Mr(this.betaRegularizer),gammaRegularizer:Mr(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}C1.className="LayerNormalization",St(C1);class N1 extends Qn{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new me(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new me(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new me(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new ws({ndim:4})]}computeOutputShape(e){let t,s;return e=mr(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,s=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,s]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,s=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,s,e[3]])}call(e,t){return Re(()=>{return s=$n(e),i=this.padding,o=this.dataFormat,Re(()=>{if(4!==s.rank)throw new me(`temporalPadding expects input tensor to be 4-D, but received a ${s.rank}-D tensor.`);if(null==i&&(i=[[1,1],[1,1]]),2!==i.length||2!==i[0].length||2!==i[1].length)throw new me("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==o&&(o="channelsLast"),"channelsLast"!==o&&"channelsFirst"!==o)throw new me(`Unknown data format: ${o}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let l;return l="channelsFirst"===o?[[0,0],[0,0],i[0],i[1]]:[[0,0],i[0],i[1],[0,0]],Ei(s,l)});var s,i,o})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function qx(r,e,t,s,i,o){return Re(()=>{let l;fr(i),pl(o),Jn(s),null==t&&(t=[1,1]),null==s&&(s="valid"),null==i&&(i="channelsLast"),null==o&&(o="max"),r=Jv(r,i);const c="same"===s?"same":"valid";return l="max"===o?il(r,e,t,c):wp(r,e,t,c),"channelsFirst"===i&&(l=Xn(l,[0,3,1,2])),l})}function WS(r,e,t,s,i,o){return Re(()=>{let l;fr(i),pl(o),Jn(s),null==t&&(t=[1,1,1]),null==s&&(s="valid"),null==i&&(i="channelsLast"),null==o&&(o="max"),r=OS(r,i);const c="same"===s?"same":"valid";return l="max"===o?Np(r,e,t,c):qh(r,e,t,c),"channelsFirst"===i&&(l=Xn(l,[0,4,1,2,3])),l})}N1.className="ZeroPadding2D",St(N1);class GS extends Qn{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new me(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(cs(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new me(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}cs(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Jn(this.padding),this.inputSpec=[new ws({ndim:3})]}computeOutputShape(e){const t=vl((e=mr(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Re(()=>{this.invokeCallHook(e,t),e=by($n(e),2);const s=this.poolingFunction($n(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return fa(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class A1 extends GS{constructor(e){super(e)}poolingFunction(e,t,s,i,o){return fr(o),Jn(i),qx(e,t,s,i,o,"max")}}A1.className="MaxPooling1D",St(A1);class R1 extends GS{constructor(e){super(e)}poolingFunction(e,t,s,i,o){return fr(o),Jn(i),qx(e,t,s,i,o,"avg")}}R1.className="AveragePooling1D",St(R1);class HS extends Qn{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new me(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];cs(this.poolSize,"poolSize"),cs(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,fr(this.dataFormat),Jn(this.padding),this.inputSpec=[new ws({ndim:4})]}computeOutputShape(e){e=mr(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],s="channelsFirst"===this.dataFormat?e[3]:e[2];return t=vl(t,this.poolSize[0],this.padding,this.strides[0]),s=vl(s,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return Re(()=>(this.invokeCallHook(e,t),this.poolingFunction($n(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class L1 extends HS{constructor(e){super(e)}poolingFunction(e,t,s,i,o){return fr(o),Jn(i),qx(e,t,s,i,o,"max")}}L1.className="MaxPooling2D",St(L1);class D1 extends HS{constructor(e){super(e)}poolingFunction(e,t,s,i,o){return fr(o),Jn(i),qx(e,t,s,i,o,"avg")}}D1.className="AveragePooling2D",St(D1);class jS extends Qn{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new me(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];cs(this.poolSize,"poolSize"),cs(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,fr(this.dataFormat),Jn(this.padding),this.inputSpec=[new ws({ndim:5})]}computeOutputShape(e){e=mr(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],s="channelsFirst"===this.dataFormat?e[3]:e[2],i="channelsFirst"===this.dataFormat?e[4]:e[3];return t=vl(t,this.poolSize[0],this.padding,this.strides[0]),s=vl(s,this.poolSize[1],this.padding,this.strides[1]),i=vl(i,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,s,i]:[e[0],t,s,i,e[4]]}call(e,t){return Re(()=>(this.invokeCallHook(e,t),this.poolingFunction($n(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class F1 extends jS{constructor(e){super(e)}poolingFunction(e,t,s,i,o){return fr(o),Jn(i),WS(e,t,s,i,o,"max")}}F1.className="MaxPooling3D",St(F1);class $1 extends jS{constructor(e){super(e)}poolingFunction(e,t,s,i,o){return fr(o),Jn(i),WS(e,t,s,i,o,"avg")}}$1.className="AveragePooling3D",St($1);class qS extends Qn{constructor(e){super(e),this.inputSpec=[new ws({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Ht}}class O1 extends qS{constructor(e){super(e||{})}call(e,t){return Re(()=>{const s=$n(e);return Ir(s,1)})}}O1.className="GlobalAveragePooling1D",St(O1);class P1 extends qS{constructor(e){super(e||{})}call(e,t){return Re(()=>{const s=$n(e);return ha(s,1)})}}P1.className="GlobalMaxPooling1D",St(P1);class XS extends Qn{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,fr(this.dataFormat),this.inputSpec=[new ws({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Ht}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class z1 extends XS{call(e,t){return Re(()=>{const s=$n(e);return Ir(s,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}z1.className="GlobalAveragePooling2D",St(z1);class B1 extends XS{call(e,t){return Re(()=>{const s=$n(e);return ha(s,"channelsLast"===this.dataFormat?[1,2]:[2,3])})}}B1.className="GlobalMaxPooling2D",St(B1);class KS extends Qn{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const i=xl(t.layer,s);delete t.layer;const o={layer:i};return Object.assign(o,t),new e(o)}}class U1 extends KS{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=mr(e)).length<3)throw new me(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=mr(e))[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t);return[s[0],e[1]].concat(s.slice(1))}call(e,t){return Re(()=>US((s,i)=>[$n(this.layer.call(s,t)),[]],e=$n(e),[],!1,null,null,!1,!0)[1])}}U1.className="TimeDistributed",St(U1);class V1 extends KS{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=xl(s),t.goBackwards=!0!==t.goBackwards;const i={};if(i.className=e.layer.getClassName(),i.config=t,this.backwardLayer=xl(i),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,pu(jn,"BidirectionalMergeMode",this.mergeMode),e.weights)throw new Ht("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const s=Math.floor(e.length/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t,s,i,o=this.forwardLayer.computeOutputShape(e);return Array.isArray(o)&&Array.isArray(o[0])||(o=[o]),o=o,this.returnState&&(i=o.slice(1)),t=o[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,s=[t]):s=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?s.concat(i).concat(i.slice()):[t].concat(i).concat(i.slice()):ss(s)}apply(e,t){let s=null==t?null:t.initialState,i=null==t?null:t.constants;null==t&&(t={});const o=BS(e,s,i,this.numConstants);if(e=o.inputs,s=o.initialState,i=o.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(null==s||0===s.length)&&null==i)return super.apply(e,t);const l=[],c=[];if(null!=s){const d=s.length;if(d%2>0)throw new me("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,l.push(...s);const f=s.map(m=>new ws({shape:m.shape}));this.forwardLayer.stateSpec=f.slice(0,d/2),this.backwardLayer.stateSpec=f.slice(d/2),c.push(...f)}if(null!=i)throw new Ht("Support for constants in Bidirectional layers is not implemented yet.");const p=l[0]instanceof yl;for(const d of l)if(d instanceof yl!==p)throw new me("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(p){const d=[e].concat(l),f=this.inputSpec.concat(c),m=this.inputSpec;this.inputSpec=f;const y=super.apply(d,t);return this.inputSpec=m,y}return super.apply(e,t)}call(e,t){return Re(()=>{const s=t.initialState;let i,o,l,c;if(null==s)i=this.forwardLayer.call(e,t),o=this.backwardLayer.call(e,t);else{const p=s.slice(0,s.length/2),d=s.slice(s.length/2);i=this.forwardLayer.call(e,Object.assign(t,{initialState:p})),o=this.backwardLayer.call(e,Object.assign(t,{initialState:d}))}return this.returnState&&(Array.isArray(i)&&(l=i.slice(1).concat(o.slice(1))),i=i[0],o=o[0]),this.returnSequences&&(o=ei(o,1)),"concat"===this.mergeMode?c=xv([i,o]):"sum"===this.mergeMode?c=vt(i,o):"ave"===this.mergeMode?c=Se(.5,vt(i,o)):"mul"===this.mergeMode?c=Se(i,o):null==this.mergeMode&&(c=[i,o]),this.returnState?null==this.mergeMode?c.concat(l):[c].concat(l):c})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){qi(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),qi(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let s;if(Array.isArray(t)&&(t=t[0]),s=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const i=this.forwardLayer.states.map(o=>null);return Array.isArray(s)?s.concat(i).concat(i):[s].concat(i).concat(i)}return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=xl(t.layer);if(delete t.layer,null!=t.numConstants)throw new Ht("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const i=t;return i.layer=s,new e(i)}}function D_(r){return new _m(r)}function F_(r){return new Kv(r)}function $_(r){return new jv(r)}function O_(r){return new qv(r)}function P_(r){return new Xv(r)}function z_(r){return new Zv(r)}function B_(r){return new Yv(r)}function U_(r){return new Ey(r)}function V_(r){return new Nm(r)}function W_(r){return new Qv(r)}function G_(r){return new Am(r)}function H_(r){return new e1(r)}function j_(r){return new t1(r)}function q_(r){return new n1(r)}function X_(r){return new r1(r)}function K_(r){return new s1(r)}function Y_(r){return new d1(r)}function Z_(r){return new c1(r)}function J_(r){return new jx(r)}function Q_(r){return new u1(r)}function ek(r){return new h1(r)}function tk(r){return new p1(r)}function nk(r){return new f1(r)}function rk(r){return new m1(r)}function sk(r){return new y1(r)}function ik(r){return new x1(r)}function ak(r){return new v1(r)}function ok(r){return new T1(r)}function lk(r){return new w1(r)}function uk(r){return new S1(r)}function ck(r){return new b1(r)}function hk(r){return new M1(r)}function dk(r){return new I1(r)}function pk(r){return new C1(r)}function fk(r){return new N1(r)}function W1(r){return new R1(r)}function mk(r){return W1(r)}function gk(r){return W1(r)}function G1(r){return new D1(r)}function yk(r){return G1(r)}function xk(r){return G1(r)}function H1(r){return new $1(r)}function bk(r){return H1(r)}function vk(r){return H1(r)}function wk(r){return new O1(r)}function Sk(r){return new z1(r)}function YS(r){return new P1(r)}function ZS(r){return new B1(r)}function JS(r){return new A1(r)}function QS(r){return new L1(r)}function Tk(r){return new F1(r)}function Mk(r){return new a1(r)}function _k(r){return new Wx(r)}function kk(r){return new o1(r)}function Ek(r){return new Cy(r)}function Ik(r){return new i1(r)}function Ck(r){return new Vx(r)}function Nk(r){return new l1(r)}function Ak(r){return new Hx(r)}function Rk(r){return new wl(r)}function Lk(r){return new Gx(r)}function Dk(r){return new V1(r)}function Fk(r){return new U1(r)}V1.className="Bidirectional",St(V1);const $k=YS,Ok=ZS,Pk=JS,zk=QS;function Bk(r){return new _1(r)}function Uk(r){return new k1(r)}function Vk(r){return new E1(r)}function Wk(r){return new g1(r)}function Gk(r,e){return Lv(r,e)}function Hk(r,e){return rS(r,e)}function jk(r,e){return sS(r,e)}function qk(r,e){return Dv(r,e)}function Xk(r,e){return Fv(r,e)}function Kk(r,e){return nS(r,e)}function Yk(r,e){return t=r,s=e,Re(()=>{const i=tS(t,s),o=(c=t,p=s,Re(()=>Rt(Qt(gi($s(c,1),$s(p,0))),"float32"))),l=vt(i,o);var c,p;return Rt(fs(ms(l,0),an(i,l),0),"float32")});var t,s}function Zk(r,e){return Av(r,e)}function Jk(r,e){return Lx(r,e)}function Qk(r,e){return Em(r,e)}function eE(r,e){return Em(r,e)}function tE(r,e){return Em(r,e)}function nE(r,e){return Zp(r,e)}function rE(r,e){return Zp(r,e)}function sE(r,e){return Zp(r,e)}function iE(r){return new ky(r)}function aE(r){return Hv(e=r),new ky({l1:null!=e?e.l1:null,l2:0});var e}function oE(r){return Hv(e=r),new ky({l2:null!=e?e.l2:null,l1:0});var e}class eT extends km{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Ac))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function Xx(r,e){return r<e}function lE(r,e){return r>e}class tT extends eT{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new Ht("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.monitorFunc="min"===this.mode?Xx:"max"===this.mode||-1!==this.monitor.indexOf("acc")?lE:Xx,this.monitorFunc===Xx&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.best=null!=this.baseline?this.baseline:this.monitorFunc===Xx?1/0:-1/0}async onEpochEnd(e,t){await wd(t);const s=this.getMonitorValue(t);null!=s&&(this.monitorFunc(s-this.minDelta,this.best)?(this.best=s,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const uE={earlyStopping:function(r){return new tT(r)}};var Sl,nT;(function(r){r[r.DT_INVALID=0]="DT_INVALID",r[r.DT_FLOAT=1]="DT_FLOAT",r[r.DT_DOUBLE=2]="DT_DOUBLE",r[r.DT_INT32=3]="DT_INT32",r[r.DT_UINT8=4]="DT_UINT8",r[r.DT_INT16=5]="DT_INT16",r[r.DT_INT8=6]="DT_INT8",r[r.DT_STRING=7]="DT_STRING",r[r.DT_COMPLEX64=8]="DT_COMPLEX64",r[r.DT_INT64=9]="DT_INT64",r[r.DT_BOOL=10]="DT_BOOL",r[r.DT_QINT8=11]="DT_QINT8",r[r.DT_QUINT8=12]="DT_QUINT8",r[r.DT_QINT32=13]="DT_QINT32",r[r.DT_BFLOAT16=14]="DT_BFLOAT16",r[r.DT_FLOAT_REF=101]="DT_FLOAT_REF",r[r.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",r[r.DT_INT32_REF=103]="DT_INT32_REF",r[r.DT_UINT8_REF=104]="DT_UINT8_REF",r[r.DT_INT16_REF=105]="DT_INT16_REF",r[r.DT_INT8_REF=106]="DT_INT8_REF",r[r.DT_STRING_REF=107]="DT_STRING_REF",r[r.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",r[r.DT_INT64_REF=109]="DT_INT64_REF",r[r.DT_BOOL_REF=110]="DT_BOOL_REF",r[r.DT_QINT8_REF=111]="DT_QINT8_REF",r[r.DT_QUINT8_REF=112]="DT_QUINT8_REF",r[r.DT_QINT32_REF=113]="DT_QINT32_REF",r[r.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"})(Sl||(Sl={})),function(r){let e;var t;(t=e=r.CheckpointFormatVersion||(r.CheckpointFormatVersion={}))[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(nT||(nT={}));const j1={};function cE(r,e){j1[r]={tfOpName:r,category:"custom",inputs:[],attrs:[],customExecutor:e}}function rT(r){return j1[r]}function hE(r){delete j1[r]}function z(r,e,t,s,i){const o=e.inputParams[r];if(o&&void 0!==o.inputIndexStart){const c=o.inputIndexStart,p=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?c+1:o.inputIndexEnd;if("tensor"===o.type)return Di(e.inputNames[o.inputIndexStart],t,s,i);if("tensors"===o.type)return e.inputNames.slice(c,p).map(m=>Di(m,t,s,i));const d=Di(e.inputNames.slice(c)[0],t,s,i),f=d.dataSync();return"number"===o.type?f[0]:wi(d.shape,f)}const l=e.attrParams[r];return l&&l.value}function Di(r,e,t,s){const[i,o]=ga(r);if(null!=s){const c=s.getHashTableHandleByName(i);if(null!=c)return c}const l=t.currentContextIds.find(c=>!!e[Kx(i,c)]);return void 0!==l?e[Kx(i,l)][o]:void 0}function Rc(r,e){const[t,s,i]=ga(r);return[Kx(t,e&&e.currentContextId),s,i]}function Kx(r,e){return e?`${r}-${e}`:r}function ga(r){const e=r.split(":");if(1===e.length)return[r,0,void 0];const s=3===e.length?e[1]:void 0;return[e[0],Number(e[e.length-1]),s]}function Yx(r,e,t){let s=z("pad",r,e,t);if("explicit"===s){s=z("explicitPaddings",r,e,t);const i=[[0,0],[0,0],[0,0],[0,0]];for(let o=0;o<4;o++)i[o][0]=s[2*o],i[o][1]=s[2*o+1];return i}return s}function Lc(r){return r.kept?r:Xo(r)}const dE=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],pE=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],fE=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],mE=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],gE=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],yE=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],xE=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],bE=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],vE=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],wE=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],SE=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],TE=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],ME=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],_E=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],kE=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],EE=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],IE=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],CE=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],NE=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class sT{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[Ze,Z,Fe,zt,Jt,on,mn,bn,yr,kr,Rr,is,Ls,_o,Ml,xu,$c,Qa,ko].map(t=>t.json));this.opMappers=e.reduce((t,s)=>(t[s.tfOpName]=s,t),{})}transformGraph(e,t={}){const i=[],o=[],l=[],c=e.node.reduce((_,k)=>(_[k.name]=this.mapNode(k),k.op.startsWith("Placeholder")?i.push(_[k.name]):"Const"===k.op?o.push(_[k.name]):null!=k.input&&0!==k.input.length||l.push(_[k.name]),_),{});let p=[];const d=[];let f={},m={};null!=t&&(f=this.mapSignatureEntries(t.inputs),m=this.mapSignatureEntries(t.outputs));const y=Object.keys(c);y.forEach(_=>{const k=c[_];k.inputNames.forEach((I,A)=>{const[R,,P]=Rc(I),U=c[R];if(null!=U.outputs){const W=U.outputs.indexOf(P);-1!==W&&(k.inputNames[A]=`${R}:${W}`)}k.inputs.push(U),U.children.push(k)})}),0===Object.keys(m).length?y.forEach(_=>{const k=c[_];0===k.children.length&&d.push(k)}):Object.keys(m).forEach(_=>{const[k]=Rc(_),I=c[k];null!=I&&(I.signatureKey=m[_],d.push(I))}),Object.keys(f).length>0?Object.keys(f).forEach(_=>{const[k]=Rc(_),I=c[k];I&&(I.signatureKey=f[_],p.push(I))}):p=i;let v={};null!=e.library&&null!=e.library.function&&(v=e.library.function.reduce((_,k)=>(_[k.signature.name]=this.mapFunction(k),_),{}));const S={nodes:c,inputs:p,outputs:d,weights:o,placeholders:i,signature:t,functions:v};return l.length>0&&(S.initNodes=l),S}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,s)=>(t[e[s].name]=s,t),{})}mapNode(e){const t=rT(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const s={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(i=>i.startsWith("^")?i.substr(1):i),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(s.inputParams=t.inputs.reduce((i,o)=>(i[o.name]={type:o.type,inputIndexStart:o.start,inputIndexEnd:o.end},i),{})),null!=t.attrs&&(s.attrParams=t.attrs.reduce((i,o)=>{const l=o.type;let c;switch(o.type){case"string":c=q1(e.attr,o.tfName,o.defaultValue),void 0===c&&o.tfDeprecatedName&&(c=q1(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"string[]":c=tw(e.attr,o.tfName,o.defaultValue),void 0===c&&o.tfDeprecatedName&&(c=tw(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number":c=K1(e.attr,o.tfName,o.defaultValue||0),void 0===c&&o.tfDeprecatedName&&(c=K1(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"number[]":c=ew(e.attr,o.tfName,o.defaultValue),void 0===c&&o.tfDeprecatedName&&(c=ew(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool":c=X1(e.attr,o.tfName,o.defaultValue),void 0===c&&o.tfDeprecatedName&&(c=X1(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"bool[]":c=rw(e.attr,o.tfName,o.defaultValue),void 0===c&&o.tfDeprecatedName&&(c=rw(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape":c=Q1(e.attr,o.tfName,o.defaultValue),void 0===c&&o.tfDeprecatedName&&(c=Q1(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"shape[]":c=nw(e.attr,o.tfName,o.defaultValue),void 0===c&&o.tfDeprecatedName&&(c=nw(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype":c=Z1(e.attr,o.tfName,o.defaultValue),void 0===c&&o.tfDeprecatedName&&(c=Z1(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"dtype[]":c=J1(e.attr,o.tfName,o.defaultValue),void 0===c&&o.tfDeprecatedName&&(c=J1(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"func":c=aT(e.attr,o.tfName,o.defaultValue),void 0===c&&o.tfDeprecatedName&&(c=aT(e.attr,o.tfDeprecatedName,o.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${o.type} for op: ${e.op}`)}return i[o.name]={value:c,type:l},i},{})),s}mapFunction(e){const t=e.nodeDef,s=[];let i={};null!=t&&(i=t.reduce((d,f)=>(d[f.name]=this.mapNode(f),"Const"===f.op&&s.push(d[f.name]),d),{}));const o=[],l=[];e.signature.inputArg.forEach(d=>{const[f]=Rc(d.name),m={name:f,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Y1(d.type),type:"dtype"}},children:[]};m.signatureKey=d.name,o.push(m),i[f]=m}),Object.keys(i).forEach(d=>{const f=i[d];f.inputNames.forEach((m,y)=>{const[v,,S]=Rc(m),_=i[v];if(null!=_.outputs){const k=_.outputs.indexOf(S);-1!==k&&(f.inputNames[y]=`${v}:${k}`)}f.inputs.push(_),_.children.push(f)})});const c=e.ret;e.signature.outputArg.forEach(d=>{const[f,m]=Rc(c[d.name]),y=i[f];null!=y&&(y.defaultOutput=m,l.push(y))});const p=this.mapArgsToSignature(e);return{nodes:i,inputs:o,outputs:l,weights:s,placeholders:[],signature:p}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s),t),{}),outputs:e.signature.outputArg.reduce((t,s)=>(t[s.name]=this.mapArgToTensorInfo(s,e.ret),t),{})}}mapArgToTensorInfo(e,t){let s=e.name;return null!=t&&(s=t[s]),{name:s,dtype:e.type}}}function iT(r,e){const t=Array.isArray(r)?String.fromCharCode.apply(null,r):function(s){const i=nt().global;if(void 0!==i.atob)return i.atob(s);if("undefined"!=typeof Buffer)return new Buffer(s,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(r);return e?t:t.toLowerCase()}function q1(r,e,t,s=!1){const i=r[e];return null!=i?iT(i.s,s):t}function X1(r,e,t){const s=r[e];return s?s.b:t}function K1(r,e,t){const s=r[e]||{},i=null!=s.i?s.i:null!=s.f?s.f:t;return"number"==typeof i?i:parseInt(i,10)}function Y1(r){switch("string"==typeof r&&(r=Sl[r]),r){case Sl.DT_FLOAT:case Sl.DT_DOUBLE:return"float32";case Sl.DT_INT32:case Sl.DT_INT64:case Sl.DT_INT8:case Sl.DT_UINT8:return"int32";case Sl.DT_BOOL:return"bool";case Sl.DT_STRING:return"string";default:return null}}function aT(r,e,t){const s=r[e];return s&&s.func?s.func.name:t}function Z1(r,e,t){const s=r[e];return s&&s.type?Y1(s.type):t}function J1(r,e,t){const s=r[e];return s&&s.list&&s.list.type?s.list.type.map(i=>Y1(i)):t}function oT(r){if(!r.unknownRank)return null!=r.dim?r.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function Q1(r,e,t){const s=r[e];return s&&s.shape?oT(s.shape):t}function ew(r,e,t){const s=r[e];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(i=>"number"==typeof i?i:parseInt(i,10)):t}function tw(r,e,t,s=!1){const i=r[e];return i&&i.list&&i.list.s?i.list.s.map(o=>iT(o,s)):t}function nw(r,e,t){const s=r[e];return s&&s.list&&s.list.shape?s.list.shape.map(i=>oT(i)):t}function rw(r,e,t){const s=r[e];return s&&s.list&&s.list.b?s.list.b:t}class AE{constructor(e,t,s){this.node=e,this.tensorMap=t,this.context=s,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(i=>this.getInput(i)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((i,o)=>(i[o]=this.getAttr(o),i),{}))}getInput(e){return Di(e,this.tensorMap,this.context)}getAttr(e,t){const s=this.node.rawAttrs[e];if(null!=s.tensor)return Di(e,this.tensorMap,this.context);if(null!=s.i||null!=s.f)return K1(this.node.rawAttrs,e,t);if(null!=s.s)return q1(this.node.rawAttrs,e,t);if(null!=s.b)return X1(this.node.rawAttrs,e,t);if(null!=s.shape)return Q1(this.node.rawAttrs,e,t);if(null!=s.type)return Z1(this.node.rawAttrs,e,t);if(null!=s.list){if(null!=s.list.i||null!=s.list.f)return ew(this.node.rawAttrs,e,t);if(null!=s.list.s)return tw(this.node.rawAttrs,e,t);if(null!=s.list.shape)return nw(this.node.rawAttrs,e,t);if(null!=s.list.b)return rw(this.node.rawAttrs,e,t);if(null!=s.list.type)return J1(this.node.rawAttrs,e,t)}return t}}function To(r,e,t=""){if("number"!=typeof r&&"number"!=typeof e){F(r.length===e.length,()=>t+` Shapes ${r} and ${e} must match`);for(let s=0;s<r.length;s++){const i=r[s],o=e[s];F(i<0||o<0||i===o,()=>t+` Shapes ${r} and ${e} must match`)}}}function lT(r){return"number"!=typeof r&&!r.some(e=>e<0)}function Ry(r,e,t){let s=sw(r,t);const i=!lT(s);if(i&&0===e.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(i&&e.forEach(o=>{s=sw(o.shape,s)}),!lT(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function sw(r,e){if("number"==typeof r)return e;if("number"==typeof e)return r;if(r.length!==e.length)throw new Error(`Incompatible ranks during merge: ${r} vs. ${e}`);const t=[];for(let s=0;s<r.length;++s){const i=r[s],o=e[s];if(i>=0&&o>=0&&i!==o)throw new Error(`Incompatible shape during merge: ${r} vs. ${e}`);t[s]=i>=0?i:o}return t}class RE{constructor(e,t,s,i,o,l,c){this.name=e,this.dtype=t,this.maxSize=s,this.elementShape=i,this.identicalElementShapes=o,this.dynamicSize=l,this.clearAfterRead=c,this.tensors=[],this.closed_=!1,this.idTensor=ln(0),ps(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),To(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);s.tensor=t,ps(t),s.written=!0,this.tensors[e]=s}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((s,i)=>this.write(s,t[i]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let i=0;i<this.size();i++)e.push(i)}if(0===e.length)return cr([],[0].concat(this.elementShape));const s=this.readMany(e);return To(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),yi(s,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return cr([],[0].concat(this.elementShape));const t=[];for(let i=0;i<this.size();i++)t.push(i);const s=this.readMany(t);return To(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),dr(s,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const s=Math.max(...e);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(e,Ri(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let s=0;const i=e.map(p=>(s+=p,s));if(s!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const o=0===s?0:t.size/s,l=[];Re(()=>{t=Me(t,[1,s,o]);for(let p=0;p<e.length;++p)l[p]=Me(Gn(t,[0,0===p?0:i[p-1],0],[1,e[p],o]),this.elementShape);return l});const c=[];for(let p=0;p<e.length;p++)c[p]=p;this.writeMany(c,l)}}class Rm{constructor(e,t,s,i=-1){this.tensors=e,this.elementShape=t,this.elementDtype=s,null!=e&&e.forEach(o=>{if(s!==o.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${o.dtype}`);To(t,o.shape,"TensorList shape mismatch: "),ps(o)}),this.idTensor=ln(0),this.maxNumElements=i,ps(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Rm([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,s=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==s&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);To(e,this.elementShape,"TensorList shape mismatch: ");const i=Ry(this.elementShape,this.tensors,e);return Re(()=>{const o=this.tensors.map(l=>Me(l,i));return yi(o,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const s=Ry(this.elementShape,this.tensors,e),i=this.tensors.pop();return To(i.shape,e,"TensorList shape mismatch: "),Me(i,s)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(To(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ps(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);To(this.tensors[e].shape,t,"TensorList shape mismatch: ");const i=Ry(this.elementShape,this.tensors,t);return Me(this.tensors[e],i)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);To(this.elementShape,t.shape,"TensorList shape mismatch: "),ps(t),this.tensors[e]=t}gather(e,t,s){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);To(this.elementShape,s,"TensorList shape mismatch: "),e=e.slice(0,this.size());const i=Ry(this.elementShape,this.tensors,s);return 0===e.length?cr([],[0].concat(i)):Re(()=>{const o=e.map(l=>Me(this.tensors[l],i));return yi(o,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);To(this.elementShape,t,"TensorList shape mismatch: ");const s=Ry(this.elementShape,this.tensors,t);return 0===this.size()?cr([],[0].concat(s)):Re(()=>{const i=this.tensors.map(o=>Me(o,s));return dr(i,0)})}}function uT(r,e,t){const[s,i]=z("fusedOps",r,e,t),o="biasadd"===s,l=!o,c="prelu"===i,p="fusedbatchnorm"===s,d=z("numArgs",r,e,t);if(o){if(c&&2!==d)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!c&&o&&1!==d)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(p)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const f=z("strides",r,e,t),m=Yx(r,e,t),y=z("dataFormat",r,e,t).toUpperCase(),v=z("dilations",r,e,t);let[S,_]=z("args",r,e,t);return l&&(_=S,S=void 0),{stride:f,pad:m,dataFormat:y,dilations:v,biasArg:S,preluArg:_,activationFunc:i,leakyreluAlpha:z("leakyreluAlpha",r,e,t)}}function iw(r,e,t){return{boxes:z("boxes",r,e,t),scores:z("scores",r,e,t),maxOutputSize:z("maxOutputSize",r,e,t),iouThreshold:z("iouThreshold",r,e,t),scoreThreshold:z("scoreThreshold",r,e,t),softNmsSigma:z("softNmsSigma",r,e,t)}}class LE{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ln(0),this.tensorMap=new Map,ps(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ln(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return this.tensorMap.forEach(i=>i.dispose()),this.tensorMap.clear(),Re(()=>{const i=Ri(t),o=s.length,l=i.length;F(o===l,()=>`The number of elements doesn't match, keys has ${o} elements, the values has ${l} elements.`);for(let c=0;c<o;c++){const p=s[c],d=i[c];ps(d),this.tensorMap.set(p,d)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const s=await e.data();return Re(()=>{const i=[];for(let o=0;o<s.length;o++){const c=this.findWithDefault(s[o],t);i.push(c)}return yi(i)})}findWithDefault(e,t){const s=this.tensorMap.get(e);return null!=s?s:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function cT(r,e,t,s){const i=((o,l,c)=>{switch(o.category){case"arithmetic":return Re(()=>((d,f,m)=>{switch(d.op){case"BiasAdd":case"AddV2":case"Add":return[vt(z("a",d,f,m),z("b",d,f,m))];case"AddN":return[uc(z("tensors",d,f,m))];case"FloorMod":case"Mod":return[nd(z("a",d,f,m),z("b",d,f,m))];case"Mul":return[Se(z("a",d,f,m),z("b",d,f,m))];case"RealDiv":case"Div":return[an(z("a",d,f,m),z("b",d,f,m))];case"DivNoNan":return[Jh(z("a",d,f,m),z("b",d,f,m))];case"FloorDiv":return[xp(z("a",d,f,m),z("b",d,f,m))];case"Sub":return[Yt(z("a",d,f,m),z("b",d,f,m))];case"Minimum":return[ja(z("a",d,f,m),z("b",d,f,m))];case"Maximum":return[Zs(z("a",d,f,m),z("b",d,f,m))];case"Pow":return[Ko(z("a",d,f,m),z("b",d,f,m))];case"SquaredDifference":return[Ai(z("a",d,f,m),z("b",d,f,m))];default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"basic_math":return Re(()=>((d,f,m)=>{switch(d.op){case"Abs":case"ComplexAbs":return[qr(z("x",d,f,m))];case"Acos":return[lc(z("x",d,f,m))];case"Acosh":return[Kl(z("x",d,f,m))];case"Asin":return[cc(z("x",d,f,m))];case"Asinh":return[Hh(z("x",d,f,m))];case"Atan":return[Uf(z("x",d,f,m))];case"Atan2":return[bp(z("x",d,f,m),z("y",d,f,m))];case"Atanh":return[Vf(z("x",d,f,m))];case"Ceil":return[Hf(z("x",d,f,m))];case"Complex":return[Ks(z("real",d,f,m),z("imag",d,f,m))];case"Cos":return[Kh(z("x",d,f,m))];case"Cosh":return[_p(z("x",d,f,m))];case"Elu":return[yo(z("x",d,f,m))];case"Erf":return[kp(z("x",d,f,m))];case"Exp":return[Qs(z("x",d,f,m))];case"Expm1":return[Ep(z("x",d,f,m))];case"Floor":return[nu(z("x",d,f,m))];case"Log":return[ns(z("x",d,f,m))];case"Log1p":return[nl(z("x",d,f,m))];case"Imag":return[pc(z("x",d,f,m))];case"Neg":return[Er(z("x",d,f,m))];case"Reciprocal":return[nm(z("x",d,f,m))];case"Real":return[bc(z("x",d,f,m))];case"Relu":return[rs(z("x",d,f,m))];case"Round":return[ou(z("x",d,f,m))];case"Selu":return[rm(z("x",d,f,m))];case"Sigmoid":return[ua(z("x",d,f,m))];case"Sin":return[ys(z("x",d,f,m))];case"Sign":return[im(z("x",d,f,m))];case"Sinh":return[Ci(z("x",d,f,m))];case"Softplus":return[fc(z("x",d,f,m))];case"Sqrt":return[Es(z("x",d,f,m))];case"Square":return[hr(z("x",d,f,m))];case"Tanh":return[go(z("x",d,f,m))];case"Tan":return[Fp(z("x",d,f,m))];case"ClipByValue":return[Js(z("x",d,f,m),z("clipValueMin",d,f,m),z("clipValueMax",d,f,m))];case"Relu6":return[bo(z("x",d,f,m))];case"Rsqrt":return[lu(Di(d.inputNames[0],f,m))];case"Prod":return[id(z("x",d,f,m),z("axes",d,f,m))];case"LeakyRelu":return[su(z("x",d,f,m),z("alpha",d,f,m))];case"Prelu":return[yc(z("x",d,f,m),z("alpha",d,f,m))];case"IsNan":return[Zf(Di(d.inputNames[0],f,m))];default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"control":return(async(d,f,m)=>{switch(d.op){case"If":case"StatelessIf":{const y=z("thenBranch",d,f,m),v=z("elseBranch",d,f,m),S=z("cond",d,f,m),_=z("args",d,f,m);return(await S.data())[0]?m.functionMap[y].executeFunctionAsync(_,m.tensorArrayMap,m.tensorListMap):m.functionMap[v].executeFunctionAsync(_,m.tensorArrayMap,m.tensorListMap)}case"While":case"StatelessWhile":{const y=z("body",d,f,m),v=z("cond",d,f,m),S=z("args",d,f,m),_=await m.functionMap[v].executeFunctionAsync(S,m.tensorArrayMap,m.tensorListMap),k=S.map(R=>R.id);let I=await _[0].data();_.forEach(R=>{R.kept||-1!==k.indexOf(R.id)||R.dispose()});let A=S;for(;I[0];){const R=A;A=await m.functionMap[y].executeFunctionAsync(A,m.tensorArrayMap,m.tensorListMap);const P=A.map(W=>W.id);R.forEach(W=>{W.kept||-1!==k.indexOf(W.id)||-1!==P.indexOf(W.id)||W.dispose()});const U=await m.functionMap[v].executeFunctionAsync(A,m.tensorArrayMap,m.tensorListMap);I=await U[0].data(),U.forEach(W=>{W.kept||-1!==k.indexOf(W.id)||-1!==P.indexOf(W.id)||W.dispose()})}return A}case"LoopCond":return[Lc(z("pred",d,f,m))];case"Switch":{const y=z("pred",d,f,m);let v=z("data",d,f,m);return v.kept||(v=Lc(v)),(await y.data())[0]?[void 0,v]:[v,void 0]}case"Merge":{const y=d.inputNames.find(v=>void 0!==Di(v,f,m));return y?[Lc(Di(y,f,m))]:void 0}case"Enter":{const y=z("frameName",d,f,m),v=z("tensor",d,f,m);return m.enterFrame(y),[Lc(v)]}case"Exit":{const y=z("tensor",d,f,m);return m.exitFrame(),[Lc(y)]}case"NextIteration":{const y=z("tensor",d,f,m);return m.nextIteration(),[Lc(y)]}case"TensorArrayV3":{const y=z("size",d,f,m),v=z("dtype",d,f,m),S=z("elementShape",d,f,m),_=z("dynamicSize",d,f,m),k=z("clearAfterRead",d,f,m),I=z("identicalElementShapes",d,f,m),A=z("name",d,f,m),R=new RE(A,v,y,S,I,_,k);return m.addTensorArray(R),[R.idTensor,ln(1)]}case"TensorArrayWriteV3":{const y=z("tensorArrayId",d,f,m),v=z("index",d,f,m),S=z("tensor",d,f,m),_=m.getTensorArray(y.id);return _.write(v,S),[_.idTensor]}case"TensorArrayReadV3":{const y=z("tensorArrayId",d,f,m),v=z("index",d,f,m);return[m.getTensorArray(y.id).read(v)]}case"TensorArrayGatherV3":{const y=z("tensorArrayId",d,f,m),v=z("indices",d,f,m),S=z("dtype",d,f,m);return[m.getTensorArray(y.id).gather(v,S)]}case"TensorArrayScatterV3":{const y=z("tensorArrayId",d,f,m),v=z("indices",d,f,m),S=z("tensor",d,f,m),_=m.getTensorArray(y.id);return _.scatter(v,S),[_.idTensor]}case"TensorArrayConcatV3":{const y=z("tensorArrayId",d,f,m),v=m.getTensorArray(y.id),S=z("dtype",d,f,m);return[v.concat(S)]}case"TensorArraySplitV3":{const y=z("tensorArrayId",d,f,m),v=z("tensor",d,f,m),S=z("lengths",d,f,m),_=m.getTensorArray(y.id);return _.split(S,v),[_.idTensor]}case"TensorArraySizeV3":{const y=z("tensorArrayId",d,f,m);return[ln(m.getTensorArray(y.id).size(),"int32")]}case"TensorArrayCloseV3":{const y=z("tensorArrayId",d,f,m),v=m.getTensorArray(y.id);return v.clearAndClose(),[v.idTensor]}case"TensorListSetItem":{const y=z("tensorListId",d,f,m),v=z("index",d,f,m),S=z("tensor",d,f,m),_=m.getTensorList(y.id);return _.setItem(v,S),[_.idTensor]}case"TensorListGetItem":{const y=z("tensorListId",d,f,m),v=z("index",d,f,m),S=z("elementShape",d,f,m),_=z("elementDType",d,f,m);return[m.getTensorList(y.id).getItem(v,S,_)]}case"TensorListScatterV2":case"TensorListScatter":{const y=z("indices",d,f,m),v=function(S,_,k,I){if(_.length!==S.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${_.length} vs. ${S.shape[0]}`);const A=Math.max(..._);if(null!=I&&-1!==I&&A>=I)throw new Error(`Max index must be < array size (${A}  vs. ${I})`);const R=new Rm([],k,S.dtype,I),P=Ri(S,0);return _.forEach((U,W)=>{R.setItem(U,P[W])}),R}(z("tensor",d,f,m),y,z("elementShape",d,f,m),z("numElements",d,f,m));return m.addTensorList(v),[v.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const y=z("elementShape",d,f,m),v=z("elementDType",d,f,m);let S;S="TensorListReserve"===d.op?"numElements":"maxNumElements";const _=(k=y,I=v,A=z(S,d,f,m),new Rm([],k,I,A));return m.addTensorList(_),[_.idTensor]}case"TensorListGather":{const y=z("tensorListId",d,f,m),v=z("indices",d,f,m),S=z("elementShape",d,f,m),_=z("elementDType",d,f,m);return[m.getTensorList(y.id).gather(v,_,S)]}case"TensorListStack":{const y=z("tensorListId",d,f,m),v=z("elementShape",d,f,m),S=z("elementDType",d,f,m),_=z("numElements",d,f,m);return[m.getTensorList(y.id).stack(v,S,_)]}case"TensorListFromTensor":{const y=function(v,S,_){const k=v.dtype;if(v.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${v.shape}`);if(v.dtype!==_)throw new Error(`Invalid data types; op elements ${v.dtype}, but list elements ${_}`);To(v.shape.slice(1),S,"TensorList shape mismatch: ");const I=Ri(v);return new Rm(I,S,k)}(z("tensor",d,f,m),z("elementShape",d,f,m),z("elementDType",d,f,m));return m.addTensorList(y),[y.idTensor]}case"TensorListConcat":{const y=z("tensorListId",d,f,m),v=m.getTensorList(y.id),S=z("dtype",d,f,m),_=z("elementShape",d,f,m);return[v.concat(S,_)]}case"TensorListPushBack":{const y=z("tensorListId",d,f,m),v=z("tensor",d,f,m),S=m.getTensorList(y.id);return S.pushBack(v),[S.idTensor]}case"TensorListPopBack":{const y=z("tensorListId",d,f,m),v=z("elementShape",d,f,m),S=z("elementDType",d,f,m);return[m.getTensorList(y.id).popBack(v,S)]}case"TensorListSplit":{const y=z("tensor",d,f,m),v=z("elementShape",d,f,m),S=function(_,k,I){let A=0;const R=k.map(G=>(A+=G,A));if(A!==_.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${A}, and tensor's shape is: ${_.shape}`);const P=sw(_.shape.slice(1),I),U=0===A?0:_.size/A,W=Re(()=>{const G=[];_=Me(_,[1,A,U]);for(let pe=0;pe<k.length;++pe)G[pe]=Me(Gn(_,[0,0===pe?0:R[pe-1],0],[1,k[pe],U]),P);return _.dispose(),G}),se=new Rm([],I,_.dtype,k.length);for(let G=0;G<W.length;G++)se.setItem(G,W[G]);return se}(y,z("lengths",d,f,m),v);return m.addTensorList(S),[S.idTensor]}default:throw TypeError(`Node type ${d.op} is not implemented`)}var k,I,A})(o,l,c);case"convolution":return Re(()=>((d,f,m)=>{switch(d.op){case"Conv1D":{const y=z("stride",d,f,m),v=z("pad",d,f,m),S=z("dataFormat",d,f,m).toUpperCase(),_=z("dilation",d,f,m);return[dc(z("x",d,f,m),z("filter",d,f,m),y,v,S,_)]}case"Conv2D":{const y=z("strides",d,f,m),v=Yx(d,f,m),S=z("dataFormat",d,f,m).toUpperCase(),_=z("dilations",d,f,m);return[Wa(z("x",d,f,m),z("filter",d,f,m),[y[1],y[2]],v,S,[_[1],_[2]])]}case"_FusedConv2D":{const{stride:y,pad:v,dataFormat:S,dilations:_,biasArg:k,preluArg:I,activationFunc:A,leakyreluAlpha:R}=uT(d,f,m);return[dm({x:z("x",d,f,m),filter:z("filter",d,f,m),strides:[y[1],y[2]],pad:v,dataFormat:S,dilations:[_[1],_[2]],bias:k,activation:A,preluActivationWeights:I,leakyreluAlpha:R})]}case"FusedDepthwiseConv2dNative":{const{stride:y,pad:v,dataFormat:S,dilations:_,biasArg:k,preluArg:I,activationFunc:A,leakyreluAlpha:R}=uT(d,f,m);return[Yg({x:z("x",d,f,m),filter:z("filter",d,f,m),strides:[y[1],y[2]],pad:v,dataFormat:S,dilations:[_[1],_[2]],bias:k,activation:A,preluActivationWeights:I,leakyreluAlpha:R})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const y=z("outputShape",d,f,m),v=z("strides",d,f,m),S=Yx(d,f,m);return[eu(z("x",d,f,m),z("filter",d,f,m),y,[v[1],v[2]],S)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const y=z("strides",d,f,m),v=Yx(d,f,m),S=z("dilations",d,f,m),_=z("dataFormat",d,f,m).toUpperCase();return[fi(z("input",d,f,m),z("filter",d,f,m),[y[1],y[2]],v,_,[S[1],S[2]])]}case"Conv3D":{const y=z("strides",d,f,m),v=z("pad",d,f,m),S=z("dataFormat",d,f,m).toUpperCase(),_=z("dilations",d,f,m);return[qf(z("x",d,f,m),z("filter",d,f,m),[y[1],y[2],y[3]],v,S,[_[1],_[2],_[3]])]}case"AvgPool":{const y=z("strides",d,f,m),v=z("pad",d,f,m),S=z("kernelSize",d,f,m);return[wp(z("x",d,f,m),[S[1],S[2]],[y[1],y[2]],v)]}case"MaxPool":{const y=z("strides",d,f,m),v=z("pad",d,f,m),S=z("kernelSize",d,f,m);return[il(z("x",d,f,m),[S[1],S[2]],[y[1],y[2]],v)]}case"MaxPoolWithArgmax":{const y=z("strides",d,f,m),v=z("pad",d,f,m),S=z("kernelSize",d,f,m),_=z("includeBatchInIndex",d,f,m),{result:k,indexes:I}=Ha(z("x",d,f,m),[S[1],S[2]],[y[1],y[2]],v,_);return[k,I]}case"AvgPool3D":{const y=z("strides",d,f,m),v=z("pad",d,f,m),S=z("kernelSize",d,f,m);return[qh(z("x",d,f,m),[S[1],S[2],S[3]],[y[1],y[2],y[3]],v)]}case"MaxPool3D":{const y=z("strides",d,f,m),v=z("pad",d,f,m),S=z("kernelSize",d,f,m);return[Np(z("x",d,f,m),[S[1],S[2],S[3]],[y[1],y[2],y[3]],v)]}case"Dilation2D":{const y=z("strides",d,f,m),v=z("pad",d,f,m),S=z("dilations",d,f,m),_=y[1],k=y[2],I=S[1],A=S[2];return[Zh(z("x",d,f,m),z("filter",d,f,m),[_,k],v,[I,A],"NHWC")]}default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"creation":return Re(()=>((d,f,m)=>{switch(d.op){case"Fill":{const y=z("shape",d,f,m),v=z("dtype",d,f,m);return[Vh(y,z("value",d,f,m),v)]}case"LinSpace":return[Jf(z("start",d,f,m),z("stop",d,f,m),z("num",d,f,m))];case"Multinomial":{const y=z("logits",d,f,m),v=z("numSamples",d,f,m),S=z("seed",d,f,m);return[iu(y,v,S)]}case"OneHot":{const y=z("indices",d,f,m),v=z("depth",d,f,m),S=z("onValue",d,f,m),_=z("offValue",d,f,m);return[Ph(y,v,S,_)]}case"Ones":return[$r(z("shape",d,f,m),z("dtype",d,f,m))];case"OnesLike":return[Os(z("x",d,f,m))];case"RandomUniform":return[Ii(z("shape",d,f,m),z("minval",d,f,m),z("maxval",d,f,m),z("dtype",d,f,m))];case"Range":return[xc(z("start",d,f,m),z("stop",d,f,m),z("step",d,f,m),z("dtype",d,f,m))];case"TruncatedNormal":{const y=z("shape",d,f,m),v=z("mean",d,f,m),S=z("stdDev",d,f,m),_=z("seed",d,f,m);return[ud(y,v,S,z("dtype",d,f,m),_)]}case"Zeros":return[Kr(z("shape",d,f,m),z("dtype",d,f,m))];case"ZerosLike":return[Kn(z("x",d,f,m))];default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"dynamic":return(async(d,f,m)=>{switch(d.op){case"NonMaxSuppressionV5":{const{boxes:y,scores:v,maxOutputSize:S,iouThreshold:_,scoreThreshold:k,softNmsSigma:I}=iw(d,f,m),A=await ji.nonMaxSuppressionWithScoreAsync(y,v,S,_,k,I);return[A.selectedIndices,A.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:y,scores:v,maxOutputSize:S,iouThreshold:_,scoreThreshold:k}=iw(d,f,m),I=z("padToMaxOutputSize",d,f,m),A=await ji.nonMaxSuppressionPaddedAsync(y,v,S,_,k,I);return[A.selectedIndices,A.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:y,scores:v,maxOutputSize:S,iouThreshold:_,scoreThreshold:k}=iw(d,f,m);return[await ji.nonMaxSuppressionAsync(y,v,S,_,k)]}case"Where":{const y=Rt(z("condition",d,f,m),"bool"),v=[await Tc(y)];return y.dispose(),v}case"ListDiff":return sm(z("x",d,f,m),z("y",d,f,m));default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c);case"evaluation":return Re(()=>((d,f,m)=>{switch(d.op){case"TopKV2":{const y=z("x",d,f,m),v=z("k",d,f,m),S=z("sorted",d,f,m),_=lm(y,v,S);return[_.values,_.indices]}case"Unique":{const y=z("x",d,f,m),v=Op(y);return[v.values,v.indices]}case"UniqueV2":{const y=z("x",d,f,m),v=z("axis",d,f,m),S=Op(y,v);return[S.values,S.indices]}default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"image":return Re(()=>((d,f,m)=>{switch(d.op){case"ResizeBilinear":{const y=z("images",d,f,m),v=z("size",d,f,m),S=z("alignCorners",d,f,m),_=z("halfPixelCenters",d,f,m);return[ji.resizeBilinear(y,[v[0],v[1]],S,_)]}case"ResizeNearestNeighbor":{const y=z("images",d,f,m),v=z("size",d,f,m),S=z("alignCorners",d,f,m),_=z("halfPixelCenters",d,f,m);return[ji.resizeNearestNeighbor(y,[v[0],v[1]],S,_)]}case"CropAndResize":{const y=z("image",d,f,m),v=z("boxes",d,f,m),S=z("boxInd",d,f,m),_=z("cropSize",d,f,m),k=z("method",d,f,m),I=z("extrapolationValue",d,f,m);return[ji.cropAndResize(y,v,S,_,k,I)]}default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"graph":return Re(()=>((d,f,m)=>{switch(d.op){case"Const":return f[d.name];case"PlaceholderWithDefault":const y=z("default",d,f,m);return[Di(d.name,f,m)||y];case"Placeholder":return[Di(d.name,f,m)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Lc(z("x",d,f,m))];case"IdentityN":return z("x",d,f,m).map(I=>Lc(I));case"Shape":return[bs(z("x",d,f,m).shape,"int32")];case"ShapeN":return z("x",d,f,m).map(I=>bs(I.shape));case"Size":return[ln(z("x",d,f,m).size,"int32")];case"Rank":return[ln(z("x",d,f,m).rank,"int32")];case"NoOp":return[ln(1)];case"Print":const v=z("x",d,f,m),S=z("data",d,f,m),_=z("message",d,f,m),k=z("summarize",d,f,m);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(_);for(let I=0;I<S.length;I++)console.log(Array.prototype.slice.call(S[I].dataSync()).slice(0,k));return[v];default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"logical":return Re(()=>((d,f,m)=>{switch(d.op){case"Equal":return[$s(z("a",d,f,m),z("b",d,f,m))];case"NotEqual":return[da(z("a",d,f,m),z("b",d,f,m))];case"Greater":return[ms(z("a",d,f,m),z("b",d,f,m))];case"GreaterEqual":return[ca(z("a",d,f,m),z("b",d,f,m))];case"Less":return[ed(z("a",d,f,m),z("b",d,f,m))];case"LessEqual":return[Ga(z("a",d,f,m),z("b",d,f,m))];case"LogicalAnd":return[gi(z("a",d,f,m),z("b",d,f,m))];case"LogicalNot":return[sl(z("a",d,f,m))];case"LogicalOr":return[Cp(z("a",d,f,m),z("b",d,f,m))];case"Select":case"SelectV2":return[fs(z("condition",d,f,m),z("a",d,f,m),z("b",d,f,m))];default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"matrices":return Re(()=>((d,f,m)=>{switch(d.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Fn(z("a",d,f,m),z("b",d,f,m),z("transposeA",d,f,m),z("transposeB",d,f,m))];case"Einsum":return[ki(z("equation",d,f,m),...z("tensors",d,f,m))];case"Transpose":return[Xn(z("x",d,f,m),z("perm",d,f,m))];case"_FusedMatMul":const[y,v]=z("fusedOps",d,f,m),S="biasadd"===y,_="prelu"===v,k=z("numArgs",d,f,m),I=z("leakyreluAlpha",d,f,m);if(S){if(_&&2!==k)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!_&&1!==k)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[A,R]=z("args",d,f,m);return[pm({a:z("a",d,f,m),b:z("b",d,f,m),transposeA:z("transposeA",d,f,m),transposeB:z("transposeB",d,f,m),bias:A,activation:v,preluActivationWeights:R,leakyreluAlpha:I})];default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"normalization":return Re(()=>((d,f,m)=>{switch(d.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Vr(z("x",d,f,m),z("mean",d,f,m),z("variance",d,f,m),z("offset",d,f,m),z("scale",d,f,m),z("epsilon",d,f,m))];case"LRN":return[Qf(z("x",d,f,m),z("radius",d,f,m),z("bias",d,f,m),z("alpha",d,f,m),z("beta",d,f,m))];case"Softmax":return[od(z("x",d,f,m))];case"LogSoftmax":return[em(z("x",d,f,m))];case"SparseToDense":return[Vg(z("sparseIndices",d,f,m),z("outputShape",d,f,m),z("sparseValues",d,f,m),z("defaultValue",d,f,m))];default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"reduction":return Re(()=>((d,f,m)=>{switch(d.op){case"Max":{const _=z("axis",d,f,m),k=z("keepDims",d,f,m);return[ha(z("x",d,f,m),_,k)]}case"Mean":{const _=z("axis",d,f,m),k=z("keepDims",d,f,m);return[Ir(z("x",d,f,m),_,k)]}case"Min":{const _=z("axis",d,f,m),k=z("keepDims",d,f,m);return[xo(z("x",d,f,m),_,k)]}case"Sum":{const _=z("axis",d,f,m),k=z("keepDims",d,f,m);return[Qt(z("x",d,f,m),_,k)]}case"All":{const _=z("axis",d,f,m),k=z("keepDims",d,f,m);return[Zo(z("x",d,f,m),_,k)]}case"Any":{const _=z("axis",d,f,m),k=z("keepDims",d,f,m);return[Jo(z("x",d,f,m),_,k)]}case"ArgMax":{const _=z("axis",d,f,m);return[Yl(z("x",d,f,m),_)]}case"ArgMin":{const _=z("axis",d,f,m);return[Gh(z("x",d,f,m),_)]}case"Prod":{const _=z("axis",d,f,m),k=z("keepDims",d,f,m);return[id(z("x",d,f,m),_,k)]}case"Cumsum":{const _=z("axis",d,f,m),k=z("exclusive",d,f,m),I=z("reverse",d,f,m);return[el(z("x",d,f,m),_,k,I)]}case"Bincount":const y=z("x",d,f,m),v=z("weights",d,f,m),S=z("size",d,f,m);return[Tp(y,v,S)];case"DenseBincount":{const _=z("x",d,f,m),k=z("weights",d,f,m),I=z("size",d,f,m),A=z("binaryOutput",d,f,m);return[tl(_,k,I,A)]}default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"slice_join":return Re(()=>((d,f,m)=>{switch(d.op){case"ConcatV2":case"Concat":{const y=z("n",d,f,m),v=z("axis",d,f,m);let S=z("tensors",d,f,m);return S=S.slice(0,y),[dr(S,v)]}case"Gather":{const y=z("x",d,f,m),v=z("indices",d,f,m);return[ru(y,Rt(v,"int32"),0)]}case"GatherV2":{const y=z("axis",d,f,m),v=z("batchDims",d,f,m),S=z("x",d,f,m),_=z("indices",d,f,m);return[ru(S,Rt(_,"int32"),y,v)]}case"Reverse":{const y=z("dims",d,f,m),v=[];for(let _=0;_<y.length;_++)y[_]&&v.push(_);const S=z("x",d,f,m);return[ei(S,v)]}case"ReverseV2":{const y=z("axis",d,f,m),v=z("x",d,f,m);return[ei(v,y)]}case"Slice":{const y=z("begin",d,f,m),v=z("size",d,f,m);return[Gn(z("x",d,f,m),y,v)]}case"StridedSlice":{const y=z("begin",d,f,m),v=z("end",d,f,m),S=z("strides",d,f,m),_=z("beginMask",d,f,m),k=z("endMask",d,f,m),I=z("ellipsisMask",d,f,m),A=z("newAxisMask",d,f,m),R=z("shrinkAxisMask",d,f,m),P=z("x",d,f,m);return[om(P,y,v,S,_,k,I,A,R)]}case"Pack":return Re(()=>{const y=z("axis",d,f,m),v=z("tensors",d,f,m),S=v[0].shape,_=fa(v[0]).shape,k=v.map(I=>{const A=He(I.shape,S);if(!A&&!He(fa(I).shape,_))throw new Error("the input tensors shape does not match");return A?I:Me(I,S)});return[yi(k,y)]});case"Unpack":{const y=z("axis",d,f,m),v=z("tensor",d,f,m);return Ri(v,y)}case"Tile":{const y=z("reps",d,f,m);return[mi(z("x",d,f,m),y)]}case"Split":case"SplitV":{const y=z("axis",d,f,m),v=z("numOrSizeSplits",d,f,m),S=z("x",d,f,m);return xs(S,v,y)}case"ScatterNd":{const y=z("indices",d,f,m),v=z("values",d,f,m),S=z("shape",d,f,m);return[G0(y,v,S)]}case"GatherNd":{const y=z("x",d,f,m),v=z("indices",d,f,m);return[Wg(y,v)]}case"SparseToDense":{const y=z("sparseIndices",d,f,m),v=z("outputShape",d,f,m),S=z("sparseValues",d,f,m),_=z("defaultValue",d,f,m);return[Vg(y,S,v,S.dtype===_.dtype?_:Rt(_,S.dtype))]}default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"sparse":return Re(()=>((d,f,m)=>{switch(d.op){case"SparseFillEmptyRows":{const{outputIndices:y,outputValues:v,emptyRowIndicator:S,reverseIndexMap:_}=fd.sparseFillEmptyRows(z("indices",d,f,m),z("values",d,f,m),z("denseShape",d,f,m),z("defaultValue",d,f,m));return[y,v,S,_]}case"SparseReshape":{const{outputIndices:y,outputShape:v}=fd.sparseReshape(z("inputIndices",d,f,m),z("inputShape",d,f,m),z("newShape",d,f,m));return[y,v]}case"SparseSegmentMean":return[fd.sparseSegmentMean(z("data",d,f,m),z("indices",d,f,m),z("segmentIds",d,f,m))];case"SparseSegmentSum":return[fd.sparseSegmentSum(z("data",d,f,m),z("indices",d,f,m),z("segmentIds",d,f,m))];default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"spectral":return Re(()=>((d,f,m)=>{switch(d.op){case"FFT":return[ld(z("x",d,f,m))];case"IFFT":return[wc(z("x",d,f,m))];case"RFFT":return[pa(z("x",d,f,m))];case"IRFFT":return[Dp(z("x",d,f,m))];default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"string":return Re(()=>((d,f,m)=>{switch(d.op){case"StringNGrams":{const{nGrams:y,nGramsSplits:v}=Wp.stringNGrams(z("data",d,f,m),z("dataSplits",d,f,m),z("separator",d,f,m),z("nGramWidths",d,f,m),z("leftPad",d,f,m),z("rightPad",d,f,m),z("padWidth",d,f,m),z("preserveShortSequences",d,f,m));return[y,v]}case"StringSplit":{const{indices:y,values:v,shape:S}=Wp.stringSplit(z("input",d,f,m),z("delimiter",d,f,m),z("skipEmpty",d,f,m));return[y,v,S]}case"StringToHashBucketFast":return[Wp.stringToHashBucketFast(z("input",d,f,m),z("numBuckets",d,f,m))];default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"transformation":return Re(()=>((d,f,m)=>{switch(d.op){case"Cast":return[Rt(z("x",d,f,m),z("dtype",d,f,m))];case"ExpandDims":{const y=z("axis",d,f,m);return[Is(z("x",d,f,m),y)]}case"Squeeze":{const y=z("axis",d,f,m);return[fa(z("x",d,f,m),y)]}case"Reshape":return[Me(z("x",d,f,m),z("shape",d,f,m))];case"MirrorPad":return[al(z("x",d,f,m),z("padding",d,f,m),z("mode",d,f,m))];case"PadV2":case"Pad":return[Ei(z("x",d,f,m),z("padding",d,f,m),z("constantValue",d,f,m))];case"SpaceToBatchND":{const y=z("blockShape",d,f,m),v=z("paddings",d,f,m);return[gc(z("x",d,f,m),y,v)]}case"BatchToSpaceND":{const y=z("blockShape",d,f,m),v=z("crops",d,f,m);return[hc(z("x",d,f,m),y,v)]}case"DepthToSpace":{const y=z("blockSize",d,f,m),v=z("dataFormat",d,f,m).toUpperCase();return[tu(z("x",d,f,m),y,v)]}case"BroadcastTo":return[_i(z("x",d,f,m),z("shape",d,f,m))];case"BroadcastArgs":return[Mp(z("s0",d,f,m),z("s1",d,f,m))];default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c));case"hash_table":return(async(d,f,m,y)=>{switch(d.op){case"HashTable":case"HashTableV2":{const v=z("keyDType",d,f,m),S=z("valueDType",d,f,m),_=new LE(v,S);return y.addHashTable(d.name,_),[_.handle]}case"LookupTableImport":case"LookupTableImportV2":{const v=z("tableHandle",d,f,m,y),S=z("keys",d,f,m),_=z("values",d,f,m);return[await y.getHashTableById(v.id).import(S,_)]}case"LookupTableFind":case"LookupTableFindV2":{const v=z("tableHandle",d,f,m,y),S=z("keys",d,f,m),_=z("defaultValue",d,f,m);return[await y.getHashTableById(v.id).find(S,_)]}case"LookupTableSize":case"LookupTableSizeV2":{const v=z("tableHandle",d,f,m,y);return[y.getHashTableById(v.id).tensorSize()]}default:throw TypeError(`Node type ${d.op} is not implemented`)}})(o,l,c,s);case"custom":const p=rT(o.op);if(p&&p.customExecutor)return p.customExecutor(new AE(o,l,c));throw TypeError(`Custom op ${o.op} is not registered.`);default:throw TypeError(`Unknown op '${o.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(r,e,t);return Cl(i)?i.then(o=>[].concat(o)):[].concat(i)}class hT{constructor(e={},t={},s={},i={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=s,this.functionMap=i,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const s=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(s))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function dT(r,e,t,s){const i=new Set,o=[];let l=null,c=null;const p=new Set,d=Object.keys(r).map(y=>ga(y)[0]);let f=[];null!=s&&(f=s.map(y=>ga(y.name)[0]));const m=[...e];for(;m.length>0;){const y=m.pop();(pT(y)||OE(y)||PE(y))&&null==l&&(l=y,c=l.children.map(v=>v.name).filter(v=>i.has(v))),i.add(y.name),null==t[y.name]&&-1===d.indexOf(y.name)&&-1===f.indexOf(y.name)&&(0!==y.inputs.length?y.inputs.forEach(v=>{p.has(v.name)||(p.add(v.name),m.push(v))}):o.push(y.name))}return{inputs:r,outputs:e,usedNodes:i,missingInputs:o,dynamicNode:l,syncInputs:c}}const DE=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],FE=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],$E=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function pT(r){return DE.indexOf(r.op)>=0}function OE(r){return FE.indexOf(r.op)>=0}function PE(r){return $E.indexOf(r.op)>=0}class Zx{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(s=>{this._functionExecutorMap[s]=new Zx(e.functions[s],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(s=>e[s].map(i=>i.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const s=e.map(o=>o.name).sort(),i=t.map(o=>o.name).sort();return s.join(this.SEPERATOR)+"--"+i.join(this.SEPERATOR)}compile(e,t){const s=dT(e,t,this.weightMap,this._initNodes),{missingInputs:i,dynamicNode:o,syncInputs:l}=s;if(null!=o)throw new Error(`This execution contains the node '${o.name}', which has the dynamic op '${o.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${l}]`);if(i.length>0){const c=t.map(d=>d.name),p=Object.keys(e);throw new Error(`Cannot compute the outputs [${c}] from the provided inputs [${p}]. Missing the following inputs: [${i}]`)}return function(c,p,d){const{usedNodes:f,inputs:m}=d,y=[],v=Object.keys(m).map(I=>ga(I)[0]).map(I=>c.nodes[I]),S=c.initNodes;v.forEach(I=>{f.has(I.name)&&y.push(I)}),c.weights.forEach(I=>{f.has(I.name)&&y.push(I)}),null!=S&&S.forEach(I=>{f.has(I.name)&&y.push(I)});const _=new Set,k=[];for(;y.length>0;){const I=y.pop();_.add(I.name),p[I.name]||k.push(I),I.children.forEach(A=>{!_.has(A.name)&&f.has(A.name)&&A.inputs.every(R=>_.has(R.name))&&y.push(A)})}return k}(this.graph,this.weightMap,s)}execute(e,t){e=this.mapInputs(e);const s=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const i=s.map(m=>this.graph.nodes[ga(m)[0]]),o=t.map(m=>ga(m)[0]);let l=o.map(m=>this.graph.nodes[m]);0===l.length&&(l=this._outputs);const c=this.getCompilationKey(i,l);let p=this.compiledMap.get(c);null==p&&(p=this.compile(e,l),this.compiledMap.set(c,p));const d={},f={};return Re(()=>{const m=new hT(this.weightMap,d,f,this.functionExecutorMap),y=Object.assign({},this.weightMap);Object.keys(e).forEach(_=>{const[k,I]=ga(_),A=[];A[I]=e[_],y[k]=A});const v=this.getFrozenTensorIds(y),S={};for(let _=0;_<p.length;_++){const k=p[_];if(!y[k.name]){const I=cT(k,y,m,this._resourceManager);if(Cl(I))throw new Error(`The execution of the op '${k.op}' returned a promise. Please use model.executeAsync() instead.`);y[k.name]=I,this.checkTensorForDisposal(k.name,k,y,m,v,o,S)}}return null==this.parent&&m.dispose(v),t.map(_=>Di(_,y,m))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(s=>e[s]).map(s=>s.map(i=>i.id)));return new Set(t)}checkTensorForDisposal(e,t,s,i,o,l,c){"control"!==t.category&&-1===l.indexOf(e)&&(s[e].forEach(p=>{null!=p&&(c[p.id]=(c[p.id]||0)+t.children.length)}),t.inputs.forEach(p=>{if("control"!==p.category){const d=s[Kx(p.name,i.currentContextId)];null!=d&&d.forEach(f=>{if(f&&!f.kept&&!o.has(f.id)){const m=c[f.id];1===m?(f.dispose(),delete c[f.id]):null!=m&&c[f.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,s=!1,i={},o={}){s||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const l=new hT(this.weightMap,i,o,this.functionExecutorMap),c=await this.executeWithControlFlow(e,l,t,s),p=t.map(y=>Di(y,c,l)),d=p.map(y=>y.id),f=Object.keys(e).map(y=>e[y].id),m=new Set([...d,...f,...this.weightIds]);return Object.keys(c).forEach(y=>{c[y].forEach(v=>{!v||v.kept||v.isDisposed||m.has(v.id)||v.dispose()})}),null==this.parent&&l.dispose(m),p}async executeFunctionAsync(e,t,s){const i=e.reduce((o,l,c)=>(o[this.inputs[c].name]=l,o),{});return this._executeAsync(i,this.outputNodes,!0,t,s)}async executeWithControlFlow(e,t,s,i){const o=Object.keys(e),l=o.map(R=>this.graph.nodes[ga(R)[0]]),c=s.map(R=>ga(R)[0]);let p=c.map(R=>this.graph.nodes[R]);0===p.length&&(p=this._outputs);const{usedNodes:d,missingInputs:f,dynamicNode:m,syncInputs:y}=dT(e,p,this.weightMap,this._initNodes),v=[...l,...this.graph.weights,...this._initNodes||[]].map(R=>({node:R,contexts:t.currentContext})),S=Object.assign({},this.weightMap);Object.keys(e).forEach(R=>{const[P,U]=ga(R),W=[];W[U]=e[R],S[P]=W});const _={},k=this.getFrozenTensorIds(S),I={};for(;v.length>0;){const R=this.processStack(l,v,t,S,I,k,c,_,d);await Promise.all(R)}null!=m||i||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const A=p.filter(R=>!pT(R)&&!Di(R.name,S,t)).map(R=>R.name);if(A.length>0){let R="";throw null!=m&&(R=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${y}]`),new Error(`Cannot compute the outputs [${A}] from the provided inputs [${o}]. Consider providing the following inputs: [${f}]. ${R}`)}return S}processStack(e,t,s,i,o,l,c,p,d){const f=[];for(;t.length>0;){const m=t.pop();s.currentContext=m.contexts;let y="";if("Enter"===m.node.op&&z("isConstant",m.node,i,s)&&([y]=Rc(m.node.name,s)),null==i[m.node.name]){const v=cT(m.node,i,s,this._resourceManager);y||([y]=Rc(m.node.name,s));const S=s.currentContext;Cl(v)?f.push(v.then(_=>(i[y]=_,s.currentContext=S,this.checkTensorForDisposal(y,m.node,i,s,l,c,p),this.processChildNodes(m.node,t,s,i,o,d),_))):(i[y]=v,this.checkTensorForDisposal(y,m.node,i,s,l,c,p),this.processChildNodes(m.node,t,s,i,o,d))}else this.processChildNodes(m.node,t,s,i,o,d)}return f}processChildNodes(e,t,s,i,o,l){e.children.forEach(c=>{const[p]=Rc(c.name,s);!o[p]&&l.has(c.name)&&("Merge"===c.op?c.inputNames.some(d=>!!Di(d,i,s))&&(o[p]=!0,t.push({contexts:s.currentContext,node:c})):c.inputNames.every(d=>!!Di(d,i,s))&&(o[p]=!0,t.push({contexts:s.currentContext,node:c})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const s=e[t],[i]=ga(t),o=this.graph.nodes[i];if(o.attrParams.shape&&o.attrParams.shape.value){const l=o.attrParams.shape.value;F(l.length===s.shape.length&&s.shape.every((c,p)=>-1===l[p]||l[p]===c),()=>`The shape of dict['${o.name}'] provided in model.execute(dict) must be [${l}], but was [${s.shape}]`)}o.attrParams.dtype&&o.attrParams.dtype.value&&F(s.dtype===o.attrParams.dtype.value,()=>`The dtype of dict['${o.name}'] provided in model.execute(dict) must be ${o.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(e){const t={};for(const s in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[s]?t[this._signature.inputs[s].name]=e[s]:t[s]=e[s];return t}checkInputs(e){const t=Object.keys(e).filter(s=>{const[i]=ga(s);return null==this.graph.nodes[i]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]?this._signature.outputs[t].name:t,{})}checkOutputs(e){e.forEach(t=>{const[s]=ga(t);if(!this.graph.nodes[s])throw new Error(`The output '${t}' is not found in the graph`)})}}class zE{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class fT{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new zE}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=gp(e,this.loadOptions);else{const t=Wi(e,this.loadOptions);if(0===t.length)t.push(gp(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let s;s=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=s,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const i=jo(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Zx(sT.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(i),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const o=sT.Instance.transformGraph(e.modelInitializer);this.initializer=new Zx(o),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const s=Gt(e);if(0===s.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${e}'`);e=s[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Un||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,s,i)=>(t[s]=e[i],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=this.executor.execute(e,t);return s.length>1?s:s[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const s=await this.executor.executeAsync(e,t);return s.length>1?s:s[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,s)=>(t[s]=[e[s]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function BE(r,e={}){if(null==r)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==r.load&&(r.endsWith("/")||(r+="/"),r=`${r}model.json?tfjs-format=file`);const t=new fT(r,e);return await t.load(),t}const mT="3.9.0";function Jx(r,e,t=new Map,s=new Set){if(null==r)return null;if(s.has(r))throw new Error("Circular references are not supported.");if(t.has(r))return t.get(r);const i=e(r);if(i.recurse&&null!==i.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(i.recurse){if(Lm(r)){const o=Array.isArray(r)?[]:{};s.add(r);for(const l in r){const c=Jx(r[l],e,t,s);o[l]=c}return s.delete(r),o}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return t.set(r,i.value),i.value}function UE(r,e=yT){return gT(r,e)}function gT(r,e,t=new Set){const s=r[0];if(t.has(s))throw new Error("Circular references are not supported.");const i=e(r);if(i.recurse&&null!==i.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(i.recurse){if(Lm(s)){const o=Array.isArray(s)?[]:{};t.add(s);for(const l in s){const c=gT(r.map(p=>p[l]),e,t);o[l]=c}return t.delete(s),o}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return i.value}function yT(r){return null===r?null:Lm(r[0])?{value:null,recurse:!0}:{value:r,recurse:!1}}async function xT(r,e){const t=new Map;Jx(r,e,t);for(const s of Array.from(t.keys())){const i=t.get(s);if(Cl(i)){const o=await i;t.set(s,o)}}return Jx(r,e,t)}function Lm(r){let e=!1;if(nt().get("IS_BROWSER"))e=r instanceof TextDecoder;else{const{StringDecoder:t}=X(84589);e=r instanceof t}return null!=r&&!ArrayBuffer.isView(r)&&(Array.isArray(r)||"object"==typeof r&&!(r instanceof Un)&&!(r instanceof Promise)&&!e)}function VE(r){return r instanceof Un?{value:r.clone(),recurse:!1}:Lm(r)?{value:null,recurse:!0}:{value:r,recurse:!1}}class bT{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),s=this.get(t);return this.set(t,this.pop()),s}}class Qx extends bT{constructor(){super(Qx.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),s=this.length();for(let i=0;i<s;i++)t[i]=this.get(this.wrap(this.begin+i));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=s}}function vT(r){return new WE(r)}function aw(r){return new GE(r)}Qx.INITIAL_CAPACITY=32;class Bs{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let s=await e.next();for(;!s.done;)t.push(s.value),s=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),s=e(t.value);for(;!t.done&&s;)t=await this.next(),s=e(t.value)}handleErrors(e){return new ZE(this,e)}filter(e){return new KE(this,e)}map(e){return new YE(this,e)}mapAsync(e){return new wT(this,e)}serialMapAsync(e){return new wT(this,e).serial()}flatmap(e){return new JE(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>!0===t)}rowMajorBatch(e,t=!0){return new XE(this,e,t)}columnMajorBatch(e,t=!0,s=yT){return this.rowMajorBatch(e,t).map(i=>UE(i,s))}concatenate(e,t){return new ST(vT([this,e]),t)}take(e){return e<0||null==e?this:new qE(this,e)}skip(e){return e<0||null==e?this:new jE(this,e)}prefetch(e){return new TT(this,e)}shuffle(e,t){return new eI(this,e,t)}serial(){return new HE(this)}}class WE extends Bs{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,s=t,i=VE,Jx(s,i)),done:!1};var s,i,t}}class GE extends Bs{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class HE extends Bs{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class jE extends Bs{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;_n(e.value)}return this.upstream.next()}}class qE extends Bs{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class XE extends Bs{constructor(e,t,s=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=s,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class KE extends Bs{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;_n(e.value)}}}class YE extends Bs{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Xs(e.value),s=this.transform(e.value),i=Xs(s);for(const o of t)za(o,i)||o.dispose();return{value:s,done:!1}}}class ZE extends Bs{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class wT extends Bs{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=Xs(e.value),s=await this.transform(e.value),i=Xs(s);for(const o of t)za(o,i)||o.dispose();return{value:s,done:!1}}}class ow extends Bs{constructor(){super(),this.outputQueue=new Qx,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class JE extends ow{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=Xs(e.value),s=this.transform(e.value),i=Xs(s);this.outputQueue.pushAll(s);for(const o of t)za(o,i)||o.dispose();return!0}}class ST extends Bs{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const s=await this.moreIterators.next();if(s.done)return{value:null,done:!0};this.iterator=s.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var kd;!function(r){r[r.FAIL=0]="FAIL",r[r.SHORTEST=1]="SHORTEST",r[r.LONGEST=2]="LONGEST"}(kd||(kd={}));class QE extends Bs{constructor(e,t=kd.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,s=0;const i=await xT(this.iterators,function(o){return o instanceof Bs?{value:o.next().then(l=>(t++,l.done&&s++,l.value)),recurse:!1}:{value:null,recurse:!0}});if(t===s)return{value:null,done:!0};if(s>0)switch(this.mismatchMode){case kd.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case kd.SHORTEST:return{value:null,done:!0}}return this.count++,{value:i,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class TT extends Bs{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new bT(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class eI extends TT{constructor(e,t,s){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=au.alea(s||wr().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Dm{constructor(){this.size=null}batch(e,t=!0){const s=this;let i;return F(e>0,()=>`batchSize needs to be positive, but it is\n      ${e}`),i=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),ya(async()=>(await s.iterator()).columnMajorBatch(e,t,rI),i)}concatenate(e){const t=this;let s;return s=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,ya(async()=>(await t.iterator()).concatenate(await e.iterator()),s)}filter(e){const t=this;let s;return s=this.size===1/0?1/0:null,ya(async()=>(await t.iterator()).filter(i=>Re(()=>e(i))),s)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return ya(async()=>(await t.iterator()).map(s=>Re(()=>e(s))),this.size)}mapAsync(e){const t=this;return ya(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return ya(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let s;return s=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,ya(async()=>{return i=aw(async()=>({value:await t.iterator(),done:!1})).take(e),new ST(i,void 0);var i},s)}skip(e){const t=this;let s;return s=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,ya(async()=>(await t.iterator()).skip(e),s)}shuffle(e,t,s=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const i=this,o=au.alea(t||wr().toString());return ya(async()=>{let l=o.int32();return s&&(l+=o.int32()),(await i.iterator()).shuffle(e,l.toString())},this.size)}take(e){const t=this;let s;return s=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,ya(async()=>(await t.iterator()).take(e),s)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function ya(r,e=null){return new class extends Dm{constructor(){super(...arguments),this.size=e}async iterator(){return r()}}}function tI(r){return ya(async()=>vT(r),r.length)}function nI(r){if(!Lm(r))throw new Error("The argument to zip() must be an object or array.");let e;if(Array.isArray(r))for(let t=0;t<r.length;t++)e=null==e?r[t].size:Math.min(e,r[t].size);else if(r instanceof Object)for(const t in r)e=null==e?r[t].size:Math.min(e,r[t].size);return ya(async()=>function(t,s=kd.FAIL){return new QE(t,s)}(await xT(r,t=>{if(t instanceof Dm)return{value:t.iterator(),recurse:!1};if(Lm(t))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),kd.SHORTEST),e)}function rI(r){return null===r?null:null==(e=r[0])||null===(t=e)||"object"!=typeof t&&"function"!=typeof t||Array.isArray(e)||"object"==typeof e&&e instanceof Un||Ms(e)?{value:function(s){if(0===s.length)throw new Error("Can't make a batch of zero elements.");return s[0]instanceof Un?yi(s):cr(s)}(r),recurse:!1}:{value:null,recurse:!0};var e,t}Dm.MAX_BUFFER_SIZE=1e4;class MT extends Dm{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}}const Ly=Symbol("out"),_T=Symbol("field"),tb=Symbol("quote"),lw=Symbol("quoteafterquote"),kT=Symbol("quoteinquote");class ET extends Dm{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new MT(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(F(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&F(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((i,o)=>(i[o]=i[o]+1||1,i),{}),s=Object.keys(t).filter(i=>t[i]>1);if(F(0===s.length,()=>"Duplicate column names found: "+s.toString()),this.columnConfigs)for(const i of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(i))throw new Error('The key "'+i+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");return this.parseRow(t.value,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){const t=this.parseRow(e),s={},i={};for(let o=0;o<this.fullColumnNames.length;o++){const l=this.fullColumnNames[o],c=this.columnConfigs?this.columnConfigs[l]:null;if(!this.configuredColumnsOnly||c){const p=t[o];let d=null;if(""===p)if(c&&void 0!==c.default)d=c.default;else{if(c&&(c.required||c.isLabel))throw new Error(`Required column ${l} is empty in this line: ${e}`);d=void 0}else{const f=Number(p);if(isNaN(f))d=c&&"bool"===c.dtype?this.getBoolean(p):p;else if(c&&c.dtype)switch(c.dtype){default:d=f;break;case"int32":d=Math.floor(f);break;case"bool":d=this.getBoolean(p)}else d=f}c&&c.isLabel?i[l]=d:s[l]=d}}return 0===Object.keys(i).length?s:{xs:s,ys:i}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const s=[];let i=0;const o=e.length;let l=Ly;for(let c=0;c<o;c++)switch(l){case Ly:switch(e.charAt(c)){case'"':i=c+1,l=tb;break;case this.delimiter:if(i=c+1," "===this.delimiter&&this.delimWhitespace)break;s.push(""),l=Ly;break;default:l=_T,i=c}break;case _T:e.charAt(c)===this.delimiter&&(s.push(e.substring(i,c)),l=Ly,i=c+1);break;case tb:'"'===e.charAt(c)&&(l=lw);break;case lw:switch(e.charAt(c)){case this.delimiter:s.push(e.substring(i,c-1)),l=Ly,i=c+1;break;case'"':l=tb;break;default:l=kT}break;case kT:'"'===e.charAt(c)&&(l=tb)}if(s.push(l===lw?e.substring(i,o-1):e.substring(i)),t&&s.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${s}`);return s}}class uw extends Bs{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(nt().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new uw(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(s){throw new Error(`Error thrown while initializing video stream: ${s.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const s=await this.getAudioData();if(this.includeSpectrogram){const i=this.flattenQueue(s.freqDataQueue);e=this.getTensorFromAudioDataArray(i,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const i=this.flattenQueue(s.timeDataQueue);t=this.getTensorFromAudioDataArray(i,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let s=0;return new Promise(i=>{const o=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&i({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++s===this.numFrames&&(clearInterval(o),i({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,s=new Float32Array(e.length*t);return e.forEach((i,o)=>s.set(i,o*t)),s}getTensorFromAudioDataArray(e,t){const s=new Float32Array(ke(t));return s.set(e,s.length-e.length),cr(s,t)}}class cw extends Bs{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=bs([0],"int32"),this.webcamConfig.centerCrop){const s=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,i=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,o=(1-s)/2,l=(1-i)/2;this.cropBox=cl([l,o,i+l,o+s],[1,4])}else this.cropBox=cl([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(nt().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const s=new cw(e,t);return await s.start(),s}async start(){this.webcamConfig.facingMode&&F("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=p0(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Re(()=>{const t=Is(Rt(e,"float32"),0);let s;return s=ji.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear"),Me(s,s.shape.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class IT{}class CT extends Bs{split(e){return new sI(this,e)}}class sI extends CT{constructor(e,t){super(),this.upstream=e,this.impl=new iI(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class iI extends ow{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const s of t.slice(0,-1))this.outputQueue.push(s);return this.carryover=t[t.length-1],!0}}class aI extends Bs{decodeUTF8(){return new oI(this)}}class oI extends CT{constructor(e){super(),this.upstream=e,this.impl=new lI(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class lI extends ow{constructor(e){if(super(),this.upstream=e,nt().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:t}=X(84589);this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,s;return!e.done&&(t=e.value,s=nt().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(s),!0)}}class NT extends aI{constructor(e,t={}){super(),this.file=e,this.options=t,F(e instanceof Uint8Array||!!nt().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((t,s)=>{const i=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)t(new Uint8Array(this.file.slice(this.offset,i)));else{const o=new FileReader;o.onload=c=>{let p=o.result;if(p instanceof ArrayBuffer&&(p=new Uint8Array(p)),!(p instanceof Uint8Array))return s(new TypeError("FileReader returned unknown type."));t(p)},o.onabort=c=>s(new Error("Aborted")),o.onerror=c=>s(new Error(c.type));const l=this.file.slice(this.offset,i);o.readAsArrayBuffer(l)}this.offset=i}),done:!1}}}function AT(r){return"string"==typeof r&&"file://"===r.substr(0,7)}class RT extends IT{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(AT(this.input)&&nt().get("IS_NODE")){const e=X(12993);this.input=e.readFileSync(this.input.substr(7))}return new NT(this.input,this.options)}}class LT extends IT{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return AT(this.url)?new RT(this.url,this.fileOptions).iterator():async function(e,t={}){let s,i;var o;"string"==typeof e?s=e:(s=e.url,i={method:(o=e).method,headers:o.headers,body:o.body,mode:o.mode,credentials:o.credentials,cache:o.cache,redirect:o.redirect,referrer:o.referrer,integrity:o.integrity});const l=await xr(s,i);if(l.ok){const c=new Uint8Array(await l.arrayBuffer());return new NT(c,t)}throw new Error(l.statusText)}(this.url,this.fileOptions)}}function uI(r,e={}){return new ET(new LT(r),e)}function cI(r){const e=aw(r);return ya(async()=>e)}function hI(r){return ya(async()=>{const e=await r();return aw(()=>e.next())})}async function dI(r,e){return cw.create(r,e)}async function pI(r){return uw.create(r)}const DT="3.9.0";function rn(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{null!=t&&F("complex64"!==t.dtype,()=>`${e} does not support complex64 tensors in the CPU backend.`)})}const fI=cd;class nb extends bu{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Sa(this,aa())}nextDataId(){return nb.nextDataId++}write(e,t,s){this.firstUse&&(this.firstUse=!1,nt().get("IS_NODE")&&Zr("\n============================\nHi there \u{1f44b}. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const i={id:this.nextDataId()};return this.data.set(i,{values:e,dtype:s,refCount:1}),i}makeTensorInfo(e,t,s){let i;if("string"===t&&null!=s&&s.length>0&&Ma(s[0])){const o=s.map(l=>Bi(l));i=this.write(o,e,t)}else i=this.write(s,e,t);return{dataId:i,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,s,i,o){this.data.set(e,{values:t,dtype:i,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);return"complex64"===t?hl(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let s=t;if("string"===e.dtype)try{s=t.map(i=>On(i))}catch(i){throw new Error("Failed to decode encoded string bytes into utf-8")}return Pn(e.shape,e.dtype,s)}makeOutput(e,t,s){const i=this.write(e,t,s);return aa().makeTensorFromDataId(i,t,s,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);null!=s&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=wr();return e(),{kernelMs:wr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){rn([e],"where");const t=this.readSync(e.dataId);return fI(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function gr(r,e,t){return({inputs:s,attrs:i,backend:o})=>{const{x:l}=s;if(rn(l,r),"string"===l.dtype||"string"===t)throw new Error("unaryKernelFunc does not support string input/output");const c=o,p=c.data.get(l.dataId).values,d=ke(l.shape),f=t||l.dtype,m=Zn(f,d);for(let y=0;y<d;++y)m[y]=e(p[y],i);return c.makeTensorInfo(l.shape,f,m)}}function Fm(r,e,t){return({inputs:s,attrs:i,backend:o})=>{const{x:l}=s;if(rn(l,r),"string"===l.dtype||"string"===t)throw new Error("unaryKernelFunc does not support string input/output");const c=o,p=c.data.get(l.dataId).values,d=t||l.dtype,f=e(p,d,i);return c.makeTensorInfo(l.shape,d,f)}}nb.nextDataId=0,Eg("cpu",()=>new nb,1);const FT=gr(Fu,r=>r>=0?r:Math.exp(r)-1),mI={kernelName:Fu,backendName:"cpu",kernelFunc:FT};function gu(r){const{inputs:e,backend:t}=r,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const gI={kernelName:ah,backendName:"cpu",kernelFunc:gu};function $T(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{alpha:o}=s;rn([i],"leakyRelu");const l=ke(i.shape),c=t.data.get(i.dataId).values,p=as("float32",l);for(let d=0;d<c.length;d++)p[d]=c[d]<0?o*c[d]:c[d];return t.makeTensorInfo(i.shape,"float32",p)}const yI={kernelName:qd,backendName:"cpu",kernelFunc:$T};function Ss(r){return(e,t,s,i,o)=>{const l=An(e,t),c=l.length,p=hn(l),d=as(o,ke(l)),f=e.length,m=t.length,y=hn(e),v=hn(t),S=mo(e,l),_=mo(t,l);if(S.length+_.length===0)for(let k=0;k<d.length;++k)d[k]=r(s[k%s.length],i[k%i.length]);else for(let k=0;k<d.length;++k){const I=wu(k,c,p),A=I.slice(-f);S.forEach(W=>A[W]=0);const R=Zi(A,f,y),P=I.slice(-m);_.forEach(W=>P[W]=0);const U=Zi(P,m,v);d[k]=r(s[R],i[U])}return[d,l]}}const xI=Ss((r,e)=>r<0?e*r:r);function OT(r){const{inputs:e,backend:t}=r,{x:s,alpha:i}=e;rn([s,i],"prelu");const o=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,[c,p]=xI(s.shape,i.shape,o,l,s.dtype);return t.makeTensorInfo(p,s.dtype,c)}const bI={kernelName:Br,backendName:"cpu",kernelFunc:OT},PT=gr(Pl,r=>Math.max(0,r)),vI={kernelName:Pl,backendName:"cpu",kernelFunc:PT},zT=gr(Ti,r=>Math.min(Math.max(0,r),6)),wI={kernelName:Ti,backendName:"cpu",kernelFunc:zT};function Ed(r){return(e,t,s)=>{const i=as(t,e.length);for(let o=0;o<e.length;++o)i[o]=r(e[o],s);return i}}const SI=Ed(r=>1/(1+Math.exp(-r))),BT=gr(Oo,r=>1/(1+Math.exp(-r))),TI={kernelName:Oo,backendName:"cpu",kernelFunc:BT};function hw(r,e,t,s,i){if("linear"===t)return gu({inputs:{x:e},backend:r});if("relu"===t)return PT({inputs:{x:e},backend:r});if("elu"===t)return FT({inputs:{x:e},backend:r});if("relu6"===t)return zT({inputs:{x:e},backend:r});if("prelu"===t)return OT({inputs:{x:e,alpha:s},backend:r});if("leakyrelu"===t)return $T({inputs:{x:e},backend:r,attrs:{alpha:i}});if("sigmoid"===t)return BT({inputs:{x:e},backend:r});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}function xa(r){const{inputs:e,backend:t}=r,{real:s,imag:i}=e,o=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,c=t.makeTensorInfo(s.shape,"complex64");return t.data.get(c.dataId).complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",o),imag:t.makeTensorInfo(i.shape,"float32",l)},c}const MI={kernelName:Od,backendName:"cpu",kernelFunc:xa};function rb(r,e,t="float32"){if("complex64"===t)return xa({inputs:{real:rb(r,e,"float32"),imag:rb(r,e,"float32")},backend:r});const s=hs(ke(e),t);return r.makeTensorInfo(e,t,s)}function tf(r){const{inputs:e,backend:t}=r,{input:s}=e,i=t.data.get(s.dataId).complexTensorInfos.real,o=t.data.get(i.dataId).values;return t.makeTensorInfo(i.shape,i.dtype,o)}const _I={kernelName:Si,backendName:"cpu",kernelFunc:tf};function Id(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{dtype:o}=s;if("complex64"===o){if("complex64"===i.dtype)return gu({inputs:{x:i},backend:t});const l=rb(t,i.shape,i.dtype),c=Id({inputs:{x:i},backend:t,attrs:{dtype:"float32"}}),p=xa({inputs:{real:c,imag:l},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(c),p}if("complex64"===i.dtype){const l=tf({inputs:{input:i},backend:t}),c=Id({inputs:{x:l},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(l),c}if(!Eo(i.dtype,o)){const l=gu({inputs:{x:i},backend:t});return{dataId:l.dataId,shape:l.shape,dtype:o}}if("int32"===o){const l=t.data.get(i.dataId).values,c=Int32Array.from(l);return t.makeTensorInfo(i.shape,"int32",c)}if("bool"===o){const l=t.data.get(i.dataId).values,c=Wt([0],i.dtype),[p,d]=Ss((f,m)=>f!==m?1:0)(i.shape,[],l,c,"bool");return t.makeTensorInfo(d,"bool",p)}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}const kI={kernelName:Cu,backendName:"cpu",kernelFunc:Id};function Us(r,e,t,s){return null==t?({inputs:i,backend:o})=>{const{a:l,b:c}=i,p=o;rn([l,c],r);const d=p.data.get(l.dataId).values,f=p.data.get(c.dataId).values,m="string"===l.dtype?Cc(d):d,y="string"===l.dtype?Cc(f):f,v=s||l.dtype,[S,_]=e(l.shape,c.shape,m,y,v);return p.makeTensorInfo(_,v,S)}:({inputs:i,backend:o})=>{const{a:l,b:c}=i,p=o;if("complex64"===l.dtype||"complex64"===c.dtype){const d=Id({inputs:{x:l},backend:p,attrs:{dtype:"complex64"}}),f=p.data.get(d.dataId),y=f.complexTensorInfos.imag,v=p.data.get(f.complexTensorInfos.real.dataId).values,S=p.data.get(y.dataId).values,_=Id({inputs:{x:c},backend:p,attrs:{dtype:"complex64"}}),k=p.data.get(_.dataId),A=k.complexTensorInfos.imag,R=p.data.get(k.complexTensorInfos.real.dataId).values,P=p.data.get(A.dataId).values,[U,W,se]=t(l.shape,c.shape,v,S,R,P),G=p.makeTensorInfo(se,"float32",U),pe=p.makeTensorInfo(se,"float32",W),de=xa({inputs:{real:G,imag:pe},backend:p});return p.disposeIntermediateTensorInfo(d),p.disposeIntermediateTensorInfo(_),p.disposeIntermediateTensorInfo(G),p.disposeIntermediateTensorInfo(pe),de}{const d=p.data.get(l.dataId).values,f=p.data.get(c.dataId).values,m=s||l.dtype,[y,v]=e(l.shape,c.shape,d,f,m);return p.makeTensorInfo(v,m,y)}}}function dw(r){return(e,t,s,i,o,l)=>{const c=An(e,t),p=ke(c),d=c.length,f=hn(c),m=as("float32",p),y=as("float32",p),v=mo(e,c),S=mo(t,c),_=hl(s,i),k=hl(o,l),I=e.length,A=hn(e),R=t.length,P=hn(t);if(v.length+S.length===0)for(let U=0;U<m.length;U++){const W=U%_.length,se=U%k.length,G=r(_[2*W],_[2*W+1],k[2*se],k[2*se+1]);m[U]=G.real,y[U]=G.imag}else for(let U=0;U<m.length;U++){const W=wu(U,d,f),se=W.slice(-I);v.forEach(Ee=>se[Ee]=0);const G=Zi(se,I,A),pe=W.slice(-R);S.forEach(Ee=>pe[Ee]=0);const de=Zi(pe,R,P),ye=r(_[2*G],_[2*G+1],k[2*de],k[2*de+1]);m[U]=ye.real,y[U]=ye.imag}return[m,y,c]}}const UT=Ss((r,e)=>r+e),EI=dw((r,e,t,s)=>({real:r+t,imag:e+s})),Dy=Us(Io,UT,EI),II={kernelName:Io,backendName:"cpu",kernelFunc:Dy};function Pr(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{shape:o}=s,l=ke(i.shape),c=El(o,l),p=ke(c);F(l===p,()=>`The new shape (${c}) has ${p} elements and the old shape (${i.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`),t.incRef(i.dataId);const d=t.data.get(i.dataId);if(null!=d.complexTensorInfos){const m=d.complexTensorInfos.imag;d.complexTensorInfos.real.shape=c,m.shape=c}return{dataId:i.dataId,shape:c,dtype:i.dtype}}const CI={kernelName:Qr,backendName:"cpu",kernelFunc:Pr};function VT(r){const{inputs:e,backend:t,attrs:s}=r,{a:i,b:o}=e,{transposeA:l,transposeB:c}=s;rn([i,o],"matMul");const p=i.shape.length,d=o.shape.length,f=l?i.shape[p-2]:i.shape[p-1],m=c?o.shape[d-1]:o.shape[d-2],y=l?i.shape[p-1]:i.shape[p-2],v=c?o.shape[d-2]:o.shape[d-1],S=i.shape.slice(0,-2),_=o.shape.slice(0,-2),k=ke(S),I=ke(_);F(p>=2&&d>=2&&(k===I||1===k||1===I),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${S}) and (${_}).`);const A=(k>I?i.shape.slice(0,-2):o.shape.slice(0,-2)).concat([y,v]);F(f===m,()=>`Error in matMul: inner shapes (${f}) and (${m}) of Tensors with shapes ${i.shape} and ${o.shape} and transposeA=${l} and transposeB=${c} must match.`);const R=c?[I,v,m]:[I,m,v],P=Pr({inputs:{x:i},backend:t,attrs:{shape:l?[k,f,y]:[k,y,f]}}),U=Pr({inputs:{x:o},backend:t,attrs:{shape:R}}),W=l?P.shape[1]:P.shape[2],se=l?P.shape[2]:P.shape[1],G=c?U.shape[1]:U.shape[2],pe=Math.max(k,I),de=t.data.get(P.dataId).values,ye=t.data.get(U.dataId).values,Ee=hn(P.shape),Ne=hn(U.shape),[Be,je,Ye]=l?[Ee[0],1,Ee[1]]:[Ee[0],Ee[1],1],[Xe,Je,Ke]=c?[1,Ne[1],Ne[0]]:[Ne[1],1,Ne[0]],tt=se*G,mt=Pn([pe,se,G],P.dtype),Et=mt.values,Tt=t.blockSize;for(let Dt=0;Dt<pe;Dt++)for(let Ft=0;Ft<se;Ft+=Tt)for(let jt=0;jt<G;jt+=Tt)for(let Kt=0;Kt<W;Kt+=Tt){const un=Math.min(Ft+Tt,se),Sn=Math.min(jt+Tt,G),Mn=Math.min(Kt+Tt,W);for(let pn=Ft;pn<un;pn++)for(let Rn=jt;Rn<Sn;Rn++){let zn=0;for(let qn=Kt;qn<Mn;qn++){const Nn=Math.min(Dt,k-1)*Be,Vn=Math.min(Dt,I-1)*Ke;zn+=de[Nn+pn*je+qn*Ye]*ye[qn*Xe+Rn*Je+Vn]}Et[Dt*tt+(pn*G+Rn)]+=zn}}return t.disposeIntermediateTensorInfo(P),t.disposeIntermediateTensorInfo(U),t.makeTensorInfo(A,mt.dtype,mt.values)}const NI={kernelName:jc,backendName:"cpu",kernelFunc:VT},AI={kernelName:Vl,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{a:i,b:o,bias:l,preluActivationWeights:c}=e,{transposeA:p,transposeB:d,activation:f,leakyreluAlpha:m}=s;let y,v,S;const _=[];y=VT({inputs:{a:i,b:o},attrs:{transposeA:p,transposeB:d},backend:t}),l&&(v=Dy({inputs:{a:y,b:l},backend:t}),_.push(y),y=v),f&&(S=hw(t,y,f,c,m),_.push(y),y=S);for(const k of _)t.disposeIntermediateTensorInfo(k);return y}};function WT(r){const e=new Float32Array(r.length);for(let t=0;t<r.length;++t)e[t]=Math.abs(r[t]);return e}const RI={kernelName:Su,backendName:"cpu",kernelFunc:r=>{const{x:e}=r.inputs,t=r.backend;rn(e,"abs");let s=new Float32Array(ke(e.shape));return s=WT(t.data.get(e.dataId).values),t.makeOutput(s,e.shape,"float32")}},LI=gr(Nl,r=>Math.acos(r)),DI={kernelName:Nl,backendName:"cpu",kernelFunc:LI},FI=gr(Al,r=>Math.acosh(r)),$I={kernelName:Al,backendName:"cpu",kernelFunc:FI},OI={kernelName:Tu,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t}=r,s=e;rn(e,"addN");const i=s.map(c=>t.data.get(c.dataId).values),o=Pn(s[0].shape,s[0].dtype),l=o.values;for(let c=0;c<s.length;c++){const p=i[c];for(let d=0;d<l.length;d++)l[d]+=p[d]}return t.makeTensorInfo(o.shape,o.dtype,o.values)}};function pw(r,e,t,s,i){const o=e.length,l=ke(e),c=hn(e),p=hn(i),d=as(t,ke(i));for(let f=0;f<l;++f){const m=wu(f,o,c),y=new Array(m.length);for(let v=0;v<y.length;v++)y[v]=m[s[v]];d[Zi(y,o,p)]=r[f]}return d}function Ka(r){const{inputs:e,attrs:t,backend:s}=r,{x:i}=e,{perm:o}=t;rn(i,"transpose");const c=new Array(i.shape.length);for(let d=0;d<c.length;d++)c[d]=i.shape[o[d]];const p=pw(s.data.get(i.dataId).values,i.shape,i.dtype,o,c);return{dataId:s.write(p,c,i.dtype),shape:c,dtype:i.dtype}}const PI={kernelName:kh,backendName:"cpu",kernelFunc:Ka},zI={kernelName:Uc,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o,keepDims:l}=s;rn(i,"all");const c=Dn(o,i.shape);let p=c;const d=In(p,i.shape.length);let f=i;null!=d&&(f=Ka({inputs:{x:i},backend:t,attrs:{perm:d}}),p=Xr(p.length,i.shape.length)),Cs("all",p,f.shape.length);const[m,y]=gs(f.shape,p),v=ke(y),S=hs(ke(m),f.dtype),_=t.data.get(f.dataId).values;for(let I=0;I<S.length;++I){const A=I*v;let R=_[A];for(let P=0;P<v;++P){const U=_[A+P];R=R&&U}S[I]=R}null!=d&&t.disposeIntermediateTensorInfo(f);const k=t.makeTensorInfo(m,f.dtype,S);if(l){const I=Pr({inputs:{x:k},backend:t,attrs:{shape:br(m,c)}});return t.disposeIntermediateTensorInfo(k),I}return k}},BI={kernelName:Vc,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o,keepDims:l}=s;rn(i,"any");const c=Dn(o,i.shape);let p=c;const d=In(p,i.shape.length);let f=i;null!=d&&(f=Ka({inputs:{x:i},backend:t,attrs:{perm:d}}),p=Xr(p.length,i.shape.length)),Cs("any",p,f.shape.length);const[m,y]=gs(f.shape,p),v=ke(y),S=hs(ke(m),f.dtype),_=t.data.get(f.dataId).values;for(let I=0;I<S.length;++I){const A=I*v;let R=_[A];for(let P=0;P<v;++P){const U=_[A+P];R=R||U}S[I]=R}null!=d&&t.disposeIntermediateTensorInfo(f);const k=t.makeTensorInfo(m,f.dtype,S);if(l){const I=Pr({inputs:{x:k},backend:t,attrs:{shape:br(m,c)}});return t.disposeIntermediateTensorInfo(k),I}return k}},UI={kernelName:Wc,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o}=s;rn(i,"argMax");let l=Dn(o,i.shape);const c=In(l,i.shape.length);let p=i;const d=[];null!=c&&(p=Ka({inputs:{x:i},backend:t,attrs:{perm:c}}),d.push(p),l=Xr(l.length,p.shape.length)),l=[l[0]],Cs("argMax",l,p.shape.length);const[f,m]=gs(p.shape,l),y=hs(ke(f),"int32"),v=ke(m),S=t.data.get(p.dataId).values;for(let _=0;_<y.length;++_){const k=_*v;let I=S[k],A=0;for(let R=0;R<v;++R){const P=S[k+R];P>I&&(I=P,A=R)}y[_]=A}return d.forEach(_=>t.disposeIntermediateTensorInfo(_)),t.makeTensorInfo(f,"int32",y)}},VI={kernelName:Mu,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o}=s;rn(i,"argMin");let l=Dn(o,i.shape);const c=In(l,i.shape.length);let p=i;const d=[];null!=c&&(p=Ka({inputs:{x:i},backend:t,attrs:{perm:c}}),d.push(p),l=Xr(l.length,p.shape.length)),l=[l[0]],Cs("argMin",l,p.shape.length);const[f,m]=gs(p.shape,l),y=hs(ke(f),"int32"),v=ke(m),S=t.data.get(p.dataId).values;for(let _=0;_<y.length;++_){const k=_*v;let I=S[k],A=0;for(let R=0;R<v;++R){const P=S[k+R];P<I&&(I=P,A=R)}y[_]=A}return d.forEach(_=>t.disposeIntermediateTensorInfo(_)),t.makeTensorInfo(f,"int32",y)}},WI=gr(Rl,r=>Math.asin(r)),GI={kernelName:Rl,backendName:"cpu",kernelFunc:WI},HI=gr(_u,r=>Math.asinh(r)),jI={kernelName:_u,backendName:"cpu",kernelFunc:HI},qI=gr(ku,r=>Math.atan(r)),XI={kernelName:ku,backendName:"cpu",kernelFunc:qI},KI=Ss((r,e)=>Math.atan2(r,e)),YI=Us(Iu,KI),ZI={kernelName:Iu,backendName:"cpu",kernelFunc:YI},JI=gr(Eu,r=>Math.atanh(r)),QI={kernelName:Eu,backendName:"cpu",kernelFunc:JI};function fw(r,e,t,s,i,o){const l=i.strideHeight,c=i.strideWidth,p=i.dilationHeight,d=i.dilationWidth,f=i.effectiveFilterHeight,m=i.effectiveFilterWidth,y=i.padInfo.top,v=i.padInfo.left,S="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,_=Pn(i.outShape,t),k=_.values,I=i.outShape[1]*i.outShape[2]*i.outShape[3],A=i.outShape[2]*i.outShape[3],R=i.outShape[3];for(let P=0;P<i.batchSize;++P){const U=P*I,W=P*s[0];for(let se=0;se<i.inChannels;++se)for(let G=0;G<i.outHeight;++G){const pe=G*l-y,de=Math.max(0,pe),ye=Math.min(i.inHeight,f+pe),Ee=U+G*A;for(let Ne=0;Ne<i.outWidth;++Ne){const Be=Ne*c-v,je=Math.max(0,Be),Ye=Math.min(i.inWidth,m+Be);let Xe=S,Je=0,Ke=0;for(let tt=de;tt<ye;tt+=p){const mt=W+tt*s[1];for(let Et=je;Et<Ye;Et+=d){const Tt=r[mt+Et*s[2]+se];"max"===o&&Tt>Xe?Xe=Tt:"avg"===o&&(Je+=Tt,Ke++)}if(isNaN(Xe))break}k[Ee+Ne*R+se]="avg"===o?Je/Ke:Xe}}}return _}function GT(r,e,t,s,i=!1,o=!1){const l=Pn(s.outShape,"int32"),c=s.strideHeight,p=s.strideWidth,d=s.dilationHeight,f=s.dilationWidth,m=s.effectiveFilterHeight,y=s.effectiveFilterWidth,v=s.padInfo.top,S=s.padInfo.left,_=Pn(e,t,r);for(let k=0;k<s.batchSize;++k)for(let I=0;I<s.inChannels;++I)for(let A=0;A<s.outHeight;++A){const R=A*c-v;let P=R;for(;P<0;)P+=d;const U=Math.min(s.inHeight,m+R);for(let W=0;W<s.outWidth;++W){const se=W*p-S;let G=se;for(;G<0;)G+=f;const pe=Math.min(s.inWidth,y+se);let de=Number.NEGATIVE_INFINITY,ye=-1;for(let Ee=P;Ee<U;Ee+=d){const Ne=Ee-R;for(let Be=G;Be<pe;Be+=f){const je=Be-se,Ye=_.get(k,Ee,Be,I);Ye>de&&(de=Ye,ye=i?o?((k*s.inHeight+Ee)*s.inWidth+Be)*s.inChannels+I:(Ee*s.inWidth+Be)*s.inChannels+I:Ne*y+je)}}l.set(ye,k,A,W,I)}}return l}function HT(r,e,t,s,i,o){const l=i.strideDepth,c=i.strideHeight,p=i.strideWidth,d=i.dilationDepth,f=i.dilationHeight,m=i.dilationWidth,y=i.effectiveFilterDepth,v=i.effectiveFilterHeight,S=i.effectiveFilterWidth,_=i.padInfo.front,k=i.padInfo.top,I=i.padInfo.left,A="max"===o?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,R=Pn(i.outShape,t),P=R.values,U=i.outShape[1]*i.outShape[2]*i.outShape[3]*i.outShape[4],W=i.outShape[2]*i.outShape[3]*i.outShape[4],se=i.outShape[3]*i.outShape[4],G=i.outShape[4];for(let pe=0;pe<i.batchSize;++pe){const de=pe*U,ye=pe*s[0];for(let Ee=0;Ee<i.inChannels;++Ee)for(let Ne=0;Ne<i.outDepth;++Ne){const Be=Ne*l-_;let je=Be;for(;je<0;)je+=d;const Ye=Math.min(i.inDepth,y+Be),Xe=de+Ne*W;for(let Je=0;Je<i.outHeight;++Je){const Ke=Je*c-k;let tt=Ke;for(;tt<0;)tt+=f;const mt=Math.min(i.inHeight,v+Ke),Et=Xe+Je*se;for(let Tt=0;Tt<i.outWidth;++Tt){const Dt=Tt*p-I;let Ft=Dt;for(;Ft<0;)Ft+=m;const jt=Math.min(i.inWidth,S+Dt),Kt=Et+Tt*G;let un=A,Sn=0,Mn=0;for(let pn=je;pn<Ye;pn+=d){const Rn=ye+pn*s[1];for(let zn=tt;zn<mt;zn+=f){const qn=Rn+zn*s[2];for(let Nn=Ft;Nn<jt;Nn+=m){const Vn=r[qn+Nn*s[3]+Ee];if("max"===o&&Vn>un?un=Vn:"avg"===o&&(Sn+=Vn,Mn++),isNaN(un))break}if(isNaN(un))break}if(isNaN(un))break}P[Kt+Ee]="avg"===o?Sn/Mn:un}}}}return R}const eC={kernelName:Gc,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e;rn(i,"avgPool");const{filterSize:o,strides:l,pad:c,dimRoundingMode:p}=s;F(ts(l,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${l} and dilations '1'`);const d=hi(i.shape,o,l,1,c,p);let f;if(1===d.filterWidth&&1===d.filterHeight&&He(d.inShape,d.outShape))f=gu({inputs:{x:i},backend:t});else{const m=t.data.get(i.dataId).values,y=hn(i.shape),v=fw(m,0,i.dtype,y,d,"avg");f=t.makeTensorInfo(d.outShape,i.dtype,v.values)}return f}},tC={kernelName:Hc,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{filterSize:o,strides:l,pad:c,dimRoundingMode:p,dataFormat:d}=s;rn(i,"avgPool3d");const f=la(i.shape,o,l,1,c,p,d),m=HT(t.data.get(i.dataId).values,0,i.dtype,hn(i.shape),f,"avg");return t.makeTensorInfo(m.shape,"float32",m.values)}},nC={kernelName:Fd,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{dy:i,input:o}=e,{filterSize:l,strides:c,pad:p,dimRoundingMode:d}=s;rn([i,o],"avgPool3DGrad");const f=la(o.shape,l,c,1,p,d),m=f.strideDepth,y=f.strideHeight,v=f.strideWidth,S=f.filterDepth,_=f.filterHeight,k=f.filterWidth,I=f.dilationDepth,A=f.dilationHeight,R=f.dilationWidth,P=f.effectiveFilterDepth,U=f.effectiveFilterHeight,W=f.effectiveFilterWidth,se=P-1-f.padInfo.front,G=W-1-f.padInfo.left,pe=U-1-f.padInfo.top,de=Pn(o.shape,"float32"),ye=1/(S*_*k),Ee=t.bufferSync(i);for(let Ne=0;Ne<f.batchSize;++Ne)for(let Be=0;Be<f.inChannels;++Be)for(let je=0;je<f.inDepth;++je)for(let Ye=0;Ye<f.inHeight;++Ye)for(let Xe=0;Xe<f.inWidth;++Xe){const Je=je-se,Ke=Ye-pe,tt=Xe-G;let mt=0;for(let Et=0;Et<P;Et+=I){const Tt=(Je+Et)/m;if(!(Tt<0||Tt>=f.outDepth||Math.floor(Tt)!==Tt))for(let Dt=0;Dt<U;Dt+=A){const Ft=(Ke+Dt)/y;if(!(Ft<0||Ft>=f.outHeight||Math.floor(Ft)!==Ft))for(let jt=0;jt<W;jt+=R){const Kt=(tt+jt)/v;Kt<0||Kt>=f.outWidth||Math.floor(Kt)!==Kt||(mt+=Ee.get(Ne,Tt,Ft,Kt,Be))}}}de.set(mt*ye,Ne,je,Ye,Xe,Be)}return t.makeTensorInfo(de.shape,de.dtype,de.values)}},rC={kernelName:Dd,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{dy:i,input:o}=e,l=o;rn([i,o],"avgPoolGrad");const{filterSize:c,strides:p,pad:d}=s,f=hi(l.shape,c,p,1,d),m=f.strideHeight,y=f.strideWidth,v=f.filterHeight,S=f.filterWidth,_=f.dilationHeight,k=f.dilationWidth,I=f.effectiveFilterHeight,A=f.effectiveFilterWidth,R=A-1-f.padInfo.left,P=I-1-f.padInfo.top,U=Pn(l.shape,"float32"),W=1/(v*S),se=t.data.get(i.dataId).values,G=Pn(i.shape,"float32",se);for(let pe=0;pe<f.batchSize;++pe)for(let de=0;de<f.inChannels;++de)for(let ye=0;ye<f.inHeight;++ye)for(let Ee=0;Ee<f.inWidth;++Ee){const Ne=ye-P,Be=Ee-R;let je=0;for(let Ye=0;Ye<I;Ye+=_){const Xe=(Ne+Ye)/m;if(!(Xe<0||Xe>=f.outHeight||Math.floor(Xe)!==Xe))for(let Je=0;Je<A;Je+=k){const Ke=(Be+Je)/y;Ke<0||Ke>=f.outWidth||Math.floor(Ke)!==Ke||(je+=G.get(pe,Xe,Ke,de))}}U.set(je*W,pe,ye,Ee,de)}return t.makeTensorInfo(U.shape,U.dtype,U.values)}},sC={kernelName:ih,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,scale:o,offset:l,mean:c,variance:p}=e;F(c.shape.length===p.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(null==l||c.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(null==o||c.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),rn([i,c,p,o,l],"batchNorm");let{varianceEpsilon:d}=s;null==d&&(d=.001);const f=t.data.get(i.dataId).values,m=t.data.get(c.dataId).values,y=t.data.get(p.dataId).values,v=o?t.data.get(o.dataId).values:new Float32Array([1]),S=l?t.data.get(l.dataId).values:new Float32Array([0]),_=new Float32Array(f.length),k=S.length,I=v.length,A=y.length,R=m.length;let P=0,U=0,W=0,se=0;for(let G=0;G<f.length;++G)_[G]=S[P++]+(f[G]-m[U++])*v[W++]/Math.sqrt(y[se++]+d),P>=k&&(P=0),U>=R&&(U=0),W>=I&&(W=0),se>=A&&(se=0);return t.makeTensorInfo(i.shape,i.dtype,_)}};function jT(r,e,t,s,i){const o=vg(s,e,t),l=ke(t),c=hn(s);if(o){const f=wg(e,c);return"string"===i?r.slice(f,f+l):r.subarray(f,f+l)}const p=Pn(s,i,"string"===i?Cc(r):r),d=Pn(t,i);for(let f=0;f<d.size;++f){const m=d.indexToLoc(f),y=m.map((v,S)=>v+e[S]);d.set(p.get(...y),...m)}return"string"===i?fx(d.values):d.values}function nf(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{begin:o,size:l}=s;rn(i,"slice");const[c,p]=$f(i,o,l);bg(i,c,p);const d=jT(t.data.get(i.dataId).values,c,p,i.shape,i.dtype);return t.makeTensorInfo(p,i.dtype,d)}const iC={kernelName:Qi,backendName:"cpu",kernelFunc:nf},aC={kernelName:qc,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{blockShape:o,crops:l}=s;rn([i],"batchToSpaceND");const c=o.reduce((I,A)=>I*A),p=Hp(i.shape,o,c),d=Cr(p.length,o.length),f=du(i.shape,o,c),m=xm(l,o.length),y=iy(f,l,o.length),v=Pr({inputs:{x:i},backend:t,attrs:{shape:p}}),S=Ka({inputs:{x:v},backend:t,attrs:{perm:d}}),_=Pr({inputs:{x:S},backend:t,attrs:{shape:f}}),k=nf({inputs:{x:_},backend:t,attrs:{begin:m,size:y}});return t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(S),t.disposeIntermediateTensorInfo(_),k}};function mw(r,e,t,s,i){const o=ke(s),l=hs(i,t);for(let c=0;c<r.length;c++){const p=r[c];if(p<0)throw new Error("Input x must be non-negative!");p>=i||(l[p]+=o>0?e[c]:1)}return l}function qT(r,e,t,s=!1){const i=r.shape[0],o=r.shape[1],l=Pn([i,t],e.dtype);for(let c=0;c<i;c++)for(let p=0;p<o;p++){const d=r.get(c,p);if(d<0)throw new Error("Input x must be non-negative!");d>=t||l.set(s?1:e.size>0?l.get(c,d)+e.get(c,p):l.get(c,d)+1,c,d)}return l}const oC={kernelName:$d,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,weights:o}=e,{size:l}=s,c=mw(t.data.get(i.dataId).values,t.data.get(o.dataId).values,o.dtype,o.shape,l);return t.makeTensorInfo([l],o.dtype,c)}},lC={kernelName:df,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t}=r,{s0:s,s1:i}=e,o=t.data.get(s.dataId).values,l=t.data.get(i.dataId).values,c=An(Array.from(o),Array.from(l));return t.makeTensorInfo([c.length],"int32",Int32Array.from(c))}},XT=Ed(r=>Math.ceil(r)),uC=Fm(Nu,XT),cC={kernelName:Nu,backendName:"cpu",kernelFunc:uC},hC=gr(Au,(r,e)=>r>e.clipValueMax?e.clipValueMax:r<e.clipValueMin?e.clipValueMin:r),dC={kernelName:Au,backendName:"cpu",kernelFunc:hC},pC={kernelName:Xc,backendName:"cpu",kernelFunc:r=>{const{x:e}=r.inputs,t=r.backend,s=new Float32Array(ke(e.shape)),i=t.data.get(e.dataId),l=i.complexTensorInfos.imag,c=t.data.get(i.complexTensorInfos.real.dataId).values,p=t.data.get(l.dataId).values;for(let d=0;d<c.length;d++)s[d]=Math.hypot(c[d],p[d]);return t.makeOutput(s,e.shape,"float32")}};function KT(r,e,t,s){const i=Zn(t,ke(e));if(s&&"string"!==t){let o=0;r.forEach(l=>{const c=ke(l.shape);i.set(l.vals,o),o+=c})}else{let o=0;r.forEach(l=>{const c="string"===t?Cc(l.vals):l.vals;let p=0;for(let d=0;d<l.shape[0];++d){const f=d*e[1]+o;for(let m=0;m<l.shape[1];++m)i[f+m]=c[p++]}o+=l.shape[1]})}return i}function $m(r){const{inputs:e,backend:t}=r,{input:s}=e,i=t.data.get(s.dataId).complexTensorInfos.imag,o=t.data.get(i.dataId).values;return t.makeTensorInfo(i.shape,i.dtype,o)}const fC={kernelName:mf,backendName:"cpu",kernelFunc:$m};function Om(r){const{inputs:e,backend:t,attrs:s}=r,{axis:i}=s,o=Dn(i,e[0].shape)[0];let l=qa(e.map(S=>S.shape),o);if(0===ke(l))return t.makeTensorInfo(l,e[0].dtype,[]);const c=e.filter(S=>ke(S.shape)>0);if(1===c.length)return gu({inputs:{x:c[0]},backend:t});if(md(c.map(S=>S.shape),o),"complex64"===c[0].dtype){const S=c.map(R=>tf({inputs:{input:R},backend:t})),_=c.map(R=>$m({inputs:{input:R},backend:t})),k=Om({inputs:S,backend:t,attrs:{axis:o}}),I=Om({inputs:_,backend:t,attrs:{axis:o}}),A=xa({inputs:{real:k,imag:I},backend:t});return S.forEach(R=>t.disposeIntermediateTensorInfo(R)),_.forEach(R=>t.disposeIntermediateTensorInfo(R)),t.disposeIntermediateTensorInfo(k),t.disposeIntermediateTensorInfo(I),A}const p=c.map(S=>{const _=ke(S.shape.slice(o));return Pr({inputs:{x:S},backend:t,attrs:{shape:[-1,_]}})}),d=p.map(S=>({vals:t.data.get(S.dataId).values,shape:S.shape}));l=qa(p.map(S=>S.shape),1);const m=KT(d,l,e[0].dtype,1===p[0].shape[0]),y=qa(c.map(S=>S.shape),o),v=t.makeTensorInfo(y,e[0].dtype,m);return p.forEach(S=>t.disposeIntermediateTensorInfo(S)),v}const mC={kernelName:Kc,backendName:"cpu",kernelFunc:Om};function YT(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,filter:o}=e,{strides:l,pad:c,dataFormat:p,dilations:d,dimRoundingMode:f}=s;rn([i,o],"conv2d");const m=di(p),y=ls(i.shape,o.shape,l,d,c,f,!1,m),v=y.filterHeight,S=y.filterWidth,_=y.dilationHeight,k=y.dilationWidth,I=y.padInfo.left,A=y.padInfo.top,R="channelsLast"===y.dataFormat,P=new Pt(y.outShape,i.dtype),U=hn(i.shape),W=hn(o.shape),se=U[0],G=R?U[1]:U[2],pe=R?U[2]:1,de=R?1:U[1],ye=P.strides[0],Ee=R?P.strides[1]:P.strides[2],Ne=R?P.strides[2]:1,Be=R?1:P.strides[1],je=t.data.get(i.dataId).values,Ye=t.data.get(o.dataId).values,Xe=P.values;for(let Je=0;Je<y.batchSize;++Je){const Ke=Je*se,tt=Je*ye;for(let mt=0;mt<y.outHeight;++mt){const Et=tt+mt*Ee,Tt=mt*y.strideHeight-A;for(let Dt=0;Dt<v;++Dt){const Ft=Tt+Dt*_;if(Ft<0||Ft>=y.inHeight)continue;const jt=Dt*W[0],Kt=Ke+Ft*G;for(let un=0;un<y.outWidth;++un){const Sn=Et+un*Ne,Mn=un*y.strideWidth-I;for(let pn=0;pn<S;++pn){const Rn=Mn+pn*k;if(Rn<0||Rn>=y.inWidth)continue;const zn=Kt+Rn*pe;let qn=jt+pn*W[1];for(let Nn=0;Nn<y.inChannels;++Nn){const Vn=je[zn+Nn*de];for(let rr=0;rr<y.outChannels;++rr)Xe[Sn+rr*Be]+=Vn*Ye[qn+rr];qn+=y.outChannels}}}}}}return t.makeTensorInfo(P.shape,P.dtype,Xe)}const gC={kernelName:Yc,backendName:"cpu",kernelFunc:YT},yC={kernelName:Pd,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,dy:o}=e,{strides:l,pad:c,dataFormat:p,dimRoundingMode:d,filterShape:f}=s;rn([i,o],"conv2dBackpropFilter");const m=di(p),y=ls(i.shape,f,l,1,c,d,!1,m),{strideHeight:v,strideWidth:S,filterHeight:_,filterWidth:k}=y,I="channelsLast"===y.dataFormat,A=new Pt(y.filterShape,"float32"),R=y.padInfo.left,P=y.padInfo.top,U=t.data.get(i.dataId).values,W=t.data.get(o.dataId).values,se=new Pt(i.shape,i.dtype,U),G=new Pt(o.shape,o.dtype,W);for(let pe=0;pe<_;++pe){const de=Math.max(0,Math.ceil((P-pe)/v)),ye=Math.min(y.outHeight,(y.inHeight+P-pe)/v);for(let Ee=0;Ee<k;++Ee){const Ne=Math.max(0,Math.ceil((R-Ee)/S)),Be=Math.min(y.outWidth,(y.inWidth+R-Ee)/S);for(let je=0;je<y.inChannels;++je)for(let Ye=0;Ye<y.outChannels;++Ye){let Xe=0;for(let Je=0;Je<y.batchSize;++Je)for(let Ke=de;Ke<ye;++Ke){const tt=pe+Ke*v-P;for(let mt=Ne;mt<Be;++mt){const Et=Ee+mt*S-R;Xe+=I?se.get(Je,tt,Et,je)*G.get(Je,Ke,mt,Ye):se.get(Je,je,tt,Et)*G.get(Je,Ye,Ke,mt)}}A.set(Xe,pe,Ee,je,Ye)}}}return t.makeTensorInfo(A.shape,A.dtype,A.values)}},xC={kernelName:Zc,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{dy:i,filter:o}=e,{inputShape:l,strides:c,pad:p,dataFormat:d,dimRoundingMode:f}=s;rn([i,o],"conv2dBackpropInput");const m=hn(o.shape),y=hn(i.shape);let v=di(d);const S=ls(l,o.shape,c,1,p,f,!1,v),_=new Pt(S.inShape,"float32"),k=_.values,I=t.data.get(i.dataId).values,A=t.data.get(o.dataId).values,[R,P,U]=m,{batchSize:W,filterHeight:se,filterWidth:G,inChannels:pe,inHeight:de,inWidth:ye,outChannels:Ee,outHeight:Ne,outWidth:Be,strideHeight:je,strideWidth:Ye}=S;v=S.dataFormat;const Xe=se-1-S.padInfo.top,Je=G-1-S.padInfo.left,Ke="channelsLast"===v,tt=_.strides[0],mt=Ke?_.strides[1]:_.strides[2],Et=Ke?_.strides[2]:1,Tt=Ke?1:_.strides[1],Dt=y[0],Ft=Ke?y[1]:y[2],jt=Ke?y[2]:1,Kt=Ke?1:y[1];for(let un=0;un<W;++un)for(let Sn=0;Sn<pe;++Sn)for(let Mn=0;Mn<de;++Mn){const pn=Mn-Xe,Rn=Math.max(0,Math.ceil(pn/je)),zn=Math.min(Ne,(se+pn)/je);for(let qn=0;qn<ye;++qn){const Nn=qn-Je,Vn=Math.max(0,Math.ceil(Nn/Ye)),rr=Math.min(Be,(G+Nn)/Ye);let Rs=0;for(let vi=Rn;vi<zn;++vi){const ii=vi*je-pn;for(let Ar=Vn;Ar<rr;++Ar){const va=Dt*un+Ft*vi+jt*Ar,ai=R*(se-1-ii)+P*(G-1-(Ar*Ye-Nn))+U*Sn;for(let wa=0;wa<Ee;++wa)Rs+=I[va+Kt*wa]*A[ai+wa]}}k[tt*un+mt*Mn+Et*qn+Tt*Sn]=Rs}}return t.makeTensorInfo(_.shape,_.dtype,_.values)}},bC={kernelName:Jc,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,filter:o}=e,{strides:l,pad:c,dilations:p}=s;rn([i,o],"conv3d");const d=Qo(i.shape,o.shape,l,p,c),{filterDepth:f,filterHeight:m,filterWidth:y,dilationDepth:v,dilationHeight:S,dilationWidth:_,padInfo:k}=d,I=k.front,A=k.left,R=k.top,P=new Pt(d.outShape,i.dtype),U=t.data.get(i.dataId).values,W=t.data.get(o.dataId).values,se=P.values,G=hn(i.shape),pe=hn(o.shape);for(let de=0;de<d.batchSize;++de){const ye=de*G[0],Ee=de*P.strides[0];for(let Ne=0;Ne<d.outDepth;++Ne){const Be=Ee+Ne*P.strides[1],je=Ne*d.strideDepth-I;for(let Ye=0;Ye<f;++Ye){const Xe=je+Ye*v;if(Xe<0||Xe>=d.inDepth)continue;const Je=Ye*pe[0],Ke=ye+Xe*G[1];for(let tt=0;tt<d.outHeight;++tt){const mt=Be+tt*P.strides[2],Et=tt*d.strideHeight-R;for(let Tt=0;Tt<m;++Tt){const Dt=Et+Tt*S;if(Dt<0||Dt>=d.inHeight)continue;const Ft=Je+Tt*pe[1],jt=Ke+Dt*G[2];for(let Kt=0;Kt<d.outWidth;++Kt){const un=mt+Kt*d.outChannels,Sn=Kt*d.strideWidth-A;for(let Mn=0;Mn<y;++Mn){const pn=Sn+Mn*_;if(pn<0||pn>=d.inWidth)continue;const zn=jt+pn*d.inChannels;let qn=Ft+Mn*pe[2];for(let Nn=0;Nn<d.inChannels;++Nn){const Vn=U[zn+Nn];for(let rr=0;rr<d.outChannels;++rr)se[un+rr]+=Vn*W[qn+rr];qn+=d.outChannels}}}}}}}}return t.makeTensorInfo(P.shape,P.dtype,P.values)}},vC={kernelName:zd,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,dy:o}=e,{strides:l,pad:c,filterShape:p}=s;rn([i,o],"conv3dBackpropFilterV2");const d=hn(i.shape),f=hn(o.shape),m=Qo(i.shape,p,l,1,c),y=m.strideDepth,v=m.strideHeight,S=m.strideWidth,_=m.filterDepth,k=m.filterHeight,I=m.filterWidth,A=new Pt(m.filterShape,"float32"),R=A.values,[P,U,W,se]=A.strides,G=t.data.get(o.dataId).values,[pe,de,ye,Ee]=f,Ne=t.data.get(i.dataId).values,[Be,je,Ye,Xe]=d,Je=m.padInfo.front,Ke=m.padInfo.left,tt=m.padInfo.top;for(let mt=0;mt<_;++mt){const Et=Math.max(0,Math.ceil((Je-mt)/y)),Tt=Math.min(m.outDepth,(m.inDepth+Je-mt)/y),Dt=mt*P;for(let Ft=0;Ft<k;++Ft){const jt=Math.max(0,Math.ceil((tt-Ft)/v)),Kt=Math.min(m.outHeight,(m.inHeight+tt-Ft)/v),un=Ft*U+Dt;for(let Sn=0;Sn<I;++Sn){const Mn=Math.max(0,Math.ceil((Ke-Sn)/S)),pn=Math.min(m.outWidth,(m.inWidth+Ke-Sn)/S),Rn=Sn*W+un;for(let zn=0;zn<m.inChannels;++zn){const qn=zn*se+Rn;for(let Nn=0;Nn<m.outChannels;++Nn){let Vn=0;for(let rr=0;rr<m.batchSize;++rr){const Rs=rr*Be,vi=rr*pe;for(let ii=Et;ii<Tt;++ii){const Ar=(mt+ii*y-Je)*je+Rs,va=ii*de+vi;for(let ai=jt;ai<Kt;++ai){const wa=(Ft+ai*v-tt)*Ye+Ar,Tl=ai*ye+va;for(let Ad=Mn;Ad<pn;++Ad)Vn+=Ne[(Sn+Ad*S-Ke)*Xe+wa+zn]*G[Ad*Ee+Tl+Nn]}}}R[qn+Nn]=Vn}}}}}return t.makeTensorInfo(A.shape,A.dtype,A.values)}},wC={kernelName:Bd,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{dy:i,filter:o}=e,{pad:l,strides:c,inputShape:p}=s;rn([i],"conv3dBackpropInputV2");const d=hn(i.shape),f=hn(o.shape),m=Qo(p,o.shape,c,1,l),y=new Pt(m.inShape,"float32"),v=y.values,[S,_,k,I]=y.strides,A=t.data.get(i.dataId).values,[R,P,U,W]=d,se=t.data.get(o.dataId).values,[G,pe,de,ye]=f,{batchSize:Ee,filterDepth:Ne,filterHeight:Be,filterWidth:je,inChannels:Ye,inDepth:Xe,inHeight:Je,inWidth:Ke,outChannels:tt,outDepth:mt,outHeight:Et,outWidth:Tt,strideDepth:Dt,strideHeight:Ft,strideWidth:jt}=m,Kt=Ne-1-m.padInfo.front,un=Be-1-m.padInfo.top,Sn=je-1-m.padInfo.left;for(let Mn=0;Mn<Ee;++Mn)for(let pn=0;pn<Ye;++pn)for(let Rn=0;Rn<Xe;++Rn){const zn=Rn-Kt,qn=Math.max(0,Math.ceil(zn/Dt)),Nn=Math.min(mt,(Ne+zn)/Dt);for(let Vn=0;Vn<Je;++Vn){const rr=Vn-un,Rs=Math.max(0,Math.ceil(rr/Ft)),vi=Math.min(Et,(Be+rr)/Ft);for(let ii=0;ii<Ke;++ii){const Ar=ii-Sn,va=Math.max(0,Math.ceil(Ar/jt)),ai=Math.min(Tt,(je+Ar)/jt);let wa=0;for(let Tl=qn;Tl<Nn;++Tl){const Ad=Tl*Dt-zn;for(let Fc=Rs;Fc<vi;++Fc){const zO=Fc*Ft-rr;for(let Sb=va;Sb<ai;++Sb){const BO=R*Mn+P*Tl+U*Fc+W*Sb,UO=G*(Ne-1-Ad)+pe*(Be-1-zO)+de*(je-1-(Sb*jt-Ar))+ye*pn;for(let Tb=0;Tb<tt;++Tb)wa+=A[BO+Tb]*se[UO+Tb]}}}v[S*Mn+_*Rn+k*Vn+I*ii+pn]=wa}}}return t.makeTensorInfo(y.shape,y.dtype,y.values)}},SC=gr(Ru,r=>Math.cos(r)),TC={kernelName:Ru,backendName:"cpu",kernelFunc:SC},MC=gr(Lu,r=>Math.cosh(r)),_C={kernelName:Lu,backendName:"cpu",kernelFunc:MC},kC={kernelName:Ud,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{image:i,boxes:o,boxInd:l}=e,{cropSize:c,method:p,extrapolationValue:d}=s,[f,m,y,v]=i.shape,S=o.shape[0],[_,k]=c,I=Pn([S,_,k,v],"float32"),A=t.data.get(o.dataId).values,R=t.data.get(l.dataId).values,P=t.data.get(i.dataId).values,U=hn(i.shape),W=hn(I.shape);for(let se=0;se<S;se++){const G=4*se,pe=A[G],de=A[G+1],ye=A[G+2],Ee=A[G+3],Ne=R[se];if(Ne>=f)continue;const Be=_>1?(ye-pe)*(m-1)/(_-1):0,je=k>1?(Ee-de)*(y-1)/(k-1):0;for(let Ye=0;Ye<_;Ye++){const Xe=_>1?pe*(m-1)+Ye*Be:.5*(pe+ye)*(m-1);if(Xe<0||Xe>m-1)for(let Je=0;Je<k;Je++)for(let Ke=0;Ke<v;Ke++)I.values[Ke+Je*W[2]+Ye*W[1]+se*W[0]]=d;else if("bilinear"===p){const Je=Math.floor(Xe),Ke=Math.ceil(Xe),tt=Xe-Je;for(let mt=0;mt<k;mt++){const Et=k>1?de*(y-1)+mt*je:.5*(de+Ee)*(y-1);if(Et<0||Et>y-1){for(let jt=0;jt<v;jt++)I.values[jt+mt*W[2]+Ye*W[1]+se*W[0]]=d;continue}const Tt=Math.floor(Et),Dt=Math.ceil(Et),Ft=Et-Tt;for(let jt=0;jt<v;jt++){let Kt=jt+Tt*U[2]+Je*U[1]+Ne*U[0];const un=P[Kt];Kt=jt+Dt*U[2]+Je*U[1]+Ne*U[0];const Sn=P[Kt];Kt=jt+Tt*U[2]+Ke*U[1]+Ne*U[0];const Mn=P[Kt];Kt=jt+Dt*U[2]+Ke*U[1]+Ne*U[0];const pn=un+(Sn-un)*Ft,Rn=Mn+(P[Kt]-Mn)*Ft;Kt=jt+mt*W[2]+Ye*W[1]+se*W[0],I.values[Kt]=pn+(Rn-pn)*tt}}}else for(let Je=0;Je<k;++Je){const Ke=k>1?de*(y-1)+Je*je:.5*(de+Ee)*(y-1);if(Ke<0||Ke>y-1){for(let Et=0;Et<v;Et++)I.values[Et+Je*W[2]+Ye*W[1]+se*W[0]]=d;continue}const tt=Math.round(Ke),mt=Math.round(Xe);for(let Et=0;Et<v;Et++)I.values[Et+Je*W[2]+Ye*W[1]+se*W[0]]=P[Et+tt*U[2]+mt*U[1]+Ne*U[0]]}}}return t.makeTensorInfo(I.shape,I.dtype,I.values)}},EC={kernelName:Qc,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o,exclusive:l,reverse:c}=s;rn(i,"cumsum");const p=In([o],i.shape.length);let d=i;null!=p&&(d=Ka({inputs:{x:i},backend:t,attrs:{perm:p}}));const f=Xr(1,i.shape.length)[0];if(f!==d.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${d.shape.length-1} but got axis=${f}`);const m=ui(d.dtype,"int32"),y=hs(ke(d.shape),m),v=t.data.get(d.dataId).values,S=d.shape[d.shape.length-1],_=c?(I,A)=>I+S-A-1:(I,A)=>I+A;for(let I=0;I<v.length;I+=S)for(let A=0;A<S;A++){const R=_(I,A);if(0===A)y[R]=l?0:v[R];else{const P=_(I,A-1);y[R]=l?v[P]+y[P]:v[R]+y[P]}}const k=t.makeTensorInfo(d.shape,m,y);if(null!=p){const I=Ka({inputs:{x:k},backend:t,attrs:{perm:rl(p)}});return t.disposeIntermediateTensorInfo(k),t.disposeIntermediateTensorInfo(d),I}return k}},IC={kernelName:Vd,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,weights:o}=e,{size:l,binaryOutput:c}=s;if(1===i.shape.length){const p=mw(t.data.get(i.dataId).values,t.data.get(o.dataId).values,o.dtype,o.shape,l);return t.makeTensorInfo([l],o.dtype,p)}if(2===i.shape.length){const p=qT(t.bufferSync(i),t.bufferSync(o),l,c);return t.makeTensorInfo(p.shape,o.dtype,p.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}},CC={kernelName:Wd,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{blockSize:o,dataFormat:l}=s;F("NHWC"===l,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${l}`),F(o>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`);const c=i.shape[0],p=i.shape[1],d=i.shape[2],f=i.shape[3],m=p*o,y=d*o,v=f/(o*o),S=t.data.get(i.dataId).values,_=new Float32Array(c*m*y*v);let k=0;for(let I=0;I<c;++I)for(let A=0;A<m;++A){const R=Math.floor(A/o),P=A%o;for(let U=0;U<y;++U){const W=Math.floor(U/o),se=(P*o+U%o)*v;for(let G=0;G<v;++G)_[k++]=S[G+se+f*(W+d*(R+p*I))]}}return t.makeTensorInfo([c,m,y,v],i.dtype,_)}};function ZT(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,filter:o}=e,{strides:l,pad:c,dilations:p,dimRoundingMode:d}=s;rn([i,o],"depthwiseConv2DNative");const f=hn(i.shape),m=hn(o.shape);let y=p;null==y&&(y=[1,1]),F(ts(l,y),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${y}'`);const v=ls(i.shape,o.shape,l,y,c,d,!0),{filterHeight:S,filterWidth:_,dilationHeight:k,dilationWidth:I,padInfo:A}=v,R=A.left,P=A.top,U=v.outChannels/v.inChannels,W=new Pt(v.outShape,i.dtype),se=t.data.get(i.dataId).values,G=t.data.get(o.dataId).values,pe=W.values;for(let de=0;de<v.batchSize;++de){const ye=de*f[0],Ee=de*W.strides[0];for(let Ne=0;Ne<v.outHeight;++Ne){const Be=Ee+Ne*W.strides[1],je=Ne*v.strideHeight-P;for(let Ye=0;Ye<S;++Ye){const Xe=je+Ye*k;if(Xe<0||Xe>=v.inHeight)continue;const Je=Ye*m[0],Ke=ye+Xe*f[1];for(let tt=0;tt<v.outWidth;++tt){const mt=Be+tt*W.strides[2],Et=tt*v.strideWidth-R;for(let Tt=0;Tt<_;++Tt){const Dt=Et+Tt*I;if(Dt<0||Dt>=v.inWidth)continue;const jt=Ke+Dt*v.inChannels;let Kt=mt,un=Je+Tt*m[1];for(let Sn=0;Sn<v.inChannels;++Sn){const Mn=se[jt+Sn];for(let pn=0;pn<U;++pn)pe[Kt+pn]+=Mn*G[un+pn];Kt+=U,un+=U}}}}}}return t.makeTensorInfo(W.shape,W.dtype,W.values)}const NC={kernelName:eh,backendName:"cpu",kernelFunc:ZT},AC={kernelName:Ll,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,dy:o}=e,{strides:l,dilations:c,pad:p,dimRoundingMode:d,filterShape:f}=s;rn([i,o],"depthwiseConv2dNativeBackpropFilter");const m=ls(i.shape,f,l,c,p,d,!0),{strideHeight:y,strideWidth:v,filterHeight:S,filterWidth:_}=m,k=new Pt(m.filterShape,"float32"),I=m.padInfo.left,A=m.padInfo.top,R=m.outChannels/m.inChannels,P=t.data.get(i.dataId).values,U=new Pt(i.shape,i.dtype,P),W=t.data.get(o.dataId).values,se=new Pt(o.shape,o.dtype,W);for(let G=0;G<S;++G){const pe=Math.max(0,Math.ceil((A-G)/y)),de=Math.min(m.outHeight,(m.inHeight+A-G)/y);for(let ye=0;ye<_;++ye){const Ee=Math.max(0,Math.ceil((I-ye)/v)),Ne=Math.min(m.outWidth,(m.inWidth+I-ye)/v);for(let Be=0;Be<m.outChannels;++Be){const je=Math.trunc(Be/R),Ye=Be%R;let Xe=0;for(let Je=0;Je<m.batchSize;++Je)for(let Ke=pe;Ke<de;++Ke){const tt=G+Ke*y-A;for(let mt=Ee;mt<Ne;++mt)Xe+=U.get(Je,tt,ye+mt*v-I,je)*se.get(Je,Ke,mt,Be)}k.set(Xe,G,ye,je,Ye)}}}return t.makeTensorInfo(k.shape,k.dtype,k.values)}},RC={kernelName:Dl,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{dy:i,filter:o}=e,{strides:l,dilations:c,pad:p,dimRoundingMode:d,inputShape:f}=s;rn([i,o],"depthwiseConv2DNativeBackpropInput");const m=hn(i.shape),y=hn(o.shape),v=ls(f,o.shape,l,c,p,d,!0),S=new Pt(v.inShape,"float32"),_=S.values,[k,I,A]=S.strides,R=t.data.get(i.dataId).values,[P,U,W]=m,se=t.data.get(o.dataId).values,[G,pe,de]=y,{batchSize:ye,filterHeight:Ee,filterWidth:Ne,inChannels:Be,inHeight:je,inWidth:Ye,outChannels:Xe,outHeight:Je,outWidth:Ke,strideHeight:tt,strideWidth:mt}=v,Et=Ee-1-v.padInfo.top,Tt=Ne-1-v.padInfo.left,Dt=Xe/Be;for(let Ft=0;Ft<ye;++Ft)for(let jt=0;jt<Be;++jt)for(let Kt=0;Kt<je;++Kt){const un=Kt-Et,Sn=Math.max(0,Math.ceil(un/tt)),Mn=Math.min(Je,(Ee+un)/tt);for(let pn=0;pn<Ye;++pn){const Rn=pn-Tt,zn=Math.max(0,Math.ceil(Rn/mt)),qn=Math.min(Ke,(Ne+Rn)/mt);let Nn=0;for(let Vn=Sn;Vn<Mn;++Vn){const rr=Vn*tt-un;for(let Rs=zn;Rs<qn;++Rs){const vi=P*Ft+U*Vn+W*Rs,ii=G*(Ee-1-rr)+pe*(Ne-1-(Rs*mt-Rn))+de*jt;for(let Ar=0;Ar<Dt;++Ar)Nn+=R[vi+(jt*Dt+Ar)]*se[ii+Ar]}}_[k*Ft+I*Kt+A*pn+jt]=Nn}}return t.makeTensorInfo(S.shape,S.dtype,S.values)}},LC={kernelName:Du,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t}=r,{x:s}=e,i=ke(s.shape),o=t.data.get(s.dataId).values,l=Pn([i,i],s.dtype),c=l.values;for(let d=0;d<o.length;d++)c[d*i+d]=o[d];const p=[...s.shape,...s.shape];return t.makeTensorInfo(p,l.dtype,l.values)}},DC={kernelName:ka,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{const{x:s,filter:i}=r,{strides:o,pad:l,dilations:c}=t,p=e,d=p.data.get(s.dataId).values,f=s.shape.length,m=p.data.get(i.dataId).values,y=i.shape.length,{batchSize:v,inHeight:S,inWidth:_,inChannels:k,outHeight:I,outWidth:A,padInfo:R,strideHeight:P,strideWidth:U,filterHeight:W,filterWidth:se,dilationHeight:G,dilationWidth:pe,outShape:de}=Zl(s.shape,i.shape,o,l,"NHWC",c),ye=ke(de),Ee=de.length,Ne=Zn(s.dtype,ye);for(let Be=0;Be<v;++Be)for(let je=0;je<I;++je){const Ye=je*P-R.top;for(let Xe=0;Xe<A;++Xe){const Je=Xe*U-R.left;for(let Ke=0;Ke<k;++Ke){let tt=Number.MIN_SAFE_INTEGER;for(let mt=0;mt<W;++mt){const Et=Ye+mt*G;if(Et>=0&&Et<S)for(let Tt=0;Tt<se;++Tt){const Dt=Je+Tt*pe;if(Dt>=0&&Dt<_){const Ft=Zi([Be,Et,Dt,Ke],f,hn(s.shape)),jt=Zi([mt,Tt,Ke],y,hn(i.shape)),Kt=d[Ft]+m[jt];Kt>tt&&(tt=Kt)}}}Ne[Zi([Be,je,Xe,Ke],Ee,hn(de))]=tt}}}return{dataId:p.write(Wt(Ne,s.dtype),de,s.dtype),shape:de,dtype:s.dtype}}},FC={kernelName:Fl,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{const{x:s,filter:i,dy:o}=r,{strides:l,pad:c,dilations:p}=t,d=e,f=wi(s.shape,d.data.get(s.dataId).values),m=wi(i.shape,d.data.get(i.dataId).values),{batchSize:y,inHeight:v,inWidth:S,inChannels:_,outHeight:k,outWidth:I,padInfo:A,strideHeight:R,strideWidth:P,filterHeight:U,filterWidth:W,dilationHeight:se,dilationWidth:G,outShape:pe}=Zl(s.shape,i.shape,l,c,"NHWC",p);F(o.rank===pe.length,()=>`Error in ${Fl}, dy must have the same rank as output ${pe.length}, but got ${o.rank}`);const de=wi(pe,d.data.get(o.dataId).values),ye=_a(i.shape,i.dtype);for(let Ee=0;Ee<y;++Ee)for(let Ne=0;Ne<k;++Ne){const Be=Ne*R-A.top;for(let je=0;je<I;++je){const Ye=je*P-A.left;for(let Xe=0;Xe<_;++Xe){let Je=Number.MIN_SAFE_INTEGER,Ke=0,tt=0;for(let mt=0;mt<U;++mt){const Et=Be+mt*se;if(Et>=0&&Et<v)for(let Tt=0;Tt<W;++Tt){const Dt=Ye+Tt*G;if(Dt>=0&&Dt<S){const Ft=f[Ee][Et][Dt][Xe]+m[mt][Tt][Xe];Ft>Je&&(Je=Ft,Ke=mt,tt=Tt)}}}ye[Ke][tt][Xe]+=de[Ee][Ne][je][Xe]}}}return{dataId:d.write(Wt(ye,s.dtype),i.shape,i.dtype),shape:i.shape,dtype:i.dtype}}},$C={kernelName:ro,backendName:"cpu",kernelFunc:({inputs:r,backend:e,attrs:t})=>{const{x:s,filter:i,dy:o}=r,{strides:l,pad:c,dilations:p}=t,d=e,f=wi(s.shape,d.data.get(s.dataId).values),m=wi(i.shape,d.data.get(i.dataId).values),{batchSize:y,inHeight:v,inWidth:S,inChannels:_,outHeight:k,outWidth:I,padInfo:A,strideHeight:R,strideWidth:P,filterHeight:U,filterWidth:W,dilationHeight:se,dilationWidth:G,outShape:pe}=Zl(s.shape,i.shape,l,c,"NHWC",p);F(o.rank===pe.length,()=>`Error in ${ro}, dy must have the same rank as output ${pe.length}, but got ${o.rank}`);const de=wi(pe,d.data.get(o.dataId).values),ye=_a(s.shape,s.dtype);for(let Ee=0;Ee<y;++Ee)for(let Ne=0;Ne<k;++Ne){const Be=Ne*R-A.top;for(let je=0;je<I;++je){const Ye=je*P-A.left;for(let Xe=0;Xe<_;++Xe){let Je=Number.MIN_SAFE_INTEGER,Ke=Be<0?0:Be,tt=Ye<0?0:Ye;for(let mt=0;mt<U;++mt){const Et=Be+mt*se;if(Et>=0&&Et<v)for(let Tt=0;Tt<W;++Tt){const Dt=Ye+Tt*G;if(Dt>=0&&Dt<S){const Ft=f[Ee][Et][Dt][Xe]+m[mt][Tt][Xe];Ft>Je&&(Je=Ft,Ke=Et,tt=Dt)}}}ye[Ee][Ke][tt][Xe]+=de[Ee][Ne][je][Xe]}}}return{dataId:d.write(Wt(ye,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},gw=Ss((r,e)=>r*e),OC=dw((r,e,t,s)=>({real:r*t-e*s,imag:r*s+e*t})),sb=Us(jr,gw,OC),PC={kernelName:jr,backendName:"cpu",kernelFunc:sb};function Fy(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o,keepDims:l}=s;let c;rn(i,"sum"),c="bool"===i.dtype?Id({inputs:{x:i},backend:t,attrs:{dtype:"int32"}}):gu({inputs:{x:i},backend:t});const p=c.shape.length,d=Dn(o,c.shape),f=In(d,p);let m=d,y=c;null!=f&&(y=Ka({inputs:{x:c},backend:t,attrs:{perm:f}}),m=Xr(m.length,p)),Cs("sum",m,y.shape.length);const[v,S]=gs(y.shape,m);let _=rb(t,v,ui(y.dtype,"int32"));const k=ke(S),I=t.data.get(_.dataId).values,A=t.data.get(y.dataId).values;for(let R=0;R<I.length;++R){const P=R*k;let U=0;for(let W=0;W<k;++W)U+=A[P+W];I[R]=U}if(l){const R=_;_=Pr({inputs:{x:_},backend:t,attrs:{shape:br(_.shape,d)}}),t.disposeIntermediateTensorInfo(R)}return t.disposeIntermediateTensorInfo(c),null!=f&&t.disposeIntermediateTensorInfo(y),_}const zC={kernelName:rp,backendName:"cpu",kernelFunc:Fy},BC={kernelName:th,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{equation:i}=s,o=e,{allDims:l,summedDims:c,idDims:p}=uy(i,o.length);hy(l.length,p,o);const{path:d,steps:f}=dy(c,p),m=f.length;let y=null,v=l.length;const S=[];for(let _=0;_<m;++_){for(const k of f[_]){const{permutationIndices:I,expandDims:A}=cy(v,p[k]);let R;py(I)?R=o[k]:(R=Ka({inputs:{x:o[k]},backend:t,attrs:{perm:I}}),S.push(R));const P=R.shape.slice();for(let U=0;U<A.length;++U)P.splice(A[U],0,1);He(R.shape,P)||(R=Pr({inputs:{x:R},backend:t,attrs:{shape:P}}),S.push(R)),null===y?y=R:(y=sb({inputs:{a:R,b:y},backend:t}),S.push(y))}_<m-1&&(d[_]>=0&&(y=Fy({inputs:{x:y},backend:t,attrs:{axis:d[_]-(l.length-v),keepDims:!1}}),S.push(y)),v--)}for(const _ of S)_!==y&&t.disposeIntermediateTensorInfo(_);return y}},UC={kernelName:pf,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t}=r,{dy:s,y:i}=e;rn([s,i],"eluGrad");const o=new Float32Array(ke(i.shape)),l=t.data.get(i.dataId).values,c=t.data.get(s.dataId).values;for(let p=0;p<l.length;++p){const d=l[p];o[p]=d>=1?c[p]:c[p]*(d+1)}return t.makeTensorInfo(i.shape,"float32",o)}},JT=Ss((r,e)=>r===e?1:0),QT=Us(ds,JT,null,"bool"),VC={kernelName:ds,backendName:"cpu",kernelFunc:QT},WC=gd,GC=qp,HC=ay,jC=vm,qC=wm,XC=oy,KC=gr(nh,r=>{const e=Math.sign(r),t=Math.abs(r),s=1/(1+WC*t);return e*(1-((((XC*s+qC)*s+jC)*s+HC)*s+GC)*s*Math.exp(-t*t))}),YC={kernelName:nh,backendName:"cpu",kernelFunc:KC},e2=Ed(r=>Math.exp(r)),t2=Fm(so,e2),ZC={kernelName:so,backendName:"cpu",kernelFunc:t2};function ib(r){const{inputs:e,backend:t,attrs:s}=r,{input:i}=e,{dim:o}=s,l=i.shape.length,c=i.shape.slice();let p=o;return o<0&&(F(-(l+1)<=o,()=>`Axis must be in the interval [${-(l+1)}, ${l}]`),p=l+o+1),c.splice(p,0,1),Pr({inputs:{x:i},backend:t,attrs:{shape:c}})}const JC={kernelName:$l,backendName:"cpu",kernelFunc:ib},n2=Ed(r=>Math.expm1(r)),QC=Fm(No,n2),eN={kernelName:No,backendName:"cpu",kernelFunc:QC},tN=Ss((r,e)=>r/e),yw=Us(Co,tN),xw={kernelName:Co,backendName:"cpu",kernelFunc:yw},r2=Ss((r,e)=>r-e),nN=dw((r,e,t,s)=>({real:r-t,imag:e-s})),bw=Us(Hs,r2,nN),rN={kernelName:Hs,backendName:"cpu",kernelFunc:bw};function s2(r,e,t){const s=r.shape,i=s[0],o=s[1],l=t.data.get(r.dataId),c=l.complexTensorInfos.real,p=l.complexTensorInfos.imag,d=[i,o],f=ke(d),m=as("float32",f),y=as("float32",f);for(let k=0;k<i;k++){const I=nf({inputs:{x:c},backend:t,attrs:{begin:[k,0],size:[1,o]}}),A=nf({inputs:{x:p},backend:t,attrs:{begin:[k,0],size:[1,o]}}),R=xa({inputs:{real:I,imag:A},backend:t}),{real:P,imag:U}=sN(R,e,t),W=hl(P,U);for(let se=0;se<o;se++){const G=ly(W,se);m[k*o+se]=G.real,y[k*o+se]=G.imag}t.disposeIntermediateTensorInfo(I),t.disposeIntermediateTensorInfo(A),t.disposeIntermediateTensorInfo(R)}const v=t.makeTensorInfo(d,"float32",m),S=t.makeTensorInfo(d,"float32",y),_=xa({inputs:{real:v,imag:S},backend:t});return t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(S),_}function sN(r,e,t){const s=ke(r.shape),i=t.data.get(r.dataId),o=t.data.get(i.complexTensorInfos.real.dataId).values,l=t.data.get(i.complexTensorInfos.imag.dataId).values;if(0==((c=s)&c-1)){const p=vw(o,l,s,e,t),d=[r.shape[0],r.shape[1]];if(e){const f=t.makeTensorInfo(d,"float32",p.real),m=t.makeTensorInfo(d,"float32",p.imag),y=t.makeTensorInfo([],"float32",Oa(s,"float32")),v=gu({inputs:{x:y},backend:t}),S=xw.kernelFunc({inputs:{a:f,b:y},backend:t}),_=xw.kernelFunc({inputs:{a:m,b:v},backend:t}),k=t.data.get(S.dataId).values,I=t.data.get(_.dataId).values;return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(S),t.disposeIntermediateTensorInfo(_),{real:k,imag:I}}return p}return ax(function(p,d,f){const m=new Float32Array(2*d);for(let y=0;y<d;y++){let v=0,S=0;for(let _=0;_<d;_++){const k=hx(y*_,d,f),I=ly(p,_);v+=I.real*k.real-I.imag*k.imag,S+=I.real*k.imag+I.imag*k.real}f&&(v/=d,S/=d),ux(m,v,S,y)}return m}(hl(o,l),s,e));var c}function vw(r,e,t,s,i){if(1===t)return{real:r,imag:e};const o=hl(r,e),l=t/2,c=ox(o),p=c.real,d=c.imag,f=[p.length],m=i.makeTensorInfo(f,"float32",p),y=i.makeTensorInfo(f,"float32",d),v=xa({inputs:{real:m,imag:y},backend:i}),S=lx(o),_=S.real,k=S.imag,I=[_.length],A=i.makeTensorInfo(I,"float32",_),R=i.makeTensorInfo(I,"float32",k),P=xa({inputs:{real:A,imag:R},backend:i}),U=vw(p,d,l,s,i),W=U.real,se=U.imag,G=[W.length],pe=i.makeTensorInfo(G,"float32",W),de=i.makeTensorInfo(G,"float32",se),ye=xa({inputs:{real:pe,imag:de},backend:i}),Ee=vw(_,k,l,s,i),Ne=Ee.real,Be=Ee.imag,je=[Ne.length],Ye=i.makeTensorInfo(je,"float32",Ne),Xe=i.makeTensorInfo(je,"float32",Be),Je=xa({inputs:{real:Ye,imag:Xe},backend:i}),Ke=cx(t,s),tt=[Ke.real.length],mt=i.makeTensorInfo(tt,"float32",Ke.real),Et=i.makeTensorInfo(tt,"float32",Ke.imag),Tt=xa({inputs:{real:mt,imag:Et},backend:i}),Dt=sb({inputs:{a:Tt,b:Je},backend:i}),Ft=Dy({inputs:{a:ye,b:Dt},backend:i}),jt=bw({inputs:{a:ye,b:Dt},backend:i}),Kt=tf({inputs:{input:Ft},backend:i}),un=tf({inputs:{input:jt},backend:i}),Sn=$m({inputs:{input:Ft},backend:i}),Mn=$m({inputs:{input:jt},backend:i}),pn=Om({inputs:[Kt,un],backend:i,attrs:{axis:0}}),Rn=Om({inputs:[Sn,Mn],backend:i,attrs:{axis:0}}),zn=i.data.get(pn.dataId).values,qn=i.data.get(Rn.dataId).values;return i.disposeIntermediateTensorInfo(m),i.disposeIntermediateTensorInfo(y),i.disposeIntermediateTensorInfo(v),i.disposeIntermediateTensorInfo(A),i.disposeIntermediateTensorInfo(R),i.disposeIntermediateTensorInfo(P),i.disposeIntermediateTensorInfo(pe),i.disposeIntermediateTensorInfo(de),i.disposeIntermediateTensorInfo(ye),i.disposeIntermediateTensorInfo(Ye),i.disposeIntermediateTensorInfo(Xe),i.disposeIntermediateTensorInfo(Je),i.disposeIntermediateTensorInfo(mt),i.disposeIntermediateTensorInfo(Et),i.disposeIntermediateTensorInfo(Tt),i.disposeIntermediateTensorInfo(Dt),i.disposeIntermediateTensorInfo(Ft),i.disposeIntermediateTensorInfo(jt),i.disposeIntermediateTensorInfo(Kt),i.disposeIntermediateTensorInfo(Sn),i.disposeIntermediateTensorInfo(un),i.disposeIntermediateTensorInfo(Mn),i.disposeIntermediateTensorInfo(pn),i.disposeIntermediateTensorInfo(Rn),{real:zn,imag:qn}}const iN={kernelName:Gd,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t}=r,{input:s}=e,i=ke(s.shape),o=s.shape[s.shape.length-1],l=Pr({inputs:{x:s},backend:t,attrs:{shape:[i/o,o]}}),c=s2(l,!1,t),p=Pr({inputs:{x:c},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(c),p}};function ww(r){const{backend:e,attrs:t}=r,{shape:s,value:i,dtype:o}=t,l=o||to(i),c=Zn(l,ke(s));return c.fill(i),e.makeTensorInfo(s,l,c)}const aN={kernelName:rh,backendName:"cpu",kernelFunc:ww},oN={kernelName:sh,backendName:"cpu",kernelFunc:({inputs:r,backend:t})=>{const{image:s}=r,i=t,o=as(s.dtype,ke(s.shape)),[l,c,p,d]=s.shape,f=i.data.get(s.dataId).values;for(let m=0;m<l;m++){const y=m*p*c*d;for(let v=0;v<c;v++){const S=v*(p*d);for(let _=0;_<p;_++){const k=_*d;for(let I=0;I<d;I++){const A=Math.round(p-_-1),R=y+S+k+I;let P=f[R];A>=0&&A<p&&(P=f[y+S+A*d+I]),o[R]=P}}}}return{dataId:i.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},i2=Ed(r=>Math.floor(r)),lN=Fm(Ol,i2),uN={kernelName:Ol,backendName:"cpu",kernelFunc:lN},cN=Ss((r,e)=>Math.floor(r/e)),hN=Us($u,cN,null,"int32"),dN={kernelName:$u,backendName:"cpu",kernelFunc:hN},pN={kernelName:Bo,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,filter:o,bias:l,preluActivationWeights:c}=e,{strides:p,pad:d,dataFormat:f,dilations:m,dimRoundingMode:y,activation:v,leakyreluAlpha:S}=s;let _=YT({inputs:{x:i,filter:o},backend:t,attrs:{strides:p,pad:d,dataFormat:f,dilations:m,dimRoundingMode:y}});if(l){const k=_;_=Dy({inputs:{a:_,b:l},backend:t}),t.disposeIntermediateTensorInfo(k)}if(v){const k=_;_=hw(t,_,v,c,S),t.disposeIntermediateTensorInfo(k)}return _}},fN={kernelName:ap,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,filter:o,bias:l,preluActivationWeights:c}=e,{strides:p,pad:d,dataFormat:f,dilations:m,dimRoundingMode:y,activation:v,leakyreluAlpha:S}=s;let _=ZT({inputs:{x:i,filter:o},backend:t,attrs:{strides:p,pad:d,dataFormat:f,dilations:m,dimRoundingMode:y}});if(l){const k=_;_=Dy({inputs:{a:_,b:l},backend:t}),t.disposeIntermediateTensorInfo(k)}if(v){const k=_;_=hw(t,_,v,c,S),t.disposeIntermediateTensorInfo(k)}return _}};function a2(r,e,t,s,i,o,l,c,p){const d=Pn([s,o],t);for(let f=0;f<s;f++){const m=[];let y=0;for(let v=0;v<i;v++){const S=r[f*i+v];y+=S*l[v],m.push(S)}if(y<0||y>=p/o)throw new Error(`Invalid indices: ${m} does not index into ${c}`);for(let v=0;v<o;v++)d.values[f*o+v]=e.get(...e.indexToLoc(y*o+v))}return d}const mN={kernelName:Hd,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t}=r,{params:s,indices:i}=e,o=ke(s.shape),l=i.shape,c=l[l.length-1],[p,d,f,m]=Df(s,i);if(0===d)return t.makeTensorInfo(p,s.dtype,[]);const y=a2(t.data.get(i.dataId).values,t.bufferSync(s),s.dtype,d,c,f,m,s.shape,o);return t.makeTensorInfo(p,s.dtype,y.values)}};function o2(r,e,t){const s=Pn(t,r.dtype);for(let i=0;i<s.size;++i){const o=s.indexToLoc(i).slice(),p=e.locToIndex([o[0],o[2]]);o[2]=e.values[p];const d=r.locToIndex(o);s.values[i]=r.values[d]}return s}const gN={kernelName:Ea,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,indices:o}=e,{axis:l,batchDims:c}=s;rn([i,o],"gatherV2");let p=c;null==c&&(p=0);const d=ke(o.shape),f=my(i,o,Dn(l,i.shape)[0],p),m=Pr({inputs:{x:i},backend:t,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),y=Pr({inputs:{x:o},backend:t,attrs:{shape:[f.batchSize,d/f.batchSize]}}),v=[f.batchSize,f.outerSize,d/f.batchSize,f.sliceSize],S=t.bufferSync(y),_=o2(t.bufferSync(m),S,v);return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(y),t.makeTensorInfo(f.outputShape,_.dtype,_.values)}},l2=Ss((r,e)=>r>e?1:0),yN=Us(jd,l2,null,"bool"),xN={kernelName:jd,backendName:"cpu",kernelFunc:yN},u2=Ss((r,e)=>r>=e?1:0),bN=Us(Ao,u2,null,"bool"),vN={kernelName:Ao,backendName:"cpu",kernelFunc:bN},wN={kernelName:ff,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t}=r,{input:s}=e,i=ke(s.shape),o=s.shape[s.shape.length-1],l=Pr({inputs:{x:s},backend:t,attrs:{shape:[i/o,o]}}),c=s2(l,!0,t),p=Pr({inputs:{x:c},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(c),p}},SN=gr(oh,r=>Number.isFinite(r)?1:0,"bool"),TN={kernelName:oh,backendName:"cpu",kernelFunc:SN},MN=gr(lh,r=>Math.abs(r)===1/0?1:0,"bool"),_N={kernelName:lh,backendName:"cpu",kernelFunc:MN},kN=gr(uh,r=>Number.isNaN(r)?1:0,"bool"),EN={kernelName:uh,backendName:"cpu",kernelFunc:kN},c2=Ss((r,e)=>r<e?1:0),IN=Us(Xd,c2,null,"bool"),CN={kernelName:Xd,backendName:"cpu",kernelFunc:IN},h2=Ss((r,e)=>r<=e?1:0),NN=Us(Kd,h2,null,"bool"),AN={kernelName:Kd,backendName:"cpu",kernelFunc:NN};function d2(r,e,t){const s=(e-r)/(t-1),i=hs(t,"float32");i[0]=r;for(let o=1;o<i.length;o++)i[o]=i[o-1]+s;return i}const RN={kernelName:gf,backendName:"cpu",kernelFunc:function(r){const{backend:e,attrs:t}=r,{start:s,stop:i,num:o}=t,l=d2(s,i,o);return e.makeTensorInfo([l.length],"float32",l)}},p2=Ed(r=>Math.log(r)),LN=Fm(ch,p2),DN={kernelName:ch,backendName:"cpu",kernelFunc:LN},FN=gr(hh,r=>Math.log1p(r)),$N={kernelName:hh,backendName:"cpu",kernelFunc:FN},ON=Ss((r,e)=>r&&e),PN=Us(Yd,ON,null,"bool"),zN={kernelName:Yd,backendName:"cpu",kernelFunc:PN},BN=gr(dh,r=>r?0:1,"bool"),UN={kernelName:dh,backendName:"cpu",kernelFunc:BN},VN=Ss((r,e)=>r||e),WN=Us(io,VN,null,"bool"),GN={kernelName:io,backendName:"cpu",kernelFunc:WN},HN={kernelName:Zd,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{depthRadius:o,bias:l,alpha:c,beta:p}=s;rn(i,"LRN");const d=i.shape[3],f=d-1,m=t.data.get(i.dataId).values,y=ke(i.shape),v=new Float32Array(y);function S(_){const k=_%d;let I=_-k+Math.max(0,k-o);const A=_-k+Math.min(k+o,f);let R=0;for(;I<=A;I++){const P=m[I];R+=P*P}return R}for(let _=0;_<y;_++){const k=S(_),I=m[_]*Math.pow(l+c*k,-p);v[_]=I}return t.makeTensorInfo(i.shape,i.dtype,v)}},jN={kernelName:yf,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,y:o,dy:l}=e,{depthRadius:c,bias:p,alpha:d,beta:f}=s;rn(l,"LRNGrad");const m=ke(l.shape),y=l.shape[3],v=t.data.get(l.dataId).values,S=t.data.get(i.dataId).values,_=t.data.get(o.dataId).values,k=new Float32Array(m),I=m;for(let A=0;A<I;A++){const R=A%y,P=A-R+Math.max(0,R-c),U=A-R+Math.min(y,R+c+1);let W=0;for(let se=P;se<U;se++)W+=Math.pow(S[se],2);W=d*W+p;for(let se=P;se<U;se++){let G=-2*d*f*S[se]*_[A]/W;A===se&&(G+=Math.pow(W,-f)),G*=v[A],k[se]+=G}}return t.makeTensorInfo(l.shape,i.dtype,k)}};function f2(r,e,t,s){const i=as(s,ke(t));for(let o=0;o<i.length;++o){const l=o*e;let c=r[l];for(let p=0;p<e;++p){const d=r[l+p];(Number.isNaN(d)||d>c)&&(c=d)}i[o]=c}return i}function m2(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{reductionIndices:o,keepDims:l}=s,c=t;let p=i.shape;const d=p.length,f=Dn(o,p);let m=f;const y=In(m,d);let v=c.data.get(i.dataId).values;if(null!=y){const R=new Array(d);for(let P=0;P<R.length;P++)R[P]=p[y[P]];v=pw(v,p,i.dtype,y,R),m=Xr(m.length,d),p=R}rn(i,"max"),Cs("max",m,d);const[S,_]=gs(p,m),k=f2(v,ke(_),S,i.dtype),I=c.write(k,S,i.dtype);let A=S;return l&&(A=br(S,f)),{dataId:I,shape:A,dtype:i.dtype}}const qN={kernelName:Jd,backendName:"cpu",kernelFunc:m2},g2=Ss((r,e)=>Math.max(r,e)),XN=Us(ph,g2),KN={kernelName:ph,backendName:"cpu",kernelFunc:XN},YN={kernelName:Qd,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e;rn(i,"maxPool");const{filterSize:o,strides:l,pad:c,dimRoundingMode:p}=s;F(ts(l,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${l} and dilations '1'`);const d=hi(i.shape,o,l,1,c,p);let f;if(1===d.filterWidth&&1===d.filterHeight&&He(d.inShape,d.outShape))f=gu({inputs:{x:i},backend:t});else{const m=t.data.get(i.dataId).values,y=hn(i.shape),v=fw(m,0,i.dtype,y,d,"max");f=t.makeTensorInfo(d.outShape,i.dtype,v.values)}return f}},ZN={kernelName:ep,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{filterSize:o,strides:l,pad:c,dimRoundingMode:p,dataFormat:d}=s;rn(i,"maxPool3d");const f=la(i.shape,o,l,1,c,p,d),m=HT(t.data.get(i.dataId).values,0,i.dtype,hn(i.shape),f,"max");return t.makeTensorInfo(m.shape,"float32",m.values)}},JN={kernelName:bf,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{dy:i,input:o}=e,{filterSize:l,strides:c,pad:p,dimRoundingMode:d}=s;rn([i,o],"maxPool3DGrad");const f=la(o.shape,l,c,1,p,d),m=function(de,ye){const Ee=Pn(ye.outShape,"int32"),Ne=ye.strideDepth,Be=ye.strideHeight,je=ye.strideWidth,Ye=ye.dilationDepth,Xe=ye.dilationHeight,Je=ye.dilationWidth,Ke=ye.effectiveFilterDepth,tt=ye.effectiveFilterHeight,mt=ye.effectiveFilterWidth,Et=ye.padInfo.front,Tt=ye.padInfo.top,Dt=ye.padInfo.left;for(let Ft=0;Ft<ye.batchSize;++Ft)for(let jt=0;jt<ye.inChannels;++jt)for(let Kt=0;Kt<ye.outDepth;++Kt){const un=Kt*Ne-Et;let Sn=un;for(;Sn<0;)Sn+=Ye;const Mn=Math.min(ye.inDepth,Ke+un);for(let pn=0;pn<ye.outHeight;++pn){const Rn=pn*Be-Tt;let zn=Rn;for(;zn<0;)zn+=Xe;const qn=Math.min(ye.inHeight,tt+Rn);for(let Nn=0;Nn<ye.outWidth;++Nn){const Vn=Nn*je-Dt;let rr=Vn;for(;rr<0;)rr+=Je;const Rs=Math.min(ye.inWidth,mt+Vn);let vi=Number.NEGATIVE_INFINITY,ii=-1;for(let Ar=Sn;Ar<Mn;Ar+=Ye){const va=Ar-un;for(let ai=zn;ai<qn;ai+=Xe){const wa=ai-Rn;for(let Tl=rr;Tl<Rs;Tl+=Je){const Ad=Tl-Vn,Fc=de.get(Ft,Ar,ai,Tl,jt);Fc>=vi&&(vi=Fc,ii=va*tt*mt+wa*tt+Ad)}}}Ee.set(ii,Ft,Kt,pn,Nn,jt)}}}return Ee}(t.bufferSync(o),f),y=f.strideDepth,v=f.strideHeight,S=f.strideWidth,_=f.dilationDepth,k=f.dilationHeight,I=f.dilationWidth,A=f.effectiveFilterDepth,R=f.effectiveFilterHeight,P=f.effectiveFilterWidth,U=A-1-f.padInfo.front,W=P-1-f.padInfo.left,se=R-1-f.padInfo.top,G=Pn(o.shape,"float32"),pe=t.bufferSync(i);for(let de=0;de<f.batchSize;++de)for(let ye=0;ye<f.inChannels;++ye)for(let Ee=0;Ee<f.inDepth;++Ee)for(let Ne=0;Ne<f.inHeight;++Ne)for(let Be=0;Be<f.inWidth;++Be){const je=Ee-U,Ye=Ne-se,Xe=Be-W;let Je=0;for(let Ke=0;Ke<A;Ke+=_){const tt=(je+Ke)/y;if(!(tt<0||tt>=f.outDepth||Math.floor(tt)!==tt))for(let mt=0;mt<R;mt+=k){const Et=(Ye+mt)/v;if(!(Et<0||Et>=f.outHeight||Math.floor(Et)!==Et))for(let Tt=0;Tt<P;Tt+=I){const Dt=(Xe+Tt)/S;if(Dt<0||Dt>=f.outWidth||Math.floor(Dt)!==Dt)continue;const Ft=A*R*P-1-m.get(de,tt,Et,Dt,ye)===Ke*R*P+mt*P+Tt?1:0;0!==Ft&&(Je+=pe.get(de,tt,Et,Dt,ye)*Ft)}}}G.set(Je,de,Ee,Ne,Be,ye)}return t.makeTensorInfo(G.shape,G.dtype,G.values)}},QN={kernelName:xf,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{dy:i,input:o,output:l}=e,c=o;rn([o,l],"maxPoolGrad");const{filterSize:p,strides:d,pad:f,dimRoundingMode:m}=s,y=hi(c.shape,p,d,1,f,m),v=t.data.get(c.dataId).values,S=Pn(y.outShape,c.dtype,GT(v,c.shape,c.dtype,y).values),_=y.strideHeight,k=y.strideWidth,I=y.dilationHeight,A=y.dilationWidth,R=y.effectiveFilterHeight,P=y.effectiveFilterWidth,U=P-1-y.padInfo.left,W=R-1-y.padInfo.top,se=Pn(c.shape,"float32"),G=t.data.get(i.dataId).values,pe=Pn(i.shape,"float32",G);for(let de=0;de<y.batchSize;++de)for(let ye=0;ye<y.inChannels;++ye)for(let Ee=0;Ee<y.inHeight;++Ee)for(let Ne=0;Ne<y.inWidth;++Ne){const Be=Ee-W,je=Ne-U;let Ye=0;for(let Xe=0;Xe<R;Xe+=I){const Je=(Be+Xe)/_;if(!(Je<0||Je>=y.outHeight||Math.floor(Je)!==Je))for(let Ke=0;Ke<P;Ke+=A){const tt=(je+Ke)/k;if(tt<0||tt>=y.outWidth||Math.floor(tt)!==tt)continue;const mt=R*P-1-S.get(de,Je,tt,ye)===Xe*P+Ke?1:0;0!==mt&&(Ye+=pe.get(de,Je,tt,ye)*mt)}}se.set(Ye,de,Ee,Ne,ye)}return t.makeTensorInfo(se.shape,se.dtype,se.values)}},eA={kernelName:fh,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{const{x:s}=r,{filterSize:i,strides:o,pad:l,includeBatchInIndex:c}=e,p=t;rn(s,"MaxPoolWithArgmax");const d=p.data.get(s.dataId).values,f=hi(s.shape,i,o,[1,1],l),[m,y]=function(_,k,I,A,R){const P=fw(_,0,I,hn(k),R,"max"),U=GT(_,k,I,R,!0,A);return[P.values,U.values]}(d,s.shape,s.dtype,c,f),v=p.write(m,f.outShape,s.dtype),S=p.write(y,f.outShape,s.dtype);return[{dataId:v,shape:f.outShape,dtype:s.dtype},{dataId:S,shape:f.outShape,dtype:"int32"}]}},tA={kernelName:Ji,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o,keepDims:l}=s,c=Dn(o,i.shape),p=ke(gs(i.shape,c)[1]),d=[],f=t.makeTensorInfo([],"float32",new Float32Array([p]));d.push(f);const m=Id({inputs:{x:i},backend:t,attrs:{dtype:"float32"}});d.push(m);const y=yw({inputs:{a:m,b:f},backend:t});d.push(y);const v=Fy({inputs:{x:y},backend:t,attrs:{axis:o,keepDims:l}});return d.forEach(S=>t.disposeIntermediateTensorInfo(S)),v}},nA={kernelName:Jr,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o,keepDims:l}=s;rn(i,"min");const c=Dn(o,i.shape);let p=c;const d=In(p,i.shape.length);let f=i;null!=d&&(f=Ka({inputs:{x:i},backend:t,attrs:{perm:d}}),p=Xr(p.length,i.shape.length)),Cs("min",p,f.shape.length);const[m,y]=gs(f.shape,p),v=ke(y),S=hs(ke(m),f.dtype),_=t.data.get(f.dataId).values;for(let I=0;I<S.length;++I){const A=I*v;let R=_[A];for(let P=0;P<v;++P){const U=_[A+P];(Number.isNaN(U)||U<R)&&(R=U)}S[I]=R}null!=d&&t.disposeIntermediateTensorInfo(f);const k=t.makeTensorInfo(m,f.dtype,S);if(l){const I=Pr({inputs:{x:k},backend:t,attrs:{shape:br(m,c)}});return t.disposeIntermediateTensorInfo(k),I}return k}},y2=Ss((r,e)=>Math.min(r,e)),rA=Us(Ro,y2),sA={kernelName:Ro,backendName:"cpu",kernelFunc:rA},iA={kernelName:Ia,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{paddings:o,mode:l}=s;rn(i,"mirrorPad");const c=o.map((A,R)=>A[0]+i.shape[R]+A[1]),p=o.map(A=>A[0]),d=o.map((A,R)=>A[0]+i.shape[R]),f="reflect"===l?0:1,m=t.data.get(i.dataId).values,y=i.shape.length,v=hn(i.shape),S=ke(c),_=c.length,k=hn(c),I=as(i.dtype,S);for(let A=0;A<S;A++){let R=wu(A,_,k);for(let U=0;U<_;U++)R[U]<p[U]?R[U]=2*p[U]-R[U]-f:R[U]>=d[U]&&(R[U]=2*(d[U]-1)-R[U]+f);R=R.map((U,W)=>U-p[W]);const P=Zi(R,y,v);I[A]=m[P]}return{dataId:t.write(I,c,i.dtype),shape:c,dtype:i.dtype}}},aA=Ss((r,e)=>{const t=r%e;return r<0&&e<0||r>=0&&e>=0?t:(t+e)%e}),oA=Us(ao,aA),lA={kernelName:ao,backendName:"cpu",kernelFunc:oA};function x2(r){const{inputs:e,backend:t,attrs:s}=r,{logits:i}=e,{dim:o}=s,l=i.shape.length;let c=o;if(-1===c&&(c=l-1),c!==l-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${l} and dim was ${c}`);const p=Dn([c],i.shape),d=m2({inputs:{x:i},backend:t,attrs:{reductionIndices:p,keepDims:!1}}),f=br(d.shape,p),m=Pr({inputs:{x:d},backend:t,attrs:{shape:f}}),y=bw({inputs:{a:i,b:m},backend:t}),v=t2({inputs:{x:y},backend:t}),S=Fy({inputs:{x:v},backend:t,attrs:{axis:p,keepDims:!1}}),_=Pr({inputs:{x:S},backend:t,attrs:{shape:f}}),k=yw({inputs:{a:v,b:_},backend:t});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(S),t.disposeIntermediateTensorInfo(_),k}const uA={kernelName:Vu,backendName:"cpu",kernelFunc:x2},cA={kernelName:Ws,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{logits:i}=e,{numSamples:o,seed:l,normalized:c}=s;rn(i,"multinomial");const p=c?i:x2({inputs:{logits:i},backend:t,attrs:{dim:-1}}),d=p.shape[0],f=p.shape[1],m=t.data.get(p.dataId).values,y=[d,o],v=hs(ke(y),"int32");for(let S=0;S<d;++S){const _=S*f,k=new Float32Array(f-1);k[0]=m[_];for(let R=1;R<k.length;++R)k[R]=k[R-1]+m[_+R];const I=au.alea(l.toString()),A=S*o;for(let R=0;R<o;++R){const P=I();v[A+R]=k.length;for(let U=0;U<k.length;U++)if(P<k[U]){v[A+R]=U;break}}}return c||t.disposeIntermediateTensorInfo(p),t.makeTensorInfo(y,"int32",v)}};function b2(r,e,t){const s=Oa(-1,t);return gw([],e,s,r,t)}const hA={kernelName:Pu,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t}=r,{x:s}=e;rn(s,"neg");const i=t.data.get(s.dataId).values,[o,l]=b2(i,s.shape,s.dtype);return t.makeTensorInfo(l,s.dtype,o)}},dA=fm,pA={kernelName:mh,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{boxes:i,scores:o}=e,{maxOutputSize:l,iouThreshold:c,scoreThreshold:p}=s;rn(i,"NonMaxSuppression");const d=t.data.get(i.dataId).values,f=t.data.get(o.dataId).values,{selectedIndices:m}=dA(d,f,l,c,p);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}},fA=Up,mA={kernelName:tp,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{boxes:i,scores:o}=e,{maxOutputSize:l,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:d}=s;rn(i,"NonMaxSuppressionPadded");const f=t.data.get(i.dataId).values,m=t.data.get(o.dataId).values,{selectedIndices:y,validOutputs:v}=fA(f,m,l,c,p,d);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([],"int32",new Int32Array([v]))]}},gA=Vp,yA={kernelName:np,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{boxes:i,scores:o}=e,{maxOutputSize:l,iouThreshold:c,scoreThreshold:p,softNmsSigma:d}=s;rn(i,"NonMaxSuppressionWithScore");const f=t.data.get(i.dataId).values,m=t.data.get(o.dataId).values,y=l,v=c,S=p,_=d,{selectedIndices:k,selectedScores:I}=gA(f,m,y,v,S,_);return[t.makeTensorInfo([k.length],"int32",new Int32Array(k)),t.makeTensorInfo([I.length],"float32",new Float32Array(I))]}},v2=Ss((r,e)=>r!==e?1:0),xA=Us(Lo,v2,null,"bool"),bA={kernelName:Lo,backendName:"cpu",kernelFunc:xA},vA={kernelName:It,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{indices:i}=e,{depth:o,onValue:l,offValue:c}=s;rn(i,"oneHot");const p=ke(i.shape),d=new Float32Array(p*o);d.fill(c);const f=t.data.get(i.dataId).values;for(let m=0;m<p;++m)f[m]>=0&&f[m]<o&&(d[m*o+f[m]]=l);return t.makeTensorInfo([...i.shape,o],"int32",d)}};function ab(r){const{inputs:e,backend:t}=r,{x:s}=e;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const i=tf({inputs:{input:s},backend:t}),o=ab({inputs:{x:i},backend:t}),l=$m({inputs:{input:s},backend:t}),c=ab({inputs:{x:l},backend:t}),p=xa({inputs:{real:o,imag:c},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(c),p}return ww({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const wA={kernelName:ip,backendName:"cpu",kernelFunc:ab},SA={kernelName:gh,backendName:"cpu",kernelFunc:function r(e){const{inputs:t,backend:s}=e,{x:i}=t;if("string"===i.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===i.dtype){const o=tf({inputs:{input:i},backend:s}),l=r({inputs:{x:o},backend:s}),c=$m({inputs:{input:i},backend:s}),p=ab({inputs:{x:c},backend:s}),d=xa({inputs:{real:l,imag:p},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo(p),d}return ww({backend:s,attrs:{shape:i.shape,value:1,dtype:i.dtype}})}};function w2(r){const{inputs:e,backend:t,attrs:s}=r,{axis:i}=s;if(1===e.length)return ib({inputs:{input:e[0]},backend:t,attrs:{dim:i}});const o=e[0].shape,l=e[0].dtype;e.forEach(d=>{qe(o,d.shape,"All tensors passed to stack must have matching shapes"),F(l===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],p=Om({inputs:e.map(d=>{const f=ib({inputs:{input:d},backend:t,attrs:{dim:i}});return c.push(f),f}),backend:t,attrs:{axis:i}});return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),p}const TA={kernelName:zr,backendName:"cpu",kernelFunc:w2},S2={kernelName:oo,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{paddings:o,constantValue:l}=s;rn(i,"pad");const c=o.map((I,A)=>I[0]+i.shape[A]+I[1]),p=o.map(I=>I[0]),d=t.data.get(i.dataId).values,f=ke(i.shape),m=i.shape.length,y=hn(i.shape),v=ke(c),S=c.length,_=hn(c),k=as(i.dtype,v);0!==l&&k.fill(l);for(let I=0;I<f;I++)k[Zi(wu(I,m,y).map((A,R)=>A+p[R]),S,_)]=d[I];return{dataId:t.write(k,c,i.dtype),shape:c,dtype:i.dtype}}},MA=Ss((r,e)=>Math.pow(r,e)),_A=Us(yh,MA),kA={kernelName:yh,backendName:"cpu",kernelFunc:_A};function T2(r,e,t,s){const[i,o]=gs(r,s),l=ui(e,"int32"),c=hs(ke(i),l),p=ke(o);for(let d=0;d<c.length;++d){const f=d*p;let m=1;for(let y=0;y<p;++y)m*=t[f+y];c[d]=m}return{outVals:c,outShape:i,outDtype:l}}const EA={kernelName:xh,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o,keepDims:l}=s;rn(i,"prod");const c=i.shape.length,p=Dn(o,i.shape),d=In(p,c);let f=p,m=i;const y=[];null!=d&&(m=Ka({inputs:{x:i},backend:t,attrs:{perm:d}}),y.push(m),f=Xr(f.length,c));const v=t.data.get(m.dataId).values,{outVals:S,outShape:_,outDtype:k}=T2(m.shape,m.dtype,v,f);let I=_;return l&&(I=br(_,p)),y.forEach(A=>t.disposeIntermediateTensorInfo(A)),t.makeTensorInfo(I,k,S)}};function M2(r,e,t,s){if(r===e||r<e&&t<0||e<r&&t>1)return hs(0,s);const i=hs(Math.abs(Math.ceil((e-r)/t)),s);e<r&&1===t&&(t=-1),i[0]=r;for(let o=1;o<i.length;o++)i[o]=i[o-1]+t;return i}const IA={kernelName:sr,backendName:"cpu",kernelFunc:function(r){const{backend:e,attrs:t}=r,{start:s,stop:i,dtype:o,step:l}=t,c=M2(s,i,l,o);return e.makeTensorInfo([c.length],o,c)}},CA=gr(Bu,r=>1/r),NA={kernelName:Bu,backendName:"cpu",kernelFunc:CA},AA={kernelName:vh,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{images:i}=e,{alignCorners:o,halfPixelCenters:l,size:c}=s;rn(i,"resizeBilinear");const p=hn(i.shape),[d,f]=c,[m,y,v,S]=i.shape,_=t.data.get(i.dataId).values,k=new Float32Array(ke([m,d,f,S])),I=[o&&d>1?y-1:y,o&&f>1?v-1:v],A=[o&&d>1?d-1:d,o&&f>1?f-1:f];let R=0;const P=I[0]/A[0],U=I[1]/A[1];for(let W=0;W<m;W++)for(let se=0;se<d;se++){let G;G=l?P*(se+.5)-.5:P*se;const pe=Math.max(0,Math.floor(G)),de=G-pe,ye=Math.min(y-1,Math.ceil(G)),Ee=W*p[0]+pe*p[1],Ne=W*p[0]+ye*p[1];for(let Be=0;Be<f;Be++){let je;je=l?U*(Be+.5)-.5:U*Be;const Ye=Math.max(0,Math.floor(je)),Xe=je-Ye,Je=Math.min(v-1,Math.ceil(je)),Ke=Ee+Ye*p[2],tt=Ne+Ye*p[2],mt=Ee+Je*p[2],Et=Ne+Je*p[2];for(let Tt=0;Tt<S;Tt++){const Dt=_[Ke+Tt],Ft=_[tt+Tt],jt=Dt+(_[mt+Tt]-Dt)*Xe;k[R++]=jt+(Ft+(_[Et+Tt]-Ft)*Xe-jt)*de}}}return t.makeTensorInfo([m,d,f,S],"float32",k)}},RA={kernelName:Gs,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{images:i,dy:o}=e,{alignCorners:l}=s;rn([o,i],"resizeBilinearGrad");const c=hn(i.shape),[p,d,f,m]=i.shape,[,y,v]=o.shape,S=new Float32Array(p*d*f*m),_=[l&&y>1?d-1:d,l&&v>1?f-1:f],k=[l&&y>1?y-1:y,l&&v>1?v-1:v],I=_[0]/k[0],A=_[1]/k[1],R=t.data.get(o.dataId).values;let P=0;for(let U=0;U<p;U++){const W=U*c[0];for(let se=0;se<y;se++){const G=se*I,pe=Math.floor(G),de=Math.min(Math.ceil(G),d-1),ye=W+pe*c[1],Ee=W+de*c[1],Ne=G-pe,Be=1-Ne;for(let je=0;je<v;je++){const Ye=je*A,Xe=Math.floor(Ye),Je=Math.min(Math.ceil(Ye),f-1),Ke=Ye-Xe,tt=1-Ke,mt=ye+Xe*c[2],Et=ye+Je*c[2],Tt=Ee+Xe*c[2],Dt=Ee+Je*c[2],Ft=Be*tt,jt=Be*Ke,Kt=Ne*tt,un=Ne*Ke;for(let Sn=0;Sn<m;Sn++){const Mn=R[P++];S[mt+Sn]+=Mn*Ft,S[Et+Sn]+=Mn*jt,S[Tt+Sn]+=Mn*Kt,S[Dt+Sn]+=Mn*un}}}}return t.makeTensorInfo([p,f,d,m],"float32",S)}},LA={kernelName:te,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{images:i}=e,{alignCorners:o,halfPixelCenters:l,size:c}=s;rn(i,"resizeNearestNeighbor");const p=hn(i.shape),[d,f]=c,[m,y,v,S]=i.shape,_=t.data.get(i.dataId).values,k=new Float32Array(m*d*f*S),I=[o&&d>1?y-1:y,o&&f>1?v-1:v],A=[o&&d>1?d-1:d,o&&f>1?f-1:f],R=I[0]/A[0],P=I[1]/A[1];let U=0;for(let W=0;W<m;W++){const se=W*p[0];for(let G=0;G<d;G++){const pe=l?R*(G+.5):R*G;let de=Math.min(y-1,o?Math.round(pe):Math.floor(pe));l&&(de=Math.max(0,de));const ye=se+de*p[1];for(let Ee=0;Ee<f;Ee++){const Ne=l?P*(Ee+.5):P*Ee;let Be=Math.min(v-1,o?Math.round(Ne):Math.floor(Ne));l&&(Be=Math.max(0,Be));const je=ye+Be*p[2];for(let Ye=0;Ye<S;Ye++)k[U++]=_[je+Ye]}}}return t.makeTensorInfo([m,d,f,S],i.dtype,k)}},DA={kernelName:bh,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{images:i,dy:o}=e,{alignCorners:l}=s;rn([o,i],"resizeNearestNeighborGrad");const c=hn(i.shape),p=hn(o.shape),[d,f,m,y]=i.shape,[,v,S]=o.shape,_=new Float32Array(d*f*m*y),k=t.data.get(o.dataId).values,I=[l&&v>1?f-1:f,l&&S>1?m-1:m],A=[l&&v>1?v-1:v,l&&S>1?S-1:S],R=I[0]/A[0],P=I[1]/A[1],U=1/R,W=1/P,se=2*Math.ceil(U)+2,G=2*Math.ceil(W)+2;for(let pe=0;pe<d;pe++){const de=pe*c[0];for(let ye=0;ye<f;ye++){const Ee=de+ye*c[1],Ne=Math.floor(ye*U),Be=Math.floor(Ne-se/2);for(let je=0;je<m;je++){const Ye=Ee+je*c[2],Xe=Math.floor(je*W),Je=Math.floor(Xe-G/2);for(let Ke=0;Ke<y;Ke++){let tt=0;for(let mt=0;mt<se;mt++){const Et=mt+Be;if(Et<0||Et>=v)continue;const Tt=de+Et*p[1],Dt=Et*R;if(ye===Math.min(f-1,l?Math.round(Dt):Math.floor(Dt)))for(let Ft=0;Ft<G;Ft++){const jt=Ft+Je;if(jt<0||jt>=S)continue;const Kt=Tt+jt*p[2],un=jt*P;je===Math.min(m-1,l?Math.round(un):Math.floor(un))&&(tt+=k[Kt+Ke])}}_[Ye+Ke]=tt}}}}return t.makeTensorInfo(i.shape,i.dtype,_)}},FA={kernelName:Do,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{dims:o}=s;rn(i,"reverse");const l=i.shape.length,c=Dn(o,i.shape);if(0===l)return gu({inputs:{x:i},backend:t});const p=new Pt(i.shape,i.dtype),d=t.bufferSync(i);for(let f=0;f<p.size;f++){const m=p.indexToLoc(f),y=m.slice();c.forEach(v=>y[v]=i.shape[v]-1-y[v]),p.set(d.get(...y),...m)}return t.makeTensorInfo(p.shape,p.dtype,p.values)}},$A={kernelName:ra,backendName:"cpu",kernelFunc:({inputs:r,attrs:e,backend:t})=>{const{image:s}=r,{radians:i,fillValue:o,center:l}=e,c=t,p=as(s.dtype,ke(s.shape)),[d,f,m,y]=s.shape,[v,S]=Or(l,f,m),_=Math.sin(i),k=Math.cos(i),I=c.data.get(s.dataId).values;for(let A=0;A<d;A++){const R=A*m*f*y;for(let P=0;P<f;P++){const U=P*(m*y);for(let W=0;W<m;W++){const se=W*y;for(let G=0;G<y;G++){const pe=[d,P,W,G],de=pe[2],ye=pe[1];let Ee=(de-v)*k-(ye-S)*_,Ne=(de-v)*_+(ye-S)*k;Ee=Math.round(Ee+v),Ne=Math.round(Ne+S);let Be=o;"number"!=typeof o&&(Be=3===G?255:o[G]),Ee>=0&&Ee<m&&Ne>=0&&Ne<f&&(Be=I[R+Ne*(m*y)+Ee*y+G]),p[R+U+se+G]=Be}}}}return{dataId:c.write(p,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},OA=gr(zl,r=>{const e=Math.floor(r);return r-e<.5?Math.floor(r):r-e>.5?Math.ceil(r):e%2==0?e:e+1}),PA={kernelName:zl,backendName:"cpu",kernelFunc:OA},_2=Ed(r=>1/Math.sqrt(r)),zA=Fm(Ca,_2),BA={kernelName:Ca,backendName:"cpu",kernelFunc:zA};function k2(r,e,t,s,i,o,l,c,p,d){const f=[s/i,i],m=r.values,y=e.values;if(0===s)return Pn(t,e.dtype);const v=Pn(f,e.dtype);v.values.fill(p);for(let S=0;S<o;S++){const _=[];let k=0;for(let I=0;I<l;I++){const A=m[S*l+I];_.push(A),k+=A*c[I]}if(k<0||k>=s/i)throw new Error(`Invalid indices: ${_} does not index into ${t}`);for(let I=0;I<i;I++)d?v.values[k*i+I]+=y[S*i+I]:v.values[k*i+I]=0===e.rank?y[0]:y[S*i+I]}return v}const UA={kernelName:Fo,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{indices:i,updates:o}=e,{shape:l}=s,{sliceRank:c,numUpdates:p,sliceSize:d,strides:f,outputSize:m}=Bh(0,i,l),y=k2(t.bufferSync(i),t.bufferSync(o),l,m,d,p,c,f,0,!0);return t.makeTensorInfo(l,y.dtype,y.values)}},VA={kernelName:lo,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t}=r,{condition:s,t:i,e:o}=e;rn([s,i,o],"select");const l=s.shape.length,c=t.data.get(s.dataId).values,p=t.data.get(i.dataId).values,d=t.data.get(o.dataId).values,f=ui(i.dtype,o.dtype),m=hs(ke(i.shape),f);let y=0;const v=0===l||l>1||1===i.shape.length?1:ke(i.shape.slice(1));for(let S=0;S<c.length;S++)for(let _=0;_<v;_++)m[y++]=1===c[S]?p[S]:d[S];return t.makeTensorInfo(i.shape,f,m)}},WA=bm,GA=jp,HA=gr(Pi,r=>r>=0?GA*r:WA*(Math.exp(r)-1)),jA={kernelName:Pi,backendName:"cpu",kernelFunc:HA},qA=gr($o,r=>r<0?-1:r>0?1:0),XA={kernelName:$o,backendName:"cpu",kernelFunc:qA},KA=gr(ea,r=>Math.sin(r)),YA={kernelName:ea,backendName:"cpu",kernelFunc:KA},ZA=gr(uo,r=>Math.sinh(r)),JA={kernelName:uo,backendName:"cpu",kernelFunc:ZA},E2=Math.log(1.1920928955078125e-7)+2,QA=gr(ta,r=>{const e=r>-E2,t=r<E2,s=Math.exp(r);let i;return i=t?s:e?r:Math.log(1+s),i}),eR={kernelName:ta,backendName:"cpu",kernelFunc:QA},tR={kernelName:wh,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{blockShape:o,paddings:l}=s;rn([i],"spaceToBatchND");const c=ke(o),p=[[0,0]];p.push(...l);for(let k=1+o.length;k<i.shape.length;++k)p.push([0,0]);const d=S2.kernelFunc({inputs:{x:i},backend:t,attrs:{paddings:p,constantValue:0}}),f=Hp(d.shape,o,c,!1),m=Cr(f.length,o.length,!1),y=du(d.shape,o,c,!1),v=Pr({inputs:{x:d},backend:t,attrs:{shape:f}}),S=Ka({inputs:{x:v},backend:t,attrs:{perm:m}}),_=Pr({inputs:{x:S},backend:t,attrs:{shape:y}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(S),_}};function I2(r,e,t,s,i,o,l){const c=e[0],p=o[0],d=new Array(p),f=new Array(c),m=e[1];if(0===p){if(0!==c)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${c}`);return[Zn(t,0),[0,m],Zn(i,0),d,f]}let y=!0,v=0;const S=new Array(p).fill(0);for(let k=0;k<c;++k){const I=r[k*m];if(I<0)throw new Error(`indices(${k}, 0) is invalid: ${I} < 0`);if(I>=p)throw new Error(`indices(${k}, 0) is invalid: ${I} >= ${p}`);++S[I],y=y&&I>=v,v=I}let _=!0;for(let k=0;k<p;++k){const I=0===S[k];d[k]=I,_=_&&!I,S[k]=Math.max(S[k],1),k>0&&(S[k]+=S[k-1])}if(_&&y){const k=r,I=s;for(let A=0;A<c;++A)f[A]=A;return[k,[c,m],I,d,f]}{const k=S[p-1],I=Zn(t,k*m),A=Zn(i,k),R=new Array(p).fill(0);for(let P=0;P<c;++P){const U=r[P*m],se=(0===U?0:S[U-1])+R[U];R[U]++;for(let G=0;G<m;++G)I[se*m+G]=r[P*m+G];A[se]=s[P],f[P]=se}for(let P=0;P<p;++P)if(0===R[P]){const U=0===P?0:S[P-1];I[U*m+0]=P;for(let W=1;W<m;++W)I[U*m+W]=0;A[U]=l}return[I,[k,m],A,d,f]}}const nR={kernelName:Na,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t}=r,{indices:s,values:i,denseShape:o,defaultValue:l}=e;if(1!==o.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${o.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==i.shape.length)throw new Error(`Values must be a vector, saw:\n        ${i.shape}`);if(0!==l.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${l.shape}`);const c=t.data.get(s.dataId).values,p=t.data.get(i.dataId).values,d=t.data.get(o.dataId).values,f=t.data.get(l.dataId).values[0],[m,y,v,S,_]=I2(c,s.shape,s.dtype,p,i.dtype,d,f);return[t.makeTensorInfo(y,s.dtype,m),t.makeTensorInfo([y[0]],i.dtype,v),t.makeTensorInfo([S.length],"bool",new Uint8Array(S.map(k=>Number(k)))),t.makeTensorInfo([_.length],s.dtype,new Int32Array(_))]}};function C2(r,e,t,s,i){const o=ke(s),l=e[0],c=i.length,p=[];let d=1,f=-1;for(let k=0;k<c;++k){const I=i[k];if(-1===I){if(-1!==f)throw new Error(`only one output dimension may be -1, not both ${f} and ${k}`);f=k,p.push(1)}else{if(I<0)throw new Error(`size ${k} must be non-negative, not ${I}`);d*=I,p.push(I)}}if(-1!==f){if(d<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const k=Math.trunc(o/d);if(d*k!==o)throw new Error(`Input to reshape is a SparseTensor with ${o}\n          dense values, but the requested shape requires a multiple of ${d}. inputShape=${s} outputShape= ${p}`);p[f]=k}const m=ke(p);if(m!==o)throw new Error(`Input to reshape is a tensor with ${o} dense values, but the requested shape has ${m}. inputShape=${s} outputShape=${p}`);const y=s.length,v=[];if(y>0){v[y-1]=1;for(let k=y-2;k>=0;--k)v[k]=v[k+1]*s[k+1]}const S=[];if(c>0){S[c-1]=1;for(let k=c-2;k>=0;--k)S[k]=S[k+1]*p[k+1]}const _=Zn(t,l*c);for(let k=0;k<l;++k){let I=0;for(let A=0;A<y;++A)I+=r[k*y+A]*v[A];for(let A=0;A<c;++A)_[k*c+A]=Math.trunc(I/S[A]),I%=S[A]}return[_,[l,c],p]}const rR={kernelName:na,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t}=r,{inputIndices:s,inputShape:i,newShape:o}=e;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==i.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${i.shape}`);if(1!==o.shape.length)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const l=Array.from(t.data.get(i.dataId).values),c=t.data.get(s.dataId).values,p=Array.from(t.data.get(o.dataId).values),[d,f,m]=C2(c,s.shape,s.dtype,l,p);return[t.makeTensorInfo(f,s.dtype,d),t.makeTensorInfo([m.length],o.dtype,new Int32Array(m))]}};function Sw(r,e,t,s,i,o=!1,l=0){const c=s.length;if(c!==i.length)throw new Error("segmentIds and indices should have same size.");const p=[e[0],r.length/e[0]],d=p[1],f=c>0?i[c-1]+1:0;if(f<0)throw new Error("segment ids must be >= 0");const m=e.slice();m[0]=f;const y=Zn(t,m.reduce((I,A)=>I*A,1));if(0===c)return f>0&&y.fill(l),[y,m];if(f<=0)throw new Error("segment ids must be >= 0");let v=0,S=1,_=0,k=i[v];for(;;){let I=0;if(S<c){if(I=i[S],k===I){++S;continue}if(k>=I)throw new Error("segment ids are not increasing")}if(k<0||k>=f)throw new Error(`Segment id ${k} out of range [0, ${f}), possibly because segmentIds input is not sorted.`);k>_&&y.fill(l,_*d,k*d);for(let A=v;A<S;++A){const R=s[A];if(R<0||R>=p[0])throw new Error(`Bad: indices[${A}] == ${s[A]} out of range [0, ${p[0]})`);for(let P=0;P<d;P++)y[k*d+P]+=r[R*d+P]}if(o)for(let A=0;A<d;A++)y[k*d+A]/=S-v;if(v=S,++S,_=k+1,k=I,S>c)break}return _<f&&y.fill(l,_*d,f*d),[y,m]}const sR={kernelName:Sh,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t}=r,{data:s,indices:i,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${i.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${o.shape}`);const l=t.data.get(s.dataId).values,c=t.data.get(i.dataId).values,p=t.data.get(o.dataId).values,[d,f]=Sw(l,s.shape,s.dtype,c,p,!0);return t.makeTensorInfo(f,s.dtype,d)}},iR={kernelName:Wu,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t}=r,{data:s,indices:i,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${i.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${o.shape}`);const l=t.data.get(s.dataId).values,c=t.data.get(i.dataId).values,p=t.data.get(o.dataId).values,[d,f]=Sw(l,s.shape,s.dtype,c,p);return t.makeTensorInfo(f,s.dtype,d)}},aR={kernelName:Aa,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{sparseIndices:i,sparseValues:o,defaultValue:l}=e,{outputShape:c}=s,{sliceRank:p,numUpdates:d,sliceSize:f,strides:m,outputSize:y}=Bh(0,i,c),v=k2(t.bufferSync(i),t.bufferSync(o),c,y,f,d,p,m,t.data.get(l.dataId).values[0],!1);return t.makeTensorInfo(c,v.dtype,v.values)}},oR={kernelName:Uu,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{numOrSizeSplits:o,axis:l}=s,c=Dn(l,i.shape)[0],p=fy(i,o,c),d=new Array(i.shape.length).fill(0),f=i.shape.slice();return p.map(m=>{const y=[...f];y[c]=m;const v=nf({inputs:{x:i},backend:t,attrs:{begin:d,size:y}});return d[c]+=m,v})}},lR=Ed(r=>Math.sqrt(r)),uR=gr(Bl,r=>Math.sqrt(r)),cR={kernelName:Bl,backendName:"cpu",kernelFunc:uR},hR={kernelName:Gu,backendName:"cpu",kernelFunc:({inputs:r,backend:e})=>{const{x:t}=r,s=e;rn(t,"square");const i=s.data.get(t.dataId).values,o=new Float32Array(i.length);for(let l=0;l<i.length;++l){const c=i[l];o[l]=c*c}return{dataId:s.write(o,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}},N2=Ss((r,e)=>{const t=r-e;return t*t}),dR=Us(Ul,N2),pR={kernelName:Ul,backendName:"cpu",kernelFunc:dR},fR=gr(qu,(r,e)=>{const t=e;return isNaN(r)?NaN:r>0?1:t.alpha}),mR={kernelName:qu,backendName:"cpu",kernelFunc:fR};function A2(r,e,t,s){const i=Pn(r,e.dtype);for(let o=0;o<i.size;o++){const l=i.indexToLoc(o),c=new Array(l.length);for(let p=0;p<c.length;p++)c[p]=l[p]*t[p]+s[p];i.set(e.get(...c),...l)}return i}const gR={kernelName:Th,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{begin:o,end:l,strides:c,beginMask:p,endMask:d,ellipsisMask:f,newAxisMask:m,shrinkAxisMask:y}=s;rn(i,"stridedSlice");const{nonStrided:v,$begin:S,$strides:_,size:k,newShape:I,outShape:A}=Sg(i.shape,o,l,c,p,d,f,m,y),R=Pr({inputs:{x:i},backend:t,attrs:{shape:I}});let P;if(v){const W=nf({inputs:{x:R},backend:t,attrs:{begin:S,size:k}});P=Pr({inputs:{x:W},backend:t,attrs:{shape:A}}),t.disposeIntermediateTensorInfo(W)}else if(A.some(W=>0===W))P=t.makeTensorInfo(A,i.dtype,[]);else{const W=A2(A,t.bufferSync(R),_,S);P=t.makeTensorInfo(W.shape,W.dtype,W.values)}const U=Pr({inputs:{x:P},backend:t,attrs:{shape:A}});return t.disposeIntermediateTensorInfo(R),t.disposeIntermediateTensorInfo(P),U}};class yR{constructor(e,t,s,i,o,l){this.separator=Bi(e),this.nGramWidths=t,this.leftPad=Bi(s),this.rightPad=Bi(i),this.padWidth=o,this.preserveShort=l}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,i,o,l){for(let c=0;c<o;++c){const p=this.getPadWidth(l),d=Math.max(0,p-c),f=Math.max(0,p-(o-(c+1))),m=l-(d+f),y=t+(d>0?0:c-p);let v=0;v+=d*this.leftPad.length;for(let I=0;I<m;++I)v+=e[y+I].length;v+=f*this.rightPad.length,v+=(d+f+m-1)*this.separator.length,s[i+c]=new Uint8Array(v);const S=s[i+c];let _=0;const k=I=>I.forEach(A=>S[_++]=A);for(let I=0;I<d;++I)k(this.leftPad),k(this.separator);for(let I=0;I<m-1;++I)k(e[y+I]),k(this.separator);if(m>0){k(e[y+m-1]);for(let I=0;I<f;++I)k(this.separator),k(this.rightPad)}else{for(let I=0;I<f-1;++I)k(this.rightPad),k(this.separator);k(this.rightPad)}}}compute(e,t){const s=e.length,i=t.length;if(i>0){let p=t[0];if(0!==p)throw new Error(`First split value must be 0, got ${p}`);for(let d=1;d<i;++d){let f=t[d]>=p;if(f=f&&t[d]<=s,!f)throw new Error(`Invalid split value ${t[d]}, must be in [${p}, ${s}]`);p=t[d]}if(p!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${p}`)}const o=i-1,l=Zn("int32",i);if(0===s||0===i){const p=new Array(s);for(let d=0;d<=o;++d)l[d]=0;return[p,l]}l[0]=0;for(let p=1;p<=o;++p){const d=t[p]-t[p-1];let f=0;this.nGramWidths.forEach(m=>{f+=this.getNumNGrams(d,m)}),this.preserveShort&&d>0&&0===f&&(f=1),l[p]=l[p-1]+f}const c=new Array(l[o]);for(let p=0;p<o;++p){const d=t[p];let f=l[p];if(this.nGramWidths.forEach(m=>{const v=this.getNumNGrams(t[p+1]-t[p],m);this.createNGrams(e,d,c,f,v,m),f+=v}),this.preserveShort&&f===l[p]){const m=t[p+1]-t[p];if(0===m)continue;this.createNGrams(e,d,c,f,1,m+2*this.padWidth)}}return[c,l]}}function R2(r,e,t,s,i,o,l,c){return new yR(t,s,i,o,l,c).compute(r,e)}const xR={kernelName:Ra,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{separator:i,nGramWidths:o,leftPad:l,rightPad:c,padWidth:p,preserveShortSequences:d}=s,{data:f,dataSplits:m}=e,y=t.data.get(f.dataId).values,v=t.data.get(m.dataId).values,[S,_]=R2(y,v,i,o,l,c,p,d);return[t.makeTensorInfo([S.length],"string",S),t.makeTensorInfo(m.shape,"int32",_)]}};function bR(r,e,t,s){if(!r.length)return;if(0===e.length){for(let o=0;o<r.length;++o)s.push(r.subarray(o,o+1));return}if(1===e.length){const o=e[0];let l=r.indexOf(o);for(;-1!==l;){const c=r.subarray(0,l);t&&0===c.length||s.push(c),l=(r=r.subarray(l+1)).indexOf(o)}return void(t&&0===r.length||s.push(r))}let i=0;for(let o=0;o<r.length+1;o++)if(o===r.length||-1!==e.indexOf(r[o])){const l=r.subarray(i,o);t&&0===l.length||s.push(l),i=o+1}}function L2(r,e,t){const s=r.length,i=[];let o=0,l=0;const c=new Array(s);for(let y=0;y<s;++y){const v=i.length;bR(r[y],e,t,i);const S=i.length-v;c[y]=S,o+=S,l=Math.max(l,S)}const p=Zn("int32",2*o),d=new Array(o),f=[s,l];let m=0;for(let y=0;y<s;++y)for(let v=0;v<c[y];++v)p[2*m]=y,p[2*m+1]=v,d[m]=i[m],++m;return[p,d,f]}const vR={kernelName:sn,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{skipEmpty:i}=s,{input:o,delimiter:l}=e;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(0!==l.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${l.shape}`);const c=t.data.get(o.dataId).values,p=t.data.get(l.dataId).values[0],[d,f,m]=L2(c,p,i),y=f.length;return[t.makeTensorInfo([y,2],"int32",d),t.makeTensorInfo([y],"string",f),t.makeTensorInfo([2],"int32",new Int32Array(m))]}};function D2(r,e){const t=Zn("int32",r.length);for(let s=0;s<r.length;++s)t[s]=Tf(r[s]).modulo(e).getLowBitsUnsigned();return t}const wR={kernelName:Po,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{numBuckets:i}=s,{input:o}=e;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const l=D2(t.data.get(o.dataId).values,i);return t.makeTensorInfo(o.shape,"int32",l)}},SR=gr(Mh,r=>Math.tan(r)),TR={kernelName:Mh,backendName:"cpu",kernelFunc:SR},MR=gr(_h,r=>Math.tanh(r));function F2(r,e){const t=new Array(r.rank);for(let i=0;i<t.length;i++)t[i]=r.shape[i]*e[i];const s=Pn(t,r.dtype);for(let i=0;i<s.values.length;++i){const o=s.indexToLoc(i),l=new Array(r.rank);for(let p=0;p<l.length;p++)l[p]=o[p]%r.shape[p];const c=r.locToIndex(l);s.values[i]=r.values[c]}return s}const $y=(r,e)=>{const t=e.value-r.value;return 0===t?r.index-e.index:t};function $2(r,e,t=0,s=r.length-1){for(;s>t;){if(s-t>600){const c=s-t+1,p=e-t+1,d=Math.log(c),f=.5*Math.exp(2*d/3),m=.5*Math.sqrt(d*f*(c-f)/c)*Math.sign(p-c/2);$2(r,e,Math.max(t,Math.floor(e-p*f/c+m)),Math.min(s,Math.floor(e+(c-p)*f/c+m)))}const i=r[e];let o=t,l=s;for(_e(r,t,e),$y(r[s],i)>0&&_e(r,t,s);o<l;){for(_e(r,o,l),o++,l--;$y(r[o],i)<0;)o+=1;for(;$y(r[l],i)>0;)l-=1}0===$y(r[t],i)?_e(r,t,l):(l+=1,_e(r,l,s)),l<=e&&(t=l+1),e<=l&&(s=l-1)}}function O2(r,e,t,s,i){const o=e[e.length-1],[l,c]=[r.length/o,o],p=as(t,l*s),d=as("int32",l*s);for(let m=0;m<l;m++){const y=m*c,v=r.subarray(y,y+c);let S=new Array(v.length);v.forEach((A,R)=>S[R]={value:A,index:R}),s<S.length&&($2(S,s),S=S.slice(0,s)),i&&S.sort($y);const _=m*s,k=p.subarray(_,_+s),I=d.subarray(_,_+s);for(let A=0;A<s;A++)k[A]=S[A].value,I[A]=S[A].index}const f=e.slice();return f[f.length-1]=s,[Pn(f,t,p),Pn(f,"int32",d)]}function P2(r,e,t){switch(t){case"reflect":return function(s,i){let o=s;if(o<0)if(i<=1)o=0;else{const l=2*i;o<l&&(o=l*Math.trunc(-o/l)+o),o=o<-i?o+l:-o-1}else if(o>i-1)if(i<=1)o=0;else{const l=2*i;o-=l*Math.trunc(o/l),o>=i&&(o=l-o-1)}return Ta(0,o,i-1)}(r,e);case"wrap":return function(s,i){let o=s;return o<0?i<=1?o=0:o+=i*(Math.trunc(-o/(i-1))+1):o>i-1&&(i<=1?o=0:o-=i*Math.trunc(o/(i-1))),Ta(0,o,i-1)}(r,e);case"nearest":return Ta(0,r,e-1);default:return r}}function Oy(r,e,t,s,i,o,l,c,p,d,f){return 0<=c&&c<e&&0<=p&&p<t?r[l*s+c*i+p*o+d]:f}function _R(r,e,t,s,i,o,l,c,p,d,f){return Oy(r,e,t,s,i,o,l,Math.round(c),Math.round(p),d,f)}function kR(r,e,t,s,i,o,l,c,p,d,f){const m=Math.floor(c),y=Math.floor(p),v=m+1,S=y+1;return(v-c)*((S-p)*Oy(r,e,t,s,i,o,l,m,y,d,f)+(p-y)*Oy(r,e,t,s,i,o,l,m,S,d,f))+(c-m)*((S-p)*Oy(r,e,t,s,i,o,l,v,y,d,f)+(p-y)*Oy(r,e,t,s,i,o,l,v,S,d,f))}function z2(r,e,t,s){const i=Dn(e,t)[0],o=[1,t[0],1];for(let S=0;S<i;S++)o[0]*=t[S];o[1]=t[i];for(let S=i+1;S<t.length;S++)o[2]*=t[S];const l={},c=new Int32Array(t[i]),p=new Pt(o,s,r),d=[],f=1===o[0]&&1===o[2];for(let S=0;S<t[i];S++){let _;if(f)_=r[S].toString();else{const k=[];for(let I=0;I<o[0];I++)for(let A=0;A<o[2];A++)k.push(p.get(I,S,A));_=k.join(",")}if(void 0!==l[_])c[S]=l[_];else{const k=Object.keys(l).length;l[_]=k,c[S]=k,d.push(S)}}const m=o.slice();m[1]=Object.keys(l).length;const y=new Pt(m,s);d.forEach((S,_)=>{for(let k=0;k<o[0];k++)for(let I=0;I<o[2];I++)y.set(p.get(k,S,I),k,_,I)});const v=t.slice();return v[i]=m[1],{outputValues:y.values,outputShape:v,indices:c}}const ER=[AI,RI,DI,$I,II,OI,zI,BI,UI,VI,GI,jI,XI,ZI,QI,eC,tC,nC,rC,NI,sC,aC,oC,lC,kI,cC,dC,MI,pC,mC,yC,xC,gC,vC,wC,bC,TC,_C,kC,EC,IC,CC,NC,AC,RC,LC,DC,$C,FC,xw,BC,mI,UC,VC,YC,ZC,JC,eN,iN,aN,oN,uN,dN,pN,fN,mN,gN,xN,vN,gI,wN,fC,TN,_N,EN,yI,CN,AN,RN,DN,$N,zN,UN,GN,HN,jN,KN,YN,ZN,JN,QN,eA,qN,tA,nA,sA,iA,lA,cA,PC,hA,pA,mA,yA,bA,vA,SA,TA,S2,kA,bI,EA,IA,_I,NA,vI,wI,CI,AA,RA,LA,DA,FA,$A,PA,BA,UA,VA,jA,TI,XA,YA,JA,iC,uA,eR,tR,nR,rR,sR,iR,aR,oR,cR,hR,pR,mR,gR,xR,vR,wR,rN,zC,TR,{kernelName:_h,backendName:"cpu",kernelFunc:MR},{kernelName:zi,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{reps:o}=s;rn(i,"tile");const l=F2(t.bufferSync(i),o);return t.makeTensorInfo(l.shape,l.dtype,l.values)}},{kernelName:Hu,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{k:o,sorted:l}=s;rn(i,"topk");const c=t.data.get(i.dataId).values,[p,d]=O2(c,i.shape,i.dtype,o,l);return[t.makeTensorInfo(p.shape,p.dtype,p.values),t.makeTensorInfo(d.shape,d.dtype,d.values)]}},PI,{kernelName:js,backendName:"cpu",kernelFunc:function(r){const{inputs:e,attrs:t,backend:s}=r,{image:i,transforms:o}=e,{interpolation:l,fillMode:c,fillValue:p,outputShape:d}=t,[f,m,y,v]=i.shape,[S,_]=null!=d?d:[m,y],k=[f,S,_,v],I=hn(i.shape),A=I[0],R=I[1],P=I[2],U=as(i.dtype,ke(k));U.fill(p);const W=s.data.get(i.dataId).values,se=s.data.get(o.dataId).values;for(let G=0;G<f;++G){const pe=1===o.shape[0]?se:se.subarray(8*G,8*G+8);for(let de=0;de<S;++de)for(let ye=0;ye<_;++ye)for(let Ee=0;Ee<v;++Ee){let Ne;const Be=pe[6]*ye+pe[7]*de+1;if(0===Be)continue;const Ye=(pe[3]*ye+pe[4]*de+pe[5])/Be,Xe=P2((pe[0]*ye+pe[1]*de+pe[2])/Be,y,c),Je=P2(Ye,m,c);switch(l){case"nearest":Ne=_R(W,m,y,A,R,P,G,Je,Xe,Ee,p);break;case"bilinear":Ne=kR(W,m,y,A,R,P,G,Je,Xe,Ee,p);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${l}`)}U[G*A+de*R+ye*P+Ee]=Ne}return s.makeTensorInfo(k,i.dtype,U)}return{dataId:s.write(U,k,i.dtype),shape:i.shape,dtype:i.dtype}}},{kernelName:sp,backendName:"cpu",kernelFunc:function(r){const{inputs:e,attrs:t,backend:s}=r,{axis:i}=t,{x:o}=e;rn(o,"unique");const l=s.data.get(o.dataId).values,{outputValues:c,outputShape:p,indices:d}=z2(l,i,o.shape,o.dtype);return[s.makeTensorInfo(p,o.dtype,c),s.makeTensorInfo([d.length],"int32",d)]}},{kernelName:La,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{value:i}=e;let{axis:o}=s;o<0&&(o+=i.shape.length);const l=i.shape.length,c=i.shape[o],p=new Array(l-1);let d=0;for(let v=0;v<l;v++)v!==o&&(p[d++]=i.shape[v]);const f=new Array(l).fill(0),m=i.shape.slice();m[o]=1;const y=new Array(c);for(let v=0;v<y.length;v++){f[o]=v;const S=nf({inputs:{x:i},backend:t,attrs:{begin:f,size:m}});y[v]=Pr({inputs:{x:S},backend:t,attrs:{shape:p}}),t.disposeIntermediateTensorInfo(S)}return y}},{kernelName:ju,backendName:"cpu",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,segmentIds:o}=e,{numSegments:l}=s;rn(i,"unsortedSegmentSum");const c=[],p=[],d=i.shape.length-o.shape.length;let f=o;for(let y=0;y<d;++y){const v=ib({inputs:{input:f},backend:t,attrs:{dim:y+1}});f=v,p.push(v)}for(let y=0;y<l;++y){const v=Oa(y,"int32"),S=t.makeTensorInfo([],"int32",v),_=QT({inputs:{a:S,b:f},backend:t}),k=Id({inputs:{x:_},backend:t,attrs:{dtype:"float32"}}),I=sb({inputs:{a:k,b:i},backend:t}),A=Fy({inputs:{x:I},backend:t,attrs:{axis:0,keepDims:!1}});c.push(A),p.push(S),p.push(_),p.push(k),p.push(I),p.push(A)}const m=w2({inputs:c,backend:t,attrs:{axis:0}});return p.forEach(y=>t.disposeIntermediateTensorInfo(y)),m}},wA];for(const r of ER)lp(r);const rf={},Tw={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function yu(r){if(!(r in rf)){const t=function(s){if(1!==s&&2!==s)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const i=function(o){if("undefined"!=typeof OffscreenCanvas&&2===o)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(s);return i.addEventListener("webglcontextlost",o=>{o.preventDefault(),delete rf[s]},!1),1===s?i.getContext("webgl",Tw)||i.getContext("experimental-webgl",Tw):i.getContext("webgl2",Tw)}(r);if(null===t)return console.log("Could not get context for WebGL version",r),null;rf[r]=t}const e=rf[r];return e.isContextLost()?(delete rf[r],yu(r)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),rf[r])}var Py,Ya,ri;function zy(r,e){return[e,r]}function ob(r){const e=ke(r);return yn(Math.ceil(e/4))}function Pm(r,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(r/2))]}function Mw(r,e){const t=r;let s,i,o,l,c,p,d,f,m,y;return 2===nt().getNumber("WEBGL_VERSION")?(s=t.R32F,i=t.R16F,o=t.RGBA16F,l=t.RGBA32F,c=t.RED,d=4,f=1,m=t.HALF_FLOAT,y=t.FLOAT):(s=r.RGBA,i=r.RGBA,o=r.RGBA,l=t.RGBA,c=r.RGBA,d=4,f=4,m=null!=e?e.HALF_FLOAT_OES:null,y=r.FLOAT),p=r.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:i,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:l,textureFormatFloat:c,downloadTextureFormat:p,downloadUnpackNumChannels:d,defaultNumChannels:f,textureTypeHalfFloat:m,textureTypeFloat:y}}function cn(r,e){const t=e();return nt().getBool("DEBUG")&&function(s){const i=s.getError();if(i!==s.NO_ERROR)throw new Error("WebGL Error: "+function(o,l){switch(l){case o.NO_ERROR:return"NO_ERROR";case o.INVALID_ENUM:return"INVALID_ENUM";case o.INVALID_VALUE:return"INVALID_VALUE";case o.INVALID_OPERATION:return"INVALID_OPERATION";case o.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case o.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case o.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${l}`}}(s,i))}(r),t}function IR(r){return!!(nt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===r||5.96e-8<Math.abs(r)&&Math.abs(r)<65504)}function lb(r,e){return Dc(r,()=>r.getExtension(e),'Extension "'+e+'" not supported on this browser.')}(function(r){r[r.DENSE=0]="DENSE",r[r.SHARED_BATCH=1]="SHARED_BATCH"})(Py||(Py={})),function(r){r[r.RENDER=0]="RENDER",r[r.UPLOAD=1]="UPLOAD",r[r.PIXELS=2]="PIXELS",r[r.DOWNLOAD=3]="DOWNLOAD"}(Ya||(Ya={})),function(r){r[r.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",r[r.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",r[r.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",r[r.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",r[r.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(ri||(ri={}));const CR=/ERROR: [0-9]+:([0-9]+):/g;function _w(r,e){if(cn(r,()=>r.validateProgram(e)),!1===r.getProgramParameter(e,r.VALIDATE_STATUS))throw console.log(r.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function B2(r,e,t,s,i,o,l){const c=r.getAttribLocation(e,t);return-1!==c&&(cn(r,()=>r.bindBuffer(r.ARRAY_BUFFER,s)),cn(r,()=>r.vertexAttribPointer(c,i,r.FLOAT,!1,o,l)),cn(r,()=>r.enableVertexAttribArray(c)),!0)}function kw(r,e,t){cn(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,t)),cn(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,e,0))}function U2(r,e){cn(r,()=>r.bindFramebuffer(r.FRAMEBUFFER,e)),cn(r,()=>r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,null,0))}function ub(r){const e=r.checkFramebufferStatus(r.FRAMEBUFFER);if(e!==r.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,s){switch(s){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${s}`}}(r,e))}function Dc(r,e,t){const s=cn(r,()=>e());if(null==s)throw new Error(t);return s}function zm(r,e=2){return ke(r.slice(0,r.length-e))}function Bm(r){if(0===r.length)throw Error("Cannot get rows and columns of an empty shape array.");return[r.length>1?r[r.length-2]:1,r[r.length-1]]}function Ew(r){let e=[1,1,1];return 0===r.length||1===r.length&&1===r[0]||(e=[zm(r),...Bm(r)]),e}function cb(r){return r%2==0}function hb(r,e){if(He(r=r.slice(-2),e=e.slice(-2))||!r.length||!e.length||0===r[0]||0===r[1]||0===e[0]||0===e[1])return!0;if(r.length!==e.length){const t=r.slice(-1)[0],s=e.slice(-1)[0];if(t===s||cb(t)&&cb(s)&&(1===r[0]||1===e[0]))return!0}return r[1]===e[1]&&cb(r[0])&&cb(e[0])}let Iw,Cw;function Mo(r,e){return null!=r.getExtension(e)}function V2(r){try{if(null!=yu(r))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function Nw(r){const e=Mw(r),t=r.createTexture();r.bindTexture(r.TEXTURE_2D,t),r.texImage2D(r.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const s=r.createFramebuffer();r.bindFramebuffer(r.FRAMEBUFFER,s),r.framebufferTexture2D(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,t,0);const i=r.checkFramebufferStatus(r.FRAMEBUFFER)===r.FRAMEBUFFER_COMPLETE;return r.bindTexture(r.TEXTURE_2D,null),r.bindFramebuffer(r.FRAMEBUFFER,null),r.deleteTexture(t),r.deleteFramebuffer(s),i}function By(r,e){Array.isArray(r)||(r=[r]),r.forEach(t=>{null!=t&&F("complex64"!==t.dtype,()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}const xn=nt();function Fi(){let r,e,t,s,i,o,l,c,p,d;return 2===nt().getNumber("WEBGL_VERSION")?(r="#version 300 es",e="in",t="out",s="in",i="texture",o="outputColor",l="out vec4 outputColor;",c="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",p="",d="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(r="",e="attribute",t="varying",s="varying",i="texture2D",o="gl_FragColor",l="",c="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",p="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",d="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:r,attribute:e,varyingVs:t,varyingFs:s,texture2D:i,output:o,defineOutput:l,defineSpecialNaN:c,defineSpecialInf:p,defineRound:d}}function sf(r,e,t="index"){const s=hn(e);return s.map((i,o)=>`int ${r[o]} = ${t} / ${i}; ${o===s.length-1?`int ${r[o+1]} = ${t} - ${r[o]} * ${i}`:`index -= ${r[o]} * ${i}`};`).join("")}function db(r,e,t="index"){const s=hn(e);return s.map((i,o)=>`int ${r[o]} = ${t} / outShapeStrides[${o}]; ${o===s.length-1?`int ${r[o+1]} = ${t} - ${r[o]} * outShapeStrides[${o}]`:`index -= ${r[o]} * outShapeStrides[${o}]`};`).join("")}function Aw(r){const e=hn(r).map(t=>t.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}xn.registerFlag("HAS_WEBGL",()=>xn.getNumber("WEBGL_VERSION")>0),xn.registerFlag("WEBGL_VERSION",()=>V2(2)?2:V2(1)?1:0),xn.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),xn.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===xn.get("WEBGL_VERSION")),xn.registerFlag("WEBGL_CPU_FORWARD",()=>!0),xn.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),xn.registerFlag("WEBGL_PACK",()=>xn.getBool("HAS_WEBGL")),xn.registerFlag("WEBGL_PACK_NORMALIZATION",()=>xn.getBool("WEBGL_PACK")),xn.registerFlag("WEBGL_PACK_CLIP",()=>xn.getBool("WEBGL_PACK")),xn.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>xn.getBool("WEBGL_PACK")),xn.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>xn.getBool("WEBGL_PACK")),xn.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>xn.getBool("WEBGL_PACK")),xn.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>xn.getBool("WEBGL_PACK")),xn.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>xn.getBool("WEBGL_PACK")),xn.registerFlag("WEBGL_PACK_REDUCE",()=>xn.getBool("WEBGL_PACK")),xn.registerFlag("WEBGL_LAZILY_UNPACK",()=>xn.getBool("WEBGL_PACK")),xn.registerFlag("WEBGL_CONV_IM2COL",()=>xn.getBool("WEBGL_PACK")),xn.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(r){if(null==Iw){const e=yu(r);Iw=e.getParameter(e.MAX_TEXTURE_SIZE)}return Iw}(xn.getNumber("WEBGL_VERSION"))),xn.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(r){if(null==Cw){const e=yu(r);Cw=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Cw)}(xn.getNumber("WEBGL_VERSION"))),xn.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const r=xn.getNumber("WEBGL_VERSION");return 0===r?0:function(e){if(0===e)return 0;let t;const s=yu(e);return t=Mo(s,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Mo(s,"EXT_disjoint_timer_query")?1:0,t}(r)}),xn.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>xn.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Rh()),xn.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(r){if(0===r)return!1;const e=yu(r);if(1===r){if(!Mo(e,"OES_texture_float"))return!1}else if(!Mo(e,"EXT_color_buffer_float"))return!1;return Nw(e)}(xn.getNumber("WEBGL_VERSION"))),xn.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!xn.getBool("WEBGL_FORCE_F16_TEXTURES")&&xn.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),xn.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function(r){if(0===r)return!1;const e=yu(r);if(1!==r){if(Mo(e,"EXT_color_buffer_float"))return Nw(e);const t="EXT_color_buffer_half_float";if(Mo(e,t)){const s=e.getExtension(t);return function(i,o){const l=Mw(i,o),c=i.createTexture();i.bindTexture(i.TEXTURE_2D,c),i.texImage2D(i.TEXTURE_2D,0,l.internalFormatHalfFloat,1,1,0,l.textureFormatFloat,l.textureTypeHalfFloat,null);const p=i.createFramebuffer();i.bindFramebuffer(i.FRAMEBUFFER,p),i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.TEXTURE_2D,c,0);const d=i.checkFramebufferStatus(i.FRAMEBUFFER)===i.FRAMEBUFFER_COMPLETE;return i.bindTexture(i.TEXTURE_2D,null),i.bindFramebuffer(i.FRAMEBUFFER,null),i.deleteTexture(c),i.deleteFramebuffer(p),d}(e,s)}return!1}return!!Mo(e,"OES_texture_float")&&!!Mo(e,"WEBGL_color_buffer_float")&&Nw(e)}(xn.getNumber("WEBGL_VERSION"))),xn.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(r=xn.getNumber("WEBGL_VERSION"))&&null!=yu(r).fenceSync;var r}),xn.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>xn.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),xn.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,r=>{if(r<0&&-1!==r)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${r}.`)}),xn.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Rh()&&xn.getBool("IS_CHROME")?1:-1,r=>{if(r<0&&-1!==r)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${r}.`)}),xn.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),xn.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),xn.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),xn.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);const W2="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:G2}=Pe;function AR(r,e,t){const s=[];if(r.forEach(y=>{const v=ke(y.shapeInfo.logicalShape);if(y.shapeInfo.isUniform?s.push(`uniform float ${y.name}${v>1?`[${v}]`:""};`):(s.push(`uniform sampler2D ${y.name};`),s.push(`uniform int offset${y.name};`)),t.enableShapeUniforms){const{uniformShape:S}=Rw(t.packedInputs,y.shapeInfo.logicalShape,y.shapeInfo.texShape);switch(S.length){case 1:s.push(`uniform int ${y.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${y.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${y.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${y.name}Shape;`)}s.push(`uniform ivec2 ${y.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(y=>{s.push(`uniform ${y.type} ${y.name}${y.arrayIndex?`[${y.arrayIndex}]`:""};`)});const i=s.join("\n"),o=r.map(y=>function(v,S,_=!1,k){let I="";return I+=_?H2(v,k):Um(v,k),v.shapeInfo.logicalShape.length<=S.logicalShape.length&&(I+=_?function(P,U){const W=P.name,se=W.charAt(0).toUpperCase()+W.slice(1),G="get"+se+"AtOutCoords",pe=P.shapeInfo.logicalShape.length,de=U.logicalShape.length,ye=G2(P.shapeInfo.logicalShape,U.logicalShape),Ee=_r(de),Ne=de-pe;let Be;const je=["x","y","z","w","u","v"];Be=0===pe?"":de<2&&ye.length>=1?"coords = 0;":ye.map(tt=>`coords.${je[tt+Ne]} = 0;`).join("\n");let Ye="";Ye=de<2&&pe>0?"coords":P.shapeInfo.logicalShape.map((tt,mt)=>`coords.${je[mt+Ne]}`).join(", ");let Xe="return outputValue;";const Je=1===ke(P.shapeInfo.logicalShape),Ke=1===ke(U.logicalShape);if(1!==pe||Je||Ke){if(Je&&!Ke)Xe=1===de?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(ye.length){const tt=pe-2,mt=pe-1;ye.indexOf(tt)>-1&&ye.indexOf(mt)>-1?Xe="return vec4(outputValue.x);":ye.indexOf(tt)>-1?Xe="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":ye.indexOf(mt)>-1&&(Xe="return vec4(outputValue.xx, outputValue.zz);")}}else Xe="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${G}() {\n      ${Ee} coords = getOutputCoords();\n      ${Be}\n      vec4 outputValue = get${se}(${Ye});\n      ${Xe}\n    }\n  `}(v,S):function(P,U){const W=P.name,se=W.charAt(0).toUpperCase()+W.slice(1),G="get"+se+"AtOutCoords",ye=P.shapeInfo.logicalShape.length,Ee=U.logicalShape.length;if(!P.shapeInfo.isUniform&&ye===Ee&&null==P.shapeInfo.flatOffset&&He(P.shapeInfo.texShape,U.texShape))return`\n      float ${G}() {\n        return sampleTexture(${W}, resultUV);\n      }\n    `;const Ne=_r(Ee),Be=G2(P.shapeInfo.logicalShape,U.logicalShape),je=Ee-ye;let Ye;const Xe=["x","y","z","w","u","v"];Ye=0===ye?"":Ee<2&&Be.length>=1?"coords = 0;":Be.map(Ke=>`coords.${Xe[Ke+je]} = 0;`).join("\n");let Je="";return Je=Ee<2&&ye>0?"coords":P.shapeInfo.logicalShape.map((Ke,tt)=>`coords.${Xe[tt+je]}`).join(", "),`\n    float ${G}() {\n      ${Ne} coords = getOutputCoords();\n      ${Ye}\n      return get${se}(${Je});\n    }\n  `}(v,S)),I}(y,e,t.packedInputs,t.enableShapeUniforms)).join("\n"),l=e.texShape,c=Fi(),p=`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${c.texture2D}(textureSampler, uv).r;\n    }\n  `;let d,f,m=`${(y=c).version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${y.varyingFs} vec2 resultUV;\n    ${y.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${y.defineSpecialNaN}\n    ${y.defineSpecialInf}\n    ${y.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${RR}\n    ${LR}\n    ${DR}\n  `;var y;return e.isPacked?(d=function(y,v,S){switch(y.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(_,k,I){const A=[Math.ceil(k[0]/2),Math.ceil(k[1]/2)];return 1===A[0]?I?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${A[1]}.0);\n      }\n    `:1===A[1]?I?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${A[0]}.0);\n      }\n    `:I?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${A[0]}, ${A[1]}));\n      return 2 * (resTexRC.x * ${A[1]} + resTexRC.y);\n    }\n  `}(0,v,S);case 2:return function(_,k,I){const A=[Math.ceil(k[0]/2),Math.ceil(k[1]/2)];if(He(_,k))return I?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${A[0]}, ${A[1]}));\n      }\n    `;const R=Math.ceil(_[1]/2);return I?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${A[0]}, ${A[1]}));\n\n      int index = resTexRC.x * ${A[1]} + resTexRC.y;\n      int r = 2 * (index / ${R});\n      int c = imod(index, ${R}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(y,v,S);case 3:return function(_,k,I){if(I)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const A=[Math.ceil(k[0]/2),Math.ceil(k[1]/2)],R=Math.ceil(_[2]/2),P=R*Math.ceil(_[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${A[0]}, ${A[1]}));\n      int index = resTexRC.x * ${A[1]} + resTexRC.y;\n\n      int b = index / ${P};\n      index -= b * ${P};\n\n      int r = 2 * (index / ${R});\n      int c = imod(index, ${R}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(y,v,S);default:return function(_,k,I){if(I)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const A=[Math.ceil(k[0]/2),Math.ceil(k[1]/2)],R=Math.ceil(_[_.length-1]/2),P=R*Math.ceil(_[_.length-2]/2);let U=P,W="",se="b, r, c";for(let G=2;G<_.length-1;G++)U*=_[_.length-G-1],W=`\n      int b${G} = index / ${U};\n      index -= b${G} * ${U};\n    `+W,se=`b${G}, `+se;return`\n    ivec${_.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${A[0]}, ${A[1]}));\n      int index = resTexRC.x * ${A[1]} + resTexRC.y;\n\n      ${W}\n\n      int b = index / ${P};\n      index -= b * ${P};\n\n      int r = 2 * (index / ${R});\n      int c = imod(index, ${R}) * 2;\n\n      return ivec${_.length}(${se});\n    }\n  `}(y,v,S)}}(e.logicalShape,l,t.enableShapeUniforms),f=function(y){return`\n    void setOutput(vec4 val) {\n      ${y.output} = val;\n    }\n  `}(c)):(d=function(y,v,S){switch(y.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return I=S,1===(k=v)[0]?I?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${k[1]}.0);\n      }\n    `:1===k[1]?I?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${k[0]}.0);\n      }\n    `:I?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${k[0]}, ${k[1]}));\n      return resTexRC.x * ${k[1]} + resTexRC.y;\n    }\n  `;case 2:return function(_,k,I){return He(_,k)?I?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${k[0]}, ${k[1]}));\n      }\n    `:1===_[1]?I?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${k[0]}, ${k[1]}));\n        int index = resTexRC.x * ${k[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===_[0]?I?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${k[0]}, ${k[1]}));\n        int index = resTexRC.x * ${k[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:I?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${k[0]}, ${k[1]}));\n      int index = resTexRC.x * ${k[1]} + resTexRC.y;\n      int r = index / ${_[1]};\n      int c = index - r * ${_[1]};\n      return ivec2(r, c);\n    }\n  `}(y,v,S);case 3:return function(_,k,I){if(I)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${db(["r","c","d"],_)}\n    return ivec3(r, c, d);\n  }\n`;const A=sf(["r","c","d"],_);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${k[0]}, ${k[1]}));\n      int index = resTexRC.x * ${k[1]} + resTexRC.y;\n      ${A}\n      return ivec3(r, c, d);\n    }\n  `}(y,v,S);case 4:return function(_,k,I){if(I)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${db(["r","c","d","d2"],_)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const A=sf(["r","c","d","d2"],_);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${k[0]}, ${k[1]}));\n      int index = resTexRC.x * ${k[1]} + resTexRC.y;\n      ${A}\n      return ivec4(r, c, d, d2);\n    }\n  `}(y,v,S);case 5:return function(_,k){const I=sf(["r","c","d","d2","d3"],_);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${k[0]},\n                             ${k[1]}));\n\n      int index = resTexRC.x * ${k[1]} + resTexRC.y;\n\n      ${I}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(y,v);case 6:return function(_,k){const I=sf(["r","c","d","d2","d3","d4"],_);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${k[0]}, ${k[1]}));\n      int index = resTexRC.x * ${k[1]} + resTexRC.y;\n\n      ${I}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(y,v);default:throw new Error(`${y.length}-D output sampling is not yet supported`)}var k,I}(e.logicalShape,l,t.enableShapeUniforms),f=function(y){return`\n    void setOutput(float val) {\n      ${y.output} = vec4(val, 0, 0, 0);\n    }\n  `}(c)),t.packedInputs&&(m+=FR),[m,p,f,i,d,o,t.userCode].join("\n")}function Um(r,e=!1){const t=r.shapeInfo.logicalShape;switch(t.length){case 0:return function(s,i){const o=s.name,l="get"+o.charAt(0).toUpperCase()+o.slice(1);if(s.shapeInfo.isUniform)return`float ${l}() {return ${o};}`;const[c,p]=s.shapeInfo.texShape;if(1===c&&1===p)return`\n      float ${l}() {\n        return sampleTexture(${o}, halfCR);\n      }\n    `;const d=af(o);if(i)return`\n    float ${l}() {\n      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], ${d});\n      return sampleTexture(${o}, uv);\n    }\n  `;const[f,m]=s.shapeInfo.texShape;return`\n    float ${l}() {\n      vec2 uv = uvFromFlat(${f}, ${m}, ${d});\n      return sampleTexture(${o}, uv);\n    }\n  `}(r,e);case 1:return function(s,i){const o=s.name,l="get"+o.charAt(0).toUpperCase()+o.slice(1);if(s.shapeInfo.isUniform)return`\n      float ${l}(int index) {\n        ${Vm(s)}\n      }\n    `;const c=s.shapeInfo.texShape,p=c[0],d=c[1];if(1===d&&1===p)return`\n      float ${l}(int index) {\n        return sampleTexture(${o}, halfCR);\n      }\n    `;const f=af(o);return 1===d?i?`\n      float ${l}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${f}) + 0.5) / float(${o}TexShape[0]));\n        return sampleTexture(${o}, uv);\n      }\n    `:`\n      float ${l}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${f}) + 0.5) / ${p}.0);\n        return sampleTexture(${o}, uv);\n      }\n    `:1===p?i?`\n      float ${l}(int index) {\n        vec2 uv = vec2((float(index + ${f}) + 0.5) / float(${o}TexShape[1]), 0.5);\n        return sampleTexture(${o}, uv);\n      }\n    `:`\n      float ${l}(int index) {\n        vec2 uv = vec2((float(index + ${f}) + 0.5) / ${d}.0, 0.5);\n        return sampleTexture(${o}, uv);\n      }\n    `:i?`\n    float ${l}(int index) {\n      vec2 uv = uvFromFlat(${o}TexShape[0], ${o}TexShape[1], index + ${f});\n      return sampleTexture(${o}, uv);\n    }\n  `:`\n    float ${l}(int index) {\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${f});\n      return sampleTexture(${o}, uv);\n    }\n  `}(r,e);case 2:return function(s,i){const o=s.shapeInfo.logicalShape,l=s.name,c="get"+l.charAt(0).toUpperCase()+l.slice(1),p=s.shapeInfo.texShape;if(null!=p&&He(o,p))return i?`\n      float ${c}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}TexShape[1], ${l}TexShape[0]);\n        return sampleTexture(${l}, uv);\n      }\n    `:`\n    float ${c}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p[1]}.0, ${p[0]}.0);\n      return sampleTexture(${l}, uv);\n    }\n  `;const{newShape:d,keptDims:f}=Yi(o);if(d.length<o.length){const _=["row","col"];return`\n      ${Um(Wm(s,d),i)}\n      float ${c}(int row, int col) {\n        return ${c}(${Gm(_,f)});\n      }\n    `}if(s.shapeInfo.isUniform)return`\n      float ${c}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${o[1]}, 1)));\n        ${Vm(s)}\n      }\n    `;const y=p[0],v=p[1],S=af(l);return 1===v?i?`\n      float ${c}(int row, int col) {\n        float index = dot(vec3(row, col, ${S}), vec3(${l}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${l}TexShape[0]));\n        return sampleTexture(${l}, uv);\n      }\n    `:`\n    float ${c}(int row, int col) {\n      float index = dot(vec3(row, col, ${S}), vec3(${o[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${y}.0);\n      return sampleTexture(${l}, uv);\n    }\n  `:1===y?i?`\n      float ${c}(int row, int col) {\n        float index = dot(vec3(row, col, ${S}), vec3(${l}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${l}TexShape[1]), 0.5);\n        return sampleTexture(${l}, uv);\n      }\n    `:`\n    float ${c}(int row, int col) {\n      float index = dot(vec3(row, col, ${S}), vec3(${o[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${v}.0, 0.5);\n      return sampleTexture(${l}, uv);\n    }\n  `:i?`\n      float ${c}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${l}Shape[1] + col + ${S};\n        vec2 uv = uvFromFlat(${l}TexShape[0], ${l}TexShape[1], index);\n        return sampleTexture(${l}, uv);\n      }\n    `:`\n  float ${c}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${o[1]} + col + ${S};\n    vec2 uv = uvFromFlat(${y}, ${v}, index);\n    return sampleTexture(${l}, uv);\n  }\n`}(r,e);case 3:return function(s,i){const o=s.shapeInfo.logicalShape,l=s.name,c="get"+l.charAt(0).toUpperCase()+l.slice(1),p=o[1]*o[2],d=o[2],{newShape:f,keptDims:m}=Yi(o);if(f.length<o.length){const A=["row","col","depth"];return`\n        ${Um(Wm(s,f),i)}\n        float ${c}(int row, int col, int depth) {\n          return ${c}(${Gm(A,m)});\n        }\n      `}if(s.shapeInfo.isUniform)return`\n      float ${c}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${p}, ${d}, 1)));\n        ${Vm(s)}\n      }\n    `;const v=s.shapeInfo.texShape,S=v[0],_=v[1],k=s.shapeInfo.flatOffset;if(_===p&&null==k)return i?`\n      float ${c}(int row, int col, int depth) {\n        int stride1 = ${l}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${l}TexShape[1], ${l}TexShape[0]);\n        return sampleTexture(${l}, uv);\n      }\n    `:`\n        float ${c}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${d}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${_}.0, ${S}.0);\n          return sampleTexture(${l}, uv);\n        }\n      `;if(_===d&&null==k)return i?`\n      float ${c}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${l}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}TexShape[1], ${l}TexShape[0]);\n        return sampleTexture(${l}, uv);\n      }\n    `:`\n    float ${c}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${o[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${_}.0, ${S}.0);\n      return sampleTexture(${l}, uv);\n    }\n  `;const I=af(l);return i?`\n    float ${c}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${l}Shape[1] * ${l}Shape[2];\n      int stride1 = ${l}Shape[2];\n      int index = row * ${p} + col * ${d} + depth + ${I};\n      vec2 uv = uvFromFlat(${l}TexShape[0], ${l}TexShape[1], index);\n      return sampleTexture(${l}, uv);\n    }\n    `:`\n      float ${c}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${p} + col * ${d} + depth + ${I};\n        vec2 uv = uvFromFlat(${S}, ${_}, index);\n        return sampleTexture(${l}, uv);\n      }\n  `}(r,e);case 4:return function(s,i){const o=s.shapeInfo.logicalShape,l=s.name,c="get"+l.charAt(0).toUpperCase()+l.slice(1),p=o[3],d=o[2]*p,f=o[1]*d,{newShape:m,keptDims:y}=Yi(o);if(m.length<o.length){const U=["row","col","depth","depth2"];return`\n      ${Um(Wm(s,m),i)}\n      float ${c}(int row, int col, int depth, int depth2) {\n        return ${c}(${Gm(U,y)});\n      }\n    `}if(s.shapeInfo.isUniform)return`\n      float ${c}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${f}, ${d}, ${p}, 1)));\n        ${Vm(s)}\n      }\n    `;const v=s.shapeInfo.flatOffset,S=s.shapeInfo.texShape,_=S[0],k=S[1],I=`int stride2 = ${l}Shape[3];`,A=`int stride1 = ${l}Shape[2] * stride2;`,R=`int stride0 = ${l}Shape[1] * stride1;`;if(k===f&&null==v)return i?`\n      float ${c}(int row, int col, int depth, int depth2) {\n        ${I}\n        ${A}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${l}TexShape[1], ${l}TexShape[0]);\n        return sampleTexture(${l}, uv);\n      }\n    `:`\n      float ${c}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${d}, ${p}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${k}.0, ${_}.0);\n        return sampleTexture(${l}, uv);\n      }\n    `;if(k===p&&null==v)return i?`\n      float ${c}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${l}Shape[1] * ${l}Shape[2], ${l}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${l}TexShape[1], ${l}TexShape[0]);\n        return sampleTexture(${l}, uv);\n      }\n    `:`\n      float ${c}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${o[1]*o[2]}, ${o[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${k}.0, ${_}.0);\n        return sampleTexture(${l}, uv);\n      }\n    `;const P=af(l);return i?`\n    float ${c}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${I}\n      ${A}\n      ${R}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${l}TexShape[0], ${l}TexShape[1], index + ${P});\n      return sampleTexture(${l}, uv);\n    }\n  `:`\n    float ${c}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${f} + col * ${d} +\n          depth * ${p} + depth2;\n      vec2 uv = uvFromFlat(${_}, ${k}, index + ${P});\n      return sampleTexture(${l}, uv);\n    }\n  `}(r,e);case 5:return function(s){const i=s.shapeInfo.logicalShape,o=s.name,l="get"+o.charAt(0).toUpperCase()+o.slice(1),c=i[4],p=i[3]*c,d=i[2]*p,f=i[1]*d,{newShape:m,keptDims:y}=Yi(i);if(m.length<i.length){const I=["row","col","depth","depth2","depth3"];return`\n      ${Um(Wm(s,m))}\n      float ${l}(int row, int col, int depth, int depth2, int depth3) {\n        return ${l}(${Gm(I,y)});\n      }\n    `}if(s.shapeInfo.isUniform)return`\n      float ${l}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${f}, ${d}, ${p}, ${c})) +\n          depth3;\n        ${Vm(s)}\n      }\n    `;const v=s.shapeInfo.flatOffset,S=s.shapeInfo.texShape,_=S[0],k=S[1];return k===f&&null==v?`\n      float ${l}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${d}, ${p}, ${c}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${k}.0, ${_}.0);\n        return sampleTexture(${o}, uv);\n      }\n    `:k===c&&null==v?`\n      float ${l}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${i[1]*i[2]*i[3]},\n               ${i[2]*i[3]}, ${i[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${k}.0, ${_}.0);\n        return sampleTexture(${o}, uv);\n      }\n    `:`\n    float ${l}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${f} + col * ${d} + depth * ${p} +\n          depth2 * ${c} + depth3 + ${af(o)};\n      vec2 uv = uvFromFlat(${_}, ${k}, index);\n      return sampleTexture(${o}, uv);\n    }\n  `}(r);case 6:return function(s){const i=s.shapeInfo.logicalShape,o=s.name,l="get"+o.charAt(0).toUpperCase()+o.slice(1),{newShape:c,keptDims:p}=Yi(i);if(c.length<i.length){const A=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Um(Wm(s,c))}\n      float ${l}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${l}(${Gm(A,p)});\n      }\n    `}const d=i[5],f=i[4]*d,m=i[3]*f,y=i[2]*m,v=i[1]*y;if(s.shapeInfo.isUniform)return`\n      float ${l}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${v}, ${y}, ${m}, ${f})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${d}, 1)));\n        ${Vm(s)}\n      }\n    `;const S=s.shapeInfo.flatOffset,_=s.shapeInfo.texShape,k=_[0],I=_[1];return I===v&&null==S?`\n      float ${l}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${y}, ${m}, ${f}, ${d})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${I}.0, ${k}.0);\n        return sampleTexture(${o}, uv);\n      }\n    `:I===d&&null==S?`\n      float ${l}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${i[1]*i[2]*i[3]*i[4]},\n               ${i[2]*i[3]*i[4]},\n               ${i[3]*i[4]},\n               ${i[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${I}.0, ${k}.0);\n        return sampleTexture(${o}, uv);\n      }\n    `:`\n    float ${l}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${v} + col * ${y} + depth * ${m} +\n          depth2 * ${f} + depth3 * ${d} + depth4 + ${af(o)};\n      vec2 uv = uvFromFlat(${k}, ${I}, index);\n      return sampleTexture(${o}, uv);\n    }\n  `}(r);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function H2(r,e){switch(r.shapeInfo.logicalShape.length){case 0:return function(t){const s=t.name;return`\n    vec4 ${"get"+s.charAt(0).toUpperCase()+s.slice(1)}() {\n      return ${Fi().texture2D}(${s}, halfCR);\n    }\n  `}(r);case 1:return function(t,s){const i=t.name,o="get"+i.charAt(0).toUpperCase()+i.slice(1),l=t.shapeInfo.texShape,c=Fi();if(s)return`\n    vec4 ${o}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${i}TexShape[0]) / 2.0), ceil(float(${i}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${c.texture2D}(${i}, uv);\n    }\n  `;const p=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)];return`\n    vec4 ${o}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${p[0]}, ${p[1]}, index);\n      return ${c.texture2D}(${i}, uv);\n    }\n  `}(r,e);case 2:return function(t,s){const i=t.shapeInfo.logicalShape,o=t.name,l="get"+o.charAt(0).toUpperCase()+o.slice(1),c=t.shapeInfo.texShape,p=c[0],d=c[1],f=Fi();if(null!=c&&He(i,c))return s?`\n      vec4 ${l}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}TexShape[1], ${o}TexShape[0]);\n\n        return ${f.texture2D}(${o}, uv);\n      }\n    `:`\n      vec4 ${l}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${d}.0, ${p}.0);\n\n        return ${f.texture2D}(${o}, uv);\n      }\n    `;if(s)return`\n    vec4 ${l}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${o}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${f.texture2D}(${o}, uv);\n    }\n  `;const m=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];return`\n    vec4 ${l}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(i[1]/2)}, ${m[0]}, ${m[1]}, row, col);\n      return ${f.texture2D}(${o}, uv);\n    }\n  `}(r,e);case 3:return function(t,s){const i=t.shapeInfo.logicalShape,o=t.name,l="get"+o.charAt(0).toUpperCase()+o.slice(1),c=t.shapeInfo.texShape,p=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];if(1===i[0]){const v=[1,2],S=["b","row","col"];return`\n        ${H2(Wm(t,i.slice(1)),s)}\n        vec4 ${l}(int b, int row, int col) {\n          return ${l}(${Gm(S,v)});\n        }\n      `}const d=Fi();if(s)return`\n    vec4 ${l}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${o}TexShape[0]) / 2.0), ceil(float(${o}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${o}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${o}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${d.texture2D}(${o}, uv);\n    }\n  `;const f=p[0],m=p[1],y=Math.ceil(i[2]/2);return`\n    vec4 ${l}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${f}, ${m}, ${y*Math.ceil(i[1]/2)}, ${y}, b, row, col);\n      return ${d.texture2D}(${o}, uv);\n    }\n  `}(r,e);default:return function(t,s){const i=t.name,o="get"+i.charAt(0).toUpperCase()+i.slice(1),l=Fi();if(s)return`\n    vec4 ${o}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${i}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${i}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${i}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${i}TexShape[0]) / 2.0), ceil(float(${i}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${l.texture2D}(${i}, uv);\n    }\n  `;const c=t.shapeInfo.logicalShape,p=c.length,d=t.shapeInfo.texShape,f=[Math.ceil(d[0]/2),Math.ceil(d[1]/2)],m=f[0],y=f[1],v=Math.ceil(c[p-1]/2);let S=v*Math.ceil(c[p-2]/2),_="int b, int row, int col",k=`b * ${S} + (row / 2) * ${v} + (col / 2)`;for(let I=2;I<p-1;I++)_=`int b${I}, `+_,S*=c[p-I-1],k=`b${I} * ${S} + `+k;return`\n    vec4 ${o}(${_}) {\n      int index = ${k};\n      int texR = index / ${y};\n      int texC = index - texR * ${y};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${y}, ${m});\n      return ${l.texture2D}(${i}, uv);\n    }\n  `}(r,e)}}const RR="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",LR="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",DR="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",FR="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function af(r){return`offset${r}`}function Vm(r){const e=r.name,t=ke(r.shapeInfo.logicalShape);return t<2?`return ${e};`:`\n    for (int i = 0; i < ${t}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function _r(r){if(r<=1)return"int";if(2===r)return"ivec2";if(3===r)return"ivec3";if(4===r)return"ivec4";if(5===r)return"ivec5";if(6===r)return"ivec6";throw Error(`GPU for rank ${r} is not yet supported`)}function Rw(r,e,t){const{newShape:s,keptDims:i}=Yi(e),o=e.length,l=r&&3===o&&1===e[0],c=l?e.slice(1):s,p=!r&&o>1&&!He(e,t)&&s.length<o||l;return{useSqueezeShape:p,uniformShape:p?c:e,keptDims:i}}function Wm(r,e){const t=JSON.parse(JSON.stringify(r));return t.shapeInfo.logicalShape=e,t}function Gm(r,e){return e.map(t=>r[t]).join(", ")}function j2(r,e){if(r.length!==e.length)throw Error(`Binary was compiled with ${r.length} inputs, but was executed with ${e.length} inputs`);r.forEach((t,s)=>{const i=t.logicalShape,o=e[s],l=o.shape;if(!He(i,l))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${i} and ${l} must match`);if(t.isUniform&&o.isUniform)return;const c=t.texShape,p=o.isUniform?null:o.texData.texShape;if(!He(c,p))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${c} and ${p} must match`)})}function Za(r){return nt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&r<=4}class $R{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Py.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Fi();this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?db(["r","c","d"],e):sf(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class OR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Py.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=Fi();this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?db(["r","c","d"],e):sf(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class PR{constructor(e){this.variableNames=["A"],this.outTexUsage=Ya.DOWNLOAD;const t=Fi();this.outputShape=e,this.userCode=`\n      ${W2}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class zR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Ya.DOWNLOAD;const t=Fi();this.outputShape=e,this.userCode=`\n      ${W2}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class BR{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Fi();this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length);let i="result";t&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Aw(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${s.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${s.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class UR{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Fi();this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length);let i="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let l=0;l<=1;l++)for(let c=0;c<=1;c++){const p=2*l+c;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${c} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${c};\n          if (localCoords[1] + ${l} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${l};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${s.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${p}] = values[0];\n            } else if (offset == 1) {\n              result[${p}] = values[1];\n            } else if (offset == 2) {\n              result[${p}] = values[2];\n            } else {\n              result[${p}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Aw(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${i}\n\n          ${s.output} = ${o};\n        }\n    `}}function Uy(r,e,t,s,i,o){!function(p,d){const f=nt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(p<=0||d<=0)throw new Error(`Requested texture size [${p}x${d}] is invalid.`);if(p>f||d>f)throw new Error(`Requested texture size [${p}x${d}] greater than WebGL maximum on this browser / GPU [${f}x${f}].`)}(e,t);const l=Dc(p=r,()=>p.createTexture(),"Unable to create WebGLTexture."),c=r.TEXTURE_2D;var p;return cn(r,()=>r.bindTexture(c,l)),cn(r,()=>r.texParameteri(c,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE)),cn(r,()=>r.texParameteri(c,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE)),cn(r,()=>r.texParameteri(c,r.TEXTURE_MIN_FILTER,r.NEAREST)),cn(r,()=>r.texParameteri(c,r.TEXTURE_MAG_FILTER,r.NEAREST)),cn(r,()=>r.texImage2D(c,0,s,e,t,0,i,o,null)),cn(r,()=>r.bindTexture(r.TEXTURE_2D,null)),l}function q2(r){return r.internalFormatFloat}function X2(r){return r.internalFormatHalfFloat}function K2(r){return r.downloadTextureFormat}function Y2(r){return r.internalFormatPackedFloat}function Z2(r){return r.internalFormatPackedHalfFloat}class VR{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=nt().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,rf[t]=e):this.gl=yu(t);let s="WEBGL_color_buffer_float";const i="EXT_color_buffer_half_float";if(1===nt().getNumber("WEBGL_VERSION")){const l="OES_texture_half_float";if(this.textureFloatExtension=lb(this.gl,"OES_texture_float"),Mo(this.gl,l))this.textureHalfFloatExtension=lb(this.gl,l);else if(nt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),Mo(this.gl,i))this.colorBufferHalfFloatExtension=lb(this.gl,i);else if(nt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",Mo(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else{if(!Mo(this.gl,i))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(i)}this.vertexBuffer=function(l,c){const p=Dc(l,()=>l.createBuffer(),"Unable to create WebGLBuffer");return cn(l,()=>l.bindBuffer(l.ARRAY_BUFFER,p)),cn(l,()=>l.bufferData(l.ARRAY_BUFFER,c,l.STATIC_DRAW)),p}(this.gl,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0])),this.indexBuffer=function(o){return function(l,c){const p=Dc(l,()=>l.createBuffer(),"Unable to create WebGLBuffer");return cn(l,()=>l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,p)),cn(l,()=>l.bufferData(l.ELEMENT_ARRAY_BUFFER,c,l.STATIC_DRAW)),p}(o,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(o){return Dc(o,()=>o.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Mw(this.gl,this.textureHalfFloatExtension)}get debug(){return nt().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;cn(e,()=>e.finish()),cn(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),cn(e,()=>e.deleteFramebuffer(this.framebuffer)),cn(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),cn(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),cn(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(s,i,o,l){const[c,p]=zy(i,o);return Uy(s,c,p,q2(l),l.textureFormatFloat,s.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(s,i,o,l){const[c,p]=zy(i,o);return Uy(s,c,p,X2(l),l.textureFormatFloat,l.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(s,i,o,l){const[c,p]=zy(i,o);return Uy(s,c,p,K2(l),s.RGBA,s.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){var s,i,o;this.throwIfDisposed(),i=e,o=t,cn(s=this.gl,()=>s.bindTexture(s.TEXTURE_2D,i)),o.data instanceof Uint8Array?cn(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,o.width,o.height,0,s.RGBA,s.UNSIGNED_BYTE,o.data)):cn(s,()=>s.texImage2D(s.TEXTURE_2D,0,s.RGBA,s.RGBA,s.UNSIGNED_BYTE,o)),cn(s,()=>s.bindTexture(s.TEXTURE_2D,null))}uploadDenseMatrixToTexture(e,t,s,i){this.throwIfDisposed(),function(o,l,c,p,d,f){let m,y,v;cn(o,()=>o.bindTexture(o.TEXTURE_2D,l)),d instanceof Uint8Array?(m=new Uint8Array(c*p*4),y=o.UNSIGNED_BYTE,v=o.RGBA):(m=new Float32Array(c*p*4),y=o.FLOAT,v=f.internalFormatPackedFloat),m.set(d),cn(o,()=>o.texImage2D(o.TEXTURE_2D,0,v,c,p,0,o.RGBA,y,m)),cn(o,()=>o.bindTexture(o.TEXTURE_2D,null))}(this.gl,e,t,s,i,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(s,i,o,l){const[c,p]=Pm(i,o);return Uy(s,c,p,Z2(l),s.RGBA,l.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(s,i,o,l){const[c,p]=Pm(i,o);return Uy(s,c,p,Y2(l),s.RGBA,s.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(U2(this.gl,this.framebuffer),this.outputTexture=null),cn(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>function(i,o,l,c){const[p,d]=zy(o,l),f=new Uint8Array(o*l*4);return cn(i,()=>i.readPixels(0,0,p,d,c.downloadTextureFormat,i.UNSIGNED_BYTE,f)),new Float32Array(f.buffer)}(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,i,o,l){return function(c,p,d,f,m,y,v,S){const _=c,k=new Float32Array(function(I,A){const[R,P]=Pm(I,A);return R*P*4}(y,v));return _.bindBuffer(_.PIXEL_PACK_BUFFER,p),_.getBufferSubData(_.PIXEL_PACK_BUFFER,0,k),_.bindBuffer(_.PIXEL_PACK_BUFFER,null),k}(this.gl,e,0,0,0,o,l)}downloadFloat32MatrixFromBuffer(e,t){return function(s,i,o){const l=s,c=new Float32Array(o);return l.bindBuffer(l.PIXEL_PACK_BUFFER,i),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,c),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),c}(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const i=function(o,l,c,p){const d=o.createBuffer();cn(o,()=>o.bindBuffer(o.PIXEL_PACK_BUFFER,d));const f=16*l*c;return cn(o,()=>o.bufferData(o.PIXEL_PACK_BUFFER,f,o.STREAM_READ)),cn(o,()=>o.readPixels(0,0,c,l,o.RGBA,o.FLOAT,0)),cn(o,()=>o.bindBuffer(o.PIXEL_PACK_BUFFER,null)),d}(this.gl,t,s);return this.unbindTextureToFrameBuffer(),i}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(nt().getBool("WEBGL_FENCE_API_ENABLED")){const i=e,o=i.fenceSync(i.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const l=i.clientWaitSync(o,0,0);return l===i.ALREADY_SIGNALED||l===i.CONDITION_SATISFIED},t=o}else nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>function(i,o,l){const c=new Float32Array(o*l*4);return cn(i,()=>i.readPixels(0,0,l,o,i.RGBA,i.FLOAT,c)),c}(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl,s=function(o,l){const c=Dc(o,()=>o.createShader(o.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(cn(o,()=>o.shaderSource(c,l)),cn(o,()=>o.compileShader(c)),!1===o.getShaderParameter(c,o.COMPILE_STATUS))throw function(p,d){const f=CR.exec(d);if(null==f)return console.log(`Couldn't parse line number in error: ${d}`),void console.log(p);const m=+f[1],y=p.split("\n"),v=y.length.toString().length+2,S=y.map((R,P)=>Hr((P+1).toString(),v)+R);let _=0;for(let R=0;R<S.length;R++)_=Math.max(S[R].length,_);const k=S.slice(0,m-1),I=S.slice(m-1,m),A=S.slice(m);console.log(k.join("\n")),console.log(d.split("\n")[0]),console.log(`%c ${Hr(I[0],_)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(A.join("\n"))}(l,o.getShaderInfoLog(c)),new Error("Failed to compile fragment shader.");return c}(t,e);null==this.vertexShader&&(this.vertexShader=function(o){const l=Fi();return function(c,p){const d=Dc(c,()=>c.createShader(c.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(cn(c,()=>c.shaderSource(d,p)),cn(c,()=>c.compileShader(d)),!1===c.getShaderParameter(d,c.COMPILE_STATUS))throw console.log(c.getShaderInfoLog(d)),new Error("Failed to compile vertex shader.");return d}(o,`${l.version}\n    precision highp float;\n    ${l.attribute} vec3 clipSpacePos;\n    ${l.attribute} vec2 uv;\n    ${l.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const i=Dc(o=t,()=>o.createProgram(),"Unable to create WebGLProgram.");var o;return cn(t,()=>t.attachShader(i,this.vertexShader)),cn(t,()=>t.attachShader(i,s)),function(o,l){if(cn(o,()=>o.linkProgram(l)),!1===o.getProgramParameter(l,o.LINK_STATUS))throw console.log(o.getProgramInfoLog(l)),new Error("Failed to link vertex and fragment shaders.")}(t,i),this.debug&&_w(t,i),this.vertexAttrsAreBound||(this.setProgram(i),this.vertexAttrsAreBound=function(o,l,c){return cn(o,()=>o.bindBuffer(o.ARRAY_BUFFER,c)),B2(o,l,"clipSpacePos",c,3,20,0)&&B2(o,l,"uv",c,2,20,12)}(t,this.program,this.vertexBuffer)),i}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&cn(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&_w(this.gl,this.program),cn(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?(o=e,Dc(i=this.gl,()=>i.getUniformLocation(o,l),'uniform "'+(l=t)+'" not present in program.')):function(i,o,l){return i.getUniformLocation(o,l)}(this.gl,e,t);var i,o,l}getAttributeLocation(e,t){return this.throwIfDisposed(),cn(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),function(r,e,t,s){cn(r,()=>{return o=e,function(c,p){const d=c.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,f=p+c.TEXTURE0;if(f<c.TEXTURE0||f>d)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${d}].`)}(i=r,l=s),cn(i,()=>i.activeTexture(i.TEXTURE0+l)),void cn(i,()=>i.bindTexture(i.TEXTURE_2D,o));var i,o,l}),cn(r,()=>r.uniform1i(t,s))}(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[i,o]=Pm(t,s);this.setOutputMatrixTextureDriver(e,i,o)}setOutputMatrixWriteRegion(e,t,s,i){this.setOutputMatrixWriteRegionDriver(s,e,i,t)}setOutputPackedMatrixWriteRegion(e,t,s,i){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&_w(this.gl,this.program),ub(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),cn(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),cn(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=lb(this.gl,2===nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const s=this.gl,i=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(i.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();return void t.endQuery(s.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await or(()=>this.disposed||this.isQueryAvailable(e,nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const s=this.gl,i=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(i.GPU_DISJOINT_EXT)),o&&!this.disjoint}{const s=this.getQueryTimerExtensionWebGL1(),i=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),i&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(t){let s=0;for(;s<t.length&&t[s]();++s);return s-1}(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||or(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),kw(this.gl,e,this.framebuffer),this.debug&&ub(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(kw(this.gl,this.outputTexture,this.framebuffer),this.debug&&ub(this.gl)):U2(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const i=this.gl;kw(i,e,this.framebuffer),this.debug&&ub(i),this.outputTexture=e,cn(i,()=>i.viewport(0,0,t,s)),cn(i,()=>i.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,i){this.throwIfDisposed(),cn(this.gl,()=>this.gl.scissor(e,t,s,i))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:WR,bincountImpl:J2,bincountReduceImpl:GR,ceilImpl:HR,concatImpl:jR,equalImpl:qR,expImpl:XR,expm1Impl:KR,floorImpl:YR,gatherNdImpl:ZR,gatherV2Impl:JR,greaterImpl:QR,greaterEqualImpl:e3,lessImpl:t3,lessEqualImpl:n3,linSpaceImpl:r3,logImpl:s3,maxImpl:i3,maximumImpl:a3,minimumImpl:o3,multiplyImpl:l3,negImpl:u3,notEqualImpl:c3,prodImpl:h3,rangeImpl:d3,rsqrtImpl:p3,sigmoidImpl:f3,simpleAbsImpl:Q2,sliceImpl:m3,sparseFillEmptyRowsImpl:g3,sparseReshapeImpl:y3,sparseSegmentReductionImpl:eM,sqrtImpl:x3,stridedSliceImpl:b3,stringNGramsImpl:v3,stringSplitImpl:w3,stringToHashBucketFastImpl:S3,subImpl:T3,tileImpl:M3,topKImpl:_3,transposeImpl:Lw,uniqueImpl:k3}=_l;function tM(r,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${r}.${t}`)}function $i(r,e){return 1===e?[r]:tM(r,e)}class E3{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const s=$i("rc",t),i=_r(t),o=function(p,d,f){if(1===p)return`rc > ${d[0]}`;let m="";for(let y=p-2;y<p;y++)m+=`${f[y]} >= ${d[y]}`,y<p-1&&(m+="||");return m}(t,e,s),l=function(p,d,f,m){if(1===p)return"";const y=m.slice(-2);return`\n    int r = ${y[0]};\n    int c = ${y[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${d};\n    bool rEdge = rp1 >= ${f};\n  `}(t,e[e.length-1],e[e.length-2],s),c=function(p,d){const f=p.length,m=function(y,v){const S=[];for(let _=0;_<=1;_++)for(let k=0;k<=1;k++){let I=`${0===_?"r":"rp1"}, ${0===k?"c":"cp1"}`;for(let A=2;A<y;A++)I=`${v[v.length-1-A]},`+I;S.push(I)}return S}(f,d);return 1===f?`getA(rc),\n            rc + 1 >= ${p[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${m[0]}),\n          cEdge ? 0. : getA(${m[1]}),\n          rEdge ? 0. : getA(${m[2]}),\n          rEdge || cEdge ? 0. : getA(${m[3]})`}(e,s);this.userCode=`\n        void main() {\n          ${i} rc = getOutputCoords();\n\n          if(${o}) {\n            setOutput(vec4(0));\n          } else {\n            ${l}\n\n            setOutput(vec4(${c}));\n          }\n        }\n      `}}}class nM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length);let s="";for(let l=0;l<4;l++){let c="thisRC = rc;";l%2==1&&(c+="thisRC.z += 1;"),l>1&&(c+="thisRC.y += 1;"),s+=`\n        ${c}\n        ${l>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${l}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${l>0?"}":""}\n      `}var i,o;this.userCode=`\n      ${i=t,o=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${o?function(l,c,p="index"){const d=function(f,m){const y=f.length,v=f.map(_=>`${m}[${_}]`),S=new Array(y-1);S[y-2]=v[y-1];for(let _=y-3;_>=0;--_)S[_]=`(${S[_+1]} * ${v[_+1]})`;return S}(l.map((f,m)=>m),c);return d.map((f,m)=>`int ${l[m]} = ${p} / ${d[m]}; ${m===d.length-1?`int ${l[m+1]} = ${p} - ${l[m]} * ${d[m]}`:`index -= ${l[m]} * ${d[m]}`};`).join("")}(["r","c","d"],"inputShape"):sf(["r","c","d"],i)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":Aw(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${s}\n\n        setOutput(result);\n      }\n    `}}class I3{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,s){const i=sM(t,s),o=iM(e,i,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const l=rM(e,i,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=l,this.log();const p=this.freeTextures[o].shift();return this.usedTextures[o].push(p),p}let c;return i===ri.PACKED_2X2_FLOAT32?c=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):i===ri.PACKED_2X2_FLOAT16?c=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):i===ri.UNPACKED_FLOAT32?c=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):i===ri.UNPACKED_FLOAT16?c=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):i===ri.PACKED_4X1_UNSIGNED_BYTE&&(c=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(c),this.numUsedTextures++,this._numBytesAllocated+=l,this.log(),c}releaseTexture(e,t,s,i){if(null==this.freeTextures)return;const o=sM(s,i),l=iM(t,o,i);l in this.freeTextures||(this.freeTextures[l]=[]);const c=rM(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,i),p=nt().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==p&&this._numBytesAllocated>p?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=c):(this.freeTextures[l].push(e),this.numFreeTextures++,this._numBytesFree+=c),this.numUsedTextures--;const d=this.usedTextures[l],f=d.indexOf(e);if(f<0)throw new Error("Cannot release a texture that was never provided by this texture manager");d.splice(f,1),this.log()}log(){if(!this.logEnabled)return;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${this.numFreeTextures+this.numUsedTextures})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function rM(r,e,t,s,i){const o=function(c,p){switch(c){case ri.PACKED_2X2_FLOAT32:return Y2(p);case ri.PACKED_2X2_FLOAT16:return Z2(p);case ri.UNPACKED_FLOAT32:return q2(p);case ri.UNPACKED_FLOAT16:return X2(p);case ri.PACKED_4X1_UNSIGNED_BYTE:return K2(p);default:throw new Error(`Unknown physical texture type ${c}`)}}(e,s);let l;if(i){const[c,p]=Pm(r[0],r[1]);l=c*p}else{const[c,p]=zy(r[0],r[1]);l=c*p}return l*function(c,p){if(p===c.R32F)return 4;if(p===c.R16F)return 2;if(p===c.RGBA32F||p===c.RGBA)return 16;if(p===c.RGBA16F)return 8;throw new Error(`Unknown internal format ${p}`)}(t,o)}function sM(r,e){if(r===Ya.UPLOAD)return ri.PACKED_2X2_FLOAT32;if(r===Ya.RENDER||null==r)return t=e,nt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?ri.PACKED_2X2_FLOAT32:ri.UNPACKED_FLOAT32:t?ri.PACKED_2X2_FLOAT16:ri.UNPACKED_FLOAT16;var t;if(r===Ya.DOWNLOAD||r===Ya.PIXELS)return ri.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${r}`)}function iM(r,e,t){return`${r[0]}_${r[1]}_${e}_${t}`}class Cd{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const aM="return abs(x);",pb="return x;";class Hm{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class C3{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,s=$i("rc",t),i=_r(t),o=function(p,d){if(1===p)return"rc";let f="";for(let m=0;m<p;m++)f+=d[m],m<p-1&&(f+=",");return f}(t,s),l=s.slice(-2),c=t<=1?"rc":`vec2(${l.join(",")})`;this.userCode=`\n      void main() {\n        ${i} rc = getOutputCoords();\n        vec4 packedInput = getA(${o});\n\n        setOutput(getChannel(packedInput, ${c}));\n      }\n    `}}const N3=cd,Dw={},A3=nt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class fb extends bu{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!nt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const s=yu(nt().getNumber("WEBGL_VERSION"));this.binaryCache=((t=nt().getNumber("WEBGL_VERSION"))in Dw||(Dw[t]={}),Dw[t]),this.gpgpu=new VR(s),this.canvas=s.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new I3(this.gpgpu),this.numMBBeforeWarning=null==nt().global.screen?1024:nt().global.screen.height*nt().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Sa(this,aa())}nextDataId(){return fb.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,s){if((nt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||nt().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===s&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const i={id:this.nextDataId()};return this.texData.set(i,{shape:t,dtype:s,values:e,usage:Ya.UPLOAD,refCount:1}),i}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,s,i,o){if(nt().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===i)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:i,values:t,usage:Ya.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:i,complexTensorInfos:o,slice:l,shape:c,isPacked:p}=t;if(null!=l){let y;y=p?new Hm(c,pb):new Cd(c,pb);const v=this.runWebGLProgram(y,[{dataId:e,shape:c,dtype:i}],i),S=this.readSync(v.dataId);return this.disposeIntermediateTensorInfo(v),S}if(null!=s)return this.convertAndCacheOnCPU(e);if("string"===i)return s;const d=null!=this.activeTimers;let f,m;return d&&(f=wr()),m="complex64"===i?hl(this.readSync(o.real.dataId),this.readSync(o.imag.dataId)):this.getValuesFromTexture(e),d&&(this.downloadWaitMs+=wr()-f),this.convertAndCacheOnCPU(e,m)}async read(e){if(this.pendingRead.has(e)){const S=this.pendingRead.get(e);return new Promise(_=>S.push(_))}const t=this.texData.get(e),{values:s,shape:i,slice:o,dtype:l,complexTensorInfos:c,isPacked:p}=t;if(null!=o){let S;S=p?new Hm(i,pb):new Cd(i,pb);const _=this.runWebGLProgram(S,[{dataId:e,shape:i,dtype:l}],l),k=this.read(_.dataId);return this.disposeIntermediateTensorInfo(_),k}if(null!=s)return this.convertAndCacheOnCPU(e);if(!nt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===nt().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let d,f,m=null;if("complex64"!==l&&nt().get("WEBGL_BUFFER_SUPPORTED")){d=this.decode(e);const S=this.texData.get(d.dataId);m=this.gpgpu.createBufferFromTexture(S.texture,...ob(i))}if(this.pendingRead.set(e,[]),"complex64"!==l&&await this.gpgpu.createAndWaitForFence(),"complex64"===l){const S=await Promise.all([this.read(c.real.dataId),this.read(c.imag.dataId)]);f=hl(S[0],S[1])}else if(null==m)f=this.getValuesFromTexture(e);else{const S=ke(i);f=this.gpgpu.downloadFloat32MatrixFromBuffer(m,S)}if(null!=d&&this.disposeIntermediateTensorInfo(d),null!=m){const S=this.gpgpu.gl;cn(S,()=>S.deleteBuffer(m))}const y=this.convertAndCacheOnCPU(e,f),v=this.pendingRead.get(e);return this.pendingRead.delete(e),v.forEach(S=>S(y)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&aa().removeDataId(e,this),this.pendingDeletes--),y}bufferSync(e){const t=this.readSync(e.dataId);let s=t;if("string"===e.dtype)try{s=t.map(i=>On(i))}catch(i){throw new Error("Failed to decode encoded string bytes into utf-8")}return Pn(e.shape,e.dtype,s)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const s=e[t];if(!IR(s))throw nt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:i}=this.texData.get(e),o=ke(t);if(nt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const y=this.decode(e),v=this.texData.get(y.dataId),S=this.gpgpu.downloadMatrixFromPackedTexture(v.texture,...ob(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(y),S}const l=nt().getBool("WEBGL_PACK")&&!0===i,c=l?Ew(t):t,p=l?new zR(c):new PR(c),d=this.runWebGLProgram(p,[{shape:c,dtype:s,dataId:e}],"float32"),f=this.texData.get(d.dataId),m=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(f.texture,f.texShape[0],f.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(d),m}timerAvailable(){return nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,s=[];let i=!1;null==this.programTimersStack?(this.programTimersStack=s,i=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=dt(this.activeTimers.map(p=>p.query)).filter(p=>null!=p),l=dt(this.activeTimers.map(p=>p.name)).filter(p=>null!=p);this.activeTimers=t,i&&(this.programTimersStack=null);const c={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const p=await Promise.all(o);c.kernelMs=V(p),c.getExtraProfileInfo=()=>p.map((d,f)=>({name:l[f],ms:d})).map(d=>`${d.name}: ${d.ms}`).join(", ")}else c.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,c}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:wr(),endMs:null}}endTimer(e){return nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=wr(),e)}async getQueryTime(e){return nt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.waitForQueryAndGetTime(e):e.endMs-e.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return null!=s&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:i,usage:o,isPacked:l,slice:c}=this.texData.get(e),p=c&&c.origDataId||e,d=this.dataRefCount.get(p);d>1?this.dataRefCount.set(p,d-1):(this.dataRefCount.delete(p),null!=t&&(this.numBytesInGPU-=this.computeBytes(i,s),this.textureManager.releaseTexture(t,i,o,l)));const f=this.texData.get(e);f.texture=null,f.texShape=null,f.isPacked=!1,f.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=A3){return nt().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>null==this.texData.get(s.dataId).texture&&ke(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Zr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return N3(e.shape,t)}packedUnaryOp(e,t,s){const i=new Hm(e.shape,t),o=this.compileAndRun(i,[e],s);return aa().makeTensorFromDataId(o.dataId,o.shape,o.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const i=Q2(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,i)}if(nt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,aM,e.dtype);const t=new Cd(e.shape,aM),s=this.compileAndRun(t,[e]);return aa().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}makeTensorInfo(e,t,s){let i;if("string"===t&&null!=s&&s.length>0&&Ma(s[0])){const o=s.map(l=>Bi(l));i=this.write(o,e,t)}else i=this.write(s,e,t);return this.texData.get(i).usage=null,{dataId:i,shape:e,dtype:t}}makeOutput(e,t,s){const{dataId:i}=this.makeTensorInfo(e,t,s);return aa().makeTensorFromDataId(i,e,t,this)}unpackTensor(e){const t=new C3(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new E3(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const s=[zm(e.shape),...Bm(e.shape)],i={dtype:e.dtype,shape:s,dataId:e.dataId},o=[zm(t),...Bm(t)],l=new nM(o,s),p=this.runWebGLProgram(l,[i],e.dtype,[s],!0);return{dataId:p.dataId,shape:t,dtype:p.dtype}}decode(e){const t=this.texData.get(e),{isPacked:s,shape:i,dtype:o}=t,l=Ew(i);let c;const p=ob(l);return c=s?new OR(l):new $R(l),{dtype:o,shape:i,dataId:this.runWebGLProgram(c,[{shape:l,dtype:o,dataId:e}],o,[p],!0).dataId}}runWebGLProgram(e,t,s,i,o=!1){const l=this.makeTensorInfo(e.outputShape,s),c=this.texData.get(l.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===Py.DENSE){const k=ob(e.outputShape);c.texShape=k.map(I=>2*I)}if(null!=e.outTexUsage&&(c.usage=e.outTexUsage),0===ke(l.shape))return c.values=as(l.dtype,0),l;const p=[],d=t.map(k=>{if("complex64"===k.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let I=this.texData.get(k.dataId);if(null==I.texture){if(!e.packedInputs&&ke(k.shape)<=nt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:k.shape,texData:null,isUniform:!0,uniformValues:I.values};e.packedInputs&&(I.isPacked=!0,I.shape=k.shape)}else if(!!I.isPacked!=!!e.packedInputs)k=I.isPacked?this.unpackTensor(k):this.packTensor(k),p.push(k),I=this.texData.get(k.dataId);else if(I.isPacked&&!hb(I.shape,k.shape)){const A=k,R=k.shape;k.shape=I.shape,k=this.packedReshape(k,R),p.push(k),I=this.texData.get(k.dataId),A.shape=R}return this.uploadToGPU(k.dataId),{shape:k.shape,texData:I,isUniform:!1}});this.uploadToGPU(l.dataId);const f={shape:l.shape,texData:c,isUniform:!1},m=function(k,I,A){let R="";I.concat(A).forEach(W=>{const se=null!=W.texData&&null!=W.texData.slice&&W.texData.slice.flatOffset>0;if(k.enableShapeUniforms&&!W.isUniform){const G=W.texData.texShape,{useSqueezeShape:pe,uniformShape:de,keptDims:ye}=Rw(k.packedInputs,W.shape,G);let Ee="",Ne="",Be="";if(1===de.length&&k.packedInputs){const mt=[Math.ceil(G[0]/2),Math.ceil(G[1]/2)];Ee=`${mt[0]>1}_${mt[1]>1}`}else if(2!==de.length||k.packedInputs){if(de.length>2&&!k.packedInputs){const mt=hn(de);Be=`${mt[0]===G[1]}_${mt[mt.length-1]===G[1]}`}}else Ne=`${de[0]>1}_${de[1]>1}`;const je=W.shape.length,Ye=2===de.length&&He(W.shape,G),Xe=1===ke(W.shape),Je=mo(W.shape,A.shape),Ke=!k.packedInputs&&je===A.shape.length&&He(G,A.texData.texShape);R+=`${je}_${Ke}_${pe?ye:""}_${de.length}_${Xe}_${Je}_${Ye}_${Ee}_${Ne}_${Be}_${k.packedInputs||de.length>2?"":`${G[0]>1}_${G[1]>1}`}_${se}`}else R+=`${W.shape}_${W.isUniform?"uniform":W.texData.texShape}_${se}`});let U=k.constructor.name;return U+="_"+R+"_"+k.userCode+`${nt().getNumber("WEBGL_VERSION")}`,U}(e,d,f),y=this.getAndSaveBinary(m,()=>function(k,I,A,R){const P=A.map((Ke,tt)=>{const mt={logicalShape:Ke.shape,texShape:Ke.isUniform?null:Ke.texData.texShape,isUniform:Ke.isUniform,isPacked:!Ke.isUniform&&Ke.texData.isPacked,flatOffset:null};return null!=Ke.texData&&null!=Ke.texData.slice&&Ke.texData.slice.flatOffset>0&&(mt.flatOffset=Ke.texData.slice.flatOffset),{name:I.variableNames[tt],shapeInfo:mt}}),U=P.map(Ke=>Ke.shapeInfo),W={logicalShape:R.shape,texShape:R.texData.texShape,isUniform:!1,isPacked:R.texData.isPacked,flatOffset:null},se=AR(P,W,I),G=k.createProgram(se);let pe=null;const de=k.getUniformLocation(G,"NAN",!1);1===nt().getNumber("WEBGL_VERSION")&&(pe=k.getUniformLocation(G,"INFINITY",!1));const ye=!1,Ee={},Ne={},Be={};for(let Ke=0;Ke<I.variableNames.length;Ke++){const tt=I.variableNames[Ke];Ee[tt]=k.getUniformLocation(G,tt,ye),Ee[`offset${tt}`]=k.getUniformLocation(G,`offset${tt}`,ye),I.enableShapeUniforms&&(Ne[`${tt}Shape`]=k.getUniformLocation(G,`${tt}Shape`,ye),Be[`${tt}TexShape`]=k.getUniformLocation(G,`${tt}TexShape`,ye))}let je,Ye,Xe;I.enableShapeUniforms&&(je=k.getUniformLocation(G,"outShape",ye),Xe=k.getUniformLocation(G,"outShapeStrides",ye),Ye=k.getUniformLocation(G,"outTexShape",ye));const Je=[];return I.customUniforms&&I.customUniforms.forEach((Ke,tt)=>{Je[tt]=k.getUniformLocation(G,Ke.name,ye)}),{program:I,source:se,webGLProgram:G,uniformLocations:Ee,customUniformLocations:Je,inShapeInfos:U,outShapeInfo:W,infLoc:pe,nanLoc:de,inShapesLocations:Ne,inTexShapesLocations:Be,outShapeLocation:je,outShapeStridesLocation:Xe,outTexShapeLocation:Ye}}(this.gpgpu,e,d,f)),v=null!=this.activeTimers;let S;v&&(S=this.startTimer()),function(k,I,A,R,P){I.program.enableShapeUniforms||(j2(I.inShapeInfos,A),j2([I.outShapeInfo],[R]));const U=R.texData.texture,W=R.texData.texShape;R.texData.isPacked?k.setOutputPackedMatrixTexture(U,W[0],W[1]):k.setOutputMatrixTexture(U,W[0],W[1]),k.setProgram(I.webGLProgram),1===nt().getNumber("WEBGL_VERSION")&&null!==I.infLoc&&k.gl.uniform1f(I.infLoc,1/0),null!==I.nanLoc&&k.gl.uniform1f(I.nanLoc,NaN),A.forEach((G,pe)=>{const de=I.program.variableNames[pe],ye=I.uniformLocations[de],Ee=I.uniformLocations[`offset${de}`],Ne=I.inShapesLocations[`${de}Shape`],Be=I.inTexShapesLocations[`${de}TexShape`];if(Ne){const{uniformShape:je}=Rw(I.program.packedInputs,G.shape,G.texData.texShape);switch(je.length){case 1:k.gl.uniform1iv(Ne,new Int32Array(je));break;case 2:k.gl.uniform2iv(Ne,new Int32Array(je));break;case 3:k.gl.uniform3iv(Ne,new Int32Array(je));break;case 4:k.gl.uniform4iv(Ne,new Int32Array(je))}}if(Be&&k.gl.uniform2i(Be,G.texData.texShape[0],G.texData.texShape[1]),null!=ye)if(G.isUniform)if(ke(G.shape)<2)k.gl.uniform1f(ye,G.uniformValues[0]);else{let je=G.uniformValues;je instanceof Float32Array||(je=new Float32Array(je)),k.gl.uniform1fv(ye,je)}else null!=G.texData.slice&&null!=Ee&&k.gl.uniform1i(Ee,G.texData.slice.flatOffset),k.setInputMatrixTexture(G.texData.texture,ye,pe)});const se=I.outShapeLocation;if(se)switch(R.shape.length){case 1:k.gl.uniform1iv(se,new Int32Array(R.shape));break;case 2:k.gl.uniform2iv(se,new Int32Array(R.shape));break;case 3:k.gl.uniform3iv(se,new Int32Array(R.shape));break;case 4:k.gl.uniform4iv(se,new Int32Array(R.shape))}if(I.outShapeStridesLocation){const G=hn(R.shape);switch(R.shape.length){case 2:k.gl.uniform1iv(I.outShapeStridesLocation,new Int32Array(G));break;case 3:k.gl.uniform2iv(I.outShapeStridesLocation,new Int32Array(G));break;case 4:k.gl.uniform3iv(I.outShapeStridesLocation,new Int32Array(G))}}I.outTexShapeLocation&&k.gl.uniform2i(I.outTexShapeLocation,R.texData.texShape[0],R.texData.texShape[1]),I.program.customUniforms&&P&&I.program.customUniforms.forEach((G,pe)=>{const de=I.customUniformLocations[pe],ye=P[pe];if("float"===G.type)k.gl.uniform1fv(de,ye);else if("vec2"===G.type)k.gl.uniform2fv(de,ye);else if("vec3"===G.type)k.gl.uniform3fv(de,ye);else if("vec4"===G.type)k.gl.uniform4fv(de,ye);else if("int"===G.type)k.gl.uniform1iv(de,ye);else if("ivec2"===G.type)k.gl.uniform2iv(de,ye);else if("ivec3"===G.type)k.gl.uniform3iv(de,ye);else{if("ivec4"!==G.type)throw Error(`uniform type ${G.type} is not supported yet.`);k.gl.uniform4iv(de,ye)}}),k.executeProgram()}(this.gpgpu,y,d,f,i),p.forEach(k=>this.disposeIntermediateTensorInfo(k)),v&&(S=this.endTimer(S),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(S)}));const _=nt().get("WEBGL_FLUSH_THRESHOLD");if(_>0){const k=wr();k-this.lastGlFlushTime>_&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=k)}if(!nt().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&!1===o){const k=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),k}return l}compileAndRun(e,t,s,i,o=!1){return this.runWebGLProgram(e,t,s=s||t[0].dtype,i,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(nt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Re(()=>{if(!nt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=nt().getBool("DEBUG");nt().set("DEBUG",!1);const t=this.abs(ln(1e-8)).dataSync()[0];if(nt().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:i,values:o,texture:l,usage:c,isPacked:p}=t;if(null!=l)return;const d=null!=this.activeTimers;let f;d&&(f=wr());let m=t.texShape;if(null==m&&(m=function(y,v=!1){let S=nt().getNumber("WEBGL_MAX_TEXTURE_SIZE");v&&(S*=2,1===(y=y.map((k,I)=>I>=y.length-2?Pc(y[I]):y[I])).length&&(y=[2,y[0]])),2!==y.length&&(y=Yi(y).newShape);let _=ke(y);if(y.length<=1&&_<=S)return[1,_];if(2===y.length&&y[0]<=S&&y[1]<=S)return y;if(3===y.length&&y[0]*y[1]<=S&&y[2]<=S)return[y[0]*y[1],y[2]];if(3===y.length&&y[0]<=S&&y[1]*y[2]<=S)return[y[0],y[1]*y[2]];if(4===y.length&&y[0]*y[1]*y[2]<=S&&y[3]<=S)return[y[0]*y[1]*y[2],y[3]];if(4===y.length&&y[0]<=S&&y[1]*y[2]*y[3]<=S)return[y[0],y[1]*y[2]*y[3]];if(v){const k=zm(y);let I=2,A=2;return y.length&&([I,A]=Bm(y)),_=k*(I/2)*(A/2),yn(_).map(R=>2*R)}return yn(_)}(s,p),t.texShape=m),null!=o){const y=Ew(s);let v,S=m[1],_=m[0];const k=o instanceof Uint8Array;p?([S,_]=Pm(m[0],m[1]),v=new UR(y,k)):v=new BR(y,k);const I=this.makeTensorInfo([_,S],i);this.texData.get(I.dataId).usage=k?Ya.PIXELS:Ya.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(I.dataId),S,_,o);const P=this.runWebGLProgram(v,[I],i,[[_,S]],!0),U=this.texData.get(P.dataId);t.texture=U.texture,t.texShape=U.texShape,t.isPacked=U.isPacked,t.usage=U.usage,this.disposeIntermediateTensorInfo(I),this.texData.delete(P.dataId),t.values=null,d&&(this.uploadWaitMs+=wr()-f)}else{const y=this.acquireTexture(m,c,i,p);t.texture=y}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:i}=s;return this.releaseGPUData(e),null!=t&&(s.values=function(o,l){if("float32"===l||"complex64"===l)return o;if("int32"===l||"bool"===l){const c="int32"===l?new Int32Array(o.length):new Uint8Array(o.length);for(let p=0;p<c.length;++p)c[p]=Math.round(o[p]);return c}throw new Error(`Unknown dtype ${l}`)}(t,i)),s.values}acquireTexture(e,t,s,i){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,i)}computeBytes(e,t){return e[0]*e[1]*eo(t)}}fb.nextDataId=0,Lh()&&Eg("webgl",()=>new fb,2);class jm{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=An(t,s),this.enableShapeUniforms=Za(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class Vy{constructor(e,t,s,i=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=An(t,s);const o=this.outputShape.length;this.enableShapeUniforms=Za(o);let l="";if(i)if(0===o||1===ke(this.outputShape))l="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(l=`\n          ${_r(o)} coords = getOutputCoords();\n        `,1===o)l+=this.enableShapeUniforms?"\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const c=$i("coords",o);l+=this.enableShapeUniforms?`\n            bool nextRowOutOfBounds =\n              (${c[o-2]} + 1) >= outShape[${o} - 2];\n            bool nextColOutOfBounds =\n              (${c[o-1]} + 1) >= outShape[${o} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:`\n            bool nextRowOutOfBounds =\n              (${c[o-2]} + 1) >= ${this.outputShape[o-2]};\n            bool nextColOutOfBounds =\n              (${c[o-1]} + 1) >= ${this.outputShape[o-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${l}\n\n        setOutput(result);\n      }\n    `}}function ba(r){const{inputs:e,backend:t}=r,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const R3={kernelName:ah,backendName:"webgl",kernelFunc:ba};function Nd(r){const{inputs:e,backend:t}=r,{real:s,imag:i}=e,o=t.makeTensorInfo(s.shape,"complex64"),l=t.texData.get(o.dataId),c=ba({inputs:{x:s},backend:t}),p=ba({inputs:{x:i},backend:t});return l.complexTensorInfos={real:c,imag:p},o}const L3={kernelName:Od,backendName:"webgl",kernelFunc:Nd},oM="return (a < 0.) ? b * a : a;",lM="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",D3={kernelName:qd,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{alpha:o}=s,l=t.makeTensorInfo([],"float32",Oa(o,"float32")),c=nt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vy(lM,i.shape,l.shape):new jm(oM,i.shape,l.shape),p=t.runWebGLProgram(c,[i,l],i.dtype);return t.disposeIntermediateTensorInfo(l),p}},uM="return (a < 0.) ? b * a : a;",cM="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",F3={kernelName:Br,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t}=r,{x:s,alpha:i}=e,o=nt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vy(cM,s.shape,i.shape):new jm(uM,s.shape,i.shape);return t.runWebGLProgram(o,[s,i],s.dtype)}};function nr({opSnippet:r,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:i,backend:o})=>{const{x:l}=i,c=o,p=s||l.dtype;if(c.shouldExecuteOnCPU([l])&&null!=t){const f=c.texData.get(l.dataId),m=t(f.values,p);return c.makeTensorInfo(l.shape,p,m)}let d;return d=nt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=e?new Hm(l.shape,e):new Cd(l.shape,r),c.runWebGLProgram(d,[l],p)}}function si({opSnippet:r,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:i,dtype:o}){return({inputs:l,backend:c})=>{const{a:p,b:d}=l,f=c;if(s&&"complex64"===p.dtype){const v=f.texData.get(p.dataId),S=f.texData.get(d.dataId),[_,k]=[[v.complexTensorInfos.real,S.complexTensorInfos.real],[v.complexTensorInfos.imag,S.complexTensorInfos.imag]].map(A=>{const[R,P]=A,U={dataId:R.dataId,dtype:R.dtype,shape:p.shape},W={dataId:P.dataId,dtype:P.dtype,shape:d.shape},se=new jm(r,p.shape,d.shape);return f.runWebGLProgram(se,[U,W],ui(R.dtype,P.dtype))}),I=Nd({inputs:{real:_,imag:k},backend:f});return f.disposeIntermediateTensorInfo(_),f.disposeIntermediateTensorInfo(k),I}const m=o||ui(p.dtype,d.dtype);if(("string"===p.dtype||"string"===d.dtype||f.shouldExecuteOnCPU([p,d]))&&null!=i){const v=f.texData.get(p.dataId).values,S=f.texData.get(d.dataId).values,_="string"===p.dtype?Cc(v):v,k="string"===p.dtype?Cc(S):S,[I,A]=i(p.shape,d.shape,_,k,m),R=f.makeTensorInfo(A,m);return f.texData.get(R.dataId).values=I,R}let y;return y=nt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new Vy(e,p.shape,d.shape,t):new jm(r,p.shape,d.shape),f.runWebGLProgram(y,[p,d],m)}}function mb(r,e=!1){if("linear"===r)return"return x;";if("relu"===r)return e?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===r)return e?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===r)return e?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===r)return e?cM:uM;if("leakyrelu"===r)return e?lM:oM;if("sigmoid"===r)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${r} has not been implemented for the WebGL backend.`)}class hM{constructor(e,t,s,i=!1,o=!1,l=!1,c=null,p=!1,d=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Za(this.outputShape.length);const m=Math.ceil((i?e[1]:e[2])/2),y=i?"i * 2, rc.y":"rc.y, i * 2",v=o?"rc.z, i * 2":"i * 2, rc.z",S=i?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],_=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let k="",I="";c&&(k=p?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${c}\n        }`:d?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${c}\n        }`:`vec4 activation(vec4 x) {\n          ${c}\n        }`,I="result = activation(result);");const A=l?"result += getBiasAtOutCoords();":"";l&&this.variableNames.push("bias"),p&&this.variableNames.push("preluActivationWeights"),d&&this.variableNames.push("leakyreluAlpha");let R="rc.x",P="rc.x";e[0]<t[0]?R=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(P=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${k}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${m}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${m}; i++) {\n          int batchA = ${R};\n          int batchB = ${P};\n          vec4 a = getMatrixA(batchA, ${y});\n          vec4 b = getMatrixB(batchB, ${v});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${S[0]} * ${_[0]});\n          result += (${S[1]} * ${_[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${A}\n\n        ${I}\n\n        setOutput(result);\n      }\n    `}}class dM{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=An(t,s),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const pM="return a * b;";function Fw(r){const{inputs:e,backend:t}=r,{a:s,b:i}=e,o=ui(s.dtype,i.dtype);if("complex64"===s.dtype){const c=t.texData.get(s.dataId),p=t.texData.get(i.dataId),d=new dM("return areal * breal - aimag * bimag;",s.shape,i.shape),f=new dM("return areal * bimag + aimag * breal;",s.shape,i.shape),m=[{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:s.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:p.complexTensorInfos.real.dataId,dtype:p.complexTensorInfos.real.dtype,shape:i.shape},{dataId:p.complexTensorInfos.imag.dataId,dtype:p.complexTensorInfos.imag.dtype,shape:i.shape}],y=t.runWebGLProgram(d,m,"float32"),v=t.runWebGLProgram(f,m,"float32"),S=Nd({inputs:{real:y,imag:v},backend:t});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(v),S}if(t.shouldExecuteOnCPU([s,i])){const c=t.texData.get(s.dataId),p=t.texData.get(i.dataId),[d,f]=l3(s.shape,i.shape,c.values,p.values,o),m=t.makeTensorInfo(f,o);return t.texData.get(m.dataId).values=d,m}let l;return l=nt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vy(pM,s.shape,i.shape):new jm(pM,s.shape,i.shape),t.runWebGLProgram(l,[s,i],o)}const $3={kernelName:jr,backendName:"webgl",kernelFunc:Fw};function Zt(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{shape:o}=s,l=t,c=ke(i.shape),p=El(o,c),d=ke(p);F(c===d,()=>`The new shape (${p}) has ${d} elements and the old shape (${i.shape}) has ${c} elements. The new shape and old shape must have the same number of elements.`);const f=l.texData.get(i.dataId);return!f.isPacked||hb(i.shape,p)||null!==f.texture&&hb(f.shape,p)?(l.incRef(i.dataId),{dataId:i.dataId,shape:p,dtype:i.dtype}):function(m,y,v){const S=[zm(m.shape),...Bm(m.shape)],_={dtype:m.dtype,shape:S,dataId:m.dataId},k=[zm(y),...Bm(y)],I=new nM(k,S),R=v.runWebGLProgram(I,[_],m.dtype,[S],!0);return{dataId:R.dataId,shape:y,dtype:R.dtype}}(i,p,l)}const O3={kernelName:Qr,backendName:"webgl",kernelFunc:Zt};class fM{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:i,inSize:o,outSize:l}=e;this.outputShape=[i,l];const c=4*Math.floor(s/4),p=s%4;let d="sumValue += dot(values, ones);";if(null!=t){const m=1/t;d=`sumValue += dot(values * ${Bt(m)?m.toPrecision(2):m}, ones);`}let f="";o%s>0&&(f=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${f}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===p}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${d}\n        } else if (${2===p}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${d}\n        } else if (${3===p}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${d}\n        }\n        setOutput(sumValue);\n      }\n    `}}class P3{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:i,inSize:o,outSize:l}=e;this.outputShape=[i,l];let c="0.0",p="";"prod"===t?c="1.0":"min"===t?(c="1.0 / 1e-20",p="min"):"max"===t&&(c="-1.0 / 1e-20",p="max");let d=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?d="sumValue":"prod"===t?d="prodValue":"all"===t?d="allValue":"any"===t&&(d="anyValue");const f=4*Math.floor(s/4),m=s%4;let y=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${p}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${p}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,v="vec4";"all"===t?(c="1.0",y="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",v="bvec4"):"any"===t&&(c="0.0",y="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",v="bvec4");let S="";o%s>0&&(S=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${c};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${S}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        vec4 minMaxValue = vec4(${c});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${f}; i += 4) {\n          int inIdx = inOffset + i;\n          ${v} values = ${v}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${y}\n        }\n\n        int inIdx = inOffset + ${f};\n        if (${1===m}) {\n          ${v} values = ${v}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${y}\n        } else if (${2===m}) {\n          ${v} values = ${v}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${y}\n        } else if (${3===m}) {\n          ${v} values = ${v}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${y}\n        }\n        setOutput(${d});\n      }\n    `}}function of(r,e,t,s){const i=function(l){const c=[];for(;0===c.length||1!==c[c.length-1].outSize;){const p=c.length?c[c.length-1].outSize:l[1],d=Ic(p);c.push({inSize:p,windowSize:d,outSize:Math.ceil(p/d)})}return c}(r.shape);let o=r;for(let l=0;l<i.length;l++){const{inSize:c,windowSize:p,outSize:d}=i[l];let f,m;f="mean"===t?0===l?new fM({windowSize:p,inSize:c,batchSize:r.shape[0],outSize:d},c):new fM({windowSize:p,inSize:c,batchSize:r.shape[0],outSize:d}):new P3({windowSize:p,inSize:c,batchSize:r.shape[0],outSize:d},t),m=o,o=s.runWebGLProgram(f,[o],e),m.dataId!==r.dataId&&s.disposeIntermediateTensorInfo(m)}return o}class z3{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let l=0;l<s.length;l++)s[l]=e[t[l]];this.outputShape=s,this.rank=s.length;const i=_r(this.rank),o=function(l){const c=l.length;if(c>6)throw Error(`Transpose for rank ${c} is not yet supported`);const p=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],d=new Array(c);for(let f=0;f<l.length;f++)d[l[f]]=p[f];return d.join()}(t);this.userCode=`\n    void main() {\n      ${i} resRC = getOutputCoords();\n      setOutput(getA(${o}));\n    }\n    `}}class B3{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let f=0;f<s.length;f++)s[f]=e[t[f]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const i=_r(this.rank),o=tM("rc",this.rank),l=new Array(this.rank);for(let f=0;f<t.length;f++)l[t[f]]=o[f];const c=`vec2(${l.slice(-2).join()})`,p=`++${o[this.rank-1]} < ${s[this.rank-1]}`,d=`getChannel(getA(${l.join()}), ${c})`;this.userCode=`\n    void main() {\n      ${i} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${d};\n      if(${p}) {\n        result[1] = ${d};\n      }\n      --${o[this.rank-1]};\n      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {\n        result[2] = ${d};\n        if(${p}) {\n          result[3] = ${d};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function gb(r,e,t){const s=nt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new B3(r.shape,e):new z3(r.shape,e);return t.runWebGLProgram(s,[r],r.dtype)}function yb(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o,keepDims:l}=s;return function(c,p,d,f){const y=c.shape.length,v=Dn(p,c.shape);let S=v;const _=In(S,y),k=null!=_;let I=c;k&&(I=gb(c,_,f),S=Xr(S.length,y)),Cs("sum",S,y);const[A,R]=gs(I.shape,S);let P=A;d&&(P=br(A,v));const U=ke(R),W=Zt({inputs:{x:I},attrs:{shape:[ke(c.shape)/U,U]},backend:f}),se=of(W,Wo(c.dtype),"sum",f),G=Zt({inputs:{x:se},attrs:{shape:P},backend:f});return f.disposeIntermediateTensorInfo(W),f.disposeIntermediateTensorInfo(se),k&&f.disposeIntermediateTensorInfo(I),G}(i,o,l,t)}const U3={kernelName:rp,backendName:"webgl",kernelFunc:yb};function Oi(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{perm:o}=s,l=t,p=new Array(i.shape.length);for(let f=0;f<p.length;f++)p[f]=i.shape[o[f]];let d;if(l.shouldExecuteOnCPU([i])){const f=l.texData.get(i.dataId).values,m=Lw(f,i.shape,i.dtype,o,p);d=l.makeTensorInfo(p,i.dtype),l.texData.get(d.dataId).values=m}else d=gb(i,o,l);return d}const V3={kernelName:kh,backendName:"webgl",kernelFunc:Oi};function xb({a:r,b:e,transposeA:t,transposeB:s,backend:i,bias:o=null,preluActivationWeights:l=null,leakyreluAlpha:c=0,activation:p=null}){const d=r.shape.length,f=e.shape.length,m=t?r.shape[d-2]:r.shape[d-1],y=s?e.shape[f-1]:e.shape[f-2],v=t?r.shape[d-1]:r.shape[d-2],S=s?e.shape[f-2]:e.shape[f-1],_=r.shape.slice(0,-2),k=e.shape.slice(0,-2),I=ke(_),A=ke(k);F(d>=2&&f>=2&&(I===A||1===I||1===A),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${_}) and (${k}).`);const R=(I>A?r.shape.slice(0,-2):e.shape.slice(0,-2)).concat([v,S]);F(m===y,()=>`Error in matMul: inner shapes (${m}) and (${y}) of Tensors with shapes ${r.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const P=t?[I,m,v]:[I,v,m],U=s?[A,S,y]:[A,y,S],W=Zt({inputs:{x:r},backend:i,attrs:{shape:P}}),se=Zt({inputs:{x:e},backend:i,attrs:{shape:U}}),G=[W,se],pe=Math.max(I,A),de=t?W.shape[1]:W.shape[2],ye=null!=o,Ee=null!=l,Ne="leakyrelu"===p,Be=null!=p?mb(p,!0):null;let je;if((1===v||1===S)&&de>1e3&&!1===(ye||Ee||Ne||null!=Be)){let Xe=W,Je=se;t&&(Xe=Oi({inputs:{x:W},backend:i,attrs:{perm:[0,2,1]}}),G.push(Xe)),s&&(Je=Oi({inputs:{x:se},backend:i,attrs:{perm:[0,2,1]}}),G.push(Je));const Ke=1===S;let tt=Xe;1!==S&&(tt=Zt({inputs:{x:Xe},backend:i,attrs:{shape:[pe,de,1]}}),G.push(tt));const mt=1===S?2:1;let Et=Je;Ke&&(Et=Zt({inputs:{x:Je},backend:i,attrs:{shape:[pe,1,de]}}),G.push(Et));const Tt=Fw({inputs:{a:tt,b:Et},backend:i});je=yb({inputs:{x:Tt},backend:i,attrs:{axis:mt,keepDims:!0}}),G.push(Tt)}else{const Xe=ui(r.dtype,e.dtype),Je=new hM(P,U,[pe,v,S],t,s,ye,Be,Ee,Ne),Ke=[W,se];if(null!=o&&Ke.push(o),Ee&&Ke.push(l),Ne){const tt=i.makeTensorInfo([],"float32",Oa(c,"float32"));Ke.push(tt),G.push(tt)}je=i.runWebGLProgram(Je,Ke,Xe)}const Ye=Zt({inputs:{x:je},backend:i,attrs:{shape:R}});G.push(je);for(const Xe of G)i.disposeIntermediateTensorInfo(Xe);return Ye}const W3={kernelName:Vl,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{a:i,b:o,bias:l,preluActivationWeights:c}=e,{transposeA:p,transposeB:d,activation:f,leakyreluAlpha:m}=s;return xb({a:i,b:o,transposeA:p,transposeB:d,backend:t,bias:l,preluActivationWeights:c,leakyreluAlpha:m,activation:f})}},mM="return abs(x);",G3={kernelName:Su,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t}=r,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const o=t.texData.get(s.dataId),l=Q2(o.values);return t.makeTensorInfo(s.shape,s.dtype,l)}let i;return i=nt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Hm(s.shape,mM):new Cd(s.shape,mM),t.runWebGLProgram(i,[s],s.dtype)}},H3=nr({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),j3={kernelName:Nl,backendName:"webgl",kernelFunc:H3},q3=nr({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),X3={kernelName:Al,backendName:"webgl",kernelFunc:q3},gM="return a + b;",K3=si({opSnippet:gM,packedOpSnippet:gM,supportsComplex:!0,cpuKernelImpl:WR}),Y3={kernelName:Io,backendName:"webgl",kernelFunc:K3};class Z3{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,l)=>`T${l}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const i=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`\n      void main() {\n        ${s.join("\n        ")}\n\n        float result = ${i};\n        setOutput(result);\n      }\n    `}}class J3{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,l)=>`T${l}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const i=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`\n      void main() {\n        ${s.join("\n        ")}\n\n        vec4 result = ${i};\n        setOutput(result);\n      }\n    `}}const Q3={kernelName:Tu,backendName:"webgl",kernelFunc:function r(e){const{inputs:t,backend:s}=e,i=t;if(1===i.length)return ba({inputs:{x:i[0]},backend:s});if(i.length>nt().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const p=Math.floor(i.length/2),d=r({inputs:i.slice(0,p),backend:s}),f=r({inputs:i.slice(p),backend:s});return r({inputs:[d,f],backend:s})}const o=i.map(p=>p.dtype).reduce((p,d)=>ui(p,d)),l=i.map(p=>p.shape),c=nt().getBool("WEBGL_PACK")?new J3(i[0].shape,l):new Z3(i[0].shape,l);return s.runWebGLProgram(c,i,o)}},eL={kernelName:Uc,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o,keepDims:l}=s,c=i.shape.length,p=Dn(o,i.shape);let d=p;const f=In(d,c);let m=i;null!=f&&(m=Oi({inputs:{x:i},backend:t,attrs:{perm:f}}),d=Xr(d.length,c)),Cs("all",d,c);const[y,v]=gs(m.shape,d),S=Zt({inputs:{x:m},backend:t,attrs:{shape:[-1,ke(v)]}}),_=of(S,S.dtype,"all",t);let k;return k=Zt(l?{inputs:{x:_},backend:t,attrs:{shape:br(y,p)}}:{inputs:{x:_},backend:t,attrs:{shape:y}}),t.disposeIntermediateTensorInfo(S),t.disposeIntermediateTensorInfo(_),null!=f&&t.disposeIntermediateTensorInfo(m),k}},tL={kernelName:Vc,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o,keepDims:l}=s,c=i.shape.length,p=Dn(o,i.shape);let d=p;const f=In(d,c);let m=i;null!=f&&(m=Oi({inputs:{x:i},backend:t,attrs:{perm:f}}),d=Xr(d.length,c)),Cs("any",d,c);const[y,v]=gs(m.shape,d),S=Zt({inputs:{x:m},backend:t,attrs:{shape:[-1,ke(v)]}}),_=of(S,S.dtype,"any",t);let k;return k=Zt(l?{inputs:{x:_},backend:t,attrs:{shape:br(y,p)}}:{inputs:{x:_},backend:t,attrs:{shape:y}}),t.disposeIntermediateTensorInfo(S),t.disposeIntermediateTensorInfo(_),null!=f&&t.disposeIntermediateTensorInfo(m),k}};class nL{constructor(e,t,s){this.variableNames=["A"];const{windowSize:i,batchSize:o,outSize:l}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,l],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${i};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${i}; i++) {\n          int inIdx = ${s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));"};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${"max"===t?">":"<"} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class rL{constructor(e,t,s,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,F(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const l=Math.ceil(e[e.length-1]/t);this.outputShape=e.slice(0,-1),l>1&&this.outputShape.push(l),i||this.variableNames.push("bestIndicesA");const c=this.outputShape,p=c.length,d=_r(p),f=$i("coords",p);let m,y;if(1===l){y=p+1;const G=_r(y);m=`\n        ${G} sourceLocR = ${G}(${f.join()}, 0);\n        ++${f[p-1]};\n        ${G} sourceLocG = ${G}(${f.join()}, 0);\n        ++${f[p-2]};\n        ${G} sourceLocA = ${G}(${f.join()}, 0);\n        --${f[p-1]};\n        ${G} sourceLocB = ${G}(${f.join()}, 0);\n        --${f[p-2]};`}else y=p,m=`\n        ${d} sourceLocR = coords;\n        ++${f[p-1]};\n        ${d} sourceLocG = coords;\n        ++${f[p-2]};\n        ${d} sourceLocA = coords;\n        --${f[p-1]};\n        ${d} sourceLocB = coords;\n        --${f[p-2]};`;const v=["x","y","z","w","u","v"].slice(0,y),S="."+v[y-1],_=v.map(G=>"int "+G),k=$i("sourceLocR",y-1).concat("inIdx.r"),I=$i("sourceLocG",y-1).concat("inIdx.g"),A=$i("sourceLocB",y-1).concat("inIdx.b"),R=$i("sourceLocA",y-1).concat("inIdx.a"),P="max"===s?"greaterThan":"lessThan",U=i?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${k.join()}),\n                             getBestIndicesAChannel(${I.join()}),\n                             getBestIndicesAChannel(${A.join()}),\n                             getBestIndicesAChannel(${R.join()})));`,W=`vec4(\n            getAChannel(${k.join()}),\n            hasNextCol ? getAChannel(${I.join()}) : 0.,\n            hasNextRow ? getAChannel(${A.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${R.join()}) : 0.)`,se=i?"":`\n      float getBestIndicesAChannel(${_.join()}) {\n        return getChannel(getBestIndicesA(${v.join()}),\n                                          vec2(${v.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${_.join()}) {\n        return getChannel(getA(${v.join()}),\n                               vec2(${v.slice(-2).join()}));\n      }\n      ${se}\n      void main() {\n        ${d} coords = getOutputCoords();\n        bool hasNextCol = ${f[p-1]} < ${c[p-1]-1};\n        bool hasNextRow = ${f[p-2]} < ${c[p-2]-1};\n        ${m}\n        ivec4 srcIdx = ivec4(sourceLocR${S}, sourceLocG${S},\n          sourceLocB${S}, sourceLocA${S}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${W};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${U}\n          vec4 candidate = ${W};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${P}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function yM(r,e,t,s=null){let i=e.shape[0],o=e.shape[1];null!=s&&(i=s.shape[0],o=s.shape[1]);const l=Ic(o),c={windowSize:l,inSize:o,batchSize:i,outSize:Math.ceil(o/l)},p=new nL(c,t,null==s),d=[e];null!=s&&d.push(s);const f=r.runWebGLProgram(p,d,"int32");if(1===f.shape[1])return f;const m=yM(r,e,t,f);return r.disposeIntermediateTensorInfo(f),m}function xM(r,e,t,s=null){const i=null!=s?s.shape:e.shape,o=Ic(i[i.length-1]),l=new rL(i,o,t,null==s),p=r.runWebGLProgram(l,null==s?[e]:[e,s],"int32");if(p.shape.length===e.shape.length){const d=xM(r,e,t,p);return r.disposeIntermediateTensorInfo(p),d}return p}function bM(r,e,t,s){const i=[t];if(Cs("arg"+s.charAt(0).toUpperCase()+s.slice(1),i,e.shape.length),!nt().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],l=r.texData.get(e.dataId);let c=e;null!==l&&l.isPacked&&(c=r.unpackTensor(e),o.push(c));const[p,d]=gs(c.shape,i),f=ke(d),m=Zt({inputs:{x:c},backend:r,attrs:{shape:[-1,f]}});o.push(m);const y=yM(r,m,s);o.push(y);const v=Zt({inputs:{x:y},backend:r,attrs:{shape:p}});return o.forEach(S=>r.disposeIntermediateTensorInfo(S)),v}return xM(r,e,s)}const sL={kernelName:Wc,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o}=s;let l=Dn(o,i.shape);const c=In(l,i.shape.length);let p=i;const d=[];null!=c&&(p=Oi({inputs:{x:i},backend:t,attrs:{perm:c}}),d.push(p),l=Xr(l.length,p.shape.length)),Cs("argMax",[l[0]],p.shape.length);const f=bM(t,p,l[0],"max");return d.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}},iL={kernelName:Mu,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o}=s;let l=Dn(o,i.shape);const c=In(l,i.shape.length);let p=i;const d=[];null!=c&&(p=Oi({inputs:{x:i},backend:t,attrs:{perm:c}}),d.push(p),l=Xr(l.length,p.shape.length)),Cs("argMin",[l[0]],p.shape.length);const f=bM(t,p,l[0],"min");return d.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}},aL=nr({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),oL={kernelName:Rl,backendName:"webgl",kernelFunc:aL},lL=nr({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),uL={kernelName:_u,backendName:"webgl",kernelFunc:lL},cL=nr({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),hL={kernelName:ku,backendName:"webgl",kernelFunc:cL},dL=si({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),pL={kernelName:Iu,backendName:"webgl",kernelFunc:dL},fL=nr({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),mL={kernelName:Eu,backendName:"webgl",kernelFunc:fL};class Wy{constructor(e,t,s,i=!1,o=!1){if(this.variableNames=["x"],"avg"===t&&s)throw new Error("Cannot compute positions for average pool.");const l=e.filterWidth,c=e.strideHeight,p=e.strideWidth,d=e.dilationHeight,f=e.dilationWidth,m=e.effectiveFilterHeight,y=e.effectiveFilterWidth,v=e.padInfo.top,S=e.padInfo.left;this.outputShape=e.outShape;const _="avg"===t;let A="0.0";if(_||(A="-1.0 / 1e-20"),s)return void(this.userCode=`\n        const ivec2 strides = ivec2(${c}, ${p});\n        const ivec2 pads = ivec2(${v}, ${S});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${m};\n              wR += ${d}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${y};\n                wC += ${f}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value >= currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${i?o?`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`:`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`:`wR * ${y} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let R=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(R="avgValue / count");const P=4*Math.floor(l/4),U=l%4,W=`\n      if (${_}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${c}, ${p});\n      const ivec2 pads = ivec2(${v}, ${S});\n      const float initializationValue = ${A};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${A});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${m};\n            wR += ${d}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${P}; wC += 4) {\n            int xC = xCCorner + wC * ${f};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${f}, d),\n              getValue(batch, xR, xC + 2 * ${f}, d),\n              getValue(batch, xR, xC + 3 * ${f}, d)\n            );\n\n            ${W}\n          }\n\n          int xC = xCCorner + ${P};\n          if (${1===U}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${W}\n          } else if (${2===U}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${f}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${W}\n          } else if (${3===U}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${f}, d),\n              getValue(batch, xR, xC + 2 * ${f}, d),\n              initializationValue\n            );\n\n            ${W}\n          }\n        }\n        setOutput(${R});\n      }\n    `}}class $w{constructor(e,t,s,i=!1,o=!1){if(this.variableNames=["x"],"avg"===t&&s)throw new Error("Cannot compute positions for average pool.");const l=e.filterWidth,c=e.strideDepth,p=e.strideHeight,d=e.strideWidth,f=e.dilationDepth,m=e.dilationHeight,y=e.dilationWidth,v=e.effectiveFilterDepth,S=e.effectiveFilterHeight,_=e.effectiveFilterWidth,k=e.padInfo.front,I=e.padInfo.top,A=e.padInfo.left;this.outputShape=e.outShape;const R="avg"===t;let P="0.0";if(R||(P="-1.0 / 1e-20"),s)return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${c}, ${p}, ${d});\n        const ivec3 pads = ivec3(${k}, ${I}, ${A});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${v};\n              wD += ${f}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${S};\n                wR += ${m}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${_};\n                  wC += ${y}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value >= currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${i?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${S} * ${_} +\n                      wR * ${_} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `);let U=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(U="avgValue / count");const W=4*Math.floor(l/4),se=l%4,G=`\n      if (${R}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${c}, ${p}, ${d});\n      const ivec3 pads = ivec3(${k}, ${I}, ${A});\n      const float initializationValue = ${P};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${P});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${v};\n            wD += ${f}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${S};\n            wR += ${m}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${W}; wC += 4) {\n              int xC = xCCorner + wC * ${y};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${y}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${y}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${y}, ch)\n              );\n\n              ${G}\n            }\n\n            int xC = xCCorner + ${W};\n            if (${1===se}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${G}\n            } else if (${2===se}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${y}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${G}\n            } else if (${3===se}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${y}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${y}, ch),\n                initializationValue\n              );\n\n              ${G}\n            }\n          }\n          setOutput(${U});\n        }\n      }\n    `}}const gL={kernelName:Gc,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e;By(i,"avgPool");const{filterSize:o,strides:l,pad:c,dimRoundingMode:p}=s;F(ts(l,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${l} and dilations '1'`);const d=hi(i.shape,o,l,1,c,p);if(1===d.filterWidth&&1===d.filterHeight&&He(d.inShape,d.outShape))return ba({inputs:{x:i},backend:t});const f=new Wy(d,"avg",!1);return t.runWebGLProgram(f,[i],"float32")}},yL={kernelName:Hc,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{filterSize:o,strides:l,pad:c,dimRoundingMode:p,dataFormat:d}=s,f=la(i.shape,o,l,[1,1,1],c,p,d),m=new $w(f,"avg",!1);return t.runWebGLProgram(m,[i],"float32")}};class xL{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const p=e.effectiveFilterHeight,d=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${p-1-e.padInfo.top}, ${d-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p};\n            wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${d};\n            wC+= ${e.dilationWidth}) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bL{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const m=e.effectiveFilterDepth,y=e.effectiveFilterHeight,v=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${m-1-e.padInfo.front}, ${y-1-e.padInfo.top}, ${v-1-e.padInfo.left});\n      const float avgMultiplier = float(${1/(e.filterDepth*e.filterHeight*e.filterWidth)});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${m};\n            wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${y};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${v};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const vL={kernelName:Fd,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{dy:i,input:o}=e,l=o,{filterSize:c,strides:p,pad:d,dimRoundingMode:f}=s,m=la(l.shape,c,p,[1,1,1],d,f),y=new bL(m);return t.runWebGLProgram(y,[i],l.dtype)}},wL={kernelName:Dd,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{dy:i,input:o}=e,l=o;By([i,o],"avgPoolGrad");const{filterSize:c,strides:p,pad:d}=s,f=hi(l.shape,c,p,1,d),m=new xL(f);return t.runWebGLProgram(m,[i],l.dtype)}},SL={kernelName:jc,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{a:i,b:o}=e,{transposeA:l,transposeB:c}=s;return xb({a:i,b:o,transposeA:l,transposeB:c,backend:t})}};class TL{constructor(e,t,s,i,o,l){this.outputShape=[],this.variableNames=["x","mean","variance"],An(e,t),An(e,s);let c="0.0";null!=i&&(An(e,i),this.variableNames.push("offset"),c="getOffsetAtOutCoords()");let p="1.0";null!=o&&(An(e,o),this.variableNames.push("scale"),p="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${c};\n        float scale = ${p};\n        float inv = scale * inversesqrt(variance + float(${l}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class ML{constructor(e,t,s,i,o,l){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],An(e,t),An(e,s);let c="vec4(0.0)";null!=i&&(An(e,i),this.variableNames.push("offset"),c="getOffsetAtOutCoords()");let p="vec4(1.0)";null!=o&&(An(e,o),this.variableNames.push("scale"),p="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${c};\n        vec4 scale = ${p};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${l}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const _L={kernelName:ih,backendName:"webgl",kernelFunc:({inputs:r,backend:e,attrs:t})=>{const{x:s,mean:i,variance:o,offset:l,scale:c}=r;F(i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),F(null==l||i.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),F(null==c||i.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:p}=t;null==p&&(p=.001);const d=[s,i,o];let f=null;null!=l&&(f=l.shape,d.push(l));let m=null;null!=c&&(m=c.shape,d.push(c));const y=nt().getBool("WEBGL_PACK_NORMALIZATION")?new ML(s.shape,i.shape,o.shape,f,m,p):new TL(s.shape,i.shape,o.shape,f,m,p);return e.runWebGLProgram(y,d,d[0].dtype)}};class kL{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=_r(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=function(o){if(1===o)return"sourceLoc";if(o<=6)return Ow.slice(0,o).map(l=>"sourceLoc."+l).join(",");throw Error(`Slicing for rank ${o} is not yet supported`)}(this.rank);let i;i=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((o,l)=>`sourceLoc.${Ow[l]} = start[${l}] + coords.${Ow[l]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${i}\n        setOutput(getSource(${s}));\n      }\n    `}}const Ow=["x","y","z","w","u","v"];class EL{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=_r(this.rank),s=$i("coords",this.rank),i=$i("sourceLoc",this.rank),o=1===this.rank?"sourceLoc":`vec2(${i.slice(-2).join()})`,l=`getChannel(getSource(${i.join()}), ${o})`,c=`\n      result.x = ${l};\n      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${i[this.rank-1]};\n        result.y = ${l};\n        --${i[this.rank-1]};\n      }\n    `,p=1===this.rank?"":`\n      --${s[this.rank-1]};\n      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${i[this.rank-2]};\n        result.z = ${l};\n        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${i[this.rank-1]};\n          result.w = ${l};\n        }\n      }\n    `,d=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((f,m)=>`start[${m}]`).join()});`:e.map((f,m)=>`${i[m]} = ${s[m]} + start[${m}];`).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${d}\n        vec4 result = vec4(0.);\n        ${c}\n        ${p}\n        setOutput(result);\n      }\n    `}}function qm(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{begin:o,size:l}=s,[c,p]=$f(i,o,l);if(bg(i,c,p),0===ke(p))return t.makeTensorInfo(p,i.dtype,[]);if(t.shouldExecuteOnCPU([i])||"string"===i.dtype){const m=t.texData.get(i.dataId),y=m3(m.values,c,p,i.shape,i.dtype);return t.makeTensorInfo(p,i.dtype,y)}const{isPacked:d}=t.texData.get(i.dataId),f=vg(i.shape,c,p);if(d||!f){const m=nt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new EL(p):new kL(p);return t.runWebGLProgram(m,[i],i.dtype,[c])}return t.uploadToGPU(i.dataId),function(m,y,v,S){const _=S.texData.get(m.dataId),k=S.makeTensorInfo(v,m.dtype),I=S.texData.get(k.dataId);Object.assign(I,_),I.refCount=1,I.shape=v,I.dtype=m.dtype;let A=wg(y,hn(m.shape));_.slice&&(A+=_.slice.flatOffset),I.slice={flatOffset:A,origDataId:_.slice&&_.slice.origDataId||m.dataId};const R=S.dataRefCount.get(I.slice.origDataId)||1;return S.dataRefCount.set(I.slice.origDataId,R+1),k}(i,c,p,t)}const IL={kernelName:Qi,backendName:"webgl",kernelFunc:qm},CL={kernelName:qc,backendName:"webgl",kernelFunc:r=>{const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{blockShape:o,crops:l}=s;F(i.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const c=o.reduce((A,R)=>A*R),p=Hp(i.shape,o,c),d=Cr(p.length,o.length),f=du(i.shape,o,c),m=xm(l,o.length),y=iy(f,l,o.length),v=[],S=Zt({inputs:{x:i},backend:t,attrs:{shape:p}}),_=Oi({inputs:{x:S},backend:t,attrs:{perm:d}}),k=Zt({inputs:{x:_},backend:t,attrs:{shape:f}}),I=qm({inputs:{x:k},backend:t,attrs:{begin:m,size:y}});return v.push(S),v.push(_),v.push(k),v.forEach(A=>t.disposeIntermediateTensorInfo(A)),I}},NL={kernelName:$d,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,weights:o}=e,{size:l}=s,c=t.readSync(i.dataId),p=t.readSync(o.dataId),d=J2(c,p,o.dtype,o.shape,l);return t.makeTensorInfo([l],o.dtype,d)}},vM=si({opSnippet:"return float(a != b);",cpuKernelImpl:c3,dtype:"bool"}),AL={kernelName:Lo,backendName:"webgl",kernelFunc:vM};function Gy(r){const{inputs:e,backend:t}=r,{input:s}=e;return ba({inputs:{x:t.texData.get(s.dataId).complexTensorInfos.real},backend:t})}const RL={kernelName:Si,backendName:"webgl",kernelFunc:Gy},LL={kernelName:Cu,backendName:"webgl",kernelFunc:function r(e){const{inputs:t,backend:s,attrs:i}=e,{x:o}=t,{dtype:l}=i;if("complex64"===l){if("complex64"===o.dtype)return ba({inputs:{x:o},backend:s});const c=Kr(o.shape),p=r({inputs:{x:o},backend:s,attrs:{dtype:"float32"}}),d=Nd({inputs:{real:p,imag:c},backend:s});return c.dispose(),s.disposeIntermediateTensorInfo(p),d}if("complex64"===o.dtype){const c=Gy({inputs:{input:o},backend:s}),p=r({inputs:{x:c},backend:s,attrs:{dtype:l}});return s.disposeIntermediateTensorInfo(c),p}if(!Eo(o.dtype,l)){const c=ba({inputs:{x:o},backend:s});return{dataId:c.dataId,shape:c.shape,dtype:l}}if("int32"===l)return function(c,p){const d=new Cd(c.shape,"return float(int(x));"),f=p.runWebGLProgram(d,[c],"int32");return{dataId:f.dataId,shape:f.shape,dtype:f.dtype}}(o,s);if("bool"===l){const c=s.makeTensorInfo([],"bool",as("bool",1)),p=vM({inputs:{a:o,b:c},backend:s});return s.disposeIntermediateTensorInfo(c),p}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${l}`)}},wM="return ceil(x);",DL=nr({opSnippet:wM,packedOpSnippet:wM,cpuKernelImpl:HR}),FL={kernelName:Nu,backendName:"webgl",kernelFunc:DL};class $L{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class OL{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const PL={kernelName:Au,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{clipValueMin:o,clipValueMax:l}=s;let c;return c=nt().getBool("WEBGL_PACK_CLIP")?new OL(i.shape):new $L(i.shape),t.runWebGLProgram(c,[i],i.dtype,[[o],[l]])}};class zL{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function SM(r,e){return{dataId:e.dataId,dtype:e.dtype,shape:r.shape}}const BL={kernelName:Xc,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t}=r,{x:s}=e,i=t.texData.get(s.dataId),o=new zL(s.shape),l=[SM(s,i.complexTensorInfos.real),SM(s,i.complexTensorInfos.imag)];return t.runWebGLProgram(o,l,l[0].dtype)}};class UL{constructor(e){this.outputShape=[],this.outputShape=qa(e,1),this.variableNames=e.map((l,c)=>`T${c}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let l=1;l<t.length;l++)t[l]=t[l-1]+e[l][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let l=1;l<t.length;l++)s.push(`else if (yC < ${t[l]}) setOutput(getT${l}(yR, yC-${t[l-1]}));`);s.push(`else setOutput(getT${t.length}(yR, yC-${t[t.length-1]}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${s.join("\n        ")}\n      }\n    `}}class VL{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=qa(e,t);const s=this.outputShape,i=s.length,o=_r(i),l=$i("coords",i),c=["x","y","z","w","u","v"].slice(0,i);this.variableNames=e.map((_,k)=>`T${k}`);const p=new Array(e.length-1);p[0]=e[0][t];for(let _=1;_<p.length;_++)p[_]=p[_-1]+e[_][t];const d=c[t],f=c.slice(-2),m=c.join();let y=`if (${d} < ${p[0]}) {\n        return getChannel(\n            getT0(${m}), vec2(${f.join()}));\n        }`;for(let _=1;_<p.length;_++){const k=p[_-1];y+=`\n        if (${d} < ${p[_]}  && ${d} >= ${p[_-1]}) {\n          return getChannel(\n            getT${_}(${bb(c,d,k)}),\n            vec2(${bb(f,d,k)}));\n        }`}const S=p[p.length-1];y+=`\n        return getChannel(\n          getT${p.length}(${bb(c,d,S)}),\n          vec2(${bb(f,d,S)}));`,this.userCode=`\n      float getValue(${c.map(_=>"int "+_)}) {\n        ${y}\n      }\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${l}), 0., 0., 0.);\n\n        ${l[i-1]} = ${l[i-1]} + 1;\n        if (${l[i-1]} < ${s[i-1]}) {\n          result.g = getValue(${l});\n        }\n\n        ${l[i-2]} = ${l[i-2]} + 1;\n        if (${l[i-2]} < ${s[i-2]}) {\n          result.a = getValue(${l});\n        }\n\n        ${l[i-1]} = ${l[i-1]} - 1;\n        if (${l[i-2]} < ${s[i-2]} &&\n            ${l[i-1]} < ${s[i-1]}) {\n          result.b = getValue(${l});\n        }\n        setOutput(result);\n      }\n    `}}function bb(r,e,t){const s=r.indexOf(e);return r.map((i,o)=>o===s?`${i} - ${t}`:i).join()}function vb(r){const{inputs:e,backend:t}=r,{input:s}=e;return ba({inputs:{x:t.texData.get(s.dataId).complexTensorInfos.imag},backend:t})}const WL={kernelName:mf,backendName:"webgl",kernelFunc:vb};function Xm(r,e,t){const s=r[0].dtype;if("complex64"===s){const f=r.map(_=>Gy({inputs:{input:_},backend:t})),m=r.map(_=>vb({inputs:{input:_},backend:t})),y=Xm(f,e,t),v=Xm(m,e,t),S=Nd({inputs:{real:y,imag:v},backend:t});return f.forEach(_=>t.disposeIntermediateTensorInfo(_)),m.forEach(_=>t.disposeIntermediateTensorInfo(_)),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(v),S}let i=t.shouldExecuteOnCPU(r);if("string"===s&&(i=!0),i){const f=r.map(I=>{const A=ke(I.shape.slice(e));return Zt({inputs:{x:I},backend:t,attrs:{shape:[-1,A]}})}),m=f.map(I=>({vals:t.readSync(I.dataId),shape:I.shape})),y=qa(f.map(I=>I.shape),1),S=jR(m,y,s,1===f[0].shape[0]),_=qa(r.map(I=>I.shape),e),k=t.makeTensorInfo(_,s,S);return f.forEach(I=>t.disposeIntermediateTensorInfo(I)),k}if(r.length>nt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const f=Math.floor(r.length/2),m=Xm(r.slice(0,f),e,t),y=Xm(r.slice(f),e,t),v=Xm([m,y],e,t);return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(y),v}if(nt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1){const f=new VL(r.map(m=>m.shape),e);return t.runWebGLProgram(f,r,s)}const{tensors2D:o,outShape:l}=function(f,m,y){const v=qa(f.map(S=>S.shape),m);return{tensors2D:f.map(S=>Zt({inputs:{x:S},attrs:{shape:[-1,ke(S.shape.slice(m))]},backend:y})),outShape:v}}(r,e,t),c=new UL(o.map(f=>f.shape)),p=t.runWebGLProgram(c,o,s);o.forEach(f=>t.disposeIntermediateTensorInfo(f));const d=Zt({inputs:{x:p},attrs:{shape:l},backend:t});return t.disposeIntermediateTensorInfo(p),d}function TM(r){const{inputs:e,backend:t,attrs:s}=r,{axis:i}=s,o=Dn(i,e[0].shape)[0],l=qa(e.map(p=>p.shape),o);if(0===ke(l))return t.makeTensorInfo(l,e[0].dtype,[]);const c=e.filter(p=>ke(p.shape)>0);return 1===c.length?ba({inputs:{x:c[0]},backend:t}):(md(c.map(p=>p.shape),o),Xm(c,o,t))}const GL={kernelName:Kc,backendName:"webgl",kernelFunc:TM};class MM{constructor(e,t=!1,s=null,i=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const l=e.padInfo.top,c=e.padInfo.left,p=e.strideHeight,d=e.strideWidth,f=e.dilationHeight,m=e.dilationWidth,y=e.filterHeight,v=e.filterWidth,S=4*Math.floor(e.inChannels/4),_=e.inChannels%4,k="channelsLast"===e.dataFormat,I=k?1:2,A=k?2:3,R=k?3:1;let P="",U="";s&&(P=i?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`\n          float activation(float x) {\n            ${s}\n          }\n        `,U="result = activation(result);");const W=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${P}\n\n      const ivec2 strides = ivec2(${p}, ${d});\n      const ivec2 pads = ivec2(${l}, ${c});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${R}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${I}], coords[${A}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${y}; wR++) {\n          int xR = xRCorner + wR * ${f};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC++) {\n            int xC = xCCorner + wC * ${m};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${S}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${k}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===_}) {\n\n              if (${k}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${S}) *\n                    getW(wR, wC, ${S}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${S}, xR, xC) *\n                    getW(wR, wC, ${S}, d2);\n              }\n\n            } else if (${2===_}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${S}, d2),\n                getW(wR, wC, ${S} + 1, d2)\n              );\n\n              if (${k}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${S}),\n                  getX(batch, xR, xC, ${S} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${S}, xR, xC),\n                  getX(batch, ${S} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===_}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${S}, d2),\n                getW(wR, wC, ${S} + 1, d2),\n                getW(wR, wC, ${S} + 2, d2)\n              );\n\n              if (${k}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${S}),\n                  getX(batch, xR, xC, ${S} + 1),\n                  getX(batch, xR, xC, ${S} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${S}, xR, xC),\n                  getX(batch, ${S} + 1, xR, xC),\n                  getX(batch, ${S} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${W}\n        ${U}\n        setOutput(result);\n      }\n    `}}class HL{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left,o=e.strideDepth,l=e.strideHeight,c=e.strideWidth,p=e.dilationDepth,d=e.dilationHeight,f=e.dilationWidth,m=e.filterDepth,y=e.filterHeight,v=e.filterWidth,S=4*Math.floor(e.inChannels/4),_=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${o}, ${l}, ${c});\n      const ivec3 pads = ivec3(${t}, ${s}, ${i});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${m}; wF++) {\n          int xF = xFCorner + wF * ${p};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${y}; wR++) {\n            int xR = xRCorner + wR * ${d};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC++) {\n              int xC = xCCorner + wC * ${f};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${S}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===_}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${S}) *\n                  getW(wF, wR, wC, ${S}, d2);\n              } else if (${2===_}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${S}),\n                  getX(batch, xF, xR, xC, ${S} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${S}, d2),\n                  getW(wF, wR, wC, ${S} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===_}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${S}),\n                  getX(batch, xF, xR, xC, ${S} + 1),\n                  getX(batch, xF, xR, xC, ${S} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${S}, d2),\n                  getW(wF, wR, wC, ${S} + 1, d2),\n                  getW(wF, wR, wC, ${S} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jL{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=Za(this.outputShape.length);const{dataFormat:s}=t,i=Fi(),o="channelsLast"===s,l=o?0:1,c=o?1:2,p=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let d="";for(let f=0;f<=1;f++)for(let m=0;m<=1;m++)d+=`\n          blockIndex = rc.y + ${m};\n          pos = rc.x + ${f};\n\n          ${p}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${l}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${c}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${o}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*f+m}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*f+m}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${d}\n\n        ${i.output} = result;\n      }\n    `}}function _M({x:r,filter:e,convInfo:t,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:c=null}){const p=r.shape,d=s.texData.get(r.dataId),v="channelsLast"===t.dataFormat;let S;const _=[];if((1!=p[0]*p[1]*p[2]&&1!==t.outChannels||!(t.inChannels>1e3))&&d.isPacked&&v&&null!=d.texture&&p[2]%2!=0&&He(d.shape.slice(-3),p.slice(-3))){const I={dataId:r.dataId,shape:[1,p[0]*p[1]*(p[2]+1),t.inChannels],dtype:r.dtype},A=d.shape;d.shape=d.shape.slice(),d.shape[d.shape.length-2]++,F(hb(d.shape,I.shape),()=>`packed reshape ${d.shape} to ${I.shape} isn't free`);const R=Zt({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});_.push(R);const P=xb({a:I,b:R,backend:s,transposeA:!1,transposeB:!1,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:l}),U=s.texData.get(P.dataId);F(U.isPacked,()=>"batchMatMul result is expected to be packed"),d.shape=A,U.shape=t.outShape,S=ba({inputs:{x:P},backend:s}),S.shape=t.outShape,_.push(P)}else{const k=Zt({inputs:{x:r},backend:s,attrs:{shape:[1,v?p[0]*p[1]*p[2]:p[0]*p[2]*p[3],t.inChannels]}}),I=Zt({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),A=xb({a:k,b:I,transposeA:!1,transposeB:!1,backend:s,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:l});S=Zt({inputs:{x:A},backend:s,attrs:{shape:t.outShape}}),_.push(k),_.push(I),_.push(A)}for(const k of _)s.disposeIntermediateTensorInfo(k);return S}function kM({x:r,filter:e,convInfo:t,backend:s,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:c=null}){const{filterWidth:p,filterHeight:d,inChannels:f,outWidth:m,outHeight:y,dataFormat:v}=t,S="channelsLast"===v,_=p*d*f,k=y*m,I=[_,k],A=[],R=Zt({inputs:{x:r},backend:s,attrs:{shape:r.shape.slice(1)}}),P=Zt({inputs:{x:e},backend:s,attrs:{shape:[1,_,ke(e.shape)/_]}});A.push(R),A.push(P);const U=new jL(I,t),se=s.runWebGLProgram(U,[R],"float32",[R.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]]),G=Zt({inputs:{x:se},backend:s,attrs:{shape:[1,I[0],I[1]]}});A.push(se),A.push(G);const pe=null!=i,de=null!=o,ye="leakyrelu"===c,Ee=c?mb(c,!0):null,Ne=new hM(G.shape,P.shape,[1,k,t.outChannels],!0,!1,pe,Ee,de,ye),Be=[G,P];if(i&&Be.push(i),de&&Be.push(o),ye){const Xe=s.makeTensorInfo([],"float32",Oa(l,"float32"));Be.push(Xe),A.push(Xe)}const je=s.runWebGLProgram(Ne,Be,"float32"),Ye=Zt({inputs:{x:je},backend:s,attrs:{shape:S?[1,y,m,t.outChannels]:[1,t.outChannels,y,m]}});A.push(je);for(const Xe of A)s.disposeIntermediateTensorInfo(Xe);return Ye}const qL={kernelName:Yc,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,filter:o}=e,{strides:l,pad:c,dataFormat:p,dilations:d,dimRoundingMode:f}=s,m=di(p),y=ls(i.shape,o.shape,l,d,c,f,!1,m);let v;if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if(nt().getBool("WEBGL_CONV_IM2COL")&&1===i.shape[0])v=kM({x:i,filter:o,convInfo:y,backend:t});else{const _=new MM(y);v=t.runWebGLProgram(_,[i,o],"float32")}else v=_M({x:i,filter:o,convInfo:y,backend:t});const S=Zt({inputs:{x:v},backend:t,attrs:{shape:y.outShape}});return t.disposeIntermediateTensorInfo(v),S}};class XL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${"channelsLast"===e.dataFormat}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class KL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,l="channelsLast"===e.dataFormat;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${s-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l?3:1}];\n\n        ivec2 dyCorner = ivec2(coords[${l?1:2}], coords[${l?2:3}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${s} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${l}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${e.strideDepth} - ${e.padInfo.front};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ZL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,i=e.filterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${t-1-e.padInfo.front}, ${s-1-e.padInfo.top}, ${i-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${e.strideDepth}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${s}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${s} - 1 - wR;\n\n            for (int wC = 0; wC < ${i}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${i} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const JL={kernelName:Pd,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,dy:o}=e,{strides:l,pad:c,dataFormat:p,dimRoundingMode:d,filterShape:f}=s,m=di(p),y=ls(i.shape,f,l,1,c,d,!1,m),v=new XL(y);return t.runWebGLProgram(v,[i,o],"float32")}},QL={kernelName:Zc,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{dy:i,filter:o}=e,{inputShape:l,strides:c,pad:p,dataFormat:d,dimRoundingMode:f}=s,m=di(d),y=ls(l,o.shape,c,1,p,f,!1,m),v=new KL(y);return t.runWebGLProgram(v,[i,o],"float32")}},eD={kernelName:Jc,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,filter:o}=e,{strides:l,pad:c,dilations:p}=s,d=Qo(i.shape,o.shape,l,p,c),f=new HL(d);return t.runWebGLProgram(f,[i,o],"float32")}},tD={kernelName:zd,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,dy:o}=e,{strides:l,pad:c,filterShape:p}=s,d=Qo(i.shape,p,l,1,c),f=new YL(d);return t.runWebGLProgram(f,[i,o],"float32")}},nD={kernelName:Bd,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{dy:i,filter:o}=e,{pad:l,strides:c,inputShape:p}=s,d=Qo(p,o.shape,c,1,l),f=new ZL(d);return t.runWebGLProgram(f,[i,o],"float32")}},rD=nr({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),sD={kernelName:Ru,backendName:"webgl",kernelFunc:rD},iD=nr({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),aD={kernelName:Lu,backendName:"webgl",kernelFunc:iD};class oD{constructor(e,t,s,i,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[l,c,p,d]=e,[f]=t,[m,y]=s;this.outputShape=[f,m,y,d];const v="bilinear"===i?1:0,[S,_]=[c-1+".0",p-1+".0"],[k,I,A]=m>1?[""+(c-1)/(m-1),"(y2-y1) * height_ratio",`y1*${S} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${S}`],[R,P,U]=y>1?[""+(p-1)/(y-1),"(x2-x1) * width_ratio",`x1*${_} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${_}`];this.userCode=`\n      const float height_ratio = float(${k});\n      const float width_ratio = float(${R});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${l}) {\n          return;\n        }\n\n        float height_scale = ${I};\n        float width_scale = ${P};\n\n        float in_y = ${A};\n        if( in_y < 0.0 || in_y > ${S} ) {\n          setOutput(float(${o}));\n          return;\n        }\n        float in_x = ${U};\n        if( in_x < 0.0 || in_x > ${_} ) {\n          setOutput(float(${o}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${v} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const lD={kernelName:Ud,backendName:"webgl",kernelFunc:r=>{const{inputs:e,backend:t,attrs:s}=r,{image:i,boxes:o,boxInd:l}=e,{cropSize:c,method:p,extrapolationValue:d}=s,f=new oD(i.shape,o.shape,c,p,d);return t.runWebGLProgram(f,[i,o,l],"float32")}};class EM{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const i=e.length,o=t?"0.0":`getX(${IM(i,"coords")})`,l=e[e.length-1];let c="",p="";t?(c=s?"end != "+(l-1):"end != 0",p=s?"end + 1":"end - 1"):(c=s?`end + pow2 < ${l}`:"end >= pow2",p=s?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${_r(i)} coords = getOutputCoords();\n        int end = ${CM(i,"coords")};\n        float val = ${o};\n        int pow2 = int(pow(2.0, index));\n        if (${c}) {\n          int idx = ${p};\n          ${CM(i,"coords")} = idx;\n          val += getX(${IM(i,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function IM(r,e){if(1===r)return`${e}`;if(2===r)return`${e}.x, ${e}.y`;if(3===r)return`${e}.x, ${e}.y, ${e}.z`;if(4===r)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}function CM(r,e){if(1===r)return`${e}`;if(2===r)return`${e}.y`;if(3===r)return`${e}.z`;if(4===r)return`${e}.w`;throw Error(`Cumulative sum for rank ${r} is not yet supported`)}const uD={kernelName:Qc,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o,exclusive:l,reverse:c}=s,p=i.shape.length,d=In([o],p);let f=i;null!=d&&(f=Oi({inputs:{x:i},backend:t,attrs:{perm:d}}));const m=Xr(1,p)[0];if(m!==p-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${i.shape.length-1} but got axis=${o}`);const y=f.shape[m];let v=ba({inputs:{x:f},backend:t});for(let S=0;S<=Math.ceil(Math.log2(y))-1;S++){const _=new EM(f.shape,!1,c),I=v;v=t.runWebGLProgram(_,[v],v.dtype,[[S]]),t.disposeIntermediateTensorInfo(I)}if(l){const S=new EM(f.shape,l,c),_=v;v=t.runWebGLProgram(S,[v],v.dtype),t.disposeIntermediateTensorInfo(_)}if(null!=d){const S=Oi({inputs:{x:v},backend:t,attrs:{perm:rl(d)}});return t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(f),S}return v}},cD={kernelName:Vd,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,weights:o}=e,{size:l,binaryOutput:c}=s;if(1===i.shape.length){const p=t.readSync(i.dataId),d=t.readSync(o.dataId),f=J2(p,d,o.dtype,o.shape,l);return t.makeTensorInfo([l],o.dtype,f)}if(2===i.shape.length){const p=t.bufferSync(i),d=t.bufferSync(o),f=GR(p,d,l,c);return t.makeTensorInfo(f.shape,o.dtype,f.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${i.shape.length}.`)}};class hD{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const dD={kernelName:Wd,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{blockSize:o,dataFormat:l}=s;F(o>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${o}`);const c=i.shape[0],m=("NHWC"===l?i.shape[1]:i.shape[2])*o,y=("NHWC"===l?i.shape[2]:i.shape[3])*o,v=("NHWC"===l?i.shape[3]:i.shape[1])/(o*o),S=new hD("NHWC"===l?[c,m,y,v]:[c,v,m,y],o,l);return t.runWebGLProgram(S,[i],i.dtype)}};class NM{constructor(e,t=!1,s=null,i=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Za(this.outputShape.length);const l=e.filterHeight,c=e.filterWidth,p=e.outChannels/e.inChannels;let d="",f="";s&&(d=i?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`\n          float activation(float x) {\n            ${s}\n          }\n        `,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${p};\n        int q = d2 - d1 * ${p};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${l}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${c}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}class AM{constructor(e,t=!1,s=null,i=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=Za(this.outputShape.length);const l=e.outChannels/e.inChannels,c=e.padInfo.left,p=e.strideWidth,d=e.dilationWidth,f=e.filterHeight,m=e.filterWidth,y=m;let v="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let I=0;I<m;I++)v+=`\n          vec4 xTexelC${2*I};\n          int xTexelC${2*I}Ready;\n          vec4 xTexelC${2*I+1};\n          int xTexelC${2*I+1}Ready;\n          vec4 xC${I};`;for(let I=0;I<f;I++){for(let A=0;A<m;A++)v+=`\n          xTexelC${2*A} = vec4(0.0);\n          xTexelC${2*A}Ready = 0;\n          xTexelC${2*A+1} = vec4(0.0);\n          xTexelC${2*A+1}Ready = 0;\n          xC${A} = vec4(0.0);`;v+=`\n        xR = xRCorner + ${I} * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      `;for(let A=0;A<(y+1)/2;A++){const R=2*A;if(v+=`\n          xC = xCCorner + ${R*d};\n          `,1===p){if(R<m&&(c%2==1?(v+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${R}Ready == 0) {\n                  xTexelC${R} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${R}.zw = vec2(0.0);\n                  }\n                  xTexelC${R}Ready = 1;\n                }\n              `,v+=1===d&&R>0?`\n                xC${R} = vec4(xTexelC${R-2}.zw, xTexelC${R}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${R} = vec4(previous.zw, xTexelC${R}.xy);\n                  } else {\n                    xC${R} = vec4(0.0, 0.0, xTexelC${R}.xy);\n                  }\n                  `):v+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${R}Ready == 0) {\n                  xTexelC${R} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${R}.zw = vec2(0.0);\n                  }\n                  xTexelC${R}Ready = 1;\n                }\n\n                xC${R} = xTexelC${R};\n                `,R+1<m)){const P=c%2==0?Pc(d):d;d%2==0&&c%2==1||d%2!=0&&c%2!=1?(v+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${P};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${R+1}Ready == 0) {\n                    xTexelC${R+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${R+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${R+1}Ready = 1;\n                  }\n                  `,d>1&&(v+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${R}Ready == 0) {\n                      xTexelC${R} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${R}Ready = 1;\n                    }\n                    `),v+=`\n                  xC${R+1} = vec4(xTexelC${R}.zw, xTexelC${R+1}.xy);\n                  `):v+=1===P?`\n                    xC${R+1} = xTexelC${R};\n                    `:`\n                    xCOffset = xC + ${P};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${R+1}Ready == 0) {\n                      xTexelC${R+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${R+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${R+1}Ready = 1;\n                    }\n\n                    xC${R+1} = xTexelC${R+1};\n                    `}}else R<m&&(c%2==1?(v+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${R}Ready == 0) {\n                  xTexelC${R} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${R}.zw = vec2(0.0);\n                  }\n                  xTexelC${R}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${R+1}Ready == 0) {\n                  xTexelC${R+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${R+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${R+1}Ready = 1;\n                }\n\n                xC${R} = vec4(xTexelC${R}.zw, xTexelC${R+1}.zw);\n              `,R+1<m&&(v+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${R+1} = vec4(xTexelC${R+1}.xy, final.xy);\n                `)):(v+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${R}Ready == 0) {\n                  xTexelC${R} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${R}.zw = vec2(0.0);\n                  }\n                  xTexelC${R}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${R+1}Ready == 0) {\n                  xTexelC${R+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${R+1}.zw = vec2(0.);\n                  }\n                  xTexelC${R+1}Ready = 1;\n                }\n\n                xC${R} = vec4(\n                  xTexelC${R}.xy, xTexelC${R+1}.xy);\n              `,R+1<m&&(v+=`\n                  xC${R+1} = vec4(xTexelC${R}.zw, xTexelC${R+1}.zw);\n                `)));R<m&&(v+=`\n            wTexel = getW(${I}, ${R}, d1, q);\n            dotProd += xC${R} * vec4(wTexel.xz, wTexel.xz);\n          `,R+1<m&&(v+=`\n              wTexel = getW(${I}, ${R+1}, d1, q);\n              dotProd += xC${R+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}v+="\n        }\n      "}let S="",_="";s&&(S=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:o?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,_="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${S}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${l};\n        int q = d2 - d1 * ${l};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${v}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${k}\n        ${_}\n        setOutput(result);\n      }\n    `}}const pD={kernelName:eh,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,filter:o}=e,{strides:l,pad:c,dilations:p,dimRoundingMode:d}=s;let f=p;null==f&&(f=[1,1]),F(ts(l,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${f}'`);const m=ls(i.shape,o.shape,l,f,c,d,!0);let y;return y=nt().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels==1?new AM(m):new NM(m),t.runWebGLProgram(y,[i,o],"float32",[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]])}};class fD{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${e.outChannels/e.inChannels} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${e.strideHeight} - ${e.padInfo.top};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${e.strideWidth} - ${e.padInfo.left};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class mD{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,p=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${t-1-e.padInfo.top}, ${s-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${s} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${p}; dm++) {\n              int d2 = d1 * ${p} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const gD={kernelName:Ll,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,dy:o}=e,{strides:l,dilations:c,pad:p,dimRoundingMode:d,filterShape:f}=s,m=ls(i.shape,f,l,c,p,d,!0),y=new fD(m);return t.runWebGLProgram(y,[i,o],"float32")}},yD={kernelName:Dl,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{dy:i,filter:o}=e,{strides:l,dilations:c,pad:p,dimRoundingMode:d,inputShape:f}=s,m=ls(f,o.shape,l,c,p,d,!0),y=new mD(m);return t.runWebGLProgram(y,[i,o],"float32")}};class xD{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const bD={kernelName:Du,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t}=r,{x:s}=e,i=[...s.shape,...s.shape],o=ke(s.shape),l=Zt({inputs:{x:s},backend:t,attrs:{shape:[o]}}),c=new xD(o),p=t.runWebGLProgram(c,[l],l.dtype),d=Zt({inputs:{x:p},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(p),d}};class vD{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:i,strideHeight:o,strideWidth:l,filterHeight:c,filterWidth:p,dilationHeight:d,dilationWidth:f}=e,{top:m,left:y}=i;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${m}, ${y});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${c}; h++) {\n          int hIn = hBeg + h * ${d};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${p}; w++) {\n              int wIn = wBeg + w * ${f};\n\n              if (wIn >= 0 && wIn < ${s}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const wD={kernelName:ka,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,filter:o}=e,{strides:l,pad:c,dilations:p}=s,d=Zl(i.shape,o.shape,l,c,"NHWC",p);let f;const m=new vD(d);f=t.runWebGLProgram(m,[i,o],"float32");const y=Zt({inputs:{x:f},backend:t,attrs:{shape:d.outShape}});return t.disposeIntermediateTensorInfo(f),y}},SD={kernelName:th,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{equation:i}=s,o=e,{allDims:l,summedDims:c,idDims:p}=uy(i,o.length);hy(l.length,p,o);const{path:d,steps:f}=dy(c,p),m=f.length;let y=null,v=l.length;const S=[];for(let _=0;_<m;++_){for(const k of f[_]){const{permutationIndices:I,expandDims:A}=cy(v,p[k]);let R;py(I)?R=o[k]:(R=Oi({inputs:{x:o[k]},backend:t,attrs:{perm:I}}),S.push(R));const P=R.shape.slice();for(let U=0;U<A.length;++U)P.splice(A[U],0,1);He(R.shape,P)||(R=Zt({inputs:{x:R},backend:t,attrs:{shape:P}}),S.push(R)),null===y?y=R:(y=Fw({inputs:{a:R,b:y},backend:t}),S.push(y))}_<m-1&&(d[_]>=0&&(y=yb({inputs:{x:y},backend:t,attrs:{axis:d[_]-(l.length-v),keepDims:!1}}),S.push(y)),v--)}for(const _ of S)_!==y&&t.disposeIntermediateTensorInfo(_);return y}},TD=nr({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),MD={kernelName:Fu,backendName:"webgl",kernelFunc:TD},_D={kernelName:pf,backendName:"webgl",kernelFunc:r=>{const{inputs:e,backend:t}=r,{dy:s,y:i}=e,o=nt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Vy("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,i.shape):new jm("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,i.shape);return t.runWebGLProgram(o,[s,i],s.dtype)}},kD=si({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:qR}),ED={kernelName:ds,backendName:"webgl",kernelFunc:kD},ID=nr({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${gd};\n  float a1 = ${qp};\n  float a2 = ${ay};\n  float a3 = ${vm};\n  float a4 = ${wm};\n  float a5 = ${oy};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),CD={kernelName:nh,backendName:"webgl",kernelFunc:ID},RM="return exp(x);",LM=nr({opSnippet:RM,packedOpSnippet:RM,cpuKernelImpl:XR}),ND={kernelName:so,backendName:"webgl",kernelFunc:LM};function Pw(r){const{inputs:e,attrs:t,backend:s}=r,{dim:i}=t,{input:o}=e,l=o.shape.length,c=o.shape.slice();let p=i;return i<0&&(F(-(l+1)<=i,()=>`Axis must be in the interval [${-(l+1)}, ${l}]`),p=l+i+1),c.splice(p,0,1),Zt({inputs:{x:o},backend:s,attrs:{shape:c}})}const AD={kernelName:$l,backendName:"webgl",kernelFunc:Pw},DM="return exp(x) - 1.0;",RD=nr({opSnippet:DM,packedOpSnippet:DM,cpuKernelImpl:KR}),LD={kernelName:No,backendName:"webgl",kernelFunc:RD};class FM{constructor(e,t,s){this.variableNames=["real","imag"];const i=t[1];this.outputShape=t;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,l=s?`${i}.0`:"1.0";let c;if("real"===e)c="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);c="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${o};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${c}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${i});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${i}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${l};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function $M(r,e,t){const s=t.texData.get(r.dataId),i=ke(r.shape),o=r.shape[r.shape.length-1],l=Zt({inputs:{x:r},backend:t,attrs:{shape:[i/o,o]}}),c=l.shape,p=new FM("real",c,e),d=new FM("imag",c,e),f=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:c},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:c}],m=t.runWebGLProgram(p,f,"float32"),y=t.runWebGLProgram(d,f,"float32"),v=Nd({inputs:{real:m,imag:y},backend:t});t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(y);const S=Zt({inputs:{x:v},backend:t,attrs:{shape:r.shape}});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(v),S}const DD={kernelName:Gd,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t}=r,{input:s}=e;return $M(s,!1,t)}};class FD{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Hy(r){const{backend:e,attrs:t}=r,{shape:s,value:i}=t;let{dtype:o}=t;if(o=o||to(i),"string"===o){const l=Zn(o,ke(s));return l.fill(i),e.makeTensorInfo(s,o,l)}{const l=new FD(s,i);return e.runWebGLProgram(l,[],o,[[i]])}}const $D={kernelName:rh,backendName:"webgl",kernelFunc:Hy};class OD{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const PD={kernelName:sh,backendName:"webgl",kernelFunc:({inputs:r,backend:e})=>{const{image:t}=r,s=e,i=new OD(t.shape);return s.runWebGLProgram(i,[t],t.dtype)}},OM="return floor(x);",zD=nr({opSnippet:OM,packedOpSnippet:OM,cpuKernelImpl:YR}),BD={kernelName:Ol,backendName:"webgl",kernelFunc:zD},UD=si({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),VD={kernelName:$u,backendName:"webgl",kernelFunc:UD};class WD{constructor(e){this.variableNames=["A"];const t=Fi(),[s,i]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class GD{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=Fi(),[s,i]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${i}.0, ${s}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const HD={kernelName:zo,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r;let{pixels:i}=e;const{numChannels:o}=s,l="undefined"!=typeof HTMLVideoElement&&i instanceof HTMLVideoElement,c="undefined"!=typeof HTMLImageElement&&i instanceof HTMLImageElement,[p,d]=l?[i.videoWidth,i.videoHeight]:[i.width,i.height],f=[d,p],m=[d,p,o];(c||l)&&(null==Km&&(Km=document.createElement("canvas").getContext("2d")),Km.canvas.width=p,Km.canvas.height=d,Km.drawImage(i,0,0,p,d),i=Km.canvas);const y=t.makeTensorInfo(f,"int32");t.texData.get(y.dataId).usage=Ya.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(y.dataId),i);const v=nt().getBool("WEBGL_PACK")?new GD(m):new WD(m),S=t.runWebGLProgram(v,[y],"int32");return t.disposeData(y.dataId),S}};let Km;const jD={kernelName:Bo,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,filter:o,bias:l,preluActivationWeights:c}=e,{strides:p,pad:d,dataFormat:f,dilations:m,dimRoundingMode:y,activation:v,leakyreluAlpha:S}=s,_=di(f),k=ls(i.shape,o.shape,p,m,d,y,!1,_);let I;const A=[];if(1!==k.filterHeight||1!==k.filterWidth||1!==k.dilationHeight||1!==k.dilationWidth||1!==k.strideHeight||1!==k.strideWidth||"SAME"!==k.padInfo.type&&"VALID"!==k.padInfo.type)if(nt().getBool("WEBGL_CONV_IM2COL")&&1===i.shape[0])I=kM({x:i,filter:o,convInfo:k,backend:t,bias:l,activation:v,preluActivationWeights:c,leakyreluAlpha:S});else{const P=null!=l,U=null!=c,W="leakyrelu"===v,se=v?mb(v,!1):null,G=new MM(k,P,se,U,W),pe=[i,o];if(l&&pe.push(l),c&&pe.push(c),W){const de=t.makeTensorInfo([],"float32",Oa(S,"float32"));pe.push(de),A.push(de)}I=t.runWebGLProgram(G,pe,"float32")}else I=_M({x:i,filter:o,convInfo:k,backend:t,bias:l,activation:v,preluActivationWeights:c,leakyreluAlpha:S});const R=Zt({inputs:{x:I},backend:t,attrs:{shape:k.outShape}});return A.push(I),A.forEach(P=>t.disposeIntermediateTensorInfo(P)),R}},qD={kernelName:ap,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,filter:o,bias:l,preluActivationWeights:c}=e,{strides:p,pad:d,dilations:f,dimRoundingMode:m,activation:y,leakyreluAlpha:v}=s,S=[];let _=f;null==_&&(_=[1,1]),F(ts(p,_),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${p} and dilations '${_}'`);const k=ls(i.shape,o.shape,p,_,d,m,!0),I=nt().getBool("WEBGL_PACK_DEPTHWISECONV")&&k.strideWidth<=2&&k.outChannels/k.inChannels==1,A=y?mb(y,I):null,R=[i,o],P=null!=l,U=null!=c,W="leakyrelu"===y;if(P&&R.push(l),U&&R.push(c),W){const de=t.makeTensorInfo([],"float32",Oa(v,"float32"));R.push(de),S.push(de)}let se;se=I?new AM(k,P,A,U,W):new NM(k,P,A,U,W);const pe=t.runWebGLProgram(se,R,"float32",[[k.padInfo.top,k.padInfo.left],[k.strideHeight,k.strideWidth],[k.dilationHeight,k.dilationWidth],[k.inHeight,k.inWidth]]);return S.forEach(de=>t.disposeIntermediateTensorInfo(de)),pe}};class XD{constructor(e,t,s){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=s;const i=_r(t.length),o=_r(s.length);this.userCode=`\n        ${i} strides = ${i}(${this.strides});\n         void main() {\n          ${o} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${this.sliceDim>1?"strides[j]":"strides"};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const KD={kernelName:Hd,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t}=r,{params:s,indices:i}=e,o=i.shape,l=o[o.length-1],c=ke(s.shape),[p,d,f,m]=Df(s,i),y=Zt({inputs:{x:i},backend:t,attrs:{shape:[d,l]}}),v=Zt({inputs:{x:s},backend:t,attrs:{shape:[ke(s.shape)/f,f]}});if(t.shouldExecuteOnCPU([s,i])||"string"===s.dtype){const I=t.readSync(i.dataId),A=t.bufferSync(s),R=ZR(I,A,s.dtype,d,l,f,m,s.shape,c);return t.makeTensorInfo(p,s.dtype,R.values)}const S=new XD(l,m,[d,f]),_=t.runWebGLProgram(S,[v,y],v.dtype),k=Zt({inputs:{x:_},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(_),k}};class YD{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=_r(this.rank),i=function(o,l){const c=["resRC.x","resRC.y","resRC.z","resRC.w"],p=[];for(let d=0;d<o.length;d++)p.push(2===d?"int(getIndices(resRC.x, resRC.z))":`${c[d]}`);return p.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${i}));\n      }\n    `}}function PM(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,indices:o}=e,{axis:l,batchDims:c}=s,p=my(i,o,Dn(l,i.shape)[0],c),d=ke(o.shape),f=[],m=Zt({inputs:{x:i},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),y=Zt({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,d/p.batchSize]}});f.push(m),f.push(y);const v=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize];if(t.shouldExecuteOnCPU([i,o])||"string"===i.dtype){const I=t.bufferSync(y),A=t.bufferSync(m),R=JR(A,I,v);return f.forEach(P=>t.disposeIntermediateTensorInfo(P)),t.makeTensorInfo(p.outputShape,R.dtype,R.values)}const S=new YD(m.shape,v),_=t.runWebGLProgram(S,[m,y],m.dtype);f.push(_);const k=Zt({inputs:{x:_},backend:t,attrs:{shape:p.outputShape}});return f.forEach(I=>t.disposeIntermediateTensorInfo(I)),k}const ZD={kernelName:Ea,backendName:"webgl",kernelFunc:PM},JD=si({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:QR,dtype:"bool"}),QD={kernelName:jd,backendName:"webgl",kernelFunc:JD},eF=si({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:e3}),tF={kernelName:Ao,backendName:"webgl",kernelFunc:eF},nF={kernelName:ff,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t}=r,{input:s}=e;return $M(s,!0,t)}},rF=nr({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),sF={kernelName:oh,backendName:"webgl",kernelFunc:rF},iF=nr({opSnippet:"return float(isinf(x));",dtype:"bool"}),aF={kernelName:lh,backendName:"webgl",kernelFunc:iF},oF=nr({opSnippet:"return float(isnan(x));",dtype:"bool"}),lF={kernelName:uh,backendName:"webgl",kernelFunc:oF},uF=si({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:t3,dtype:"bool"}),cF={kernelName:Xd,backendName:"webgl",kernelFunc:uF},hF=si({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:n3,dtype:"bool"}),dF={kernelName:Kd,backendName:"webgl",kernelFunc:hF},pF={kernelName:gf,backendName:"webgl",kernelFunc:function(r){const{backend:e,attrs:t}=r,{start:s,stop:i,num:o}=t,l=r3(s,i,o);return e.makeTensorInfo([l.length],"float32",l)}},fF=nr({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:s3}),mF={kernelName:ch,backendName:"webgl",kernelFunc:fF},gF=nr({opSnippet:"return log(1.0 + x);"}),yF={kernelName:hh,backendName:"webgl",kernelFunc:gF},xF=si({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),bF={kernelName:Yd,backendName:"webgl",kernelFunc:xF},vF=nr({opSnippet:"return float(!(x >= 1.0));"}),wF={kernelName:dh,backendName:"webgl",kernelFunc:vF},SF=si({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),TF={kernelName:io,backendName:"webgl",kernelFunc:SF};class MF{constructor(e,t,s,i,o){this.variableNames=["x"],this.outputShape=[];const l=t,c=e[3]-1;let p;this.outputShape=e;const d=`float(${s}) + float(${i}) * sum`;p=.5===o?`inversesqrt(${d})`:1===o?`1.0/(${d})`:`exp(log(${d}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${l}; j <= ${l}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${c}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${p};\n        setOutput(val);\n      }\n    `}}class _F{constructor(e,t,s,i,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const l=t,c=e[3]-1;let p;this.outputShape=e;const d=`float(${s}) + float(${i}) * sum`;p=.5===o?`inversesqrt(${d})`:1===o?`1.0/(${d})`:`exp(log(${d}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${l};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${l}; j <= ${l}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${c}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${p};\n        setOutput(result);\n      }\n    `}}const kF={kernelName:Zd,backendName:"webgl",kernelFunc:r=>{const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{depthRadius:o,bias:l,alpha:c,beta:p}=s,d=nt().getBool("WEBGL_PACK_NORMALIZATION")?new _F(i.shape,o,l,c,p):new MF(i.shape,o,l,c,p);return t.runWebGLProgram(d,[i],i.dtype)}};class EF{constructor(e,t,s,i,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=i,this.beta=o,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${i}) * norm + float(${s});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${i})\n                * float(${o})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${o});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const IF={kernelName:yf,backendName:"webgl",kernelFunc:r=>{const{inputs:e,backend:t,attrs:s}=r,{x:i,y:o,dy:l}=e,{depthRadius:c,bias:p,alpha:d,beta:f}=s,m=new EF(i.shape,c,p,d,f);return t.runWebGLProgram(m,[i,o,l],i.dtype)}};function zM(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{reductionIndices:o,keepDims:l}=s,c=i.shape.length,p=Dn(o,i.shape);let d=p;const f=In(d,c),m=null!=f,y=t.shouldExecuteOnCPU([i]);let v=i;if(m){if(y){const A=t.texData.get(v.dataId).values,R=new Array(c);for(let U=0;U<R.length;U++)R[U]=i.shape[f[U]];const P=Lw(A,i.shape,i.dtype,f,R);v=t.makeTensorInfo(R,i.dtype),t.texData.get(v.dataId).values=P}else v=gb(i,f,t);d=Xr(d.length,c)}Cs("max",d,c);const[S,_]=gs(v.shape,d);let k,I=S;if(l&&(I=br(S,p)),y){const A=t.texData.get(v.dataId).values,R=i3(A,ke(_),I,i.dtype);k=t.makeTensorInfo(I,i.dtype),t.texData.get(k.dataId).values=R}else k=function(A,R,P,U){const W=ke(R),se=Zt({inputs:{x:A},attrs:{shape:[ke(A.shape)/W,W]},backend:U}),G=of(se,A.dtype,"max",U),pe=Zt({inputs:{x:G},attrs:{shape:P},backend:U});return U.disposeIntermediateTensorInfo(se),U.disposeIntermediateTensorInfo(G),pe}(v,_,I,t);return m&&t.disposeIntermediateTensorInfo(v),k}const CF={kernelName:Jd,backendName:"webgl",kernelFunc:zM},NF=si({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:a3}),AF={kernelName:ph,backendName:"webgl",kernelFunc:NF},RF={kernelName:Qd,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e;By(i,"maxPool");const{filterSize:o,strides:l,pad:c,dimRoundingMode:p}=s;F(ts(l,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${l} and dilations '1'`);const d=hi(i.shape,o,l,1,c,p);if(1===d.filterWidth&&1===d.filterHeight&&He(d.inShape,d.outShape))return ba({inputs:{x:i},backend:t});const f=new Wy(d,"max",!1);return t.runWebGLProgram(f,[i],i.dtype)}},LF={kernelName:ep,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{filterSize:o,strides:l,pad:c,dataFormat:p,dimRoundingMode:d}=s,f=la(i.shape,o,l,[1,1,1],c,d,p),m=new $w(f,"max",!1);return t.runWebGLProgram(m,[i],i.dtype)}};class DF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const o=e.effectiveFilterHeight,l=e.effectiveFilterWidth;this.userCode=`\n      const ivec2 pads = ivec2(${o-1-e.padInfo.top}, ${l-1-e.padInfo.left});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n          wR += ${e.dilationHeight}) {\n          float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${o*l-1} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${l} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class FF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth;this.userCode=`\n      const ivec3 pads = ivec3(${p-1-e.padInfo.front}, ${d-1-e.padInfo.top}, ${f-1-e.padInfo.left});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${p};\n           wD += ${e.dilationDepth}) {\n          float dyD = float(dyDCorner + wD) / ${e.strideDepth}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${e.dilationHeight}) {\n            float dyR = float(dyRCorner + wR) / ${e.strideHeight}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${f};\n                wC += ${e.dilationWidth}) {\n              float dyC = float(dyCCorner + wC) / ${e.strideWidth}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p*d*f-1} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${d} * ${f} +\n                  wR * ${f} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const $F={kernelName:bf,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{dy:i,input:o}=e,l=o,{filterSize:c,strides:p,pad:d,dimRoundingMode:f}=s,m=la(l.shape,c,p,[1,1,1],d,f),y=new $w(m,"max",!0),v=t.runWebGLProgram(y,[l],l.dtype),S=new FF(m),_=t.runWebGLProgram(S,[i,v],l.dtype);return t.disposeIntermediateTensorInfo(v),_}},OF={kernelName:xf,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{dy:i,input:o,output:l}=e,c=o;By([o,l],"maxPoolGrad");const{filterSize:p,strides:d,pad:f,dimRoundingMode:m}=s,y=hi(c.shape,p,d,1,f,m),v=new Wy(y,"max",!0),S=t.runWebGLProgram(v,[c],c.dtype),_=new DF(y),k=t.runWebGLProgram(_,[i,S],c.dtype);return t.disposeIntermediateTensorInfo(S),k}},PF={kernelName:fh,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{const{x:s}=r,{filterSize:i,strides:o,pad:l,includeBatchInIndex:c}=e,p=t;F(4===s.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const d=[1,1];F(ts(o,d),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`);const f=hi(s.shape,i,o,d,l),[m,y]=function(v,S,_,k){let I=new Wy(_,"max",!1);const A=k.runWebGLProgram(I,[v],"float32");return I=new Wy(_,"max",!0,!0,S),[A,k.runWebGLProgram(I,[v],"float32")]}(s,c,f,p);return[m,y]}},zF={kernelName:Ji,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{const{x:s}=r,{keepDims:i,axis:o}=e,l=t,c=s.shape.length,p=Dn(o,s.shape);let d=p;const f=In(d,c),m=null!=f,y=l.shouldExecuteOnCPU([s]),v=[];let S=s;if(m){if(y){const R=l.texData.get(S.dataId).values,P=new Array(c);for(let W=0;W<P.length;W++)P[W]=s.shape[f[W]];const U=Lw(R,s.shape,s.dtype,f,P);S=l.makeTensorInfo(P,s.dtype),l.texData.get(S.dataId).values=U}else S=gb(s,f,l);v.push(S),d=Xr(d.length,c)}Cs("sum",d,c);const[_,k]=gs(S.shape,d);let I=_;i&&(I=br(_,p));const A=function(R,P,U,W){const se=ke(P),G=Zt({inputs:{x:R},attrs:{shape:[ke(R.shape)/se,se]},backend:W}),pe=of(G,"float32","mean",W),de=Zt({inputs:{x:pe},attrs:{shape:U},backend:W});return W.disposeIntermediateTensorInfo(G),W.disposeIntermediateTensorInfo(pe),de}(S,k,I,l);for(const R of v)l.disposeIntermediateTensorInfo(R);return A}},BF={kernelName:Jr,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o,keepDims:l}=s,c=i.shape.length,p=Dn(o,i.shape);let d=p;const f=In(d,c);let m=i;null!=f&&(m=Oi({inputs:{x:i},backend:t,attrs:{perm:f}}),d=Xr(d.length,i.shape.length)),Cs("min",d,c);const[y,v]=gs(m.shape,d),S=Zt({inputs:{x:m},backend:t,attrs:{shape:[-1,ke(v)]}}),_=of(S,S.dtype,"min",t);let k;return k=Zt(l?{inputs:{x:_},backend:t,attrs:{shape:br(y,p)}}:{inputs:{x:_},backend:t,attrs:{shape:y}}),t.disposeIntermediateTensorInfo(S),t.disposeIntermediateTensorInfo(_),null!=f&&t.disposeIntermediateTensorInfo(m),k}},UF=si({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:o3}),VF={kernelName:Ro,backendName:"webgl",kernelFunc:UF};class WF{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);const i=e.length,o=_r(i),l=t.map(f=>f[0]).join(","),c=t.map((f,m)=>f[0]+e[m]).join(","),p=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i),d="reflect"===s?0:1;this.userCode=1!==i?`\n      ${o} start = ${o}(${l});\n      ${o} end = ${o}(${c});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        for (int i = 0; i < ${i}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${d};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${d};\n          }\n        }\n        ${o} coords = outC - start;\n        setOutput(getX(${p}));\n      }\n    `:`\n        int start = ${l};\n        int end = ${c};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${d};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${d};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class GF{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((S,_)=>S[0]+e[_]+S[1]);const i=e.length,o=_r(i),l=t.map(S=>S[0]).join(","),c=t.map((S,_)=>S[0]+e[_]).join(","),p=$i("rc",i),d=$i("source",i),f=`${p[i-1]} < ${this.outputShape[i-1]}`,m=1===i?"source":`vec2(${d.slice(-2).join()})`,y="reflect"===s?0:1;let v="";if(1===i){const S=`\n        ${o} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${y};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${y};\n        }\n        source -= start;\n      `;v=`\n        ${o} rc = outputLoc;\n        ${S}\n        result[0] = getChannel(getX(${d.join()}), ${m});\n        ${p[i-1]} += 1;\n        if(${f}) {\n          ${S}\n          result[1] = getChannel(getX(${d.join()}), ${m});\n        }\n      `}else{const S=`\n        ${o} source = rc;\n        ${o} lt = ${o}(lessThan(source, start));\n        ${o} gte = ${o}(greaterThanEqual(source, end));\n        ${o} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${y}) +\n                gte * ((end - 1) * 2 - source + ${y});\n        source -= start;\n      `;v=`\n        ${o} rc = outputLoc;\n        ${S}\n        result[0] = getChannel(getX(${d.join()}), ${m});\n        ${p[i-1]} += 1;\n        if(${f}) {\n          ${S}\n          result[1] = getChannel(getX(${d.join()}), ${m});\n        }\n        rc = outputLoc;\n        ${p[i-2]} += 1;\n        if(${p[i-2]} < ${this.outputShape[i-2]}) {\n          ${S}\n          result[2] = getChannel(getX(${d.join()}), ${m});\n          ${p[i-1]} += 1;\n          if(${f}) {\n            ${S}\n            result[3] = getChannel(getX(${d.join()}), ${m});\n          }\n        }\n      `}this.userCode=`\n      const ${o} start = ${o}(${l});\n      const ${o} end = ${o}(${c});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${v}\n        setOutput(result);\n      }\n    `}}const HF={kernelName:Ia,backendName:"webgl",kernelFunc:({inputs:r,backend:e,attrs:t})=>{const{x:s}=r,{paddings:i,mode:o}=t,l=nt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GF(s.shape,i,o):new WF(s.shape,i,o);return e.runWebGLProgram(l,[s],s.dtype)}},jF=si({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),qF={kernelName:ao,backendName:"webgl",kernelFunc:jF};class XF{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const BM=si({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),KF={kernelName:Co,backendName:"webgl",kernelFunc:BM},UM="return a - b;",VM=si({opSnippet:UM,packedOpSnippet:UM,supportsComplex:!0,cpuKernelImpl:T3}),YF={kernelName:Hs,backendName:"webgl",kernelFunc:VM};function WM(r){const{inputs:e,backend:t,attrs:s}=r,{logits:i}=e,{dim:o}=s,l=Dn([o],i.shape),c=zM({inputs:{x:i},backend:t,attrs:{reductionIndices:l,keepDims:!1}}),p=br(c.shape,l),d=Zt({inputs:{x:c},backend:t,attrs:{shape:p}}),f=VM({inputs:{a:i,b:d},backend:t}),m=LM({inputs:{x:f},backend:t}),y=yb({inputs:{x:m},backend:t,attrs:{axis:l,keepDims:!1}}),v=Zt({inputs:{x:y},backend:t,attrs:{shape:p}}),S=BM({inputs:{a:m,b:v},backend:t});return t.disposeIntermediateTensorInfo(c),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(y),t.disposeIntermediateTensorInfo(v),S}const ZF={kernelName:Vu,backendName:"webgl",kernelFunc:WM},JF={kernelName:Ws,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{logits:i}=e,{numSamples:o,seed:l,normalized:c}=s,p=c?i:WM({inputs:{logits:i},backend:t,attrs:{dim:i.shape.length-1}}),m=new XF(p.shape[0],p.shape[1],o),v=t.runWebGLProgram(m,[p],"int32",[[l]]);return c||t.disposeIntermediateTensorInfo(p),v}},GM="return -x;",QF={kernelName:Pu,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t}=r,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.texData.get(s.dataId),[l,c]=u3(o.values,s.shape,s.dtype);return t.makeTensorInfo(c,s.dtype,l)}let i;return i=nt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Hm(s.shape,GM):new Cd(s.shape,GM),t.runWebGLProgram(i,[s],s.dtype)}},e$=fm,t$={kernelName:mh,backendName:"webgl",kernelFunc:function(r){Zr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=r,{boxes:i,scores:o}=e,{maxOutputSize:l,iouThreshold:c,scoreThreshold:p}=s,d=t.readSync(i.dataId),f=t.readSync(o.dataId),{selectedIndices:m}=e$(d,f,l,c,p);return t.makeTensorInfo([m.length],"int32",new Int32Array(m))}},n$=Up,r$={kernelName:tp,backendName:"webgl",kernelFunc:function(r){Zr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=r,{boxes:i,scores:o}=e,{maxOutputSize:l,iouThreshold:c,scoreThreshold:p,padToMaxOutputSize:d}=s,f=t.readSync(i.dataId),m=t.readSync(o.dataId),{selectedIndices:y,validOutputs:v}=n$(f,m,l,c,p,d);return[t.makeTensorInfo([y.length],"int32",new Int32Array(y)),t.makeTensorInfo([],"int32",new Int32Array([v]))]}},s$=Vp,i$={kernelName:np,backendName:"webgl",kernelFunc:function(r){Zr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=r,{boxes:i,scores:o}=e,{maxOutputSize:l,iouThreshold:c,scoreThreshold:p,softNmsSigma:d}=s,f=t.readSync(i.dataId),m=t.readSync(o.dataId),y=l,v=c,S=p,_=d,{selectedIndices:k,selectedScores:I}=s$(f,m,y,v,S,_);return[t.makeTensorInfo([k.length],"int32",new Int32Array(k)),t.makeTensorInfo([I.length],"float32",new Float32Array(I))]}};class a${constructor(e,t,s,i){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${i}), float(${s}),\n                      float(index == coords.y)));\n      }\n    `}}const o$={kernelName:It,backendName:"webgl",kernelFunc:r=>{const{inputs:e,backend:t,attrs:s}=r,{indices:i}=e,{depth:o,onValue:l,offValue:c}=s,p=ke(i.shape),d=new a$(p,o,l,c),f=Zt({inputs:{x:i},backend:t,attrs:{shape:[p]}}),m=t.runWebGLProgram(d,[f],i.dtype);t.disposeIntermediateTensorInfo(f);const y=Zt({inputs:{x:m},backend:t,attrs:{shape:[...i.shape,o]}});return t.disposeIntermediateTensorInfo(m),y}};function wb(r){const{inputs:e,backend:t}=r,{x:s}=e;if("complex64"===s.dtype){const i=Gy({inputs:{input:s},backend:t}),o=wb({inputs:{x:i},backend:t}),l=vb({inputs:{input:s},backend:t}),c=wb({inputs:{x:l},backend:t}),p=Nd({inputs:{real:o,imag:c},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(c),p}return Hy({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:t})}const l$={kernelName:ip,backendName:"webgl",kernelFunc:wb},u$={kernelName:gh,backendName:"webgl",kernelFunc:function r(e){const{inputs:t,backend:s}=e,{x:i}=t;if("string"===i.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===i.dtype){const o=Gy({inputs:{input:i},backend:s}),l=r({inputs:{x:o},backend:s}),c=vb({inputs:{input:i},backend:s}),p=wb({inputs:{x:c},backend:s}),d=Nd({inputs:{real:l,imag:p},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),s.disposeIntermediateTensorInfo(c),s.disposeIntermediateTensorInfo(p),d}return Hy({attrs:{shape:i.shape,dtype:i.dtype,value:1},backend:s})}},c$={kernelName:zr,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{axis:i}=s;if(1===e.length)return Pw({inputs:{input:e[0]},backend:t,attrs:{dim:i}});const o=e[0].shape,l=e[0].dtype;e.forEach(d=>{qe(o,d.shape,"All tensors passed to stack must have matching shapes"),F(l===d.dtype,()=>"All tensors passed to stack must have matching dtypes")});const c=[],p=TM({inputs:e.map(d=>{const f=Pw({inputs:{input:d},backend:t,attrs:{dim:i}});return c.push(f),f}),backend:t,attrs:{axis:i}});return c.forEach(d=>t.disposeIntermediateTensorInfo(d)),p}};class h${constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((d,f)=>d[0]+e[f]+d[1]);const i=e.length,o=_r(i),l=t.map(d=>d[0]).join(","),c=t.map((d,f)=>d[0]+e[f]).join(","),p=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,i);this.userCode=1!==i?`\n      ${o} start = ${o}(${l});\n      ${o} end = ${o}(${c});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${o} coords = outC - start;\n          setOutput(getX(${p}));\n        }\n      }\n    `:`\n        int start = ${l};\n        int end = ${c};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class d${constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((_,k)=>_[0]+e[k]+_[1]);const i=e.length,o=_r(i),l=t.map(_=>_[0]).join(","),c=t.map((_,k)=>_[0]+e[k]).join(","),p=$i("rc",i),d=$i("source",i),f=`${p[i-1]} < ${this.outputShape[i-1]}`,m=1===i?"source":`vec2(${d.slice(-2).join()})`,y=[`${o} rc = outputLoc;`,`${p[i-1]} += 1;\n       if(${f}) {\n      `,1===i?"":`}\n       rc = outputLoc;\n       ${p[i-2]} += 1;\n       if(${p[i-2]} < ${this.outputShape[i-2]}) {`,1===i?"":`  ${p[i-1]} += 1;\n         if(${f}) {`],v=1===i?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let S="";for(let _=0,k=1===i?2:4;_<k;_++)S+=`\n        ${y[_]}\n        if (${v}) {\n          result[${_}] = float(value);\n        } else {\n          ${o} source = rc - start;\n          result[${_}] = getChannel(getX(${d.join()}), ${m});\n        }\n      `;S+=1===i?"} ":"}}",this.userCode=`\n      const ${o} start = ${o}(${l});\n      const ${o} end = ${o}(${c});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${S}\n        setOutput(result);\n      }\n    `}}const HM=r=>{const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{paddings:o,constantValue:l}=s;if(0===ke(i.shape))return Hy({backend:t,attrs:{shape:o.map((d,f)=>d[0]+i.shape[f]+d[1]),value:l,dtype:i.dtype}});const c=nt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new d$(i.shape,o,l):new h$(i.shape,o,l);return t.runWebGLProgram(c,[i],i.dtype,[[l]])},p$={kernelName:oo,backendName:"webgl",kernelFunc:HM},f$=si({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),m$={kernelName:yh,backendName:"webgl",kernelFunc:f$},g$={kernelName:xh,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{axis:o,keepDims:l}=s,c=i.shape.length,p=[],d=Dn(o,i.shape);let f=d;const m=In(f,c);let y,v=i;if(null!=m&&(v=Oi({inputs:{x:i},backend:t,attrs:{perm:m}}),f=Xr(f.length,c),p.push(v)),Cs("prod",f,c),t.shouldExecuteOnCPU([v])){const S=t.texData.get(v.dataId).values,{outVals:_,outShape:k,outDtype:I}=h3(v.shape,v.dtype,S,f);y=t.makeTensorInfo(k,I,_)}else{const[S,_]=gs(v.shape,f),k=ke(_),I=Zt({inputs:{x:v},backend:t,attrs:{shape:[-1,k]}}),A=of(I,Wo(i.dtype),"prod",t);y=Zt({inputs:{x:A},backend:t,attrs:{shape:S}}),p.push(I),p.push(A)}if(l){p.push(y);const S=br(y.shape,d);y=Zt({inputs:{x:y},backend:t,attrs:{shape:S}})}return p.forEach(S=>t.disposeIntermediateTensorInfo(S)),y}},jM=r=>{const{backend:e,attrs:t}=r,{start:s,stop:i,step:o,dtype:l}=t,c=d3(s,i,o,l);return e.makeTensorInfo([c.length],l,c)},y$={kernelName:sr,backendName:"webgl",kernelFunc:jM},x$=nr({opSnippet:"return 1.0 / x;"}),b$={kernelName:Bu,backendName:"webgl",kernelFunc:x$},v$=nr({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),w$={kernelName:Pl,backendName:"webgl",kernelFunc:v$},S$=nr({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),T$={kernelName:Ti,backendName:"webgl",kernelFunc:S$};class M${constructor(e,t,s,i,o){this.variableNames=["A"],this.outputShape=[];const[l,c,p,d]=e;this.outputShape=[l,t,s,d];const f=[i&&t>1?c-1:c,i&&s>1?p-1:p],m=[i&&t>1?t-1:t,i&&s>1?s-1:s];let y;y=o?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${f[0]/m[0]},\n          ${f[1]/m[1]});\n      const vec2 inputShapeRC = vec2(${c}.0, ${p}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${y};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class _${constructor(e,t,s,i,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[l,c,p,d]=e;this.outputShape=[l,t,s,d];const f=[i&&t>1?c-1:c,i&&s>1?p-1:p],m=[i&&t>1?t-1:t,i&&s>1?s-1:s];let y;y=o?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${f[0]/m[0]},\n          ${f[1]/m[1]},\n          ${f[1]/m[1]});\n      const vec3 inputShapeRC = vec3(${c}.0, ${p}.0,\n                                     ${p}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${y};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${d-1};\n        bool hasNextRow = coords.z < ${s-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const k$={kernelName:vh,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{images:i}=e,{alignCorners:o,halfPixelCenters:l,size:c}=s,[p,d]=c,f=nt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new _$(i.shape,p,d,o,l):new M$(i.shape,p,d,o,l);return t.runWebGLProgram(f,[i],"float32")}};class E${constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,i,o]=t,[,l,c]=e,p=[s&&l>1?i-1:i,s&&c>1?o-1:o],d=[s&&l>1?l-1:l,s&&c>1?c-1:c],f=p[0]/d[0],m=p[1]/d[1],y=1/f,v=1/m,S=2*Math.ceil(y)+2,_=2*Math.ceil(v)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${f});\n        const float widthScale = float(${m});\n\n        const float invHeightScale = float(${y});\n        const float invWidthScale = float(${v});\n\n        const int winHeight = int(${S});\n        const int winWidth = int(${_});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${l}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${c}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${i-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const I$={kernelName:Gs,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{images:i,dy:o}=e,{alignCorners:l}=s,c=new E$(o.shape,i.shape,l);return t.runWebGLProgram(c,[o],o.dtype)}};class C${constructor(e,t,s,i,o){this.variableNames=["A"],this.outputShape=[];const[l,c,p,d]=e;this.outputShape=[l,t,s,d];const f=[i&&t>1?c-1:c,i&&s>1?p-1:p],m=[i&&t>1?t-1:t,i&&s>1?s-1:s];let v;v=o?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${f[0]/m[0]},\n          ${f[1]/m[1]});\n      const vec2 inputShapeRC = vec2(${c}.0, ${p}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${v};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${i?"0.5":"0.0"})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class N${constructor(e,t,s,i,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[l,c,p,d]=e;this.outputShape=[l,t,s,d];const f=[i&&t>1?c-1:c,i&&s>1?p-1:p],m=[i&&t>1?t-1:t,i&&s>1?s-1:s];let v;v=o?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${f[0]/m[0]},\n          ${f[1]/m[1]},\n          ${f[1]/m[1]});\n      const vec3 inputShapeRC = vec3(${c}.0, ${p}.0,\n                                     ${p}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${v};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${i?"0.5":"0.0"})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${d-1};\n        bool hasNextRow = coords.z < ${s-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const A$={kernelName:te,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{images:i}=e,{alignCorners:o,halfPixelCenters:l,size:c}=s,[p,d]=c,f=nt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new N$(i.shape,p,d,o,l):new C$(i.shape,p,d,o,l);return t.runWebGLProgram(f,[i],i.dtype)}};class R${constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,i,o]=t,[,l,c]=e,p=[s&&l>1?i-1:i,s&&c>1?o-1:o],d=[s&&l>1?l-1:l,s&&c>1?c-1:c],f=p[0]/d[0],m=p[1]/d[1],y=1/f,v=1/m,S=2*Math.ceil(y)+2,_=2*Math.ceil(v)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${f});\n        const float widthScale = float(${m});\n\n        const float invHeightScale = float(${y});\n        const float invWidthScale = float(${v});\n\n        const int winHeight = int(${S});\n        const int winWidth = int(${_});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${l}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${c}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${p[0]}) *\n                (float(dyR) / float(${d[0]}));\n\n            float sourceFracCol =\n                float(${p[1]}) *\n                  (float(dyC) / float(${d[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${i}) - 1),\n                ${s} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${o}) - 1),\n                ${s} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const L$={kernelName:bh,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{images:i,dy:o}=e,{alignCorners:l}=s,c=new R$(o.shape,i.shape,l);return t.runWebGLProgram(c,[o],o.dtype)}};class D${constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,1===s)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const i=e.map((l,c)=>{return-1!==t.indexOf(p=c)&&1!==e[p]?`${e[p]} - coords[${p}] - 1`:`coords[${p}]`;var p}).join(","),o=_r(s);this.userCode=`\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}class F${constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const i=$i("rc",s),o=`${i[s-1]} + 1 < ${this.outputShape[s-1]}`,l=`${i[s-2]} + 1 < ${this.outputShape[s-2]}`,c=_r(s);function p(d){const f=e.map((m,y)=>{return S=d,-1!==t.indexOf(v=y)&&1!==e[v]?`${e[v]} - ${S[v]} - 1`:`${S[v]}`;var v,S});return`getChannel(getX(${f.join(",")}), vec2(${f.slice(-2).join(",")}))`}var d;this.userCode=1===s?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${o}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${c} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${d=i.slice(),p(d)};\n          if(${o}){\n            result.g = ${function(d){return d[s-1]="("+d[s-1]+" + 1)",p(d)}(i.slice())};\n          }\n          if(${l}) {\n            result.b = ${function(d){return d[s-2]="("+d[s-2]+" + 1)",p(d)}(i.slice())};\n            if(${o}) {\n              result.a = ${function(d){return d[s-1]="("+d[s-1]+" + 1)",d[s-2]="("+d[s-2]+" + 1)",p(d)}(i.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const $$={kernelName:Do,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{dims:o}=s,l=i.shape.length,c=Dn(o,i.shape);if(0===l)return ba({inputs:{x:i},backend:t});const p=nt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new F$(i.shape,c):new D$(i.shape,c);return t.runWebGLProgram(p,[i],i.dtype)}};class O${constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],i=e[2];this.outputShape=e;let o="";o="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${o}\n          if(coordX >= 0 && coordX < ${i} && coordY >= 0 && coordY < ${s}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const P$={kernelName:ra,backendName:"webgl",kernelFunc:({inputs:r,attrs:e,backend:t})=>{const{image:s}=r,{radians:i,fillValue:o,center:l}=e,c=t,p=new O$(s.shape,o),[d,f]=Or(l,s.shape[1],s.shape[2]),m=[[d,f,Math.sin(i),Math.cos(i)]];return c.runWebGLProgram(p,[s],s.dtype,m)}},z$=nr({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),B$={kernelName:zl,backendName:"webgl",kernelFunc:z$},U$=nr({opSnippet:"return inversesqrt(x);",cpuKernelImpl:p3}),V$={kernelName:Ca,backendName:"webgl",kernelFunc:U$};class qM{constructor(e,t,s,i,o,l,c=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=l;const p=_r(o.length),d=_r(l.length);let f="";1===s?f="i":2===s&&(f="i, j");let y="";1===i?y="i":2===i&&(y="i, coords[1]"),this.userCode=`\n        ${p} strides = ${p}(${o});\n\n        void main() {\n          ${d} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(getIndices(${f}));\n              flattenedIndex += index * ${t>1?"strides[j]":"strides"};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += getUpdates(${y});\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const W$={kernelName:Fo,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{indices:i,updates:o}=e,{shape:l}=s,{sliceRank:c,numUpdates:p,sliceSize:d,strides:f,outputSize:m}=Bh(0,i,l),y=[m/d,d];if(0===m)return t.makeTensorInfo(l,i.dtype);const v=Zt({inputs:{x:i},backend:t,attrs:{shape:[p,c]}}),S=Zt({inputs:{x:o},backend:t,attrs:{shape:[p,d]}}),_=t.makeTensorInfo([],"float32",new Float32Array([0])),k=new qM(p,c,v.shape.length,S.shape.length,f,y),I=t.runWebGLProgram(k,[S,v,_],S.dtype),A=Zt({inputs:{x:I},backend:t,attrs:{shape:l}});return t.disposeIntermediateTensorInfo(v),t.disposeIntermediateTensorInfo(S),t.disposeIntermediateTensorInfo(I),t.disposeIntermediateTensorInfo(_),A}};class G${constructor(e,t,s){let i,o;if(this.variableNames=["c","a","b"],this.outputShape=t,s>4)throw Error(`Where for rank ${s} is not yet supported`);if(1===s)o="resRC",i="resRC";else{const c=["resRC.x","resRC.y","resRC.z","resRC.w"],p=[],d=[];for(let f=0;f<t.length;f++)d.push(`${c[f]}`),f<e&&p.push(`${c[f]}`);i=p.join(),o=d.join()}const l=_r(s);this.userCode=`\n      void main() {\n        ${l} resRC = getOutputCoords();\n        float cVal = getC(${i});\n        if (cVal >= 1.0) {\n          setOutput(getA(${o}));\n        } else {\n          setOutput(getB(${o}));\n        }\n      }\n    `}}const H$={kernelName:lo,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t}=r,{condition:s,t:i,e:o}=e,l=new G$(s.shape.length,i.shape,i.shape.length);return t.runWebGLProgram(l,[s,i,o],ui(i.dtype,o.dtype))}},j$=nr({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${bm};\n  float scale = ${jp};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),q$={kernelName:Pi,backendName:"webgl",kernelFunc:j$},XM="return 1.0 / (1.0 + exp(-1.0 * x));",X$=nr({opSnippet:XM,packedOpSnippet:XM,cpuKernelImpl:f3}),K$={kernelName:Oo,backendName:"webgl",kernelFunc:X$},Y$=nr({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Z$={kernelName:$o,backendName:"webgl",kernelFunc:Y$},J$=nr({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Q$={kernelName:ea,backendName:"webgl",kernelFunc:J$},eO=nr({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),tO={kernelName:uo,backendName:"webgl",kernelFunc:eO},nO=nr({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),rO={kernelName:ta,backendName:"webgl",kernelFunc:nO},sO={kernelName:wh,backendName:"webgl",kernelFunc:r=>{const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{blockShape:o,paddings:l}=s;F(i.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const c=o.reduce((I,A)=>I*A),p=[[0,0]];p.push(...l);for(let I=1+o.length;I<i.shape.length;++I)p.push([0,0]);const d=[],f=HM({inputs:{x:i},backend:t,attrs:{paddings:p,constantValue:0}}),m=Hp(f.shape,o,c,!1),y=Cr(m.length,o.length,!1),v=du(f.shape,o,c,!1),S=Zt({inputs:{x:f},backend:t,attrs:{shape:m}}),_=Oi({inputs:{x:S},backend:t,attrs:{perm:y}}),k=Zt({inputs:{x:_},backend:t,attrs:{shape:v}});return d.push(f),d.push(S),d.push(_),d.forEach(I=>t.disposeIntermediateTensorInfo(I)),k}},iO={kernelName:Na,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t}=r,{indices:s,values:i,denseShape:o,defaultValue:l}=e;if(1!==o.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${o.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==i.shape.length)throw new Error(`Values must be a vector, saw:\n         ${i.shape}`);if(0!==l.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${l.shape}`);const c=t.readSync(s.dataId),p=t.readSync(i.dataId),d=t.readSync(o.dataId),f=t.readSync(l.dataId)[0],[m,y,v,S,_]=g3(c,s.shape,s.dtype,p,i.dtype,d,f);return[t.makeTensorInfo(y,s.dtype,m),t.makeTensorInfo([y[0]],i.dtype,v),t.makeTensorInfo([S.length],"bool",new Uint8Array(S.map(k=>Number(k)))),t.makeTensorInfo([_.length],s.dtype,new Int32Array(_))]}},aO={kernelName:na,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t}=r,{inputIndices:s,inputShape:i,newShape:o}=e;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==i.shape.length)throw new Error(`Input shape should be a vector but received shape ${i.shape}`);if(1!==o.shape.length)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const l=Array.from(t.readSync(i.dataId)),c=t.readSync(s.dataId),p=Array.from(t.readSync(o.dataId)),[d,f,m]=y3(c,s.shape,s.dtype,l,p);return[t.makeTensorInfo(f,s.dtype,d),t.makeTensorInfo([m.length],o.dtype,new Int32Array(m))]}},oO={kernelName:Sh,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t}=r,{data:s,indices:i,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${i.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${o.shape}`);const l=t.readSync(s.dataId),c=t.readSync(i.dataId),p=t.readSync(o.dataId),[d,f]=eM(l,s.shape,s.dtype,c,p,!0);return t.makeTensorInfo(f,s.dtype,d)}},lO={kernelName:Wu,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t}=r,{data:s,indices:i,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${i.shape}`);if(1!==o.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${o.shape}`);const l=t.readSync(s.dataId),c=t.readSync(i.dataId),p=t.readSync(o.dataId),[d,f]=eM(l,s.shape,s.dtype,c,p);return t.makeTensorInfo(f,s.dtype,d)}},uO={kernelName:Aa,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{sparseIndices:i,sparseValues:o,defaultValue:l}=e,{outputShape:c}=s,{sliceRank:p,numUpdates:d,strides:f,outputSize:m}=Bh(0,i,c),y=new qM(d,p,i.shape.length,o.shape.length,f,[m,1],!1),v=t.runWebGLProgram(y,[o,i,l],o.dtype),S=Zt({inputs:{x:v},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(v),S}},cO={kernelName:Uu,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{numOrSizeSplits:o,axis:l}=s,c=Dn(l,i.shape)[0],p=fy(i,o,c),f=new Array(i.shape.length).fill(0),m=i.shape.slice();return p.map(y=>{const v=[...m];v[c]=y;const S=qm({inputs:{x:i},backend:t,attrs:{begin:f,size:v}});return f[c]+=y,S})}},KM="return sqrt(x);",hO=nr({opSnippet:KM,packedOpSnippet:KM,cpuKernelImpl:x3}),dO={kernelName:Bl,backendName:"webgl",kernelFunc:hO},pO=nr({opSnippet:"return x * x;"}),fO={kernelName:Gu,backendName:"webgl",kernelFunc:pO},YM="return (a - b) * (a - b);",mO=si({opSnippet:YM,packedOpSnippet:YM}),gO={kernelName:Ul,backendName:"webgl",kernelFunc:mO},yO={kernelName:qu,backendName:"webgl",kernelFunc:function({inputs:r,attrs:e,backend:t}){const{x:s}=r,o=new Cd(s.shape,`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${e.alpha});\n  `);return t.runWebGLProgram(o,[s],s.dtype)}};class xO{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const i=s.length,o=_r(s.length),l=_r(s.length);let c="";if(1===i)c="coords * strides + begin";else{let p=0;c=s.map((d,f)=>(p++,1===s.length?`coords * strides[${f}] + begin[${f}]`:`coords[${p-1}] * strides[${f}] + begin[${f}]`)).join(",")}this.userCode=`\n      ${o} begin = ${o}(${e});\n      ${o} strides = ${o}(${t});\n\n      void main() {\n        ${l} coords = getOutputCoords();\n        setOutput(getX(${c}));\n      }\n    `}}const bO={kernelName:Th,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{begin:o,end:l,strides:c,beginMask:p,endMask:d,ellipsisMask:f,newAxisMask:m,shrinkAxisMask:y}=s,{nonStrided:v,$begin:S,$strides:_,size:k,newShape:I,outShape:A}=Sg(i.shape,o,l,c,p,d,f,m,y),R=Zt({inputs:{x:i},backend:t,attrs:{shape:I}});let P;if(v){const W=qm({inputs:{x:R},backend:t,attrs:{begin:S,size:k}});P=Zt({inputs:{x:W},backend:t,attrs:{shape:A}}),t.disposeIntermediateTensorInfo(W)}else if(A.some(W=>0===W))P=t.makeTensorInfo(A,i.dtype,[]);else if(t.shouldExecuteOnCPU([R])){const W=t.texData.get(R.dataId).values,se=Pn(R.shape,R.dtype,W),G=b3(A,se,_,S);P=t.makeTensorInfo(A,R.dtype,G.values)}else{const W=new xO(S,_,A);P=t.runWebGLProgram(W,[R],R.dtype)}const U=Zt({inputs:{x:P},backend:t,attrs:{shape:A}});return t.disposeIntermediateTensorInfo(R),t.disposeIntermediateTensorInfo(P),U}},vO={kernelName:Ra,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{separator:i,nGramWidths:o,leftPad:l,rightPad:c,padWidth:p,preserveShortSequences:d}=s,{data:f,dataSplits:m}=e,y=t.readSync(f.dataId),v=t.readSync(m.dataId),[S,_]=v3(y,v,i,o,l,c,p,d);return[t.makeTensorInfo([S.length],"string",S),t.makeTensorInfo(m.shape,"int32",_)]}},wO={kernelName:sn,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{skipEmpty:i}=s,{input:o,delimiter:l}=e;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(1!==o.shape.length)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(0!==l.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${l.shape}`);const c=t.readSync(o.dataId),p=t.readSync(l.dataId)[0],[d,f,m]=w3(c,p,i),y=f.length;return[t.makeTensorInfo([y,2],"int32",d),t.makeTensorInfo([y],"string",f),t.makeTensorInfo([2],"int32",new Int32Array(m))]}},SO={kernelName:Po,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{numBuckets:i}=s,{input:o}=e;if("string"!==o.dtype)throw new Error("Input must be of datatype string");if(i<=0)throw new Error("Number of buckets must be at least 1");const l=t.readSync(o.dataId),c=S3(l,i);return t.makeTensorInfo(o.shape,"int32",c)}},TO=nr({opSnippet:"return tan(x);"}),MO={kernelName:Mh,backendName:"webgl",kernelFunc:TO},_O=nr({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),kO={kernelName:_h,backendName:"webgl",kernelFunc:_O};class EO{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let l=0;l<s.length;l++)s[l]=e[l]*t[l];this.outputShape=s,this.rank=s.length;const i=_r(this.rank),o=function(l){const c=l.length;if(c>5)throw Error(`Tile for rank ${c} is not yet supported`);if(1===c)return`imod(resRC, ${l[0]})`;const p=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],d=[];for(let f=0;f<l.length;f++)d.push(`imod(${p[f]}, ${l[f]})`);return d.join()}(e);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        setOutput(getA(${o}));\n      }\n    `}}function ZM(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{reps:o}=s;if("string"===i.dtype||i.shape.length>5){const c=t.readSync(i.dataId),p="string"===i.dtype?c.map(m=>On(m)):c,d=Pn(i.shape,i.dtype,p),f=M3(d,o);return t.makeTensorInfo(f.shape,f.dtype,f.values)}const l=new EO(i.shape,o);return t.runWebGLProgram(l,[i],i.dtype)}const IO={kernelName:zi,backendName:"webgl",kernelFunc:ZM};class CO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class NO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function lf(r,e){null!==e&&r.disposeIntermediateTensorInfo(e)}function JM(r){let e=1;for(;e<r;)e*=2;return e}const AO={kernelName:Hu,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i}=e,{k:o,sorted:l}=s,c=nt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),p=nt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),d=i.shape,f=d[d.length-1];if(t.shouldExecuteOnCPU([i])||f<c||o>p){const pe=t.readSync(i.dataId),[de,ye]=_3(pe,d,i.dtype,o,l);return[t.makeTensorInfo(de.shape,de.dtype,de.values),t.makeTensorInfo(ye.shape,ye.dtype,ye.values)]}if(0===o)return d[d.length-1]=0,[t.makeTensorInfo(d,i.dtype,[]),t.makeTensorInfo(d,"int32",[])];if(1===f)return[i,Hy({attrs:{shape:d,dtype:"int32",value:0},backend:t})];const m=t.texData.get(i.dataId),y=null!==m&&m.isPacked,v=y?t.unpackTensor(i):i,S=ke(d)/f,_=Zt({inputs:{x:v},attrs:{shape:[S,f]},backend:t});y&&lf(t,v);const k=JM(o),I=JM(f);let A=null;const R=()=>null===A?[_,_]:[_,A],P=(pe,de,ye)=>{const Ee=R(),Ne=new CO(ye),je=A;A=t.runWebGLProgram(Ne,Ee,"int32",[[f],[null===A?1:0],[Number.NEGATIVE_INFINITY],[pe],[de]]),lf(t,je)};for(let pe=1;pe<k;pe*=2){const de=2*pe;for(let ye=pe;ye>=1;ye/=2)P(de,ye,[S,I])}for(let pe=I;pe>k;pe/=2){const de=R(),ye=new NO([S,pe/2]),Ne=A;A=t.runWebGLProgram(ye,de,"int32",[[f],[null===A?1:0],[k]]),lf(t,Ne);const Be=k/2,je=2*Be;for(let Ye=Be;Ye>=1;Ye/=2)P(je,Ye,A.shape)}let U=A;A=qm({inputs:{x:A},backend:t,attrs:{begin:0,size:[S,o]}}),lf(t,U);let W=PM({inputs:{x:_,indices:A},backend:t,attrs:{axis:1,batchDims:1}});lf(t,_);const se=d.slice(0,-1);se.push(o),U=A,A=Zt({inputs:{x:A},attrs:{shape:se},backend:t}),lf(t,U);const G=W;return W=Zt({inputs:{x:W},attrs:{shape:se},backend:t}),lf(t,G),[W,A]}};class RO{constructor(e,t,s,i,o,l){this.variableNames=["Image","Transforms"],this.outputShape=l;const c="nearest"===s?1:2;let p;switch(i){default:p=1;break;case"reflect":p=2;break;case"wrap":p=3;break;case"nearest":p=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${p} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${p} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${p} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${o});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${o});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${c} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const LO={kernelName:js,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{image:i,transforms:o}=e,{interpolation:l,fillMode:c,fillValue:p,outputShape:d}=s,[f,m,y,v]=i.shape,[S,_]=null!=d?d:[m,y],k=new RO(m,y,l,c,p,[f,S,_,v]);return t.runWebGLProgram(k,[i,o],"float32")}},DO={kernelName:sp,backendName:"webgl",kernelFunc:function(r){const{inputs:e,attrs:t,backend:s}=r,{axis:i}=t,{x:o}=e;By(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const l=s.readSync(o.dataId),{outputValues:c,outputShape:p,indices:d}=k3(l,i,o.shape,o.dtype);return[s.makeTensorInfo(p,o.dtype,c),s.makeTensorInfo([d.length],"int32",d)]}},FO={kernelName:La,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{value:i}=e;let{axis:o}=s;o<0&&(o+=i.shape.length);const l=i,c=l.shape.length,p=i.shape[o],d=new Array(c-1);let f=0;for(let _=0;_<c;_++)_!==o&&(d[f++]=l.shape[_]);const m=[],y=new Array(c).fill(0),v=l.shape.slice();v[o]=1;const S=new Array(p);for(let _=0;_<S.length;_++){y[o]=_;const k=qm({inputs:{x:l},backend:t,attrs:{begin:y,size:v}}),I=Zt({inputs:{x:k},backend:t,attrs:{shape:d}});S[_]=I,m.push(k)}return m.forEach(_=>t.disposeIntermediateTensorInfo(_)),S}};class $O{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,i=e.batchSize,o=e.inSize,l=e.numSegments,c=l*Math.ceil(o/s);this.outputShape=[i,c];const p=4*Math.floor(s/4),d=s%4,f="\n        sumValue += dot(values, segFilter);\n    ";let m="";o%s>0&&(m=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `);let y="";o%s>0&&(y=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${m}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${y}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${l})) * float(${s}));\n        int currentSeg = int(mod(float(outIdx), float(${l})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${p}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${f}\n        }\n\n        int inIdx = inOffset + ${p};\n        if (${1===d}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${f}\n        } else if (${2===d}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${f}\n        } else if (${3===d}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${f}\n        }\n        setOutput(sumValue);\n      }\n    `}}const OO=[kF,IF,W3,G3,j3,X3,Y3,Q3,eL,tL,sL,iL,oL,uL,pL,hL,mL,yL,gL,vL,wL,SL,_L,CL,NL,LL,FL,PL,BL,L3,GL,JL,QL,qL,tD,nD,eD,sD,aD,lD,uD,cD,dD,gD,yD,pD,bD,wD,SD,MD,_D,ED,CD,ND,AD,LD,DD,$D,PD,BD,VD,HD,jD,qD,KD,ZD,QD,tF,R3,nF,WL,sF,aF,lF,D3,cF,dF,pF,yF,mF,bF,wF,TF,CF,LF,RF,$F,OF,PF,AF,zF,BF,VF,HF,qF,JF,$3,QF,t$,r$,i$,AL,o$,u$,c$,p$,m$,F3,g$,y$,RL,KF,b$,T$,w$,O3,k$,I$,A$,L$,$$,P$,B$,V$,W$,H$,q$,K$,Z$,Q$,tO,IL,ZF,rO,sO,iO,aO,oO,lO,uO,cO,dO,fO,gO,yO,bO,vO,wO,SO,YF,U3,MO,kO,IO,AO,LO,V3,DO,FO,{kernelName:ju,backendName:"webgl",kernelFunc:function(r){const{inputs:e,backend:t,attrs:s}=r,{x:i,segmentIds:o}=e,{numSegments:l}=s,c=i.shape.length,p=[];let d=0;const f=In([d],c);let m=i;null!=f&&(m=Oi({inputs:{x:i},backend:t,attrs:{perm:f}}),p.push(m),d=Xr(1,c)[0]);const y=px(m.shape,d,l),v=ke([m.shape[d]]),S=Zt({inputs:{x:m},backend:t,attrs:{shape:[-1,v]}});p.push(S);const _=Wo(i.dtype),k=(R,P,U,W,se)=>{const G=R.shape[0],pe=R.shape[1],de=dx(pe,se),ye=new $O({windowSize:de,inSize:pe,batchSize:G,numSegments:se},P),Ee=t.compileAndRun(ye,[R,U],W);if(p.push(Ee),Ee.shape[1]===se)return Ee;const Ne=jM({backend:t,attrs:{start:0,stop:se,step:1,dtype:"float32"}}),Be=ZM({inputs:{x:Ne},backend:t,attrs:{reps:[pe/de]}});return p.push(Ne),p.push(Be),k(Ee,P,Be,W,se)},I=Zt({inputs:{x:k(S,"unsortedSegmentSum",o,_,l)},backend:t,attrs:{shape:y}});let A=I;if(null!=f){p.push(I);const R=rl(f);A=Oi({inputs:{x:A},backend:t,attrs:{perm:R}})}return p.forEach(R=>t.disposeIntermediateTensorInfo(R)),A}},l$];for(const r of OO)lp(r);const PO={"tfjs-core":E0,"tfjs-backend-cpu":"3.9.0","tfjs-backend-webgl":"3.9.0","tfjs-data":DT,"tfjs-layers":Bx,"tfjs-converter":mT,tfjs:"3.9.0"}},58485:(ct,pt,X)=>{"use strict";X.d(pt,{Z:()=>De});var ge=X(23645),Ge=X.n(ge)()(function(ue){return ue[1]});Ge.push([ct.id,".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:transparent;z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid #fff;opacity:0.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:black;color:white;opacity:0.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media (min-aspect-ratio: 1 / 1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media (max-aspect-ratio: 1 / 1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:0.8;background:linear-gradient(to right, #fff 10px, transparent 10px) 0 0,linear-gradient(to right, #fff 10px, transparent 10px) 0 100%,linear-gradient(to left, #fff 10px, transparent 10px) 100% 0,linear-gradient(to left, #fff 10px, transparent 10px) 100% 100%,linear-gradient(to bottom, #fff 10px, transparent 10px) 0 0,linear-gradient(to bottom, #fff 10px, transparent 10px) 100% 0,linear-gradient(to top, #fff 10px, transparent 10px) 0 100%,linear-gradient(to top, #fff 10px, transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:#fff;animation:move 2s linear infinite}@keyframes move{0%,100%{top:0%}50%{top:calc(100% - 10px)}}\n",""]);const De=Ge},23645:ct=>{"use strict";ct.exports=function(pt){var X=[];return X.toString=function(){return this.map(function(ge){var Ge=pt(ge);return ge[2]?"@media ".concat(ge[2]," {").concat(Ge,"}"):Ge}).join("")},X.i=function(ge,Ge,De){"string"==typeof ge&&(ge=[[null,ge,""]]);var ue={};if(De)for(var ve=0;ve<this.length;ve++){var ne=this[ve][0];null!=ne&&(ue[ne]=!0)}for(var ie=0;ie<ge.length;ie++){var oe=[].concat(ge[ie]);De&&ue[oe[0]]||(Ge&&(oe[2]=oe[2]?"".concat(Ge," and ").concat(oe[2]):Ge),X.push(oe))}},X}},97676:(ct,pt,X)=>{"use strict";X.d(pt,{Z:()=>ge});const ge='<div class="mindar-ui-overlay mindar-ui-compatibility"> <div class="content"> <h1>Failed to launch :(</h1> <p> Looks like your device/browser is not compatible. </p> <br/> <br/> <p> Please try the following recommended browsers: </p> <p> For Android device - Chrome </p> <p> For iOS device - Safari </p> </div> </div> '},69894:(ct,pt,X)=>{"use strict";X.d(pt,{Z:()=>ge});const ge='<div class="mindar-ui-overlay mindar-ui-loading"> <div class="loader"/> </div> '},22810:(ct,pt,X)=>{"use strict";X.d(pt,{Z:()=>ge});const ge='<div class="mindar-ui-overlay mindar-ui-scanning"> <div class="scanning"> <div class="inner"> <div class="scanline"/> </div> </div> </div> '},43720:ct=>{ct.exports=X;var pt=null;try{pt=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(Z){}function X(Z,Fe,zt){this.low=0|Z,this.high=0|Fe,this.unsigned=!!zt}function ge(Z){return!0===(Z&&Z.__isLong__)}Object.defineProperty(X.prototype,"__isLong__",{value:!0}),X.isLong=ge;var Ge={},De={};function ue(Z,Fe){var zt,Jt,on;return Fe?(on=0<=(Z>>>=0)&&Z<256)&&(Jt=De[Z])?Jt:(zt=ne(Z,(0|Z)<0?-1:0,!0),on&&(De[Z]=zt),zt):(on=-128<=(Z|=0)&&Z<128)&&(Jt=Ge[Z])?Jt:(zt=ne(Z,Z<0?-1:0,!1),on&&(Ge[Z]=zt),zt)}function ve(Z,Fe){if(isNaN(Z))return Fe?xt:Pe;if(Fe){if(Z<0)return xt;if(Z>=K)return ht}else{if(Z<=-Q)return $t;if(Z+1>=Q)return wt}return Z<0?ve(-Z,Fe).neg():ne(Z%J|0,Z/J|0,Fe)}function ne(Z,Fe,zt){return new X(Z,Fe,zt)}X.fromInt=ue,X.fromNumber=ve,X.fromBits=ne;var ie=Math.pow;function oe(Z,Fe,zt){if(0===Z.length)throw Error("empty string");if("NaN"===Z||"Infinity"===Z||"+Infinity"===Z||"-Infinity"===Z)return Pe;if("number"==typeof Fe?(zt=Fe,Fe=!1):Fe=!!Fe,(zt=zt||10)<2||36<zt)throw RangeError("radix");var Jt;if((Jt=Z.indexOf("-"))>0)throw Error("interior hyphen");if(0===Jt)return oe(Z.substring(1),Fe,zt).neg();for(var on=ve(ie(zt,8)),mn=Pe,bn=0;bn<Z.length;bn+=8){var yr=Math.min(8,Z.length-bn),kr=parseInt(Z.substring(bn,bn+yr),zt);if(yr<8){var Rr=ve(ie(zt,yr));mn=mn.mul(Rr).add(ve(kr))}else mn=(mn=mn.mul(on)).add(ve(kr))}return mn.unsigned=Fe,mn}function H(Z,Fe){return"number"==typeof Z?ve(Z,Fe):"string"==typeof Z?oe(Z,Fe):ne(Z.low,Z.high,"boolean"==typeof Fe?Fe:Z.unsigned)}X.fromString=oe,X.fromValue=H;var J=4294967296,K=J*J,Q=K/2,Te=ue(1<<24),Pe=ue(0);X.ZERO=Pe;var xt=ue(0,!0);X.UZERO=xt;var _t=ue(1);X.ONE=_t;var lt=ue(1,!0);X.UONE=lt;var yt=ue(-1);X.NEG_ONE=yt;var wt=ne(-1,2147483647,!1);X.MAX_VALUE=wt;var ht=ne(-1,-1,!0);X.MAX_UNSIGNED_VALUE=ht;var $t=ne(0,-2147483648,!1);X.MIN_VALUE=$t;var Ze=X.prototype;Ze.toInt=function(){return this.unsigned?this.low>>>0:this.low},Ze.toNumber=function(){return this.unsigned?(this.high>>>0)*J+(this.low>>>0):this.high*J+(this.low>>>0)},Ze.toString=function(Z){if((Z=Z||10)<2||36<Z)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq($t)){var Fe=ve(Z),zt=this.div(Fe),Jt=zt.mul(Fe).sub(this);return zt.toString(Z)+Jt.toInt().toString(Z)}return"-"+this.neg().toString(Z)}for(var on=ve(ie(Z,6),this.unsigned),mn=this,bn="";;){var yr=mn.div(on),kr=(mn.sub(yr.mul(on)).toInt()>>>0).toString(Z);if((mn=yr).isZero())return kr+bn;for(;kr.length<6;)kr="0"+kr;bn=""+kr+bn}},Ze.getHighBits=function(){return this.high},Ze.getHighBitsUnsigned=function(){return this.high>>>0},Ze.getLowBits=function(){return this.low},Ze.getLowBitsUnsigned=function(){return this.low>>>0},Ze.getNumBitsAbs=function(){if(this.isNegative())return this.eq($t)?64:this.neg().getNumBitsAbs();for(var Z=0!=this.high?this.high:this.low,Fe=31;Fe>0&&0==(Z&1<<Fe);Fe--);return 0!=this.high?Fe+33:Fe+1},Ze.isZero=function(){return 0===this.high&&0===this.low},Ze.eqz=Ze.isZero,Ze.isNegative=function(){return!this.unsigned&&this.high<0},Ze.isPositive=function(){return this.unsigned||this.high>=0},Ze.isOdd=function(){return 1==(1&this.low)},Ze.isEven=function(){return 0==(1&this.low)},Ze.equals=function(Z){return ge(Z)||(Z=H(Z)),(this.unsigned===Z.unsigned||this.high>>>31!=1||Z.high>>>31!=1)&&this.high===Z.high&&this.low===Z.low},Ze.eq=Ze.equals,Ze.notEquals=function(Z){return!this.eq(Z)},Ze.neq=Ze.notEquals,Ze.ne=Ze.notEquals,Ze.lessThan=function(Z){return this.comp(Z)<0},Ze.lt=Ze.lessThan,Ze.lessThanOrEqual=function(Z){return this.comp(Z)<=0},Ze.lte=Ze.lessThanOrEqual,Ze.le=Ze.lessThanOrEqual,Ze.greaterThan=function(Z){return this.comp(Z)>0},Ze.gt=Ze.greaterThan,Ze.greaterThanOrEqual=function(Z){return this.comp(Z)>=0},Ze.gte=Ze.greaterThanOrEqual,Ze.ge=Ze.greaterThanOrEqual,Ze.compare=function(Z){if(ge(Z)||(Z=H(Z)),this.eq(Z))return 0;var Fe=this.isNegative(),zt=Z.isNegative();return Fe&&!zt?-1:!Fe&&zt?1:this.unsigned?Z.high>>>0>this.high>>>0||Z.high===this.high&&Z.low>>>0>this.low>>>0?-1:1:this.sub(Z).isNegative()?-1:1},Ze.comp=Ze.compare,Ze.negate=function(){return!this.unsigned&&this.eq($t)?$t:this.not().add(_t)},Ze.neg=Ze.negate,Ze.add=function(Z){ge(Z)||(Z=H(Z));var kr=0,Rr=0,is=0,Ls=0;return is+=(Ls+=(65535&this.low)+(65535&Z.low))>>>16,Rr+=(is+=(this.low>>>16)+(Z.low>>>16))>>>16,kr+=(Rr+=(65535&this.high)+(65535&Z.high))>>>16,kr+=(this.high>>>16)+(Z.high>>>16),ne((is&=65535)<<16|(Ls&=65535),(kr&=65535)<<16|(Rr&=65535),this.unsigned)},Ze.subtract=function(Z){return ge(Z)||(Z=H(Z)),this.add(Z.neg())},Ze.sub=Ze.subtract,Ze.multiply=function(Z){if(this.isZero())return Pe;if(ge(Z)||(Z=H(Z)),pt)return ne(pt.mul(this.low,this.high,Z.low,Z.high),pt.get_high(),this.unsigned);if(Z.isZero())return Pe;if(this.eq($t))return Z.isOdd()?$t:Pe;if(Z.eq($t))return this.isOdd()?$t:Pe;if(this.isNegative())return Z.isNegative()?this.neg().mul(Z.neg()):this.neg().mul(Z).neg();if(Z.isNegative())return this.mul(Z.neg()).neg();if(this.lt(Te)&&Z.lt(Te))return ve(this.toNumber()*Z.toNumber(),this.unsigned);var zt=65535&this.high,Jt=this.low>>>16,on=65535&this.low,bn=65535&Z.high,yr=Z.low>>>16,kr=65535&Z.low,Rr=0,is=0,Ls=0,_o=0;return Ls+=(_o+=on*kr)>>>16,is+=(Ls+=Jt*kr)>>>16,Ls&=65535,is+=(Ls+=on*yr)>>>16,Rr+=(is+=zt*kr)>>>16,is&=65535,Rr+=(is+=Jt*yr)>>>16,is&=65535,Rr+=(is+=on*bn)>>>16,Rr+=(this.high>>>16)*kr+zt*yr+Jt*bn+on*(Z.high>>>16),ne((Ls&=65535)<<16|(_o&=65535),(Rr&=65535)<<16|(is&=65535),this.unsigned)},Ze.mul=Ze.multiply,Ze.divide=function(Z){if(ge(Z)||(Z=H(Z)),Z.isZero())throw Error("division by zero");var Fe,zt,Jt;if(pt)return this.unsigned||-2147483648!==this.high||-1!==Z.low||-1!==Z.high?ne((this.unsigned?pt.div_u:pt.div_s)(this.low,this.high,Z.low,Z.high),pt.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?xt:Pe;if(this.unsigned){if(Z.unsigned||(Z=Z.toUnsigned()),Z.gt(this))return xt;if(Z.gt(this.shru(1)))return lt;Jt=xt}else{if(this.eq($t))return Z.eq(_t)||Z.eq(yt)?$t:Z.eq($t)?_t:(Fe=this.shr(1).div(Z).shl(1)).eq(Pe)?Z.isNegative()?_t:yt:(zt=this.sub(Z.mul(Fe)),Jt=Fe.add(zt.div(Z)));if(Z.eq($t))return this.unsigned?xt:Pe;if(this.isNegative())return Z.isNegative()?this.neg().div(Z.neg()):this.neg().div(Z).neg();if(Z.isNegative())return this.div(Z.neg()).neg();Jt=Pe}for(zt=this;zt.gte(Z);){Fe=Math.max(1,Math.floor(zt.toNumber()/Z.toNumber()));for(var on=Math.ceil(Math.log(Fe)/Math.LN2),mn=on<=48?1:ie(2,on-48),bn=ve(Fe),yr=bn.mul(Z);yr.isNegative()||yr.gt(zt);)yr=(bn=ve(Fe-=mn,this.unsigned)).mul(Z);bn.isZero()&&(bn=_t),Jt=Jt.add(bn),zt=zt.sub(yr)}return Jt},Ze.div=Ze.divide,Ze.modulo=function(Z){return ge(Z)||(Z=H(Z)),pt?ne((this.unsigned?pt.rem_u:pt.rem_s)(this.low,this.high,Z.low,Z.high),pt.get_high(),this.unsigned):this.sub(this.div(Z).mul(Z))},Ze.mod=Ze.modulo,Ze.rem=Ze.modulo,Ze.not=function(){return ne(~this.low,~this.high,this.unsigned)},Ze.and=function(Z){return ge(Z)||(Z=H(Z)),ne(this.low&Z.low,this.high&Z.high,this.unsigned)},Ze.or=function(Z){return ge(Z)||(Z=H(Z)),ne(this.low|Z.low,this.high|Z.high,this.unsigned)},Ze.xor=function(Z){return ge(Z)||(Z=H(Z)),ne(this.low^Z.low,this.high^Z.high,this.unsigned)},Ze.shiftLeft=function(Z){return ge(Z)&&(Z=Z.toInt()),0==(Z&=63)?this:Z<32?ne(this.low<<Z,this.high<<Z|this.low>>>32-Z,this.unsigned):ne(0,this.low<<Z-32,this.unsigned)},Ze.shl=Ze.shiftLeft,Ze.shiftRight=function(Z){return ge(Z)&&(Z=Z.toInt()),0==(Z&=63)?this:Z<32?ne(this.low>>>Z|this.high<<32-Z,this.high>>Z,this.unsigned):ne(this.high>>Z-32,this.high>=0?0:-1,this.unsigned)},Ze.shr=Ze.shiftRight,Ze.shiftRightUnsigned=function(Z){if(ge(Z)&&(Z=Z.toInt()),0==(Z&=63))return this;var Fe=this.high;return Z<32?ne(this.low>>>Z|Fe<<32-Z,Fe>>>Z,this.unsigned):ne(32===Z?Fe:Fe>>>Z-32,0,this.unsigned)},Ze.shru=Ze.shiftRightUnsigned,Ze.shr_u=Ze.shiftRightUnsigned,Ze.toSigned=function(){return this.unsigned?ne(this.low,this.high,!1):this},Ze.toUnsigned=function(){return this.unsigned?this:ne(this.low,this.high,!0)},Ze.toBytes=function(Z){return Z?this.toBytesLE():this.toBytesBE()},Ze.toBytesLE=function(){var Z=this.high,Fe=this.low;return[255&Fe,Fe>>>8&255,Fe>>>16&255,Fe>>>24,255&Z,Z>>>8&255,Z>>>16&255,Z>>>24]},Ze.toBytesBE=function(){var Z=this.high,Fe=this.low;return[Z>>>24,Z>>>16&255,Z>>>8&255,255&Z,Fe>>>24,Fe>>>16&255,Fe>>>8&255,255&Fe]},X.fromBytes=function(Z,Fe,zt){return zt?X.fromBytesLE(Z,Fe):X.fromBytesBE(Z,Fe)},X.fromBytesLE=function(Z,Fe){return new X(Z[0]|Z[1]<<8|Z[2]<<16|Z[3]<<24,Z[4]|Z[5]<<8|Z[6]<<16|Z[7]<<24,Fe)},X.fromBytesBE=function(Z,Fe){return new X(Z[4]<<24|Z[5]<<16|Z[6]<<8|Z[7],Z[0]<<24|Z[1]<<16|Z[2]<<8|Z[3],Fe)}},36377:(ct,pt,X)=>{var ge=X(84832),Ge=X(68652),De=X(90801),ue=X(92030),ve=X(3618),ne=X(89049),ie=X(51971);ie.alea=ge,ie.xor128=Ge,ie.xorwow=De,ie.xorshift7=ue,ie.xor4096=ve,ie.tychei=ne,ct.exports=ie},84832:function(ct,pt,X){var ge;!function(Ge,De,ue){function ve(oe){var H,J=this,K=(H=4022871197,function(Q){Q=Q.toString();for(var Te=0;Te<Q.length;Te++){var Pe=.02519603282416938*(H+=Q.charCodeAt(Te));Pe-=H=Pe>>>0,H=(Pe*=H)>>>0,H+=4294967296*(Pe-=H)}return 2.3283064365386963e-10*(H>>>0)});J.next=function(){var Q=2091639*J.s0+2.3283064365386963e-10*J.c;return J.s0=J.s1,J.s1=J.s2,J.s2=Q-(J.c=0|Q)},J.c=1,J.s0=K(" "),J.s1=K(" "),J.s2=K(" "),J.s0-=K(oe),J.s0<0&&(J.s0+=1),J.s1-=K(oe),J.s1<0&&(J.s1+=1),J.s2-=K(oe),J.s2<0&&(J.s2+=1),K=null}function ne(oe,H){return H.c=oe.c,H.s0=oe.s0,H.s1=oe.s1,H.s2=oe.s2,H}function ie(oe,H){var J=new ve(oe),K=H&&H.state,Q=J.next;return Q.int32=function(){return 4294967296*J.next()|0},Q.double=function(){return Q()+11102230246251565e-32*(2097152*Q()|0)},Q.quick=Q,K&&("object"==typeof K&&ne(K,J),Q.state=function(){return ne(J,{})}),Q}De&&De.exports?De.exports=ie:X.amdD&&X.amdO?void 0===(ge=function(){return ie}.call(pt,X,pt,De))||(De.exports=ge):this.alea=ie}(0,ct=X.nmd(ct))},89049:function(ct,pt,X){var ge;!function(Ge,De,ue){function ve(oe){var H=this,J="";H.next=function(){var Q=H.b,Te=H.c,Pe=H.d,xt=H.a;return Q=Q<<25^Q>>>7^Te,Te=Te-Pe|0,Pe=Pe<<24^Pe>>>8^xt,xt=xt-Q|0,H.b=Q=Q<<20^Q>>>12^Te,H.c=Te=Te-Pe|0,H.d=Pe<<16^Te>>>16^xt,H.a=xt-Q|0},H.a=0,H.b=0,H.c=-1640531527,H.d=1367130551,oe===Math.floor(oe)?(H.a=oe/4294967296|0,H.b=0|oe):J+=oe;for(var K=0;K<J.length+20;K++)H.b^=0|J.charCodeAt(K),H.next()}function ne(oe,H){return H.a=oe.a,H.b=oe.b,H.c=oe.c,H.d=oe.d,H}function ie(oe,H){var J=new ve(oe),K=H&&H.state,Q=function(){return(J.next()>>>0)/4294967296};return Q.double=function(){do{var Te=((J.next()>>>11)+(J.next()>>>0)/4294967296)/(1<<21)}while(0===Te);return Te},Q.int32=J.next,Q.quick=Q,K&&("object"==typeof K&&ne(K,J),Q.state=function(){return ne(J,{})}),Q}De&&De.exports?De.exports=ie:X.amdD&&X.amdO?void 0===(ge=function(){return ie}.call(pt,X,pt,De))||(De.exports=ge):this.tychei=ie}(0,ct=X.nmd(ct))},68652:function(ct,pt,X){var ge;!function(Ge,De,ue){function ve(oe){var H=this,J="";H.x=0,H.y=0,H.z=0,H.w=0,H.next=function(){var Q=H.x^H.x<<11;return H.x=H.y,H.y=H.z,H.z=H.w,H.w^=H.w>>>19^Q^Q>>>8},oe===(0|oe)?H.x=oe:J+=oe;for(var K=0;K<J.length+64;K++)H.x^=0|J.charCodeAt(K),H.next()}function ne(oe,H){return H.x=oe.x,H.y=oe.y,H.z=oe.z,H.w=oe.w,H}function ie(oe,H){var J=new ve(oe),K=H&&H.state,Q=function(){return(J.next()>>>0)/4294967296};return Q.double=function(){do{var Te=((J.next()>>>11)+(J.next()>>>0)/4294967296)/(1<<21)}while(0===Te);return Te},Q.int32=J.next,Q.quick=Q,K&&("object"==typeof K&&ne(K,J),Q.state=function(){return ne(J,{})}),Q}De&&De.exports?De.exports=ie:X.amdD&&X.amdO?void 0===(ge=function(){return ie}.call(pt,X,pt,De))||(De.exports=ge):this.xor128=ie}(0,ct=X.nmd(ct))},3618:function(ct,pt,X){var ge;!function(Ge,De,ue){function ve(oe){var H=this;H.next=function(){var J,K,Q=H.w,Te=H.X,Pe=H.i;return H.w=Q=Q+1640531527|0,K=Te[Pe+34&127],J=Te[Pe=Pe+1&127],K^=K<<13,J^=J<<17,K=Te[Pe]=(K^=K>>>15)^(J^=J>>>12),H.i=Pe,K+(Q^Q>>>16)|0},function(J,K){var Q,Te,Pe,xt,_t,lt=[],yt=128;for(K===(0|K)?(Te=K,K=null):(K+="\0",Te=0,yt=Math.max(yt,K.length)),Pe=0,xt=-32;xt<yt;++xt)K&&(Te^=K.charCodeAt((xt+32)%K.length)),0===xt&&(_t=Te),Te^=Te<<10,Te^=Te>>>15,Te^=Te<<4,Te^=Te>>>13,xt>=0&&(Pe=0==(Q=lt[127&xt]^=Te+(_t=_t+1640531527|0))?Pe+1:0);for(Pe>=128&&(lt[127&(K&&K.length||0)]=-1),Pe=127,xt=512;xt>0;--xt)Te=lt[Pe+34&127],Q=lt[Pe=Pe+1&127],Te^=Te<<13,Q^=Q<<17,lt[Pe]=(Te^=Te>>>15)^(Q^=Q>>>12);J.w=_t,J.X=lt,J.i=Pe}(H,oe)}function ne(oe,H){return H.i=oe.i,H.w=oe.w,H.X=oe.X.slice(),H}function ie(oe,H){null==oe&&(oe=+new Date);var J=new ve(oe),K=H&&H.state,Q=function(){return(J.next()>>>0)/4294967296};return Q.double=function(){do{var Te=((J.next()>>>11)+(J.next()>>>0)/4294967296)/(1<<21)}while(0===Te);return Te},Q.int32=J.next,Q.quick=Q,K&&(K.X&&ne(K,J),Q.state=function(){return ne(J,{})}),Q}De&&De.exports?De.exports=ie:X.amdD&&X.amdO?void 0===(ge=function(){return ie}.call(pt,X,pt,De))||(De.exports=ge):this.xor4096=ie}(0,ct=X.nmd(ct))},92030:function(ct,pt,X){var ge;!function(Ge,De,ue){function ve(oe){var H=this;H.next=function(){var J,K,Q=H.x,Te=H.i;return J=Q[Te],K=(J^=J>>>7)^J<<24,K^=(J=Q[Te+1&7])^J>>>10,K^=(J=Q[Te+3&7])^J>>>3,K^=(J=Q[Te+4&7])^J<<7,J=Q[Te+7&7],K^=(J^=J<<13)^J<<9,Q[Te]=K,H.i=Te+1&7,K},function(J,K){var Q,Te=[];if(K===(0|K))Te[0]=K;else for(K=""+K,Q=0;Q<K.length;++Q)Te[7&Q]=Te[7&Q]<<15^K.charCodeAt(Q)+Te[Q+1&7]<<13;for(;Te.length<8;)Te.push(0);for(Q=0;Q<8&&0===Te[Q];++Q);for(8==Q&&(Te[7]=-1),J.x=Te,J.i=0,Q=256;Q>0;--Q)J.next()}(H,oe)}function ne(oe,H){return H.x=oe.x.slice(),H.i=oe.i,H}function ie(oe,H){null==oe&&(oe=+new Date);var J=new ve(oe),K=H&&H.state,Q=function(){return(J.next()>>>0)/4294967296};return Q.double=function(){do{var Te=((J.next()>>>11)+(J.next()>>>0)/4294967296)/(1<<21)}while(0===Te);return Te},Q.int32=J.next,Q.quick=Q,K&&(K.x&&ne(K,J),Q.state=function(){return ne(J,{})}),Q}De&&De.exports?De.exports=ie:X.amdD&&X.amdO?void 0===(ge=function(){return ie}.call(pt,X,pt,De))||(De.exports=ge):this.xorshift7=ie}(0,ct=X.nmd(ct))},90801:function(ct,pt,X){var ge;!function(Ge,De,ue){function ve(oe){var H=this,J="";H.next=function(){var Q=H.x^H.x>>>2;return H.x=H.y,H.y=H.z,H.z=H.w,H.w=H.v,(H.d=H.d+362437|0)+(H.v=H.v^H.v<<4^Q^Q<<1)|0},H.x=0,H.y=0,H.z=0,H.w=0,H.v=0,oe===(0|oe)?H.x=oe:J+=oe;for(var K=0;K<J.length+64;K++)H.x^=0|J.charCodeAt(K),K==J.length&&(H.d=H.x<<10^H.x>>>4),H.next()}function ne(oe,H){return H.x=oe.x,H.y=oe.y,H.z=oe.z,H.w=oe.w,H.v=oe.v,H.d=oe.d,H}function ie(oe,H){var J=new ve(oe),K=H&&H.state,Q=function(){return(J.next()>>>0)/4294967296};return Q.double=function(){do{var Te=((J.next()>>>11)+(J.next()>>>0)/4294967296)/(1<<21)}while(0===Te);return Te},Q.int32=J.next,Q.quick=Q,K&&("object"==typeof K&&ne(K,J),Q.state=function(){return ne(J,{})}),Q}De&&De.exports?De.exports=ie:X.amdD&&X.amdO?void 0===(ge=function(){return ie}.call(pt,X,pt,De))||(De.exports=ge):this.xorwow=ie}(0,ct=X.nmd(ct))},51971:(ct,pt,X)=>{var ge;!function(Ge,De){var ue,ve=this,ne=256,ie=De.pow(ne,6),oe=De.pow(2,52),H=2*oe,J=255;function K(lt,yt,wt){var ht=[],$t=xt(Pe((yt=1==yt?{entropy:!0}:yt||{}).entropy?[lt,_t(Ge)]:null==lt?function(){try{var Fe;return ue&&(Fe=ue.randomBytes)?Fe=Fe(ne):(Fe=new Uint8Array(ne),(ve.crypto||ve.msCrypto).getRandomValues(Fe)),_t(Fe)}catch(on){var zt=ve.navigator,Jt=zt&&zt.plugins;return[+new Date,ve,Jt,ve.screen,_t(Ge)]}}():lt,3),ht),Ze=new Q(ht),Z=function(){for(var Fe=Ze.g(6),zt=ie,Jt=0;Fe<oe;)Fe=(Fe+Jt)*ne,zt*=ne,Jt=Ze.g(1);for(;Fe>=H;)Fe/=2,zt/=2,Jt>>>=1;return(Fe+Jt)/zt};return Z.int32=function(){return 0|Ze.g(4)},Z.quick=function(){return Ze.g(4)/4294967296},Z.double=Z,xt(_t(Ze.S),Ge),(yt.pass||wt||function(Fe,zt,Jt,on){return on&&(on.S&&Te(on,Ze),Fe.state=function(){return Te(Ze,{})}),Jt?(De.random=Fe,zt):Fe})(Z,$t,"global"in yt?yt.global:this==De,yt.state)}function Q(lt){var yt,wt=lt.length,ht=this,$t=0,Ze=ht.i=ht.j=0,Z=ht.S=[];for(wt||(lt=[wt++]);$t<ne;)Z[$t]=$t++;for($t=0;$t<ne;$t++)Z[$t]=Z[Ze=J&Ze+lt[$t%wt]+(yt=Z[$t])],Z[Ze]=yt;(ht.g=function(Fe){for(var zt,Jt=0,on=ht.i,mn=ht.j,bn=ht.S;Fe--;)zt=bn[on=J&on+1],Jt=Jt*ne+bn[J&(bn[on]=bn[mn=J&mn+zt])+(bn[mn]=zt)];return ht.i=on,ht.j=mn,Jt})(ne)}function Te(lt,yt){return yt.i=lt.i,yt.j=lt.j,yt.S=lt.S.slice(),yt}function Pe(lt,yt){var wt,ht=[],$t=typeof lt;if(yt&&"object"==$t)for(wt in lt)try{ht.push(Pe(lt[wt],yt-1))}catch(Ze){}return ht.length?ht:"string"==$t?lt:lt+"\0"}function xt(lt,yt){for(var wt,ht=lt+"",$t=0;$t<ht.length;)yt[J&$t]=J&(wt^=19*yt[J&$t])+ht.charCodeAt($t++);return _t(yt)}function _t(lt){return String.fromCharCode.apply(0,lt)}if(De.seedrandom=K,xt(De.random(),Ge),ct.exports){ct.exports=K;try{ue=X(63906)}catch(lt){}}else void 0===(ge=function(){return K}.call(pt,X,pt,ct))||(ct.exports=ge)}([],Math)},74412:(ct,pt,X)=>{"use strict";X.r(pt),X.d(pt,{default:()=>ue});var ge=X(93379),Ge=X.n(ge),De=X(58485);Ge()(De.Z,{insert:"head",singleton:!1});const ue=De.Z.locals||{}},93379:(ct,pt,X)=>{"use strict";var ge,Pe,Ge=(Pe={},function(xt){if(void 0===Pe[xt]){var _t=document.querySelector(xt);if(window.HTMLIFrameElement&&_t instanceof window.HTMLIFrameElement)try{_t=_t.contentDocument.head}catch(lt){_t=null}Pe[xt]=_t}return Pe[xt]}),De=[];function ue(Pe){for(var xt=-1,_t=0;_t<De.length;_t++)if(De[_t].identifier===Pe){xt=_t;break}return xt}function ve(Pe,xt){for(var _t={},lt=[],yt=0;yt<Pe.length;yt++){var wt=Pe[yt],ht=xt.base?wt[0]+xt.base:wt[0],$t=_t[ht]||0,Ze="".concat(ht," ").concat($t);_t[ht]=$t+1;var Z=ue(Ze),Fe={css:wt[1],media:wt[2],sourceMap:wt[3]};-1!==Z?(De[Z].references++,De[Z].updater(Fe)):De.push({identifier:Ze,updater:Te(Fe,xt),references:1}),lt.push(Ze)}return lt}function ne(Pe){var xt=document.createElement("style"),_t=Pe.attributes||{};if(void 0===_t.nonce){var lt=X.nc;lt&&(_t.nonce=lt)}if(Object.keys(_t).forEach(function(wt){xt.setAttribute(wt,_t[wt])}),"function"==typeof Pe.insert)Pe.insert(xt);else{var yt=Ge(Pe.insert||"head");if(!yt)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");yt.appendChild(xt)}return xt}var ie,oe=(ie=[],function(Pe,xt){return ie[Pe]=xt,ie.filter(Boolean).join("\n")});function H(Pe,xt,_t,lt){var yt=_t?"":lt.media?"@media ".concat(lt.media," {").concat(lt.css,"}"):lt.css;if(Pe.styleSheet)Pe.styleSheet.cssText=oe(xt,yt);else{var wt=document.createTextNode(yt),ht=Pe.childNodes;ht[xt]&&Pe.removeChild(ht[xt]),ht.length?Pe.insertBefore(wt,ht[xt]):Pe.appendChild(wt)}}function J(Pe,xt,_t){var lt=_t.css,yt=_t.media,wt=_t.sourceMap;if(yt?Pe.setAttribute("media",yt):Pe.removeAttribute("media"),wt&&"undefined"!=typeof btoa&&(lt+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(wt))))," */")),Pe.styleSheet)Pe.styleSheet.cssText=lt;else{for(;Pe.firstChild;)Pe.removeChild(Pe.firstChild);Pe.appendChild(document.createTextNode(lt))}}var K=null,Q=0;function Te(Pe,xt){var _t,lt,yt;if(xt.singleton){var wt=Q++;_t=K||(K=ne(xt)),lt=H.bind(null,_t,wt,!1),yt=H.bind(null,_t,wt,!0)}else _t=ne(xt),lt=J.bind(null,_t,xt),yt=function(){!function(ht){if(null===ht.parentNode)return!1;ht.parentNode.removeChild(ht)}(_t)};return lt(Pe),function(ht){if(ht){if(ht.css===Pe.css&&ht.media===Pe.media&&ht.sourceMap===Pe.sourceMap)return;lt(Pe=ht)}else yt()}}ct.exports=function(Pe,xt){(xt=xt||{}).singleton||"boolean"==typeof xt.singleton||(xt.singleton=(void 0===ge&&(ge=Boolean(window&&document&&document.all&&!window.atob)),ge));var _t=ve(Pe=Pe||[],xt);return function(lt){if(lt=lt||[],"[object Array]"===Object.prototype.toString.call(lt)){for(var yt=0;yt<_t.length;yt++){var wt=ue(_t[yt]);De[wt].references--}for(var ht=ve(lt,xt),$t=0;$t<_t.length;$t++){var Ze=ue(_t[$t]);0===De[Ze].references&&(De[Ze].updater(),De.splice(Ze,1))}_t=ht}}}},2212:(ct,pt,X)=>{"use strict";X.r(pt),X.d(pt,{ACESFilmicToneMapping:()=>F,AddEquation:()=>Z,AddOperation:()=>Pc,AdditiveAnimationBlendMode:()=>th,AdditiveBlending:()=>wt,AlphaFormat:()=>hs,AlwaysDepth:()=>ko,AlwaysStencilFunc:()=>dh,AmbientLight:()=>Ri,AmbientLightProbe:()=>Xg,AnimationClip:()=>lu,AnimationLoader:()=>Bg,AnimationMixer:()=>ty,AnimationObjectGroup:()=>Z0,AnimationUtils:()=>Tr,ArcCurve:()=>kp,ArrayCamera:()=>Ua,ArrowHelper:()=>ay,Audio:()=>Jg,AudioAnalyser:()=>Up,AudioContext:()=>dd,AudioListener:()=>Vb,AudioLoader:()=>Bp,AxesHelper:()=>vm,AxisHelper:()=>av,BackSide:()=>Te,BasicDepthPacking:()=>$u,BasicShadowMap:()=>oe,BinaryTextureLoader:()=>hv,Bone:()=>ts,BooleanKeyframeTrack:()=>bo,BoundingBoxHelper:()=>ov,Box2:()=>pd,Box3:()=>Gs,Box3Helper:()=>iy,BoxBufferGeometry:()=>j,BoxGeometry:()=>j,BoxHelper:()=>xm,BufferAttribute:()=>On,BufferGeometry:()=>wn,BufferGeometryLoader:()=>W0,ByteType:()=>Ym,Cache:()=>ll,Camera:()=>ia,CameraHelper:()=>Hp,CanvasRenderer:()=>pv,CanvasTexture:()=>Kh,CatmullRomCurve3:()=>nu,CineonToneMapping:()=>Ce,CircleBufferGeometry:()=>el,CircleGeometry:()=>el,ClampToEdgeWrapping:()=>Ln,Clock:()=>H0,Color:()=>Wt,ColorKeyframeTrack:()=>ei,CompressedTexture:()=>Xf,CompressedTextureLoader:()=>am,ConeBufferGeometry:()=>tu,ConeGeometry:()=>tu,CubeCamera:()=>Dh,CubeReflectionMapping:()=>dt,CubeRefractionMapping:()=>ke,CubeTexture:()=>jo,CubeTextureLoader:()=>od,CubeUVReflectionMapping:()=>Bt,CubeUVRefractionMapping:()=>gn,CubicBezierCurve:()=>pc,CubicBezierCurve3:()=>Yf,CubicInterpolant:()=>xc,CullFaceBack:()=>ve,CullFaceFront:()=>ne,CullFaceFrontBack:()=>ie,CullFaceNone:()=>ue,Curve:()=>ki,CurvePath:()=>Dp,CustomBlending:()=>Ze,CustomToneMapping:()=>qe,CylinderBufferGeometry:()=>tl,CylinderGeometry:()=>tl,Cylindrical:()=>Zb,DataTexture:()=>di,DataTexture2DArray:()=>dg,DataTexture3D:()=>pg,DataTextureLoader:()=>ld,DataUtils:()=>hl,DecrementStencilOp:()=>mf,DecrementWrapStencilOp:()=>lh,DefaultLoadingManager:()=>im,DepthFormat:()=>Zr,DepthStencilFormat:()=>Bc,DepthTexture:()=>_p,DirectionalLight:()=>Pp,DirectionalLightHelper:()=>sy,DiscreteInterpolant:()=>nm,DodecahedronBufferGeometry:()=>Yh,DodecahedronGeometry:()=>Yh,DoubleSide:()=>Pe,DstAlphaFactor:()=>Ls,DstColorFactor:()=>Ml,DynamicBufferAttribute:()=>fy,DynamicCopyUsage:()=>xf,DynamicDrawUsage:()=>Ou,DynamicReadUsage:()=>Jd,EdgesGeometry:()=>Kf,EdgesHelper:()=>lv,EllipseCurve:()=>yo,EqualDepth:()=>Sa,EqualStencilFunc:()=>Kd,EquirectangularReflectionMapping:()=>en,EquirectangularRefractionMapping:()=>He,Euler:()=>La,EventDispatcher:()=>Ji,ExtrudeBufferGeometry:()=>$r,ExtrudeGeometry:()=>$r,FaceColors:()=>ly,FileLoader:()=>Ni,FlatShading:()=>xt,Float16BufferAttribute:()=>Ah,Float32Attribute:()=>sv,Float32BufferAttribute:()=>Pt,Float64Attribute:()=>iv,Float64BufferAttribute:()=>Pa,FloatType:()=>Vs,Fog:()=>Dr,FogExp2:()=>mo,Font:()=>jg,FontLoader:()=>hm,FrontSide:()=>Q,Frustum:()=>qo,GLBufferAttribute:()=>vo,GLSL1:()=>bf,GLSL3:()=>fh,GammaEncoding:()=>$l,GreaterDepth:()=>oi,GreaterEqualDepth:()=>bu,GreaterEqualStencilFunc:()=>Yd,GreaterStencilFunc:()=>ch,GridHelper:()=>hu,Group:()=>fo,HalfFloatType:()=>no,HemisphereLight:()=>fa,HemisphereLightHelper:()=>Ec,HemisphereLightProbe:()=>dm,IcosahedronBufferGeometry:()=>xo,IcosahedronGeometry:()=>xo,ImageBitmapLoader:()=>Hg,ImageLoader:()=>ul,ImageUtils:()=>zu,ImmediateRenderObject:()=>nx,IncrementStencilOp:()=>ff,IncrementWrapStencilOp:()=>oh,InstancedBufferAttribute:()=>dr,InstancedBufferGeometry:()=>hd,InstancedInterleavedBuffer:()=>Ps,InstancedMesh:()=>hc,Int16Attribute:()=>Cc,Int16BufferAttribute:()=>Jy,Int32Attribute:()=>mx,Int32BufferAttribute:()=>rg,Int8Attribute:()=>dx,Int8BufferAttribute:()=>Ky,IntType:()=>Rd,InterleavedBuffer:()=>Zs,InterleavedBufferAttribute:()=>oa,Interpolant:()=>Ii,InterpolateDiscrete:()=>Ll,InterpolateLinear:()=>Dl,InterpolateSmooth:()=>Du,InvertStencilOp:()=>uh,JSONLoader:()=>fv,KeepStencilOp:()=>Ao,KeyframeTrack:()=>rs,LOD:()=>Qo,LatheBufferGeometry:()=>ja,LatheGeometry:()=>ja,Layers:()=>ju,LensFlare:()=>gv,LessDepth:()=>Oc,LessEqualDepth:()=>_l,LessEqualStencilFunc:()=>gf,LessStencilFunc:()=>Xd,Light:()=>Ai,LightProbe:()=>Tc,Line:()=>_i,Line3:()=>tx,LineBasicMaterial:()=>Vr,LineCurve:()=>Qh,LineCurve3:()=>Zf,LineDashedMaterial:()=>zg,LineLoop:()=>jf,LinePieces:()=>ox,LineSegments:()=>pi,LineStrip:()=>ax,LinearEncoding:()=>ds,LinearFilter:()=>Zn,LinearInterpolant:()=>bc,LinearMipMapLinearFilter:()=>Ms,LinearMipMapNearestFilter:()=>jy,LinearMipmapLinearFilter:()=>Eo,LinearMipmapNearestFilter:()=>uf,LinearToneMapping:()=>V,Loader:()=>ys,LoaderUtils:()=>zp,LoadingManager:()=>sm,LogLuvEncoding:()=>Gd,LoopOnce:()=>Vd,LoopPingPong:()=>eh,LoopRepeat:()=>Wd,LuminanceAlphaFormat:()=>wu,LuminanceFormat:()=>Zi,MOUSE:()=>Ge,Material:()=>En,MaterialLoader:()=>V0,Math:()=>gh,MathUtils:()=>gh,Matrix3:()=>zr,Matrix4:()=>sn,MaxEquation:()=>on,Mesh:()=>es,MeshBasicMaterial:()=>wr,MeshDepthMaterial:()=>Pf,MeshDistanceMaterial:()=>zf,MeshFaceMaterial:()=>cx,MeshLambertMaterial:()=>Rp,MeshMatcapMaterial:()=>Pg,MeshNormalMaterial:()=>au,MeshPhongMaterial:()=>id,MeshPhysicalMaterial:()=>yc,MeshStandardMaterial:()=>Ap,MeshToonMaterial:()=>Og,MinEquation:()=>Jt,MirroredRepeatWrapping:()=>Hr,MixOperation:()=>Ta,MultiMaterial:()=>hx,MultiplyBlending:()=>$t,MultiplyOperation:()=>vu,NearestFilter:()=>or,NearestMipMapLinearFilter:()=>as,NearestMipMapNearestFilter:()=>Dn,NearestMipmapLinearFilter:()=>Yi,NearestMipmapNearestFilter:()=>El,NeverDepth:()=>Qa,NeverStencilFunc:()=>qd,NoBlending:()=>lt,NoColors:()=>lx,NoToneMapping:()=>_e,NormalAnimationBlendMode:()=>Co,NormalBlending:()=>yt,NotEqualDepth:()=>kl,NotEqualStencilFunc:()=>hh,NumberKeyframeTrack:()=>Lp,Object3D:()=>Bn,ObjectLoader:()=>G0,ObjectSpaceNormalMap:()=>Hd,OctahedronBufferGeometry:()=>al,OctahedronGeometry:()=>al,OneFactor:()=>bn,OneMinusDstAlphaFactor:()=>_o,OneMinusDstColorFactor:()=>xu,OneMinusSrcAlphaFactor:()=>is,OneMinusSrcColorFactor:()=>kr,OrthographicCamera:()=>$h,PCFShadowMap:()=>H,PCFSoftShadowMap:()=>J,PMREMGenerator:()=>sc,ParametricBufferGeometry:()=>nd,ParametricGeometry:()=>nd,Particle:()=>uy,ParticleBasicMaterial:()=>dy,ParticleSystem:()=>cy,ParticleSystemMaterial:()=>py,Path:()=>xs,PerspectiveCamera:()=>cr,Plane:()=>Ba,PlaneBufferGeometry:()=>Qu,PlaneGeometry:()=>Qu,PlaneHelper:()=>bm,PointCloud:()=>tv,PointCloudMaterial:()=>hy,PointLight:()=>ud,PointLightHelper:()=>ix,Points:()=>eu,PointsMaterial:()=>Ql,PolarGridHelper:()=>ev,PolyhedronBufferGeometry:()=>fi,PolyhedronGeometry:()=>fi,PositionalAudio:()=>fm,PropertyBinding:()=>er,PropertyMixer:()=>Vp,QuadraticBezierCurve:()=>su,QuadraticBezierCurve3:()=>ed,Quaternion:()=>Qr,QuaternionKeyframeTrack:()=>ad,QuaternionLinearInterpolant:()=>B0,REVISION:()=>ge,RGBADepthPacking:()=>ih,RGBAFormat:()=>Ds,RGBAIntegerFormat:()=>Qm,RGBA_ASTC_10x10_Format:()=>eg,RGBA_ASTC_10x5_Format:()=>jc,RGBA_ASTC_10x6_Format:()=>qc,RGBA_ASTC_10x8_Format:()=>$d,RGBA_ASTC_12x10_Format:()=>df,RGBA_ASTC_12x12_Format:()=>Cu,RGBA_ASTC_4x4_Format:()=>_u,RGBA_ASTC_5x4_Format:()=>ku,RGBA_ASTC_5x5_Format:()=>Eu,RGBA_ASTC_6x5_Format:()=>Iu,RGBA_ASTC_6x6_Format:()=>Gc,RGBA_ASTC_8x5_Format:()=>Dd,RGBA_ASTC_8x6_Format:()=>Hc,RGBA_ASTC_8x8_Format:()=>Fd,RGBA_BPTC_Format:()=>Nu,RGBA_ETC2_EAC_Format:()=>Rl,RGBA_PVRTC_2BPPV1_Format:()=>Vc,RGBA_PVRTC_4BPPV1_Format:()=>Uc,RGBA_S3TC_DXT1_Format:()=>Su,RGBA_S3TC_DXT3_Format:()=>Nl,RGBA_S3TC_DXT5_Format:()=>Al,RGBDEncoding:()=>Ol,RGBEEncoding:()=>No,RGBEFormat:()=>Cl,RGBFormat:()=>_a,RGBIntegerFormat:()=>hf,RGBM16Encoding:()=>sh,RGBM7Encoding:()=>rh,RGB_ETC1_Format:()=>Wc,RGB_ETC2_Format:()=>Mu,RGB_PVRTC_2BPPV1_Format:()=>Tu,RGB_PVRTC_4BPPV1_Format:()=>Io,RGB_S3TC_DXT1_Format:()=>Ld,RGFormat:()=>nt,RGIntegerFormat:()=>cf,RawShaderMaterial:()=>Oh,Ray:()=>Ra,Raycaster:()=>Kb,RectAreaLight:()=>um,RedFormat:()=>Jm,RedIntegerFormat:()=>qy,ReinhardToneMapping:()=>xe,RepeatWrapping:()=>yn,ReplaceStencilOp:()=>ah,ReverseSubtractEquation:()=>zt,RingBufferGeometry:()=>ol,RingGeometry:()=>ol,SRGB8_ALPHA8_ASTC_10x10_Format:()=>Lu,SRGB8_ALPHA8_ASTC_10x5_Format:()=>zd,SRGB8_ALPHA8_ASTC_10x6_Format:()=>Bd,SRGB8_ALPHA8_ASTC_10x8_Format:()=>Ru,SRGB8_ALPHA8_ASTC_12x10_Format:()=>Qc,SRGB8_ALPHA8_ASTC_12x12_Format:()=>Ud,SRGB8_ALPHA8_ASTC_4x4_Format:()=>Au,SRGB8_ALPHA8_ASTC_5x4_Format:()=>Od,SRGB8_ALPHA8_ASTC_5x5_Format:()=>Xc,SRGB8_ALPHA8_ASTC_6x5_Format:()=>Kc,SRGB8_ALPHA8_ASTC_6x6_Format:()=>Yc,SRGB8_ALPHA8_ASTC_8x5_Format:()=>Pd,SRGB8_ALPHA8_ASTC_8x6_Format:()=>Zc,SRGB8_ALPHA8_ASTC_8x8_Format:()=>Jc,Scene:()=>An,SceneUtils:()=>mv,ShaderChunk:()=>Wn,ShaderLib:()=>Wi,ShaderMaterial:()=>Ks,ShadowMaterial:()=>gc,Shape:()=>pa,ShapeBufferGeometry:()=>mc,ShapeGeometry:()=>mc,ShapePath:()=>cm,ShapeUtils:()=>Ha,ShortType:()=>Ma,Skeleton:()=>qh,SkeletonHelper:()=>sx,SkinnedMesh:()=>Va,SmoothShading:()=>_t,Sphere:()=>Na,SphereBufferGeometry:()=>iu,SphereGeometry:()=>iu,Spherical:()=>Yb,SphericalHarmonics3:()=>cd,SplineCurve:()=>Ga,SpotLight:()=>cl,SpotLightHelper:()=>Jb,Sprite:()=>Zl,SpriteMaterial:()=>oc,SrcAlphaFactor:()=>Rr,SrcAlphaSaturateFactor:()=>$c,SrcColorFactor:()=>yr,StaticCopyUsage:()=>Qd,StaticDrawUsage:()=>io,StaticReadUsage:()=>yf,StereoCamera:()=>pm,StreamCopyUsage:()=>ep,StreamDrawUsage:()=>Zd,StreamReadUsage:()=>ph,StringKeyframeTrack:()=>vc,SubtractEquation:()=>Fe,SubtractiveBlending:()=>ht,TOUCH:()=>De,TangentSpaceNormalMap:()=>Ea,TetrahedronBufferGeometry:()=>da,TetrahedronGeometry:()=>da,TextBufferGeometry:()=>Os,TextGeometry:()=>Os,Texture:()=>Br,TextureLoader:()=>wc,TorusBufferGeometry:()=>rd,TorusGeometry:()=>rd,TorusKnotBufferGeometry:()=>Ei,TorusKnotGeometry:()=>Ei,Triangle:()=>Ur,TriangleFanDrawMode:()=>nh,TriangleStripDrawMode:()=>pf,TrianglesDrawMode:()=>Fu,TubeBufferGeometry:()=>sd,TubeGeometry:()=>sd,UVMapping:()=>Ue,Uint16Attribute:()=>fx,Uint16BufferAttribute:()=>Wl,Uint32Attribute:()=>rv,Uint32BufferAttribute:()=>Ku,Uint8Attribute:()=>px,Uint8BufferAttribute:()=>Yy,Uint8ClampedAttribute:()=>my,Uint8ClampedBufferAttribute:()=>Zy,Uniform:()=>mm,UniformsLib:()=>Gt,UniformsUtils:()=>we,UnsignedByteType:()=>eo,UnsignedInt248Type:()=>Il,UnsignedIntType:()=>to,UnsignedShort4444Type:()=>hn,UnsignedShort5551Type:()=>Zm,UnsignedShort565Type:()=>wi,UnsignedShortType:()=>zc,VSMShadowMap:()=>K,Vector2:()=>It,Vector3:()=>te,Vector4:()=>sr,VectorKeyframeTrack:()=>ou,Vertex:()=>nv,VertexColors:()=>ux,VideoTexture:()=>Lg,WebGL1Renderer:()=>qr,WebGLCubeRenderTarget:()=>Ef,WebGLMultipleRenderTargets:()=>Bu,WebGLMultisampleRenderTarget:()=>Pl,WebGLRenderTarget:()=>Si,WebGLRenderTargetCube:()=>dv,WebGLRenderer:()=>lr,WebGLUtils:()=>ln,WireframeGeometry:()=>$g,WireframeHelper:()=>uv,WrapAroundEnding:()=>Fl,XHRLoader:()=>cv,ZeroCurvatureEnding:()=>ka,ZeroFactor:()=>mn,ZeroSlopeEnding:()=>ro,ZeroStencilOp:()=>jd,sRGBEncoding:()=>so});const ge="132",Ge={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},De={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},ue=0,ve=1,ne=2,ie=3,oe=0,H=1,J=2,K=3,Q=0,Te=1,Pe=2,xt=1,_t=2,lt=0,yt=1,wt=2,ht=3,$t=4,Ze=5,Z=100,Fe=101,zt=102,Jt=103,on=104,mn=200,bn=201,yr=202,kr=203,Rr=204,is=205,Ls=206,_o=207,Ml=208,xu=209,$c=210,Qa=0,ko=1,Oc=2,_l=3,Sa=4,bu=5,oi=6,kl=7,vu=0,Ta=1,Pc=2,_e=0,V=1,xe=2,Ce=3,F=4,qe=5,Ue=300,dt=301,ke=302,en=303,He=304,Bt=306,gn=307,yn=1e3,Ln=1001,Hr=1002,or=1003,El=1004,Dn=1004,Yi=1005,as=1005,Zn=1006,uf=1007,jy=1007,Eo=1008,Ms=1008,eo=1009,Ym=1010,Ma=1011,zc=1012,Rd=1013,to=1014,Vs=1015,no=1016,hn=1017,Zm=1018,wi=1019,Il=1020,hs=1021,_a=1022,Ds=1023,Zi=1024,wu=1025,Cl=Ds,Zr=1026,Bc=1027,Jm=1028,qy=1029,nt=1030,cf=1031,hf=1032,Qm=1033,Ld=33776,Su=33777,Nl=33778,Al=33779,Io=35840,Tu=35841,Uc=35842,Vc=35843,Wc=36196,Mu=37492,Rl=37496,_u=37808,ku=37809,Eu=37810,Iu=37811,Gc=37812,Dd=37813,Hc=37814,Fd=37815,jc=37816,qc=37817,$d=37818,eg=37819,df=37820,Cu=37821,Nu=36492,Au=37840,Od=37841,Xc=37842,Kc=37843,Yc=37844,Pd=37845,Zc=37846,Jc=37847,zd=37848,Bd=37849,Ru=37850,Lu=37851,Qc=37852,Ud=37853,Vd=2200,Wd=2201,eh=2202,Ll=2300,Dl=2301,Du=2302,ka=2400,ro=2401,Fl=2402,Co=2500,th=2501,Fu=0,pf=1,nh=2,ds=3e3,so=3001,$l=3007,No=3002,Gd=3003,rh=3004,sh=3005,Ol=3006,$u=3200,ih=3201,Ea=0,Hd=1,jd=0,Ao=7680,ah=7681,ff=7682,mf=7683,oh=34055,lh=34056,uh=5386,qd=512,Xd=513,Kd=514,gf=515,ch=516,hh=517,Yd=518,dh=519,io=35044,Ou=35048,Zd=35040,yf=35045,Jd=35049,ph=35041,Qd=35046,xf=35050,ep=35042,bf="100",fh="300 es";class Ji{addEventListener(n,a){void 0===this._listeners&&(this._listeners={});const u=this._listeners;void 0===u[n]&&(u[n]=[]),-1===u[n].indexOf(a)&&u[n].push(a)}hasEventListener(n,a){if(void 0===this._listeners)return!1;const u=this._listeners;return void 0!==u[n]&&-1!==u[n].indexOf(a)}removeEventListener(n,a){if(void 0===this._listeners)return;const u=this._listeners[n];if(void 0!==u){const h=u.indexOf(a);-1!==h&&u.splice(h,1)}}dispatchEvent(n){if(void 0===this._listeners)return;const a=this._listeners[n.type];if(void 0!==a){n.target=this;const u=a.slice(0);for(let h=0,g=u.length;h<g;h++)u[h].call(this,n);n.target=null}}}const Jr=[];for(let b=0;b<256;b++)Jr[b]=(b<16?"0":"")+b.toString(16);let Ro=1234567;const Ia=Math.PI/180,ao=180/Math.PI;function Ws(){const b=4294967295*Math.random()|0,n=4294967295*Math.random()|0,a=4294967295*Math.random()|0,u=4294967295*Math.random()|0;return(Jr[255&b]+Jr[b>>8&255]+Jr[b>>16&255]+Jr[b>>24&255]+"-"+Jr[255&n]+Jr[n>>8&255]+"-"+Jr[n>>16&15|64]+Jr[n>>24&255]+"-"+Jr[63&a|128]+Jr[a>>8&255]+"-"+Jr[a>>16&255]+Jr[a>>24&255]+Jr[255&u]+Jr[u>>8&255]+Jr[u>>16&255]+Jr[u>>24&255]).toUpperCase()}function jr(b,n,a){return Math.max(n,Math.min(a,b))}function Pu(b,n){return(b%n+n)%n}function Lo(b,n,a){return(1-a)*b+a*n}function mh(b){return 0==(b&b-1)&&0!==b}function tp(b){return Math.pow(2,Math.ceil(Math.log(b)/Math.LN2))}function np(b){return Math.pow(2,Math.floor(Math.log(b)/Math.LN2))}var gh=Object.freeze({__proto__:null,DEG2RAD:Ia,RAD2DEG:ao,generateUUID:Ws,clamp:jr,euclideanModulo:Pu,mapLinear:function(b,n,a,u,h){return u+(b-n)*(h-u)/(a-n)},inverseLerp:function(b,n,a){return b!==n?(a-b)/(n-b):0},lerp:Lo,damp:function(b,n,a,u){return Lo(b,n,1-Math.exp(-a*u))},pingpong:function(b,n=1){return n-Math.abs(Pu(b,2*n)-n)},smoothstep:function(b,n,a){return b<=n?0:b>=a?1:(b=(b-n)/(a-n))*b*(3-2*b)},smootherstep:function(b,n,a){return b<=n?0:b>=a?1:(b=(b-n)/(a-n))*b*b*(b*(6*b-15)+10)},randInt:function(b,n){return b+Math.floor(Math.random()*(n-b+1))},randFloat:function(b,n){return b+Math.random()*(n-b)},randFloatSpread:function(b){return b*(.5-Math.random())},seededRandom:function(b){return void 0!==b&&(Ro=b%2147483647),Ro=16807*Ro%2147483647,(Ro-1)/2147483646},degToRad:function(b){return b*Ia},radToDeg:function(b){return b*ao},isPowerOfTwo:mh,ceilPowerOfTwo:tp,floorPowerOfTwo:np,setQuaternionFromProperEuler:function(b,n,a,u,h){const g=Math.cos,x=Math.sin,w=g(a/2),T=x(a/2),M=g((n+u)/2),E=x((n+u)/2),N=g((n-u)/2),C=x((n-u)/2),L=g((u-n)/2),D=x((u-n)/2);switch(h){case"XYX":b.set(w*E,T*N,T*C,w*M);break;case"YZY":b.set(T*C,w*E,T*N,w*M);break;case"ZXZ":b.set(T*N,T*C,w*E,w*M);break;case"XZX":b.set(w*E,T*D,T*L,w*M);break;case"YXY":b.set(T*L,w*E,T*D,w*M);break;case"ZYZ":b.set(T*D,T*L,w*E,w*M);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+h)}}});class It{constructor(n=0,a=0){this.x=n,this.y=a}get width(){return this.x}set width(n){this.x=n}get height(){return this.y}set height(n){this.y=n}set(n,a){return this.x=n,this.y=a,this}setScalar(n){return this.x=n,this.y=n,this}setX(n){return this.x=n,this}setY(n){return this.y=n,this}setComponent(n,a){switch(n){case 0:this.x=a;break;case 1:this.y=a;break;default:throw new Error("index is out of range: "+n)}return this}getComponent(n){switch(n){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+n)}}clone(){return new this.constructor(this.x,this.y)}copy(n){return this.x=n.x,this.y=n.y,this}add(n,a){return void 0!==a?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(n,a)):(this.x+=n.x,this.y+=n.y,this)}addScalar(n){return this.x+=n,this.y+=n,this}addVectors(n,a){return this.x=n.x+a.x,this.y=n.y+a.y,this}addScaledVector(n,a){return this.x+=n.x*a,this.y+=n.y*a,this}sub(n,a){return void 0!==a?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(n,a)):(this.x-=n.x,this.y-=n.y,this)}subScalar(n){return this.x-=n,this.y-=n,this}subVectors(n,a){return this.x=n.x-a.x,this.y=n.y-a.y,this}multiply(n){return this.x*=n.x,this.y*=n.y,this}multiplyScalar(n){return this.x*=n,this.y*=n,this}divide(n){return this.x/=n.x,this.y/=n.y,this}divideScalar(n){return this.multiplyScalar(1/n)}applyMatrix3(n){const a=this.x,u=this.y,h=n.elements;return this.x=h[0]*a+h[3]*u+h[6],this.y=h[1]*a+h[4]*u+h[7],this}min(n){return this.x=Math.min(this.x,n.x),this.y=Math.min(this.y,n.y),this}max(n){return this.x=Math.max(this.x,n.x),this.y=Math.max(this.y,n.y),this}clamp(n,a){return this.x=Math.max(n.x,Math.min(a.x,this.x)),this.y=Math.max(n.y,Math.min(a.y,this.y)),this}clampScalar(n,a){return this.x=Math.max(n,Math.min(a,this.x)),this.y=Math.max(n,Math.min(a,this.y)),this}clampLength(n,a){const u=this.length();return this.divideScalar(u||1).multiplyScalar(Math.max(n,Math.min(a,u)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(n){return this.x*n.x+this.y*n.y}cross(n){return this.x*n.y-this.y*n.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(n){return Math.sqrt(this.distanceToSquared(n))}distanceToSquared(n){const a=this.x-n.x,u=this.y-n.y;return a*a+u*u}manhattanDistanceTo(n){return Math.abs(this.x-n.x)+Math.abs(this.y-n.y)}setLength(n){return this.normalize().multiplyScalar(n)}lerp(n,a){return this.x+=(n.x-this.x)*a,this.y+=(n.y-this.y)*a,this}lerpVectors(n,a,u){return this.x=n.x+(a.x-n.x)*u,this.y=n.y+(a.y-n.y)*u,this}equals(n){return n.x===this.x&&n.y===this.y}fromArray(n,a=0){return this.x=n[a],this.y=n[a+1],this}toArray(n=[],a=0){return n[a]=this.x,n[a+1]=this.y,n}fromBufferAttribute(n,a,u){return void 0!==u&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=n.getX(a),this.y=n.getY(a),this}rotateAround(n,a){const u=Math.cos(a),h=Math.sin(a),g=this.x-n.x,x=this.y-n.y;return this.x=g*u-x*h+n.x,this.y=g*h+x*u+n.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}It.prototype.isVector2=!0;class zr{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(n,a,u,h,g,x,w,T,M){const E=this.elements;return E[0]=n,E[1]=h,E[2]=w,E[3]=a,E[4]=g,E[5]=T,E[6]=u,E[7]=x,E[8]=M,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(n){const a=this.elements,u=n.elements;return a[0]=u[0],a[1]=u[1],a[2]=u[2],a[3]=u[3],a[4]=u[4],a[5]=u[5],a[6]=u[6],a[7]=u[7],a[8]=u[8],this}extractBasis(n,a,u){return n.setFromMatrix3Column(this,0),a.setFromMatrix3Column(this,1),u.setFromMatrix3Column(this,2),this}setFromMatrix4(n){const a=n.elements;return this.set(a[0],a[4],a[8],a[1],a[5],a[9],a[2],a[6],a[10]),this}multiply(n){return this.multiplyMatrices(this,n)}premultiply(n){return this.multiplyMatrices(n,this)}multiplyMatrices(n,a){const u=n.elements,h=a.elements,g=this.elements,x=u[0],w=u[3],T=u[6],M=u[1],E=u[4],N=u[7],C=u[2],L=u[5],D=u[8],$=h[0],B=h[3],O=h[6],q=h[1],ee=h[4],Y=h[7],ce=h[2],he=h[5],Ie=h[8];return g[0]=x*$+w*q+T*ce,g[3]=x*B+w*ee+T*he,g[6]=x*O+w*Y+T*Ie,g[1]=M*$+E*q+N*ce,g[4]=M*B+E*ee+N*he,g[7]=M*O+E*Y+N*Ie,g[2]=C*$+L*q+D*ce,g[5]=C*B+L*ee+D*he,g[8]=C*O+L*Y+D*Ie,this}multiplyScalar(n){const a=this.elements;return a[0]*=n,a[3]*=n,a[6]*=n,a[1]*=n,a[4]*=n,a[7]*=n,a[2]*=n,a[5]*=n,a[8]*=n,this}determinant(){const n=this.elements,a=n[0],u=n[1],h=n[2],g=n[3],x=n[4],w=n[5],T=n[6],M=n[7],E=n[8];return a*x*E-a*w*M-u*g*E+u*w*T+h*g*M-h*x*T}invert(){const n=this.elements,a=n[0],u=n[1],h=n[2],g=n[3],x=n[4],w=n[5],T=n[6],M=n[7],E=n[8],N=E*x-w*M,C=w*T-E*g,L=M*g-x*T,D=a*N+u*C+h*L;if(0===D)return this.set(0,0,0,0,0,0,0,0,0);const $=1/D;return n[0]=N*$,n[1]=(h*M-E*u)*$,n[2]=(w*u-h*x)*$,n[3]=C*$,n[4]=(E*a-h*T)*$,n[5]=(h*g-w*a)*$,n[6]=L*$,n[7]=(u*T-M*a)*$,n[8]=(x*a-u*g)*$,this}transpose(){let n;const a=this.elements;return n=a[1],a[1]=a[3],a[3]=n,n=a[2],a[2]=a[6],a[6]=n,n=a[5],a[5]=a[7],a[7]=n,this}getNormalMatrix(n){return this.setFromMatrix4(n).invert().transpose()}transposeIntoArray(n){const a=this.elements;return n[0]=a[0],n[1]=a[3],n[2]=a[6],n[3]=a[1],n[4]=a[4],n[5]=a[7],n[6]=a[2],n[7]=a[5],n[8]=a[8],this}setUvTransform(n,a,u,h,g,x,w){const T=Math.cos(g),M=Math.sin(g);return this.set(u*T,u*M,-u*(T*x+M*w)+x+n,-h*M,h*T,-h*(-M*x+T*w)+w+a,0,0,1),this}scale(n,a){const u=this.elements;return u[0]*=n,u[3]*=n,u[6]*=n,u[1]*=a,u[4]*=a,u[7]*=a,this}rotate(n){const a=Math.cos(n),u=Math.sin(n),h=this.elements,g=h[0],x=h[3],w=h[6],T=h[1],M=h[4],E=h[7];return h[0]=a*g+u*T,h[3]=a*x+u*M,h[6]=a*w+u*E,h[1]=-u*g+a*T,h[4]=-u*x+a*M,h[7]=-u*w+a*E,this}translate(n,a){const u=this.elements;return u[0]+=n*u[2],u[3]+=n*u[5],u[6]+=n*u[8],u[1]+=a*u[2],u[4]+=a*u[5],u[7]+=a*u[8],this}equals(n){const a=this.elements,u=n.elements;for(let h=0;h<9;h++)if(a[h]!==u[h])return!1;return!0}fromArray(n,a=0){for(let u=0;u<9;u++)this.elements[u]=n[u+a];return this}toArray(n=[],a=0){const u=this.elements;return n[a]=u[0],n[a+1]=u[1],n[a+2]=u[2],n[a+3]=u[3],n[a+4]=u[4],n[a+5]=u[5],n[a+6]=u[6],n[a+7]=u[7],n[a+8]=u[8],n}clone(){return(new this.constructor).fromArray(this.elements)}}let oo;zr.prototype.isMatrix3=!0;class zu{static getDataURL(n){if(/^data:/i.test(n.src)||"undefined"==typeof HTMLCanvasElement)return n.src;let a;if(n instanceof HTMLCanvasElement)a=n;else{void 0===oo&&(oo=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),oo.width=n.width,oo.height=n.height;const u=oo.getContext("2d");n instanceof ImageData?u.putImageData(n,0,0):u.drawImage(n,0,0,n.width,n.height),a=oo}return a.width>2048||a.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",n),a.toDataURL("image/jpeg",.6)):a.toDataURL("image/png")}}let yh=0;class Br extends Ji{constructor(n=Br.DEFAULT_IMAGE,a=Br.DEFAULT_MAPPING,u=Ln,h=Ln,g=Zn,x=Eo,w=Ds,T=eo,M=1,E=ds){super(),Object.defineProperty(this,"id",{value:yh++}),this.uuid=Ws(),this.name="",this.image=n,this.mipmaps=[],this.mapping=a,this.wrapS=u,this.wrapT=h,this.magFilter=g,this.minFilter=x,this.anisotropy=M,this.format=w,this.internalFormat=null,this.type=T,this.offset=new It(0,0),this.repeat=new It(1,1),this.center=new It(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new zr,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=E,this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(n){return this.name=n.name,this.image=n.image,this.mipmaps=n.mipmaps.slice(0),this.mapping=n.mapping,this.wrapS=n.wrapS,this.wrapT=n.wrapT,this.magFilter=n.magFilter,this.minFilter=n.minFilter,this.anisotropy=n.anisotropy,this.format=n.format,this.internalFormat=n.internalFormat,this.type=n.type,this.offset.copy(n.offset),this.repeat.copy(n.repeat),this.center.copy(n.center),this.rotation=n.rotation,this.matrixAutoUpdate=n.matrixAutoUpdate,this.matrix.copy(n.matrix),this.generateMipmaps=n.generateMipmaps,this.premultiplyAlpha=n.premultiplyAlpha,this.flipY=n.flipY,this.unpackAlignment=n.unpackAlignment,this.encoding=n.encoding,this}toJSON(n){const a=void 0===n||"string"==typeof n;if(!a&&void 0!==n.textures[this.uuid])return n.textures[this.uuid];const u={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const h=this.image;if(void 0===h.uuid&&(h.uuid=Ws()),!a&&void 0===n.images[h.uuid]){let g;if(Array.isArray(h)){g=[];for(let x=0,w=h.length;x<w;x++)g.push(xh(h[x].isDataTexture?h[x].image:h[x]))}else g=xh(h);n.images[h.uuid]={uuid:h.uuid,url:g}}u.image=h.uuid}return a||(n.textures[this.uuid]=u),u}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(n){if(this.mapping!==Ue)return n;if(n.applyMatrix3(this.matrix),n.x<0||n.x>1)switch(this.wrapS){case yn:n.x=n.x-Math.floor(n.x);break;case Ln:n.x=n.x<0?0:1;break;case Hr:n.x=1===Math.abs(Math.floor(n.x)%2)?Math.ceil(n.x)-n.x:n.x-Math.floor(n.x)}if(n.y<0||n.y>1)switch(this.wrapT){case yn:n.y=n.y-Math.floor(n.y);break;case Ln:n.y=n.y<0?0:1;break;case Hr:n.y=1===Math.abs(Math.floor(n.y)%2)?Math.ceil(n.y)-n.y:n.y-Math.floor(n.y)}return this.flipY&&(n.y=1-n.y),n}set needsUpdate(n){!0===n&&this.version++}}function xh(b){return"undefined"!=typeof HTMLImageElement&&b instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&b instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&b instanceof ImageBitmap?zu.getDataURL(b):b.data?{data:Array.prototype.slice.call(b.data),width:b.width,height:b.height,type:b.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Br.DEFAULT_IMAGE=void 0,Br.DEFAULT_MAPPING=Ue,Br.prototype.isTexture=!0;class sr{constructor(n=0,a=0,u=0,h=1){this.x=n,this.y=a,this.z=u,this.w=h}get width(){return this.z}set width(n){this.z=n}get height(){return this.w}set height(n){this.w=n}set(n,a,u,h){return this.x=n,this.y=a,this.z=u,this.w=h,this}setScalar(n){return this.x=n,this.y=n,this.z=n,this.w=n,this}setX(n){return this.x=n,this}setY(n){return this.y=n,this}setZ(n){return this.z=n,this}setW(n){return this.w=n,this}setComponent(n,a){switch(n){case 0:this.x=a;break;case 1:this.y=a;break;case 2:this.z=a;break;case 3:this.w=a;break;default:throw new Error("index is out of range: "+n)}return this}getComponent(n){switch(n){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+n)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(n){return this.x=n.x,this.y=n.y,this.z=n.z,this.w=void 0!==n.w?n.w:1,this}add(n,a){return void 0!==a?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(n,a)):(this.x+=n.x,this.y+=n.y,this.z+=n.z,this.w+=n.w,this)}addScalar(n){return this.x+=n,this.y+=n,this.z+=n,this.w+=n,this}addVectors(n,a){return this.x=n.x+a.x,this.y=n.y+a.y,this.z=n.z+a.z,this.w=n.w+a.w,this}addScaledVector(n,a){return this.x+=n.x*a,this.y+=n.y*a,this.z+=n.z*a,this.w+=n.w*a,this}sub(n,a){return void 0!==a?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(n,a)):(this.x-=n.x,this.y-=n.y,this.z-=n.z,this.w-=n.w,this)}subScalar(n){return this.x-=n,this.y-=n,this.z-=n,this.w-=n,this}subVectors(n,a){return this.x=n.x-a.x,this.y=n.y-a.y,this.z=n.z-a.z,this.w=n.w-a.w,this}multiply(n){return this.x*=n.x,this.y*=n.y,this.z*=n.z,this.w*=n.w,this}multiplyScalar(n){return this.x*=n,this.y*=n,this.z*=n,this.w*=n,this}applyMatrix4(n){const a=this.x,u=this.y,h=this.z,g=this.w,x=n.elements;return this.x=x[0]*a+x[4]*u+x[8]*h+x[12]*g,this.y=x[1]*a+x[5]*u+x[9]*h+x[13]*g,this.z=x[2]*a+x[6]*u+x[10]*h+x[14]*g,this.w=x[3]*a+x[7]*u+x[11]*h+x[15]*g,this}divideScalar(n){return this.multiplyScalar(1/n)}setAxisAngleFromQuaternion(n){this.w=2*Math.acos(n.w);const a=Math.sqrt(1-n.w*n.w);return a<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=n.x/a,this.y=n.y/a,this.z=n.z/a),this}setAxisAngleFromRotationMatrix(n){let a,u,h,g;const x=.01,w=.1,T=n.elements,M=T[0],E=T[4],N=T[8],C=T[1],L=T[5],D=T[9],$=T[2],B=T[6],O=T[10];if(Math.abs(E-C)<x&&Math.abs(N-$)<x&&Math.abs(D-B)<x){if(Math.abs(E+C)<w&&Math.abs(N+$)<w&&Math.abs(D+B)<w&&Math.abs(M+L+O-3)<w)return this.set(1,0,0,0),this;a=Math.PI;const ee=(M+1)/2,Y=(L+1)/2,ce=(O+1)/2,he=(E+C)/4,Ie=(N+$)/4,Ae=(D+B)/4;return ee>Y&&ee>ce?ee<x?(u=0,h=.707106781,g=.707106781):(u=Math.sqrt(ee),h=he/u,g=Ie/u):Y>ce?Y<x?(u=.707106781,h=0,g=.707106781):(h=Math.sqrt(Y),u=he/h,g=Ae/h):ce<x?(u=.707106781,h=.707106781,g=0):(g=Math.sqrt(ce),u=Ie/g,h=Ae/g),this.set(u,h,g,a),this}let q=Math.sqrt((B-D)*(B-D)+(N-$)*(N-$)+(C-E)*(C-E));return Math.abs(q)<.001&&(q=1),this.x=(B-D)/q,this.y=(N-$)/q,this.z=(C-E)/q,this.w=Math.acos((M+L+O-1)/2),this}min(n){return this.x=Math.min(this.x,n.x),this.y=Math.min(this.y,n.y),this.z=Math.min(this.z,n.z),this.w=Math.min(this.w,n.w),this}max(n){return this.x=Math.max(this.x,n.x),this.y=Math.max(this.y,n.y),this.z=Math.max(this.z,n.z),this.w=Math.max(this.w,n.w),this}clamp(n,a){return this.x=Math.max(n.x,Math.min(a.x,this.x)),this.y=Math.max(n.y,Math.min(a.y,this.y)),this.z=Math.max(n.z,Math.min(a.z,this.z)),this.w=Math.max(n.w,Math.min(a.w,this.w)),this}clampScalar(n,a){return this.x=Math.max(n,Math.min(a,this.x)),this.y=Math.max(n,Math.min(a,this.y)),this.z=Math.max(n,Math.min(a,this.z)),this.w=Math.max(n,Math.min(a,this.w)),this}clampLength(n,a){const u=this.length();return this.divideScalar(u||1).multiplyScalar(Math.max(n,Math.min(a,u)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(n){return this.x*n.x+this.y*n.y+this.z*n.z+this.w*n.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(n){return this.normalize().multiplyScalar(n)}lerp(n,a){return this.x+=(n.x-this.x)*a,this.y+=(n.y-this.y)*a,this.z+=(n.z-this.z)*a,this.w+=(n.w-this.w)*a,this}lerpVectors(n,a,u){return this.x=n.x+(a.x-n.x)*u,this.y=n.y+(a.y-n.y)*u,this.z=n.z+(a.z-n.z)*u,this.w=n.w+(a.w-n.w)*u,this}equals(n){return n.x===this.x&&n.y===this.y&&n.z===this.z&&n.w===this.w}fromArray(n,a=0){return this.x=n[a],this.y=n[a+1],this.z=n[a+2],this.w=n[a+3],this}toArray(n=[],a=0){return n[a]=this.x,n[a+1]=this.y,n[a+2]=this.z,n[a+3]=this.w,n}fromBufferAttribute(n,a,u){return void 0!==u&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=n.getX(a),this.y=n.getY(a),this.z=n.getZ(a),this.w=n.getW(a),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}sr.prototype.isVector4=!0;class Si extends Ji{constructor(n,a,u={}){super(),this.width=n,this.height=a,this.depth=1,this.scissor=new sr(0,0,n,a),this.scissorTest=!1,this.viewport=new sr(0,0,n,a),this.texture=new Br(void 0,u.mapping,u.wrapS,u.wrapT,u.magFilter,u.minFilter,u.format,u.type,u.anisotropy,u.encoding),this.texture.isRenderTargetTexture=!0,this.texture.image={width:n,height:a,depth:1},this.texture.generateMipmaps=void 0!==u.generateMipmaps&&u.generateMipmaps,this.texture.internalFormat=void 0!==u.internalFormat?u.internalFormat:null,this.texture.minFilter=void 0!==u.minFilter?u.minFilter:Zn,this.depthBuffer=void 0===u.depthBuffer||u.depthBuffer,this.stencilBuffer=void 0!==u.stencilBuffer&&u.stencilBuffer,this.depthTexture=void 0!==u.depthTexture?u.depthTexture:null}setTexture(n){n.image={width:this.width,height:this.height,depth:this.depth},this.texture=n}setSize(n,a,u=1){this.width===n&&this.height===a&&this.depth===u||(this.width=n,this.height=a,this.depth=u,this.texture.image.width=n,this.texture.image.height=a,this.texture.image.depth=u,this.dispose()),this.viewport.set(0,0,n,a),this.scissor.set(0,0,n,a)}clone(){return(new this.constructor).copy(this)}copy(n){return this.width=n.width,this.height=n.height,this.depth=n.depth,this.viewport.copy(n.viewport),this.texture=n.texture.clone(),this.texture.image=t_({},this.texture.image),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}Si.prototype.isWebGLRenderTarget=!0;class Bu extends Si{constructor(n,a,u){super(n,a);const h=this.texture;this.texture=[];for(let g=0;g<u;g++)this.texture[g]=h.clone()}setSize(n,a,u=1){if(this.width!==n||this.height!==a||this.depth!==u){this.width=n,this.height=a,this.depth=u;for(let h=0,g=this.texture.length;h<g;h++)this.texture[h].image.width=n,this.texture[h].image.height=a,this.texture[h].image.depth=u;this.dispose()}return this.viewport.set(0,0,n,a),this.scissor.set(0,0,n,a),this}copy(n){this.dispose(),this.width=n.width,this.height=n.height,this.depth=n.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.depthTexture=n.depthTexture,this.texture.length=0;for(let a=0,u=n.texture.length;a<u;a++)this.texture[a]=n.texture[a].clone();return this}}Bu.prototype.isWebGLMultipleRenderTargets=!0;class Pl extends Si{constructor(n,a,u){super(n,a,u),this.samples=4}copy(n){return super.copy.call(this,n),this.samples=n.samples,this}}Pl.prototype.isWebGLMultisampleRenderTarget=!0;class Qr{constructor(n=0,a=0,u=0,h=1){this._x=n,this._y=a,this._z=u,this._w=h}static slerp(n,a,u,h){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),u.slerpQuaternions(n,a,h)}static slerpFlat(n,a,u,h,g,x,w){let T=u[h+0],M=u[h+1],E=u[h+2],N=u[h+3];const C=g[x+0],L=g[x+1],D=g[x+2],$=g[x+3];if(0===w)return n[a+0]=T,n[a+1]=M,n[a+2]=E,void(n[a+3]=N);if(1===w)return n[a+0]=C,n[a+1]=L,n[a+2]=D,void(n[a+3]=$);if(N!==$||T!==C||M!==L||E!==D){let B=1-w;const O=T*C+M*L+E*D+N*$,q=O>=0?1:-1,ee=1-O*O;if(ee>Number.EPSILON){const ce=Math.sqrt(ee),he=Math.atan2(ce,O*q);B=Math.sin(B*he)/ce,w=Math.sin(w*he)/ce}const Y=w*q;if(T=T*B+C*Y,M=M*B+L*Y,E=E*B+D*Y,N=N*B+$*Y,B===1-w){const ce=1/Math.sqrt(T*T+M*M+E*E+N*N);T*=ce,M*=ce,E*=ce,N*=ce}}n[a]=T,n[a+1]=M,n[a+2]=E,n[a+3]=N}static multiplyQuaternionsFlat(n,a,u,h,g,x){const w=u[h],T=u[h+1],M=u[h+2],E=u[h+3],N=g[x],C=g[x+1],L=g[x+2],D=g[x+3];return n[a]=w*D+E*N+T*L-M*C,n[a+1]=T*D+E*C+M*N-w*L,n[a+2]=M*D+E*L+w*C-T*N,n[a+3]=E*D-w*N-T*C-M*L,n}get x(){return this._x}set x(n){this._x=n,this._onChangeCallback()}get y(){return this._y}set y(n){this._y=n,this._onChangeCallback()}get z(){return this._z}set z(n){this._z=n,this._onChangeCallback()}get w(){return this._w}set w(n){this._w=n,this._onChangeCallback()}set(n,a,u,h){return this._x=n,this._y=a,this._z=u,this._w=h,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(n){return this._x=n.x,this._y=n.y,this._z=n.z,this._w=n.w,this._onChangeCallback(),this}setFromEuler(n,a){if(!n||!n.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const u=n._x,h=n._y,g=n._z,x=n._order,w=Math.cos,T=Math.sin,M=w(u/2),E=w(h/2),N=w(g/2),C=T(u/2),L=T(h/2),D=T(g/2);switch(x){case"XYZ":this._x=C*E*N+M*L*D,this._y=M*L*N-C*E*D,this._z=M*E*D+C*L*N,this._w=M*E*N-C*L*D;break;case"YXZ":this._x=C*E*N+M*L*D,this._y=M*L*N-C*E*D,this._z=M*E*D-C*L*N,this._w=M*E*N+C*L*D;break;case"ZXY":this._x=C*E*N-M*L*D,this._y=M*L*N+C*E*D,this._z=M*E*D+C*L*N,this._w=M*E*N-C*L*D;break;case"ZYX":this._x=C*E*N-M*L*D,this._y=M*L*N+C*E*D,this._z=M*E*D-C*L*N,this._w=M*E*N+C*L*D;break;case"YZX":this._x=C*E*N+M*L*D,this._y=M*L*N+C*E*D,this._z=M*E*D-C*L*N,this._w=M*E*N-C*L*D;break;case"XZY":this._x=C*E*N-M*L*D,this._y=M*L*N-C*E*D,this._z=M*E*D+C*L*N,this._w=M*E*N+C*L*D;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+x)}return!1!==a&&this._onChangeCallback(),this}setFromAxisAngle(n,a){const u=a/2,h=Math.sin(u);return this._x=n.x*h,this._y=n.y*h,this._z=n.z*h,this._w=Math.cos(u),this._onChangeCallback(),this}setFromRotationMatrix(n){const a=n.elements,u=a[0],h=a[4],g=a[8],x=a[1],w=a[5],T=a[9],M=a[2],E=a[6],N=a[10],C=u+w+N;if(C>0){const L=.5/Math.sqrt(C+1);this._w=.25/L,this._x=(E-T)*L,this._y=(g-M)*L,this._z=(x-h)*L}else if(u>w&&u>N){const L=2*Math.sqrt(1+u-w-N);this._w=(E-T)/L,this._x=.25*L,this._y=(h+x)/L,this._z=(g+M)/L}else if(w>N){const L=2*Math.sqrt(1+w-u-N);this._w=(g-M)/L,this._x=(h+x)/L,this._y=.25*L,this._z=(T+E)/L}else{const L=2*Math.sqrt(1+N-u-w);this._w=(x-h)/L,this._x=(g+M)/L,this._y=(T+E)/L,this._z=.25*L}return this._onChangeCallback(),this}setFromUnitVectors(n,a){let u=n.dot(a)+1;return u<Number.EPSILON?(u=0,Math.abs(n.x)>Math.abs(n.z)?(this._x=-n.y,this._y=n.x,this._z=0,this._w=u):(this._x=0,this._y=-n.z,this._z=n.y,this._w=u)):(this._x=n.y*a.z-n.z*a.y,this._y=n.z*a.x-n.x*a.z,this._z=n.x*a.y-n.y*a.x,this._w=u),this.normalize()}angleTo(n){return 2*Math.acos(Math.abs(jr(this.dot(n),-1,1)))}rotateTowards(n,a){const u=this.angleTo(n);if(0===u)return this;const h=Math.min(1,a/u);return this.slerp(n,h),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(n){return this._x*n._x+this._y*n._y+this._z*n._z+this._w*n._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let n=this.length();return 0===n?(this._x=0,this._y=0,this._z=0,this._w=1):(n=1/n,this._x=this._x*n,this._y=this._y*n,this._z=this._z*n,this._w=this._w*n),this._onChangeCallback(),this}multiply(n,a){return void 0!==a?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(n,a)):this.multiplyQuaternions(this,n)}premultiply(n){return this.multiplyQuaternions(n,this)}multiplyQuaternions(n,a){const u=n._x,h=n._y,g=n._z,x=n._w,w=a._x,T=a._y,M=a._z,E=a._w;return this._x=u*E+x*w+h*M-g*T,this._y=h*E+x*T+g*w-u*M,this._z=g*E+x*M+u*T-h*w,this._w=x*E-u*w-h*T-g*M,this._onChangeCallback(),this}slerp(n,a){if(0===a)return this;if(1===a)return this.copy(n);const u=this._x,h=this._y,g=this._z,x=this._w;let w=x*n._w+u*n._x+h*n._y+g*n._z;if(w<0?(this._w=-n._w,this._x=-n._x,this._y=-n._y,this._z=-n._z,w=-w):this.copy(n),w>=1)return this._w=x,this._x=u,this._y=h,this._z=g,this;const T=1-w*w;if(T<=Number.EPSILON){const L=1-a;return this._w=L*x+a*this._w,this._x=L*u+a*this._x,this._y=L*h+a*this._y,this._z=L*g+a*this._z,this.normalize(),this._onChangeCallback(),this}const M=Math.sqrt(T),E=Math.atan2(M,w),N=Math.sin((1-a)*E)/M,C=Math.sin(a*E)/M;return this._w=x*N+this._w*C,this._x=u*N+this._x*C,this._y=h*N+this._y*C,this._z=g*N+this._z*C,this._onChangeCallback(),this}slerpQuaternions(n,a,u){this.copy(n).slerp(a,u)}equals(n){return n._x===this._x&&n._y===this._y&&n._z===this._z&&n._w===this._w}fromArray(n,a=0){return this._x=n[a],this._y=n[a+1],this._z=n[a+2],this._w=n[a+3],this._onChangeCallback(),this}toArray(n=[],a=0){return n[a]=this._x,n[a+1]=this._y,n[a+2]=this._z,n[a+3]=this._w,n}fromBufferAttribute(n,a){return this._x=n.getX(a),this._y=n.getY(a),this._z=n.getZ(a),this._w=n.getW(a),this}_onChange(n){return this._onChangeCallback=n,this}_onChangeCallback(){}}Qr.prototype.isQuaternion=!0;class te{constructor(n=0,a=0,u=0){this.x=n,this.y=a,this.z=u}set(n,a,u){return void 0===u&&(u=this.z),this.x=n,this.y=a,this.z=u,this}setScalar(n){return this.x=n,this.y=n,this.z=n,this}setX(n){return this.x=n,this}setY(n){return this.y=n,this}setZ(n){return this.z=n,this}setComponent(n,a){switch(n){case 0:this.x=a;break;case 1:this.y=a;break;case 2:this.z=a;break;default:throw new Error("index is out of range: "+n)}return this}getComponent(n){switch(n){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+n)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(n){return this.x=n.x,this.y=n.y,this.z=n.z,this}add(n,a){return void 0!==a?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(n,a)):(this.x+=n.x,this.y+=n.y,this.z+=n.z,this)}addScalar(n){return this.x+=n,this.y+=n,this.z+=n,this}addVectors(n,a){return this.x=n.x+a.x,this.y=n.y+a.y,this.z=n.z+a.z,this}addScaledVector(n,a){return this.x+=n.x*a,this.y+=n.y*a,this.z+=n.z*a,this}sub(n,a){return void 0!==a?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(n,a)):(this.x-=n.x,this.y-=n.y,this.z-=n.z,this)}subScalar(n){return this.x-=n,this.y-=n,this.z-=n,this}subVectors(n,a){return this.x=n.x-a.x,this.y=n.y-a.y,this.z=n.z-a.z,this}multiply(n,a){return void 0!==a?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(n,a)):(this.x*=n.x,this.y*=n.y,this.z*=n.z,this)}multiplyScalar(n){return this.x*=n,this.y*=n,this.z*=n,this}multiplyVectors(n,a){return this.x=n.x*a.x,this.y=n.y*a.y,this.z=n.z*a.z,this}applyEuler(n){return n&&n.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(vh.setFromEuler(n))}applyAxisAngle(n,a){return this.applyQuaternion(vh.setFromAxisAngle(n,a))}applyMatrix3(n){const a=this.x,u=this.y,h=this.z,g=n.elements;return this.x=g[0]*a+g[3]*u+g[6]*h,this.y=g[1]*a+g[4]*u+g[7]*h,this.z=g[2]*a+g[5]*u+g[8]*h,this}applyNormalMatrix(n){return this.applyMatrix3(n).normalize()}applyMatrix4(n){const a=this.x,u=this.y,h=this.z,g=n.elements,x=1/(g[3]*a+g[7]*u+g[11]*h+g[15]);return this.x=(g[0]*a+g[4]*u+g[8]*h+g[12])*x,this.y=(g[1]*a+g[5]*u+g[9]*h+g[13])*x,this.z=(g[2]*a+g[6]*u+g[10]*h+g[14])*x,this}applyQuaternion(n){const a=this.x,u=this.y,h=this.z,g=n.x,x=n.y,w=n.z,T=n.w,M=T*a+x*h-w*u,E=T*u+w*a-g*h,N=T*h+g*u-x*a,C=-g*a-x*u-w*h;return this.x=M*T+C*-g+E*-w-N*-x,this.y=E*T+C*-x+N*-g-M*-w,this.z=N*T+C*-w+M*-x-E*-g,this}project(n){return this.applyMatrix4(n.matrixWorldInverse).applyMatrix4(n.projectionMatrix)}unproject(n){return this.applyMatrix4(n.projectionMatrixInverse).applyMatrix4(n.matrixWorld)}transformDirection(n){const a=this.x,u=this.y,h=this.z,g=n.elements;return this.x=g[0]*a+g[4]*u+g[8]*h,this.y=g[1]*a+g[5]*u+g[9]*h,this.z=g[2]*a+g[6]*u+g[10]*h,this.normalize()}divide(n){return this.x/=n.x,this.y/=n.y,this.z/=n.z,this}divideScalar(n){return this.multiplyScalar(1/n)}min(n){return this.x=Math.min(this.x,n.x),this.y=Math.min(this.y,n.y),this.z=Math.min(this.z,n.z),this}max(n){return this.x=Math.max(this.x,n.x),this.y=Math.max(this.y,n.y),this.z=Math.max(this.z,n.z),this}clamp(n,a){return this.x=Math.max(n.x,Math.min(a.x,this.x)),this.y=Math.max(n.y,Math.min(a.y,this.y)),this.z=Math.max(n.z,Math.min(a.z,this.z)),this}clampScalar(n,a){return this.x=Math.max(n,Math.min(a,this.x)),this.y=Math.max(n,Math.min(a,this.y)),this.z=Math.max(n,Math.min(a,this.z)),this}clampLength(n,a){const u=this.length();return this.divideScalar(u||1).multiplyScalar(Math.max(n,Math.min(a,u)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(n){return this.x*n.x+this.y*n.y+this.z*n.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(n){return this.normalize().multiplyScalar(n)}lerp(n,a){return this.x+=(n.x-this.x)*a,this.y+=(n.y-this.y)*a,this.z+=(n.z-this.z)*a,this}lerpVectors(n,a,u){return this.x=n.x+(a.x-n.x)*u,this.y=n.y+(a.y-n.y)*u,this.z=n.z+(a.z-n.z)*u,this}cross(n,a){return void 0!==a?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(n,a)):this.crossVectors(this,n)}crossVectors(n,a){const u=n.x,h=n.y,g=n.z,x=a.x,w=a.y,T=a.z;return this.x=h*T-g*w,this.y=g*x-u*T,this.z=u*w-h*x,this}projectOnVector(n){const a=n.lengthSq();if(0===a)return this.set(0,0,0);const u=n.dot(this)/a;return this.copy(n).multiplyScalar(u)}projectOnPlane(n){return bh.copy(this).projectOnVector(n),this.sub(bh)}reflect(n){return this.sub(bh.copy(n).multiplyScalar(2*this.dot(n)))}angleTo(n){const a=Math.sqrt(this.lengthSq()*n.lengthSq());if(0===a)return Math.PI/2;const u=this.dot(n)/a;return Math.acos(jr(u,-1,1))}distanceTo(n){return Math.sqrt(this.distanceToSquared(n))}distanceToSquared(n){const a=this.x-n.x,u=this.y-n.y,h=this.z-n.z;return a*a+u*u+h*h}manhattanDistanceTo(n){return Math.abs(this.x-n.x)+Math.abs(this.y-n.y)+Math.abs(this.z-n.z)}setFromSpherical(n){return this.setFromSphericalCoords(n.radius,n.phi,n.theta)}setFromSphericalCoords(n,a,u){const h=Math.sin(a)*n;return this.x=h*Math.sin(u),this.y=Math.cos(a)*n,this.z=h*Math.cos(u),this}setFromCylindrical(n){return this.setFromCylindricalCoords(n.radius,n.theta,n.y)}setFromCylindricalCoords(n,a,u){return this.x=n*Math.sin(a),this.y=u,this.z=n*Math.cos(a),this}setFromMatrixPosition(n){const a=n.elements;return this.x=a[12],this.y=a[13],this.z=a[14],this}setFromMatrixScale(n){const a=this.setFromMatrixColumn(n,0).length(),u=this.setFromMatrixColumn(n,1).length(),h=this.setFromMatrixColumn(n,2).length();return this.x=a,this.y=u,this.z=h,this}setFromMatrixColumn(n,a){return this.fromArray(n.elements,4*a)}setFromMatrix3Column(n,a){return this.fromArray(n.elements,3*a)}equals(n){return n.x===this.x&&n.y===this.y&&n.z===this.z}fromArray(n,a=0){return this.x=n[a],this.y=n[a+1],this.z=n[a+2],this}toArray(n=[],a=0){return n[a]=this.x,n[a+1]=this.y,n[a+2]=this.z,n}fromBufferAttribute(n,a,u){return void 0!==u&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=n.getX(a),this.y=n.getY(a),this.z=n.getZ(a),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}te.prototype.isVector3=!0;const bh=new te,vh=new Qr;class Gs{constructor(n=new te(1/0,1/0,1/0),a=new te(-1/0,-1/0,-1/0)){this.min=n,this.max=a}set(n,a){return this.min.copy(n),this.max.copy(a),this}setFromArray(n){let a=1/0,u=1/0,h=1/0,g=-1/0,x=-1/0,w=-1/0;for(let T=0,M=n.length;T<M;T+=3){const E=n[T],N=n[T+1],C=n[T+2];E<a&&(a=E),N<u&&(u=N),C<h&&(h=C),E>g&&(g=E),N>x&&(x=N),C>w&&(w=C)}return this.min.set(a,u,h),this.max.set(g,x,w),this}setFromBufferAttribute(n){let a=1/0,u=1/0,h=1/0,g=-1/0,x=-1/0,w=-1/0;for(let T=0,M=n.count;T<M;T++){const E=n.getX(T),N=n.getY(T),C=n.getZ(T);E<a&&(a=E),N<u&&(u=N),C<h&&(h=C),E>g&&(g=E),N>x&&(x=N),C>w&&(w=C)}return this.min.set(a,u,h),this.max.set(g,x,w),this}setFromPoints(n){this.makeEmpty();for(let a=0,u=n.length;a<u;a++)this.expandByPoint(n[a]);return this}setFromCenterAndSize(n,a){const u=Do.copy(a).multiplyScalar(.5);return this.min.copy(n).sub(u),this.max.copy(n).add(u),this}setFromObject(n){return this.makeEmpty(),this.expandByObject(n)}clone(){return(new this.constructor).copy(this)}copy(n){return this.min.copy(n.min),this.max.copy(n.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(n){return this.isEmpty()?n.set(0,0,0):n.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(n){return this.isEmpty()?n.set(0,0,0):n.subVectors(this.max,this.min)}expandByPoint(n){return this.min.min(n),this.max.max(n),this}expandByVector(n){return this.min.sub(n),this.max.add(n),this}expandByScalar(n){return this.min.addScalar(-n),this.max.addScalar(n),this}expandByObject(n){n.updateWorldMatrix(!1,!1);const a=n.geometry;void 0!==a&&(null===a.boundingBox&&a.computeBoundingBox(),zl.copy(a.boundingBox),zl.applyMatrix4(n.matrixWorld),this.union(zl));const u=n.children;for(let h=0,g=u.length;h<g;h++)this.expandByObject(u[h]);return this}containsPoint(n){return!(n.x<this.min.x||n.x>this.max.x||n.y<this.min.y||n.y>this.max.y||n.z<this.min.z||n.z>this.max.z)}containsBox(n){return this.min.x<=n.min.x&&n.max.x<=this.max.x&&this.min.y<=n.min.y&&n.max.y<=this.max.y&&this.min.z<=n.min.z&&n.max.z<=this.max.z}getParameter(n,a){return a.set((n.x-this.min.x)/(this.max.x-this.min.x),(n.y-this.min.y)/(this.max.y-this.min.y),(n.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(n){return!(n.max.x<this.min.x||n.min.x>this.max.x||n.max.y<this.min.y||n.min.y>this.max.y||n.max.z<this.min.z||n.min.z>this.max.z)}intersectsSphere(n){return this.clampPoint(n.center,Do),Do.distanceToSquared(n.center)<=n.radius*n.radius}intersectsPlane(n){let a,u;return n.normal.x>0?(a=n.normal.x*this.min.x,u=n.normal.x*this.max.x):(a=n.normal.x*this.max.x,u=n.normal.x*this.min.x),n.normal.y>0?(a+=n.normal.y*this.min.y,u+=n.normal.y*this.max.y):(a+=n.normal.y*this.max.y,u+=n.normal.y*this.min.y),n.normal.z>0?(a+=n.normal.z*this.min.z,u+=n.normal.z*this.max.z):(a+=n.normal.z*this.max.z,u+=n.normal.z*this.min.z),a<=-n.constant&&u>=-n.constant}intersectsTriangle(n){if(this.isEmpty())return!1;this.getCenter(uo),$o.subVectors(this.max,uo),Ca.subVectors(n.a,uo),Fo.subVectors(n.b,uo),lo.subVectors(n.c,uo),Pi.subVectors(Fo,Ca),Qi.subVectors(lo,Fo),ea.subVectors(Ca,lo);let a=[0,-Pi.z,Pi.y,0,-Qi.z,Qi.y,0,-ea.z,ea.y,Pi.z,0,-Pi.x,Qi.z,0,-Qi.x,ea.z,0,-ea.x,-Pi.y,Pi.x,0,-Qi.y,Qi.x,0,-ea.y,ea.x,0];return!!Bl(a,Ca,Fo,lo,$o)&&(a=[1,0,0,0,1,0,0,0,1],!!Bl(a,Ca,Fo,lo,$o)&&(Oo.crossVectors(Pi,Qi),a=[Oo.x,Oo.y,Oo.z],Bl(a,Ca,Fo,lo,$o)))}clampPoint(n,a){return a.copy(n).clamp(this.min,this.max)}distanceToPoint(n){return Do.copy(n).clamp(this.min,this.max).sub(n).length()}getBoundingSphere(n){return this.getCenter(n.center),n.radius=.5*this.getSize(Do).length(),n}intersect(n){return this.min.max(n.min),this.max.min(n.max),this.isEmpty()&&this.makeEmpty(),this}union(n){return this.min.min(n.min),this.max.max(n.max),this}applyMatrix4(n){return this.isEmpty()||(Ti[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(n),Ti[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(n),Ti[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(n),Ti[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(n),Ti[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(n),Ti[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(n),Ti[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(n),Ti[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(n),this.setFromPoints(Ti)),this}translate(n){return this.min.add(n),this.max.add(n),this}equals(n){return n.min.equals(this.min)&&n.max.equals(this.max)}}Gs.prototype.isBox3=!0;const Ti=[new te,new te,new te,new te,new te,new te,new te,new te],Do=new te,zl=new Gs,Ca=new te,Fo=new te,lo=new te,Pi=new te,Qi=new te,ea=new te,uo=new te,$o=new te,Oo=new te,ta=new te;function Bl(b,n,a,u,h){for(let g=0,x=b.length-3;g<=x;g+=3){ta.fromArray(b,g);const w=h.x*Math.abs(ta.x)+h.y*Math.abs(ta.y)+h.z*Math.abs(ta.z),T=n.dot(ta),M=a.dot(ta),E=u.dot(ta);if(Math.max(-Math.max(T,M,E),Math.min(T,M,E))>w)return!1}return!0}const rp=new Gs,wh=new te,Uu=new te,Vu=new te;class Na{constructor(n=new te,a=-1){this.center=n,this.radius=a}set(n,a){return this.center.copy(n),this.radius=a,this}setFromPoints(n,a){const u=this.center;void 0!==a?u.copy(a):rp.setFromPoints(n).getCenter(u);let h=0;for(let g=0,x=n.length;g<x;g++)h=Math.max(h,u.distanceToSquared(n[g]));return this.radius=Math.sqrt(h),this}copy(n){return this.center.copy(n.center),this.radius=n.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(n){return n.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(n){return n.distanceTo(this.center)-this.radius}intersectsSphere(n){const a=this.radius+n.radius;return n.center.distanceToSquared(this.center)<=a*a}intersectsBox(n){return n.intersectsSphere(this)}intersectsPlane(n){return Math.abs(n.distanceToPoint(this.center))<=this.radius}clampPoint(n,a){const u=this.center.distanceToSquared(n);return a.copy(n),u>this.radius*this.radius&&(a.sub(this.center).normalize(),a.multiplyScalar(this.radius).add(this.center)),a}getBoundingBox(n){return this.isEmpty()?(n.makeEmpty(),n):(n.set(this.center,this.center),n.expandByScalar(this.radius),n)}applyMatrix4(n){return this.center.applyMatrix4(n),this.radius=this.radius*n.getMaxScaleOnAxis(),this}translate(n){return this.center.add(n),this}expandByPoint(n){Vu.subVectors(n,this.center);const a=Vu.lengthSq();if(a>this.radius*this.radius){const u=Math.sqrt(a),h=.5*(u-this.radius);this.center.add(Vu.multiplyScalar(h/u)),this.radius+=h}return this}union(n){return Uu.subVectors(n.center,this.center).normalize().multiplyScalar(n.radius),this.expandByPoint(wh.copy(n.center).add(Uu)),this.expandByPoint(wh.copy(n.center).sub(Uu)),this}equals(n){return n.center.equals(this.center)&&n.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const na=new te,Sh=new te,Wu=new te,Aa=new te,Ul=new te,Gu=new te,Th=new te;class Ra{constructor(n=new te,a=new te(0,0,-1)){this.origin=n,this.direction=a}set(n,a){return this.origin.copy(n),this.direction.copy(a),this}copy(n){return this.origin.copy(n.origin),this.direction.copy(n.direction),this}at(n,a){return a.copy(this.direction).multiplyScalar(n).add(this.origin)}lookAt(n){return this.direction.copy(n).sub(this.origin).normalize(),this}recast(n){return this.origin.copy(this.at(n,na)),this}closestPointToPoint(n,a){a.subVectors(n,this.origin);const u=a.dot(this.direction);return u<0?a.copy(this.origin):a.copy(this.direction).multiplyScalar(u).add(this.origin)}distanceToPoint(n){return Math.sqrt(this.distanceSqToPoint(n))}distanceSqToPoint(n){const a=na.subVectors(n,this.origin).dot(this.direction);return a<0?this.origin.distanceToSquared(n):(na.copy(this.direction).multiplyScalar(a).add(this.origin),na.distanceToSquared(n))}distanceSqToSegment(n,a,u,h){Sh.copy(n).add(a).multiplyScalar(.5),Wu.copy(a).sub(n).normalize(),Aa.copy(this.origin).sub(Sh);const g=.5*n.distanceTo(a),x=-this.direction.dot(Wu),w=Aa.dot(this.direction),T=-Aa.dot(Wu),M=Aa.lengthSq(),E=Math.abs(1-x*x);let N,C,L,D;if(E>0)if(N=x*T-w,C=x*w-T,D=g*E,N>=0)if(C>=-D)if(C<=D){const $=1/E;N*=$,C*=$,L=N*(N+x*C+2*w)+C*(x*N+C+2*T)+M}else C=g,N=Math.max(0,-(x*C+w)),L=-N*N+C*(C+2*T)+M;else C=-g,N=Math.max(0,-(x*C+w)),L=-N*N+C*(C+2*T)+M;else C<=-D?(N=Math.max(0,-(-x*g+w)),C=N>0?-g:Math.min(Math.max(-g,-T),g),L=-N*N+C*(C+2*T)+M):C<=D?(N=0,C=Math.min(Math.max(-g,-T),g),L=C*(C+2*T)+M):(N=Math.max(0,-(x*g+w)),C=N>0?g:Math.min(Math.max(-g,-T),g),L=-N*N+C*(C+2*T)+M);else C=x>0?-g:g,N=Math.max(0,-(x*C+w)),L=-N*N+C*(C+2*T)+M;return u&&u.copy(this.direction).multiplyScalar(N).add(this.origin),h&&h.copy(Wu).multiplyScalar(C).add(Sh),L}intersectSphere(n,a){na.subVectors(n.center,this.origin);const u=na.dot(this.direction),h=na.dot(na)-u*u,g=n.radius*n.radius;if(h>g)return null;const x=Math.sqrt(g-h),w=u-x,T=u+x;return w<0&&T<0?null:this.at(w<0?T:w,a)}intersectsSphere(n){return this.distanceSqToPoint(n.center)<=n.radius*n.radius}distanceToPlane(n){const a=n.normal.dot(this.direction);if(0===a)return 0===n.distanceToPoint(this.origin)?0:null;const u=-(this.origin.dot(n.normal)+n.constant)/a;return u>=0?u:null}intersectPlane(n,a){const u=this.distanceToPlane(n);return null===u?null:this.at(u,a)}intersectsPlane(n){const a=n.distanceToPoint(this.origin);return 0===a||n.normal.dot(this.direction)*a<0}intersectBox(n,a){let u,h,g,x,w,T;const M=1/this.direction.x,E=1/this.direction.y,N=1/this.direction.z,C=this.origin;return M>=0?(u=(n.min.x-C.x)*M,h=(n.max.x-C.x)*M):(u=(n.max.x-C.x)*M,h=(n.min.x-C.x)*M),E>=0?(g=(n.min.y-C.y)*E,x=(n.max.y-C.y)*E):(g=(n.max.y-C.y)*E,x=(n.min.y-C.y)*E),u>x||g>h?null:((g>u||u!=u)&&(u=g),(x<h||h!=h)&&(h=x),N>=0?(w=(n.min.z-C.z)*N,T=(n.max.z-C.z)*N):(w=(n.max.z-C.z)*N,T=(n.min.z-C.z)*N),u>T||w>h?null:((w>u||u!=u)&&(u=w),(T<h||h!=h)&&(h=T),h<0?null:this.at(u>=0?u:h,a)))}intersectsBox(n){return null!==this.intersectBox(n,na)}intersectTriangle(n,a,u,h,g){Ul.subVectors(a,n),Gu.subVectors(u,n),Th.crossVectors(Ul,Gu);let x,w=this.direction.dot(Th);if(w>0){if(h)return null;x=1}else{if(!(w<0))return null;x=-1,w=-w}Aa.subVectors(this.origin,n);const T=x*this.direction.dot(Gu.crossVectors(Aa,Gu));if(T<0)return null;const M=x*this.direction.dot(Ul.cross(Aa));if(M<0||T+M>w)return null;const E=-x*Aa.dot(Th);return E<0?null:this.at(E/w,g)}applyMatrix4(n){return this.origin.applyMatrix4(n),this.direction.transformDirection(n),this}equals(n){return n.origin.equals(this.origin)&&n.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class sn{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(n,a,u,h,g,x,w,T,M,E,N,C,L,D,$,B){const O=this.elements;return O[0]=n,O[4]=a,O[8]=u,O[12]=h,O[1]=g,O[5]=x,O[9]=w,O[13]=T,O[2]=M,O[6]=E,O[10]=N,O[14]=C,O[3]=L,O[7]=D,O[11]=$,O[15]=B,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new sn).fromArray(this.elements)}copy(n){const a=this.elements,u=n.elements;return a[0]=u[0],a[1]=u[1],a[2]=u[2],a[3]=u[3],a[4]=u[4],a[5]=u[5],a[6]=u[6],a[7]=u[7],a[8]=u[8],a[9]=u[9],a[10]=u[10],a[11]=u[11],a[12]=u[12],a[13]=u[13],a[14]=u[14],a[15]=u[15],this}copyPosition(n){const a=this.elements,u=n.elements;return a[12]=u[12],a[13]=u[13],a[14]=u[14],this}setFromMatrix3(n){const a=n.elements;return this.set(a[0],a[3],a[6],0,a[1],a[4],a[7],0,a[2],a[5],a[8],0,0,0,0,1),this}extractBasis(n,a,u){return n.setFromMatrixColumn(this,0),a.setFromMatrixColumn(this,1),u.setFromMatrixColumn(this,2),this}makeBasis(n,a,u){return this.set(n.x,a.x,u.x,0,n.y,a.y,u.y,0,n.z,a.z,u.z,0,0,0,0,1),this}extractRotation(n){const a=this.elements,u=n.elements,h=1/Po.setFromMatrixColumn(n,0).length(),g=1/Po.setFromMatrixColumn(n,1).length(),x=1/Po.setFromMatrixColumn(n,2).length();return a[0]=u[0]*h,a[1]=u[1]*h,a[2]=u[2]*h,a[3]=0,a[4]=u[4]*g,a[5]=u[5]*g,a[6]=u[6]*g,a[7]=0,a[8]=u[8]*x,a[9]=u[9]*x,a[10]=u[10]*x,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,this}makeRotationFromEuler(n){n&&n.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const a=this.elements,u=n.x,h=n.y,g=n.z,x=Math.cos(u),w=Math.sin(u),T=Math.cos(h),M=Math.sin(h),E=Math.cos(g),N=Math.sin(g);if("XYZ"===n.order){const C=x*E,L=x*N,D=w*E,$=w*N;a[0]=T*E,a[4]=-T*N,a[8]=M,a[1]=L+D*M,a[5]=C-$*M,a[9]=-w*T,a[2]=$-C*M,a[6]=D+L*M,a[10]=x*T}else if("YXZ"===n.order){const C=T*E,L=T*N,D=M*E,$=M*N;a[0]=C+$*w,a[4]=D*w-L,a[8]=x*M,a[1]=x*N,a[5]=x*E,a[9]=-w,a[2]=L*w-D,a[6]=$+C*w,a[10]=x*T}else if("ZXY"===n.order){const C=T*E,L=T*N,D=M*E,$=M*N;a[0]=C-$*w,a[4]=-x*N,a[8]=D+L*w,a[1]=L+D*w,a[5]=x*E,a[9]=$-C*w,a[2]=-x*M,a[6]=w,a[10]=x*T}else if("ZYX"===n.order){const C=x*E,L=x*N,D=w*E,$=w*N;a[0]=T*E,a[4]=D*M-L,a[8]=C*M+$,a[1]=T*N,a[5]=$*M+C,a[9]=L*M-D,a[2]=-M,a[6]=w*T,a[10]=x*T}else if("YZX"===n.order){const C=x*T,L=x*M,D=w*T,$=w*M;a[0]=T*E,a[4]=$-C*N,a[8]=D*N+L,a[1]=N,a[5]=x*E,a[9]=-w*E,a[2]=-M*E,a[6]=L*N+D,a[10]=C-$*N}else if("XZY"===n.order){const C=x*T,L=x*M,D=w*T,$=w*M;a[0]=T*E,a[4]=-N,a[8]=M*E,a[1]=C*N+$,a[5]=x*E,a[9]=L*N-D,a[2]=D*N-L,a[6]=w*E,a[10]=$*N+C}return a[3]=0,a[7]=0,a[11]=0,a[12]=0,a[13]=0,a[14]=0,a[15]=1,this}makeRotationFromQuaternion(n){return this.compose(Mh,n,_h)}lookAt(n,a,u){const h=this.elements;return js.subVectors(n,a),0===js.lengthSq()&&(js.z=1),js.normalize(),zi.crossVectors(u,js),0===zi.lengthSq()&&(1===Math.abs(u.z)?js.x+=1e-4:js.z+=1e-4,js.normalize(),zi.crossVectors(u,js)),zi.normalize(),Hu.crossVectors(js,zi),h[0]=zi.x,h[4]=Hu.x,h[8]=js.x,h[1]=zi.y,h[5]=Hu.y,h[9]=js.y,h[2]=zi.z,h[6]=Hu.z,h[10]=js.z,this}multiply(n,a){return void 0!==a?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(n,a)):this.multiplyMatrices(this,n)}premultiply(n){return this.multiplyMatrices(n,this)}multiplyMatrices(n,a){const u=n.elements,h=a.elements,g=this.elements,x=u[0],w=u[4],T=u[8],M=u[12],E=u[1],N=u[5],C=u[9],L=u[13],D=u[2],$=u[6],B=u[10],O=u[14],q=u[3],ee=u[7],Y=u[11],ce=u[15],he=h[0],Ie=h[4],Ae=h[8],We=h[12],$e=h[1],Oe=h[5],At=h[9],bt=h[13],rt=h[2],Mt=h[6],qt=h[10],Xt=h[14],nn=h[3],vn=h[7],fn=h[11],le=h[15];return g[0]=x*he+w*$e+T*rt+M*nn,g[4]=x*Ie+w*Oe+T*Mt+M*vn,g[8]=x*Ae+w*At+T*qt+M*fn,g[12]=x*We+w*bt+T*Xt+M*le,g[1]=E*he+N*$e+C*rt+L*nn,g[5]=E*Ie+N*Oe+C*Mt+L*vn,g[9]=E*Ae+N*At+C*qt+L*fn,g[13]=E*We+N*bt+C*Xt+L*le,g[2]=D*he+$*$e+B*rt+O*nn,g[6]=D*Ie+$*Oe+B*Mt+O*vn,g[10]=D*Ae+$*At+B*qt+O*fn,g[14]=D*We+$*bt+B*Xt+O*le,g[3]=q*he+ee*$e+Y*rt+ce*nn,g[7]=q*Ie+ee*Oe+Y*Mt+ce*vn,g[11]=q*Ae+ee*At+Y*qt+ce*fn,g[15]=q*We+ee*bt+Y*Xt+ce*le,this}multiplyScalar(n){const a=this.elements;return a[0]*=n,a[4]*=n,a[8]*=n,a[12]*=n,a[1]*=n,a[5]*=n,a[9]*=n,a[13]*=n,a[2]*=n,a[6]*=n,a[10]*=n,a[14]*=n,a[3]*=n,a[7]*=n,a[11]*=n,a[15]*=n,this}determinant(){const n=this.elements,a=n[0],u=n[4],h=n[8],g=n[12],x=n[1],w=n[5],T=n[9],M=n[13],E=n[2],N=n[6],C=n[10],L=n[14];return n[3]*(+g*T*N-h*M*N-g*w*C+u*M*C+h*w*L-u*T*L)+n[7]*(+a*T*L-a*M*C+g*x*C-h*x*L+h*M*E-g*T*E)+n[11]*(+a*M*N-a*w*L-g*x*N+u*x*L+g*w*E-u*M*E)+n[15]*(-h*w*E-a*T*N+a*w*C+h*x*N-u*x*C+u*T*E)}transpose(){const n=this.elements;let a;return a=n[1],n[1]=n[4],n[4]=a,a=n[2],n[2]=n[8],n[8]=a,a=n[6],n[6]=n[9],n[9]=a,a=n[3],n[3]=n[12],n[12]=a,a=n[7],n[7]=n[13],n[13]=a,a=n[11],n[11]=n[14],n[14]=a,this}setPosition(n,a,u){const h=this.elements;return n.isVector3?(h[12]=n.x,h[13]=n.y,h[14]=n.z):(h[12]=n,h[13]=a,h[14]=u),this}invert(){const n=this.elements,a=n[0],u=n[1],h=n[2],g=n[3],x=n[4],w=n[5],T=n[6],M=n[7],E=n[8],N=n[9],C=n[10],L=n[11],D=n[12],$=n[13],B=n[14],O=n[15],q=N*B*M-$*C*M+$*T*L-w*B*L-N*T*O+w*C*O,ee=D*C*M-E*B*M-D*T*L+x*B*L+E*T*O-x*C*O,Y=E*$*M-D*N*M+D*w*L-x*$*L-E*w*O+x*N*O,ce=D*N*T-E*$*T-D*w*C+x*$*C+E*w*B-x*N*B,he=a*q+u*ee+h*Y+g*ce;if(0===he)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const Ie=1/he;return n[0]=q*Ie,n[1]=($*C*g-N*B*g-$*h*L+u*B*L+N*h*O-u*C*O)*Ie,n[2]=(w*B*g-$*T*g+$*h*M-u*B*M-w*h*O+u*T*O)*Ie,n[3]=(N*T*g-w*C*g-N*h*M+u*C*M+w*h*L-u*T*L)*Ie,n[4]=ee*Ie,n[5]=(E*B*g-D*C*g+D*h*L-a*B*L-E*h*O+a*C*O)*Ie,n[6]=(D*T*g-x*B*g-D*h*M+a*B*M+x*h*O-a*T*O)*Ie,n[7]=(x*C*g-E*T*g+E*h*M-a*C*M-x*h*L+a*T*L)*Ie,n[8]=Y*Ie,n[9]=(D*N*g-E*$*g-D*u*L+a*$*L+E*u*O-a*N*O)*Ie,n[10]=(x*$*g-D*w*g+D*u*M-a*$*M-x*u*O+a*w*O)*Ie,n[11]=(E*w*g-x*N*g-E*u*M+a*N*M+x*u*L-a*w*L)*Ie,n[12]=ce*Ie,n[13]=(E*$*h-D*N*h+D*u*C-a*$*C-E*u*B+a*N*B)*Ie,n[14]=(D*w*h-x*$*h-D*u*T+a*$*T+x*u*B-a*w*B)*Ie,n[15]=(x*N*h-E*w*h+E*u*T-a*N*T-x*u*C+a*w*C)*Ie,this}scale(n){const a=this.elements,u=n.x,h=n.y,g=n.z;return a[0]*=u,a[4]*=h,a[8]*=g,a[1]*=u,a[5]*=h,a[9]*=g,a[2]*=u,a[6]*=h,a[10]*=g,a[3]*=u,a[7]*=h,a[11]*=g,this}getMaxScaleOnAxis(){const n=this.elements;return Math.sqrt(Math.max(n[0]*n[0]+n[1]*n[1]+n[2]*n[2],n[4]*n[4]+n[5]*n[5]+n[6]*n[6],n[8]*n[8]+n[9]*n[9]+n[10]*n[10]))}makeTranslation(n,a,u){return this.set(1,0,0,n,0,1,0,a,0,0,1,u,0,0,0,1),this}makeRotationX(n){const a=Math.cos(n),u=Math.sin(n);return this.set(1,0,0,0,0,a,-u,0,0,u,a,0,0,0,0,1),this}makeRotationY(n){const a=Math.cos(n),u=Math.sin(n);return this.set(a,0,u,0,0,1,0,0,-u,0,a,0,0,0,0,1),this}makeRotationZ(n){const a=Math.cos(n),u=Math.sin(n);return this.set(a,-u,0,0,u,a,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(n,a){const u=Math.cos(a),h=Math.sin(a),g=1-u,x=n.x,w=n.y,T=n.z,M=g*x,E=g*w;return this.set(M*x+u,M*w-h*T,M*T+h*w,0,M*w+h*T,E*w+u,E*T-h*x,0,M*T-h*w,E*T+h*x,g*T*T+u,0,0,0,0,1),this}makeScale(n,a,u){return this.set(n,0,0,0,0,a,0,0,0,0,u,0,0,0,0,1),this}makeShear(n,a,u,h,g,x){return this.set(1,u,g,0,n,1,x,0,a,h,1,0,0,0,0,1),this}compose(n,a,u){const h=this.elements,g=a._x,x=a._y,w=a._z,T=a._w,M=g+g,E=x+x,N=w+w,C=g*M,L=g*E,D=g*N,$=x*E,B=x*N,O=w*N,q=T*M,ee=T*E,Y=T*N,ce=u.x,he=u.y,Ie=u.z;return h[0]=(1-($+O))*ce,h[1]=(L+Y)*ce,h[2]=(D-ee)*ce,h[3]=0,h[4]=(L-Y)*he,h[5]=(1-(C+O))*he,h[6]=(B+q)*he,h[7]=0,h[8]=(D+ee)*Ie,h[9]=(B-q)*Ie,h[10]=(1-(C+$))*Ie,h[11]=0,h[12]=n.x,h[13]=n.y,h[14]=n.z,h[15]=1,this}decompose(n,a,u){const h=this.elements;let g=Po.set(h[0],h[1],h[2]).length();const x=Po.set(h[4],h[5],h[6]).length(),w=Po.set(h[8],h[9],h[10]).length();this.determinant()<0&&(g=-g),n.x=h[12],n.y=h[13],n.z=h[14],Hs.copy(this);const T=1/g,M=1/x,E=1/w;return Hs.elements[0]*=T,Hs.elements[1]*=T,Hs.elements[2]*=T,Hs.elements[4]*=M,Hs.elements[5]*=M,Hs.elements[6]*=M,Hs.elements[8]*=E,Hs.elements[9]*=E,Hs.elements[10]*=E,a.setFromRotationMatrix(Hs),u.x=g,u.y=x,u.z=w,this}makePerspective(n,a,u,h,g,x){void 0===x&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const w=this.elements,M=2*g/(u-h),E=(a+n)/(a-n),N=(u+h)/(u-h),C=-(x+g)/(x-g),L=-2*x*g/(x-g);return w[0]=2*g/(a-n),w[4]=0,w[8]=E,w[12]=0,w[1]=0,w[5]=M,w[9]=N,w[13]=0,w[2]=0,w[6]=0,w[10]=C,w[14]=L,w[3]=0,w[7]=0,w[11]=-1,w[15]=0,this}makeOrthographic(n,a,u,h,g,x){const w=this.elements,T=1/(a-n),M=1/(u-h),E=1/(x-g),N=(a+n)*T,C=(u+h)*M,L=(x+g)*E;return w[0]=2*T,w[4]=0,w[8]=0,w[12]=-N,w[1]=0,w[5]=2*M,w[9]=0,w[13]=-C,w[2]=0,w[6]=0,w[10]=-2*E,w[14]=-L,w[3]=0,w[7]=0,w[11]=0,w[15]=1,this}equals(n){const a=this.elements,u=n.elements;for(let h=0;h<16;h++)if(a[h]!==u[h])return!1;return!0}fromArray(n,a=0){for(let u=0;u<16;u++)this.elements[u]=n[u+a];return this}toArray(n=[],a=0){const u=this.elements;return n[a]=u[0],n[a+1]=u[1],n[a+2]=u[2],n[a+3]=u[3],n[a+4]=u[4],n[a+5]=u[5],n[a+6]=u[6],n[a+7]=u[7],n[a+8]=u[8],n[a+9]=u[9],n[a+10]=u[10],n[a+11]=u[11],n[a+12]=u[12],n[a+13]=u[13],n[a+14]=u[14],n[a+15]=u[15],n}}sn.prototype.isMatrix4=!0;const Po=new te,Hs=new sn,Mh=new te(0,0,0),_h=new te(1,1,1),zi=new te,Hu=new te,js=new te,kh=new sn,sp=new Qr;class La{constructor(n=0,a=0,u=0,h=La.DefaultOrder){this._x=n,this._y=a,this._z=u,this._order=h}get x(){return this._x}set x(n){this._x=n,this._onChangeCallback()}get y(){return this._y}set y(n){this._y=n,this._onChangeCallback()}get z(){return this._z}set z(n){this._z=n,this._onChangeCallback()}get order(){return this._order}set order(n){this._order=n,this._onChangeCallback()}set(n,a,u,h=this._order){return this._x=n,this._y=a,this._z=u,this._order=h,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(n){return this._x=n._x,this._y=n._y,this._z=n._z,this._order=n._order,this._onChangeCallback(),this}setFromRotationMatrix(n,a=this._order,u=!0){const h=n.elements,g=h[0],x=h[4],w=h[8],T=h[1],M=h[5],E=h[9],N=h[2],C=h[6],L=h[10];switch(a){case"XYZ":this._y=Math.asin(jr(w,-1,1)),Math.abs(w)<.9999999?(this._x=Math.atan2(-E,L),this._z=Math.atan2(-x,g)):(this._x=Math.atan2(C,M),this._z=0);break;case"YXZ":this._x=Math.asin(-jr(E,-1,1)),Math.abs(E)<.9999999?(this._y=Math.atan2(w,L),this._z=Math.atan2(T,M)):(this._y=Math.atan2(-N,g),this._z=0);break;case"ZXY":this._x=Math.asin(jr(C,-1,1)),Math.abs(C)<.9999999?(this._y=Math.atan2(-N,L),this._z=Math.atan2(-x,M)):(this._y=0,this._z=Math.atan2(T,g));break;case"ZYX":this._y=Math.asin(-jr(N,-1,1)),Math.abs(N)<.9999999?(this._x=Math.atan2(C,L),this._z=Math.atan2(T,g)):(this._x=0,this._z=Math.atan2(-x,M));break;case"YZX":this._z=Math.asin(jr(T,-1,1)),Math.abs(T)<.9999999?(this._x=Math.atan2(-E,M),this._y=Math.atan2(-N,g)):(this._x=0,this._y=Math.atan2(w,L));break;case"XZY":this._z=Math.asin(-jr(x,-1,1)),Math.abs(x)<.9999999?(this._x=Math.atan2(C,M),this._y=Math.atan2(w,g)):(this._x=Math.atan2(-E,L),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+a)}return this._order=a,!0===u&&this._onChangeCallback(),this}setFromQuaternion(n,a,u){return kh.makeRotationFromQuaternion(n),this.setFromRotationMatrix(kh,a,u)}setFromVector3(n,a=this._order){return this.set(n.x,n.y,n.z,a)}reorder(n){return sp.setFromEuler(this),this.setFromQuaternion(sp,n)}equals(n){return n._x===this._x&&n._y===this._y&&n._z===this._z&&n._order===this._order}fromArray(n){return this._x=n[0],this._y=n[1],this._z=n[2],void 0!==n[3]&&(this._order=n[3]),this._onChangeCallback(),this}toArray(n=[],a=0){return n[a]=this._x,n[a+1]=this._y,n[a+2]=this._z,n[a+3]=this._order,n}toVector3(n){return n?n.set(this._x,this._y,this._z):new te(this._x,this._y,this._z)}_onChange(n){return this._onChangeCallback=n,this}_onChangeCallback(){}}La.prototype.isEuler=!0,La.DefaultOrder="XYZ",La.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class ju{constructor(){this.mask=1}set(n){this.mask=1<<n|0}enable(n){this.mask|=1<<n|0}enableAll(){this.mask=-1}toggle(n){this.mask^=1<<n|0}disable(n){this.mask&=~(1<<n|0)}disableAll(){this.mask=0}test(n){return 0!=(this.mask&n.mask)}}let ip=0;const qu=new te,zo=new Qr,ra=new sn,Vl=new te,Bo=new te,ap=new te,Eh=new Qr,Ih=new te(1,0,0),op=new te(0,1,0),vf=new te(0,0,1),wf={type:"added"},lp={type:"removed"};class Bn extends Ji{constructor(){super(),Object.defineProperty(this,"id",{value:ip++}),this.uuid=Ws(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Bn.DefaultUp.clone();const n=new te,a=new La,u=new Qr,h=new te(1,1,1);a._onChange(function(){u.setFromEuler(a,!1)}),u._onChange(function(){a.setFromQuaternion(u,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:n},rotation:{configurable:!0,enumerable:!0,value:a},quaternion:{configurable:!0,enumerable:!0,value:u},scale:{configurable:!0,enumerable:!0,value:h},modelViewMatrix:{value:new sn},normalMatrix:{value:new zr}}),this.matrix=new sn,this.matrixWorld=new sn,this.matrixAutoUpdate=Bn.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new ju,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(n){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(n),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(n){return this.quaternion.premultiply(n),this}setRotationFromAxisAngle(n,a){this.quaternion.setFromAxisAngle(n,a)}setRotationFromEuler(n){this.quaternion.setFromEuler(n,!0)}setRotationFromMatrix(n){this.quaternion.setFromRotationMatrix(n)}setRotationFromQuaternion(n){this.quaternion.copy(n)}rotateOnAxis(n,a){return zo.setFromAxisAngle(n,a),this.quaternion.multiply(zo),this}rotateOnWorldAxis(n,a){return zo.setFromAxisAngle(n,a),this.quaternion.premultiply(zo),this}rotateX(n){return this.rotateOnAxis(Ih,n)}rotateY(n){return this.rotateOnAxis(op,n)}rotateZ(n){return this.rotateOnAxis(vf,n)}translateOnAxis(n,a){return qu.copy(n).applyQuaternion(this.quaternion),this.position.add(qu.multiplyScalar(a)),this}translateX(n){return this.translateOnAxis(Ih,n)}translateY(n){return this.translateOnAxis(op,n)}translateZ(n){return this.translateOnAxis(vf,n)}localToWorld(n){return n.applyMatrix4(this.matrixWorld)}worldToLocal(n){return n.applyMatrix4(ra.copy(this.matrixWorld).invert())}lookAt(n,a,u){n.isVector3?Vl.copy(n):Vl.set(n,a,u);const h=this.parent;this.updateWorldMatrix(!0,!1),Bo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?ra.lookAt(Bo,Vl,this.up):ra.lookAt(Vl,Bo,this.up),this.quaternion.setFromRotationMatrix(ra),h&&(ra.extractRotation(h.matrixWorld),zo.setFromRotationMatrix(ra),this.quaternion.premultiply(zo.invert()))}add(n){if(arguments.length>1){for(let a=0;a<arguments.length;a++)this.add(arguments[a]);return this}return n===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",n),this):(n&&n.isObject3D?(null!==n.parent&&n.parent.remove(n),n.parent=this,this.children.push(n),n.dispatchEvent(wf)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",n),this)}remove(n){if(arguments.length>1){for(let u=0;u<arguments.length;u++)this.remove(arguments[u]);return this}const a=this.children.indexOf(n);return-1!==a&&(n.parent=null,this.children.splice(a,1),n.dispatchEvent(lp)),this}removeFromParent(){const n=this.parent;return null!==n&&n.remove(this),this}clear(){for(let n=0;n<this.children.length;n++){const a=this.children[n];a.parent=null,a.dispatchEvent(lp)}return this.children.length=0,this}attach(n){return this.updateWorldMatrix(!0,!1),ra.copy(this.matrixWorld).invert(),null!==n.parent&&(n.parent.updateWorldMatrix(!0,!1),ra.multiply(n.parent.matrixWorld)),n.applyMatrix4(ra),this.add(n),n.updateWorldMatrix(!1,!0),this}getObjectById(n){return this.getObjectByProperty("id",n)}getObjectByName(n){return this.getObjectByProperty("name",n)}getObjectByProperty(n,a){if(this[n]===a)return this;for(let u=0,h=this.children.length;u<h;u++){const g=this.children[u].getObjectByProperty(n,a);if(void 0!==g)return g}}getWorldPosition(n){return this.updateWorldMatrix(!0,!1),n.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(n){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Bo,n,ap),n}getWorldScale(n){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Bo,Eh,n),n}getWorldDirection(n){this.updateWorldMatrix(!0,!1);const a=this.matrixWorld.elements;return n.set(a[8],a[9],a[10]).normalize()}raycast(){}traverse(n){n(this);const a=this.children;for(let u=0,h=a.length;u<h;u++)a[u].traverse(n)}traverseVisible(n){if(!1===this.visible)return;n(this);const a=this.children;for(let u=0,h=a.length;u<h;u++)a[u].traverseVisible(n)}traverseAncestors(n){const a=this.parent;null!==a&&(n(a),a.traverseAncestors(n))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(n){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||n)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,n=!0);const a=this.children;for(let u=0,h=a.length;u<h;u++)a[u].updateMatrixWorld(n)}updateWorldMatrix(n,a){const u=this.parent;if(!0===n&&null!==u&&u.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===a){const h=this.children;for(let g=0,x=h.length;g<x;g++)h[g].updateWorldMatrix(!1,!0)}}toJSON(n){const a=void 0===n||"string"==typeof n,u={};a&&(n={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},u.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const h={};function g(w,T){return void 0===w[T.uuid]&&(w[T.uuid]=T.toJSON(n)),T.uuid}if(h.uuid=this.uuid,h.type=this.type,""!==this.name&&(h.name=this.name),!0===this.castShadow&&(h.castShadow=!0),!0===this.receiveShadow&&(h.receiveShadow=!0),!1===this.visible&&(h.visible=!1),!1===this.frustumCulled&&(h.frustumCulled=!1),0!==this.renderOrder&&(h.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(h.userData=this.userData),h.layers=this.layers.mask,h.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(h.matrixAutoUpdate=!1),this.isInstancedMesh&&(h.type="InstancedMesh",h.count=this.count,h.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(h.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?h.background=this.background.toJSON():this.background.isTexture&&(h.background=this.background.toJSON(n).uuid)),this.environment&&this.environment.isTexture&&(h.environment=this.environment.toJSON(n).uuid);else if(this.isMesh||this.isLine||this.isPoints){h.geometry=g(n.geometries,this.geometry);const w=this.geometry.parameters;if(void 0!==w&&void 0!==w.shapes){const T=w.shapes;if(Array.isArray(T))for(let M=0,E=T.length;M<E;M++)g(n.shapes,T[M]);else g(n.shapes,T)}}if(this.isSkinnedMesh&&(h.bindMode=this.bindMode,h.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(g(n.skeletons,this.skeleton),h.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const w=[];for(let T=0,M=this.material.length;T<M;T++)w.push(g(n.materials,this.material[T]));h.material=w}else h.material=g(n.materials,this.material);if(this.children.length>0){h.children=[];for(let w=0;w<this.children.length;w++)h.children.push(this.children[w].toJSON(n).object)}if(this.animations.length>0){h.animations=[];for(let w=0;w<this.animations.length;w++)h.animations.push(g(n.animations,this.animations[w]))}if(a){const w=x(n.geometries),T=x(n.materials),M=x(n.textures),E=x(n.images),N=x(n.shapes),C=x(n.skeletons),L=x(n.animations);w.length>0&&(u.geometries=w),T.length>0&&(u.materials=T),M.length>0&&(u.textures=M),E.length>0&&(u.images=E),N.length>0&&(u.shapes=N),C.length>0&&(u.skeletons=C),L.length>0&&(u.animations=L)}return u.object=h,u;function x(w){const T=[];for(const M in w){const E=w[M];delete E.metadata,T.push(E)}return T}}clone(n){return(new this.constructor).copy(this,n)}copy(n,a=!0){if(this.name=n.name,this.up.copy(n.up),this.position.copy(n.position),this.rotation.order=n.rotation.order,this.quaternion.copy(n.quaternion),this.scale.copy(n.scale),this.matrix.copy(n.matrix),this.matrixWorld.copy(n.matrixWorld),this.matrixAutoUpdate=n.matrixAutoUpdate,this.matrixWorldNeedsUpdate=n.matrixWorldNeedsUpdate,this.layers.mask=n.layers.mask,this.visible=n.visible,this.castShadow=n.castShadow,this.receiveShadow=n.receiveShadow,this.frustumCulled=n.frustumCulled,this.renderOrder=n.renderOrder,this.userData=JSON.parse(JSON.stringify(n.userData)),!0===a)for(let u=0;u<n.children.length;u++)this.add(n.children[u].clone());return this}}Bn.DefaultUp=new te(0,1,0),Bn.DefaultMatrixAutoUpdate=!0,Bn.prototype.isObject3D=!0;const Da=new te,Uo=new te,tg=new te,Fa=new te,Xu=new te,sa=new te,Ch=new te,Sf=new te,Vo=new te,_s=new te;class Ur{constructor(n=new te,a=new te,u=new te){this.a=n,this.b=a,this.c=u}static getNormal(n,a,u,h){h.subVectors(u,a),Da.subVectors(n,a),h.cross(Da);const g=h.lengthSq();return g>0?h.multiplyScalar(1/Math.sqrt(g)):h.set(0,0,0)}static getBarycoord(n,a,u,h,g){Da.subVectors(h,a),Uo.subVectors(u,a),tg.subVectors(n,a);const x=Da.dot(Da),w=Da.dot(Uo),T=Da.dot(tg),M=Uo.dot(Uo),E=Uo.dot(tg),N=x*M-w*w;if(0===N)return g.set(-2,-1,-1);const C=1/N,L=(M*T-w*E)*C,D=(x*E-w*T)*C;return g.set(1-L-D,D,L)}static containsPoint(n,a,u,h){return this.getBarycoord(n,a,u,h,Fa),Fa.x>=0&&Fa.y>=0&&Fa.x+Fa.y<=1}static getUV(n,a,u,h,g,x,w,T){return this.getBarycoord(n,a,u,h,Fa),T.set(0,0),T.addScaledVector(g,Fa.x),T.addScaledVector(x,Fa.y),T.addScaledVector(w,Fa.z),T}static isFrontFacing(n,a,u,h){return Da.subVectors(u,a),Uo.subVectors(n,a),Da.cross(Uo).dot(h)<0}set(n,a,u){return this.a.copy(n),this.b.copy(a),this.c.copy(u),this}setFromPointsAndIndices(n,a,u,h){return this.a.copy(n[a]),this.b.copy(n[u]),this.c.copy(n[h]),this}clone(){return(new this.constructor).copy(this)}copy(n){return this.a.copy(n.a),this.b.copy(n.b),this.c.copy(n.c),this}getArea(){return Da.subVectors(this.c,this.b),Uo.subVectors(this.a,this.b),.5*Da.cross(Uo).length()}getMidpoint(n){return n.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(n){return Ur.getNormal(this.a,this.b,this.c,n)}getPlane(n){return n.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(n,a){return Ur.getBarycoord(n,this.a,this.b,this.c,a)}getUV(n,a,u,h,g){return Ur.getUV(n,this.a,this.b,this.c,a,u,h,g)}containsPoint(n){return Ur.containsPoint(n,this.a,this.b,this.c)}isFrontFacing(n){return Ur.isFrontFacing(this.a,this.b,this.c,n)}intersectsBox(n){return n.intersectsTriangle(this)}closestPointToPoint(n,a){const u=this.a,h=this.b,g=this.c;let x,w;Xu.subVectors(h,u),sa.subVectors(g,u),Sf.subVectors(n,u);const T=Xu.dot(Sf),M=sa.dot(Sf);if(T<=0&&M<=0)return a.copy(u);Vo.subVectors(n,h);const E=Xu.dot(Vo),N=sa.dot(Vo);if(E>=0&&N<=E)return a.copy(h);const C=T*N-E*M;if(C<=0&&T>=0&&E<=0)return x=T/(T-E),a.copy(u).addScaledVector(Xu,x);_s.subVectors(n,g);const L=Xu.dot(_s),D=sa.dot(_s);if(D>=0&&L<=D)return a.copy(g);const $=L*M-T*D;if($<=0&&M>=0&&D<=0)return w=M/(M-D),a.copy(u).addScaledVector(sa,w);const B=E*D-L*N;if(B<=0&&N-E>=0&&L-D>=0)return Ch.subVectors(g,h),w=(N-E)/(N-E+(L-D)),a.copy(h).addScaledVector(Ch,w);const O=1/(B+$+C);return x=$*O,w=C*O,a.copy(u).addScaledVector(Xu,x).addScaledVector(sa,w)}equals(n){return n.a.equals(this.a)&&n.b.equals(this.b)&&n.c.equals(this.c)}}let Xy=0;class En extends Ji{constructor(){super(),Object.defineProperty(this,"id",{value:Xy++}),this.uuid=Ws(),this.name="",this.type="Material",this.fog=!0,this.blending=yt,this.side=Q,this.vertexColors=!1,this.opacity=1,this.format=Ds,this.transparent=!1,this.blendSrc=Rr,this.blendDst=is,this.blendEquation=Z,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=_l,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=dh,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Ao,this.stencilZFail=Ao,this.stencilZPass=Ao,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(n){this._alphaTest>0!=n>0&&this.version++,this._alphaTest=n}onBuild(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(n){if(void 0!==n)for(const a in n){const u=n[a];if(void 0===u){console.warn("THREE.Material: '"+a+"' parameter is undefined.");continue}if("shading"===a){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=u===xt;continue}const h=this[a];void 0!==h?h&&h.isColor?h.set(u):h&&h.isVector3&&u&&u.isVector3?h.copy(u):this[a]=u:console.warn("THREE."+this.type+": '"+a+"' is not a property of this material.")}}toJSON(n){const a=void 0===n||"string"==typeof n;a&&(n={textures:{},images:{}});const u={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function h(g){const x=[];for(const w in g){const T=g[w];delete T.metadata,x.push(T)}return x}if(u.uuid=this.uuid,u.type=this.type,""!==this.name&&(u.name=this.name),this.color&&this.color.isColor&&(u.color=this.color.getHex()),void 0!==this.roughness&&(u.roughness=this.roughness),void 0!==this.metalness&&(u.metalness=this.metalness),this.sheenTint&&this.sheenTint.isColor&&(u.sheenTint=this.sheenTint.getHex()),this.emissive&&this.emissive.isColor&&(u.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(u.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(u.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(u.specularIntensity=this.specularIntensity),this.specularTint&&this.specularTint.isColor&&(u.specularTint=this.specularTint.getHex()),void 0!==this.shininess&&(u.shininess=this.shininess),void 0!==this.clearcoat&&(u.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(u.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(u.clearcoatMap=this.clearcoatMap.toJSON(n).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(u.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(n).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(u.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(n).uuid,u.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(u.map=this.map.toJSON(n).uuid),this.matcap&&this.matcap.isTexture&&(u.matcap=this.matcap.toJSON(n).uuid),this.alphaMap&&this.alphaMap.isTexture&&(u.alphaMap=this.alphaMap.toJSON(n).uuid),this.lightMap&&this.lightMap.isTexture&&(u.lightMap=this.lightMap.toJSON(n).uuid,u.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(u.aoMap=this.aoMap.toJSON(n).uuid,u.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(u.bumpMap=this.bumpMap.toJSON(n).uuid,u.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(u.normalMap=this.normalMap.toJSON(n).uuid,u.normalMapType=this.normalMapType,u.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(u.displacementMap=this.displacementMap.toJSON(n).uuid,u.displacementScale=this.displacementScale,u.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(u.roughnessMap=this.roughnessMap.toJSON(n).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(u.metalnessMap=this.metalnessMap.toJSON(n).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(u.emissiveMap=this.emissiveMap.toJSON(n).uuid),this.specularMap&&this.specularMap.isTexture&&(u.specularMap=this.specularMap.toJSON(n).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(u.specularIntensityMap=this.specularIntensityMap.toJSON(n).uuid),this.specularTintMap&&this.specularTintMap.isTexture&&(u.specularTintMap=this.specularTintMap.toJSON(n).uuid),this.envMap&&this.envMap.isTexture&&(u.envMap=this.envMap.toJSON(n).uuid,void 0!==this.combine&&(u.combine=this.combine)),void 0!==this.envMapIntensity&&(u.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(u.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(u.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(u.gradientMap=this.gradientMap.toJSON(n).uuid),void 0!==this.transmission&&(u.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(u.transmissionMap=this.transmissionMap.toJSON(n).uuid),void 0!==this.thickness&&(u.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(u.thicknessMap=this.thicknessMap.toJSON(n).uuid),void 0!==this.attenuationDistance&&(u.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationTint&&(u.attenuationTint=this.attenuationTint.getHex()),void 0!==this.size&&(u.size=this.size),null!==this.shadowSide&&(u.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(u.sizeAttenuation=this.sizeAttenuation),this.blending!==yt&&(u.blending=this.blending),this.side!==Q&&(u.side=this.side),this.vertexColors&&(u.vertexColors=!0),this.opacity<1&&(u.opacity=this.opacity),this.format!==Ds&&(u.format=this.format),!0===this.transparent&&(u.transparent=this.transparent),u.depthFunc=this.depthFunc,u.depthTest=this.depthTest,u.depthWrite=this.depthWrite,u.colorWrite=this.colorWrite,u.stencilWrite=this.stencilWrite,u.stencilWriteMask=this.stencilWriteMask,u.stencilFunc=this.stencilFunc,u.stencilRef=this.stencilRef,u.stencilFuncMask=this.stencilFuncMask,u.stencilFail=this.stencilFail,u.stencilZFail=this.stencilZFail,u.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(u.rotation=this.rotation),!0===this.polygonOffset&&(u.polygonOffset=!0),0!==this.polygonOffsetFactor&&(u.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(u.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(u.linewidth=this.linewidth),void 0!==this.dashSize&&(u.dashSize=this.dashSize),void 0!==this.gapSize&&(u.gapSize=this.gapSize),void 0!==this.scale&&(u.scale=this.scale),!0===this.dithering&&(u.dithering=!0),this.alphaTest>0&&(u.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(u.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(u.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(u.wireframe=this.wireframe),this.wireframeLinewidth>1&&(u.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(u.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(u.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(u.flatShading=this.flatShading),!1===this.visible&&(u.visible=!1),!1===this.toneMapped&&(u.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(u.userData=this.userData),a){const g=h(n.textures),x=h(n.images);g.length>0&&(u.textures=g),x.length>0&&(u.images=x)}return u}clone(){return(new this.constructor).copy(this)}copy(n){this.name=n.name,this.fog=n.fog,this.blending=n.blending,this.side=n.side,this.vertexColors=n.vertexColors,this.opacity=n.opacity,this.format=n.format,this.transparent=n.transparent,this.blendSrc=n.blendSrc,this.blendDst=n.blendDst,this.blendEquation=n.blendEquation,this.blendSrcAlpha=n.blendSrcAlpha,this.blendDstAlpha=n.blendDstAlpha,this.blendEquationAlpha=n.blendEquationAlpha,this.depthFunc=n.depthFunc,this.depthTest=n.depthTest,this.depthWrite=n.depthWrite,this.stencilWriteMask=n.stencilWriteMask,this.stencilFunc=n.stencilFunc,this.stencilRef=n.stencilRef,this.stencilFuncMask=n.stencilFuncMask,this.stencilFail=n.stencilFail,this.stencilZFail=n.stencilZFail,this.stencilZPass=n.stencilZPass,this.stencilWrite=n.stencilWrite;const a=n.clippingPlanes;let u=null;if(null!==a){const h=a.length;u=new Array(h);for(let g=0;g!==h;++g)u[g]=a[g].clone()}return this.clippingPlanes=u,this.clipIntersection=n.clipIntersection,this.clipShadows=n.clipShadows,this.shadowSide=n.shadowSide,this.colorWrite=n.colorWrite,this.precision=n.precision,this.polygonOffset=n.polygonOffset,this.polygonOffsetFactor=n.polygonOffsetFactor,this.polygonOffsetUnits=n.polygonOffsetUnits,this.dithering=n.dithering,this.alphaTest=n.alphaTest,this.alphaToCoverage=n.alphaToCoverage,this.premultipliedAlpha=n.premultipliedAlpha,this.visible=n.visible,this.toneMapped=n.toneMapped,this.userData=JSON.parse(JSON.stringify(n.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(n){!0===n&&this.version++}}En.prototype.isMaterial=!0;const ng={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},ur={h:0,s:0,l:0},$a={h:0,s:0,l:0};function Nh(b,n,a){return a<0&&(a+=1),a>1&&(a-=1),a<1/6?b+6*(n-b)*a:a<.5?n:a<2/3?b+6*(n-b)*(2/3-a):b}function Tf(b){return b<.04045?.0773993808*b:Math.pow(.9478672986*b+.0521327014,2.4)}function Oa(b){return b<.0031308?12.92*b:1.055*Math.pow(b,.41666)-.055}class Wt{constructor(n,a,u){return void 0===a&&void 0===u?this.set(n):this.setRGB(n,a,u)}set(n){return n&&n.isColor?this.copy(n):"number"==typeof n?this.setHex(n):"string"==typeof n&&this.setStyle(n),this}setScalar(n){return this.r=n,this.g=n,this.b=n,this}setHex(n){return n=Math.floor(n),this.r=(n>>16&255)/255,this.g=(n>>8&255)/255,this.b=(255&n)/255,this}setRGB(n,a,u){return this.r=n,this.g=a,this.b=u,this}setHSL(n,a,u){if(n=Pu(n,1),a=jr(a,0,1),u=jr(u,0,1),0===a)this.r=this.g=this.b=u;else{const h=u<=.5?u*(1+a):u+a-u*a,g=2*u-h;this.r=Nh(g,h,n+1/3),this.g=Nh(g,h,n),this.b=Nh(g,h,n-1/3)}return this}setStyle(n){function a(h){void 0!==h&&parseFloat(h)<1&&console.warn("THREE.Color: Alpha component of "+n+" will be ignored.")}let u;if(u=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(n)){let h;const x=u[2];switch(u[1]){case"rgb":case"rgba":if(h=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(x))return this.r=Math.min(255,parseInt(h[1],10))/255,this.g=Math.min(255,parseInt(h[2],10))/255,this.b=Math.min(255,parseInt(h[3],10))/255,a(h[4]),this;if(h=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(x))return this.r=Math.min(100,parseInt(h[1],10))/100,this.g=Math.min(100,parseInt(h[2],10))/100,this.b=Math.min(100,parseInt(h[3],10))/100,a(h[4]),this;break;case"hsl":case"hsla":if(h=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(x)){const w=parseFloat(h[1])/360,T=parseInt(h[2],10)/100,M=parseInt(h[3],10)/100;return a(h[4]),this.setHSL(w,T,M)}}}else if(u=/^\#([A-Fa-f\d]+)$/.exec(n)){const h=u[1],g=h.length;if(3===g)return this.r=parseInt(h.charAt(0)+h.charAt(0),16)/255,this.g=parseInt(h.charAt(1)+h.charAt(1),16)/255,this.b=parseInt(h.charAt(2)+h.charAt(2),16)/255,this;if(6===g)return this.r=parseInt(h.charAt(0)+h.charAt(1),16)/255,this.g=parseInt(h.charAt(2)+h.charAt(3),16)/255,this.b=parseInt(h.charAt(4)+h.charAt(5),16)/255,this}return n&&n.length>0?this.setColorName(n):this}setColorName(n){const a=ng[n.toLowerCase()];return void 0!==a?this.setHex(a):console.warn("THREE.Color: Unknown color "+n),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(n){return this.r=n.r,this.g=n.g,this.b=n.b,this}copyGammaToLinear(n,a=2){return this.r=Math.pow(n.r,a),this.g=Math.pow(n.g,a),this.b=Math.pow(n.b,a),this}copyLinearToGamma(n,a=2){const u=a>0?1/a:1;return this.r=Math.pow(n.r,u),this.g=Math.pow(n.g,u),this.b=Math.pow(n.b,u),this}convertGammaToLinear(n){return this.copyGammaToLinear(this,n),this}convertLinearToGamma(n){return this.copyLinearToGamma(this,n),this}copySRGBToLinear(n){return this.r=Tf(n.r),this.g=Tf(n.g),this.b=Tf(n.b),this}copyLinearToSRGB(n){return this.r=Oa(n.r),this.g=Oa(n.g),this.b=Oa(n.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(n){const a=this.r,u=this.g,h=this.b,g=Math.max(a,u,h),x=Math.min(a,u,h);let w,T;const M=(x+g)/2;if(x===g)w=0,T=0;else{const E=g-x;switch(T=M<=.5?E/(g+x):E/(2-g-x),g){case a:w=(u-h)/E+(u<h?6:0);break;case u:w=(h-a)/E+2;break;case h:w=(a-u)/E+4}w/=6}return n.h=w,n.s=T,n.l=M,n}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(n,a,u){return this.getHSL(ur),ur.h+=n,ur.s+=a,ur.l+=u,this.setHSL(ur.h,ur.s,ur.l),this}add(n){return this.r+=n.r,this.g+=n.g,this.b+=n.b,this}addColors(n,a){return this.r=n.r+a.r,this.g=n.g+a.g,this.b=n.b+a.b,this}addScalar(n){return this.r+=n,this.g+=n,this.b+=n,this}sub(n){return this.r=Math.max(0,this.r-n.r),this.g=Math.max(0,this.g-n.g),this.b=Math.max(0,this.b-n.b),this}multiply(n){return this.r*=n.r,this.g*=n.g,this.b*=n.b,this}multiplyScalar(n){return this.r*=n,this.g*=n,this.b*=n,this}lerp(n,a){return this.r+=(n.r-this.r)*a,this.g+=(n.g-this.g)*a,this.b+=(n.b-this.b)*a,this}lerpColors(n,a,u){return this.r=n.r+(a.r-n.r)*u,this.g=n.g+(a.g-n.g)*u,this.b=n.b+(a.b-n.b)*u,this}lerpHSL(n,a){this.getHSL(ur),n.getHSL($a);const u=Lo(ur.h,$a.h,a),h=Lo(ur.s,$a.s,a),g=Lo(ur.l,$a.l,a);return this.setHSL(u,h,g),this}equals(n){return n.r===this.r&&n.g===this.g&&n.b===this.b}fromArray(n,a=0){return this.r=n[a],this.g=n[a+1],this.b=n[a+2],this}toArray(n=[],a=0){return n[a]=this.r,n[a+1]=this.g,n[a+2]=this.b,n}fromBufferAttribute(n,a){return this.r=n.getX(a),this.g=n.getY(a),this.b=n.getZ(a),!0===n.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Wt.NAMES=ng,Wt.prototype.isColor=!0,Wt.prototype.r=1,Wt.prototype.g=1,Wt.prototype.b=1;class wr extends En{constructor(n){super(),this.type="MeshBasicMaterial",this.color=new Wt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=vu,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this}}wr.prototype.isMeshBasicMaterial=!0;const xr=new te,Bi=new It;class On{constructor(n,a,u){if(Array.isArray(n))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=n,this.itemSize=a,this.count=void 0!==n?n.length/a:0,this.normalized=!0===u,this.usage=io,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(n){!0===n&&this.version++}setUsage(n){return this.usage=n,this}copy(n){return this.name=n.name,this.array=new n.array.constructor(n.array),this.itemSize=n.itemSize,this.count=n.count,this.normalized=n.normalized,this.usage=n.usage,this}copyAt(n,a,u){n*=this.itemSize,u*=a.itemSize;for(let h=0,g=this.itemSize;h<g;h++)this.array[n+h]=a.array[u+h];return this}copyArray(n){return this.array.set(n),this}copyColorsArray(n){const a=this.array;let u=0;for(let h=0,g=n.length;h<g;h++){let x=n[h];void 0===x&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",h),x=new Wt),a[u++]=x.r,a[u++]=x.g,a[u++]=x.b}return this}copyVector2sArray(n){const a=this.array;let u=0;for(let h=0,g=n.length;h<g;h++){let x=n[h];void 0===x&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",h),x=new It),a[u++]=x.x,a[u++]=x.y}return this}copyVector3sArray(n){const a=this.array;let u=0;for(let h=0,g=n.length;h<g;h++){let x=n[h];void 0===x&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",h),x=new te),a[u++]=x.x,a[u++]=x.y,a[u++]=x.z}return this}copyVector4sArray(n){const a=this.array;let u=0;for(let h=0,g=n.length;h<g;h++){let x=n[h];void 0===x&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",h),x=new sr),a[u++]=x.x,a[u++]=x.y,a[u++]=x.z,a[u++]=x.w}return this}applyMatrix3(n){if(2===this.itemSize)for(let a=0,u=this.count;a<u;a++)Bi.fromBufferAttribute(this,a),Bi.applyMatrix3(n),this.setXY(a,Bi.x,Bi.y);else if(3===this.itemSize)for(let a=0,u=this.count;a<u;a++)xr.fromBufferAttribute(this,a),xr.applyMatrix3(n),this.setXYZ(a,xr.x,xr.y,xr.z);return this}applyMatrix4(n){for(let a=0,u=this.count;a<u;a++)xr.x=this.getX(a),xr.y=this.getY(a),xr.z=this.getZ(a),xr.applyMatrix4(n),this.setXYZ(a,xr.x,xr.y,xr.z);return this}applyNormalMatrix(n){for(let a=0,u=this.count;a<u;a++)xr.x=this.getX(a),xr.y=this.getY(a),xr.z=this.getZ(a),xr.applyNormalMatrix(n),this.setXYZ(a,xr.x,xr.y,xr.z);return this}transformDirection(n){for(let a=0,u=this.count;a<u;a++)xr.x=this.getX(a),xr.y=this.getY(a),xr.z=this.getZ(a),xr.transformDirection(n),this.setXYZ(a,xr.x,xr.y,xr.z);return this}set(n,a=0){return this.array.set(n,a),this}getX(n){return this.array[n*this.itemSize]}setX(n,a){return this.array[n*this.itemSize]=a,this}getY(n){return this.array[n*this.itemSize+1]}setY(n,a){return this.array[n*this.itemSize+1]=a,this}getZ(n){return this.array[n*this.itemSize+2]}setZ(n,a){return this.array[n*this.itemSize+2]=a,this}getW(n){return this.array[n*this.itemSize+3]}setW(n,a){return this.array[n*this.itemSize+3]=a,this}setXY(n,a,u){return this.array[0+(n*=this.itemSize)]=a,this.array[n+1]=u,this}setXYZ(n,a,u,h){return this.array[0+(n*=this.itemSize)]=a,this.array[n+1]=u,this.array[n+2]=h,this}setXYZW(n,a,u,h,g){return this.array[0+(n*=this.itemSize)]=a,this.array[n+1]=u,this.array[n+2]=h,this.array[n+3]=g,this}onUpload(n){return this.onUploadCallback=n,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const n={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(n.name=this.name),this.usage!==io&&(n.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(n.updateRange=this.updateRange),n}}On.prototype.isBufferAttribute=!0;class Ky extends On{constructor(n,a,u){super(new Int8Array(n),a,u)}}class Yy extends On{constructor(n,a,u){super(new Uint8Array(n),a,u)}}class Zy extends On{constructor(n,a,u){super(new Uint8ClampedArray(n),a,u)}}class Jy extends On{constructor(n,a,u){super(new Int16Array(n),a,u)}}class Wl extends On{constructor(n,a,u){super(new Uint16Array(n),a,u)}}class rg extends On{constructor(n,a,u){super(new Int32Array(n),a,u)}}class Ku extends On{constructor(n,a,u){super(new Uint32Array(n),a,u)}}class Ah extends On{constructor(n,a,u){super(new Uint16Array(n),a,u)}}Ah.prototype.isFloat16BufferAttribute=!0;class Pt extends On{constructor(n,a,u){super(new Float32Array(n),a,u)}}class Pa extends On{constructor(n,a,u){super(new Float64Array(n),a,u)}}function Yu(b){if(0===b.length)return-1/0;let n=b[0];for(let a=1,u=b.length;a<u;++a)b[a]>n&&(n=b[a]);return n}const Mb={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Un(b,n){return new Mb[b](n)}let Qe=0;const qs=new sn,up=new Bn,Gl=new te,li=new Gs,Zu=new Gs,os=new te;class wn extends Ji{constructor(){super(),Object.defineProperty(this,"id",{value:Qe++}),this.uuid=Ws(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(n){return this.index=Array.isArray(n)?new(Yu(n)>65535?Ku:Wl)(n,1):n,this}getAttribute(n){return this.attributes[n]}setAttribute(n,a){return this.attributes[n]=a,this}deleteAttribute(n){return delete this.attributes[n],this}hasAttribute(n){return void 0!==this.attributes[n]}addGroup(n,a,u=0){this.groups.push({start:n,count:a,materialIndex:u})}clearGroups(){this.groups=[]}setDrawRange(n,a){this.drawRange.start=n,this.drawRange.count=a}applyMatrix4(n){const a=this.attributes.position;void 0!==a&&(a.applyMatrix4(n),a.needsUpdate=!0);const u=this.attributes.normal;if(void 0!==u){const g=(new zr).getNormalMatrix(n);u.applyNormalMatrix(g),u.needsUpdate=!0}const h=this.attributes.tangent;return void 0!==h&&(h.transformDirection(n),h.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(n){return qs.makeRotationFromQuaternion(n),this.applyMatrix4(qs),this}rotateX(n){return qs.makeRotationX(n),this.applyMatrix4(qs),this}rotateY(n){return qs.makeRotationY(n),this.applyMatrix4(qs),this}rotateZ(n){return qs.makeRotationZ(n),this.applyMatrix4(qs),this}translate(n,a,u){return qs.makeTranslation(n,a,u),this.applyMatrix4(qs),this}scale(n,a,u){return qs.makeScale(n,a,u),this.applyMatrix4(qs),this}lookAt(n){return up.lookAt(n),up.updateMatrix(),this.applyMatrix4(up.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Gl).negate(),this.translate(Gl.x,Gl.y,Gl.z),this}setFromPoints(n){const a=[];for(let u=0,h=n.length;u<h;u++){const g=n[u];a.push(g.x,g.y,g.z||0)}return this.setAttribute("position",new Pt(a,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new Gs);const n=this.attributes.position,a=this.morphAttributes.position;if(n&&n.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new te(-1/0,-1/0,-1/0),new te(1/0,1/0,1/0));if(void 0!==n){if(this.boundingBox.setFromBufferAttribute(n),a)for(let u=0,h=a.length;u<h;u++)li.setFromBufferAttribute(a[u]),this.morphTargetsRelative?(os.addVectors(this.boundingBox.min,li.min),this.boundingBox.expandByPoint(os),os.addVectors(this.boundingBox.max,li.max),this.boundingBox.expandByPoint(os)):(this.boundingBox.expandByPoint(li.min),this.boundingBox.expandByPoint(li.max))}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Na);const n=this.attributes.position,a=this.morphAttributes.position;if(n&&n.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new te,1/0);if(n){const u=this.boundingSphere.center;if(li.setFromBufferAttribute(n),a)for(let g=0,x=a.length;g<x;g++)Zu.setFromBufferAttribute(a[g]),this.morphTargetsRelative?(os.addVectors(li.min,Zu.min),li.expandByPoint(os),os.addVectors(li.max,Zu.max),li.expandByPoint(os)):(li.expandByPoint(Zu.min),li.expandByPoint(Zu.max));li.getCenter(u);let h=0;for(let g=0,x=n.count;g<x;g++)os.fromBufferAttribute(n,g),h=Math.max(h,u.distanceToSquared(os));if(a)for(let g=0,x=a.length;g<x;g++){const w=a[g],T=this.morphTargetsRelative;for(let M=0,E=w.count;M<E;M++)os.fromBufferAttribute(w,M),T&&(Gl.fromBufferAttribute(n,M),os.add(Gl)),h=Math.max(h,u.distanceToSquared(os))}this.boundingSphere.radius=Math.sqrt(h),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const n=this.index,a=this.attributes;if(null===n||void 0===a.position||void 0===a.normal||void 0===a.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const u=n.array,h=a.position.array,g=a.normal.array,x=a.uv.array,w=h.length/3;void 0===a.tangent&&this.setAttribute("tangent",new On(new Float32Array(4*w),4));const T=a.tangent.array,M=[],E=[];for(let $e=0;$e<w;$e++)M[$e]=new te,E[$e]=new te;const N=new te,C=new te,L=new te,D=new It,$=new It,B=new It,O=new te,q=new te;function ee($e,Oe,At){N.fromArray(h,3*$e),C.fromArray(h,3*Oe),L.fromArray(h,3*At),D.fromArray(x,2*$e),$.fromArray(x,2*Oe),B.fromArray(x,2*At),C.sub(N),L.sub(N),$.sub(D),B.sub(D);const bt=1/($.x*B.y-B.x*$.y);isFinite(bt)&&(O.copy(C).multiplyScalar(B.y).addScaledVector(L,-$.y).multiplyScalar(bt),q.copy(L).multiplyScalar($.x).addScaledVector(C,-B.x).multiplyScalar(bt),M[$e].add(O),M[Oe].add(O),M[At].add(O),E[$e].add(q),E[Oe].add(q),E[At].add(q))}let Y=this.groups;0===Y.length&&(Y=[{start:0,count:u.length}]);for(let $e=0,Oe=Y.length;$e<Oe;++$e){const At=Y[$e],bt=At.start;for(let rt=bt,Mt=bt+At.count;rt<Mt;rt+=3)ee(u[rt+0],u[rt+1],u[rt+2])}const ce=new te,he=new te,Ie=new te,Ae=new te;function We($e){Ie.fromArray(g,3*$e),Ae.copy(Ie);const Oe=M[$e];ce.copy(Oe),ce.sub(Ie.multiplyScalar(Ie.dot(Oe))).normalize(),he.crossVectors(Ae,Oe);const At=he.dot(E[$e])<0?-1:1;T[4*$e]=ce.x,T[4*$e+1]=ce.y,T[4*$e+2]=ce.z,T[4*$e+3]=At}for(let $e=0,Oe=Y.length;$e<Oe;++$e){const At=Y[$e],bt=At.start;for(let rt=bt,Mt=bt+At.count;rt<Mt;rt+=3)We(u[rt+0]),We(u[rt+1]),We(u[rt+2])}}computeVertexNormals(){const n=this.index,a=this.getAttribute("position");if(void 0!==a){let u=this.getAttribute("normal");if(void 0===u)u=new On(new Float32Array(3*a.count),3),this.setAttribute("normal",u);else for(let C=0,L=u.count;C<L;C++)u.setXYZ(C,0,0,0);const h=new te,g=new te,x=new te,w=new te,T=new te,M=new te,E=new te,N=new te;if(n)for(let C=0,L=n.count;C<L;C+=3){const D=n.getX(C+0),$=n.getX(C+1),B=n.getX(C+2);h.fromBufferAttribute(a,D),g.fromBufferAttribute(a,$),x.fromBufferAttribute(a,B),E.subVectors(x,g),N.subVectors(h,g),E.cross(N),w.fromBufferAttribute(u,D),T.fromBufferAttribute(u,$),M.fromBufferAttribute(u,B),w.add(E),T.add(E),M.add(E),u.setXYZ(D,w.x,w.y,w.z),u.setXYZ($,T.x,T.y,T.z),u.setXYZ(B,M.x,M.y,M.z)}else for(let C=0,L=a.count;C<L;C+=3)h.fromBufferAttribute(a,C+0),g.fromBufferAttribute(a,C+1),x.fromBufferAttribute(a,C+2),E.subVectors(x,g),N.subVectors(h,g),E.cross(N),u.setXYZ(C+0,E.x,E.y,E.z),u.setXYZ(C+1,E.x,E.y,E.z),u.setXYZ(C+2,E.x,E.y,E.z);this.normalizeNormals(),u.needsUpdate=!0}}merge(n,a){if(!n||!n.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",n);void 0===a&&(a=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const u=this.attributes;for(const h in u){if(void 0===n.attributes[h])continue;const g=u[h].array,x=n.attributes[h],w=x.array,T=x.itemSize*a,M=Math.min(w.length,g.length-T);for(let E=0,N=T;E<M;E++,N++)g[N]=w[E]}return this}normalizeNormals(){const n=this.attributes.normal;for(let a=0,u=n.count;a<u;a++)os.fromBufferAttribute(n,a),os.normalize(),n.setXYZ(a,os.x,os.y,os.z)}toNonIndexed(){function n(w,T){const M=w.array,E=w.itemSize,N=w.normalized,C=new M.constructor(T.length*E);let L=0,D=0;for(let $=0,B=T.length;$<B;$++){L=w.isInterleavedBufferAttribute?T[$]*w.data.stride+w.offset:T[$]*E;for(let O=0;O<E;O++)C[D++]=M[L++]}return new On(C,E,N)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const a=new wn,u=this.index.array,h=this.attributes;for(const w in h){const T=n(h[w],u);a.setAttribute(w,T)}const g=this.morphAttributes;for(const w in g){const T=[],M=g[w];for(let E=0,N=M.length;E<N;E++){const C=n(M[E],u);T.push(C)}a.morphAttributes[w]=T}a.morphTargetsRelative=this.morphTargetsRelative;const x=this.groups;for(let w=0,T=x.length;w<T;w++){const M=x[w];a.addGroup(M.start,M.count,M.materialIndex)}return a}toJSON(){const n={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),Object.keys(this.userData).length>0&&(n.userData=this.userData),void 0!==this.parameters){const T=this.parameters;for(const M in T)void 0!==T[M]&&(n[M]=T[M]);return n}n.data={attributes:{}};const a=this.index;null!==a&&(n.data.index={type:a.array.constructor.name,array:Array.prototype.slice.call(a.array)});const u=this.attributes;for(const T in u)n.data.attributes[T]=u[T].toJSON(n.data);const h={};let g=!1;for(const T in this.morphAttributes){const M=this.morphAttributes[T],E=[];for(let N=0,C=M.length;N<C;N++)E.push(M[N].toJSON(n.data));E.length>0&&(h[T]=E,g=!0)}g&&(n.data.morphAttributes=h,n.data.morphTargetsRelative=this.morphTargetsRelative);const x=this.groups;x.length>0&&(n.data.groups=JSON.parse(JSON.stringify(x)));const w=this.boundingSphere;return null!==w&&(n.data.boundingSphere={center:w.center.toArray(),radius:w.radius}),n}clone(){return(new wn).copy(this)}copy(n){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const a={};this.name=n.name;const u=n.index;null!==u&&this.setIndex(u.clone(a));const h=n.attributes;for(const M in h)this.setAttribute(M,h[M].clone(a));const g=n.morphAttributes;for(const M in g){const E=[],N=g[M];for(let C=0,L=N.length;C<L;C++)E.push(N[C].clone(a));this.morphAttributes[M]=E}this.morphTargetsRelative=n.morphTargetsRelative;const x=n.groups;for(let M=0,E=x.length;M<E;M++){const N=x[M];this.addGroup(N.start,N.count,N.materialIndex)}const w=n.boundingBox;null!==w&&(this.boundingBox=w.clone());const T=n.boundingSphere;return null!==T&&(this.boundingSphere=T.clone()),this.drawRange.start=n.drawRange.start,this.drawRange.count=n.drawRange.count,this.userData=n.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}wn.prototype.isBufferGeometry=!0;const ui=new sn,Wo=new Ra,Sr=new Na,Go=new te,za=new te,Xs=new te,Mf=new te,cp=new te,_f=new te,Ho=new te,hp=new te,be=new te,kf=new It,Rh=new It,Lh=new It,Ui=new te,Vi=new te;class es extends Bn{constructor(n=new wn,a=new wr){super(),this.type="Mesh",this.geometry=n,this.material=a,this.updateMorphTargets()}copy(n){return super.copy(n),void 0!==n.morphTargetInfluences&&(this.morphTargetInfluences=n.morphTargetInfluences.slice()),void 0!==n.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},n.morphTargetDictionary)),this.material=n.material,this.geometry=n.geometry,this}updateMorphTargets(){const n=this.geometry;if(n.isBufferGeometry){const a=n.morphAttributes,u=Object.keys(a);if(u.length>0){const h=a[u[0]];if(void 0!==h){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let g=0,x=h.length;g<x;g++){const w=h[g].name||String(g);this.morphTargetInfluences.push(0),this.morphTargetDictionary[w]=g}}}}else{const a=n.morphTargets;void 0!==a&&a.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(n,a){const u=this.geometry,h=this.material,g=this.matrixWorld;if(void 0===h||(null===u.boundingSphere&&u.computeBoundingSphere(),Sr.copy(u.boundingSphere),Sr.applyMatrix4(g),!1===n.ray.intersectsSphere(Sr))||(ui.copy(g).invert(),Wo.copy(n.ray).applyMatrix4(ui),null!==u.boundingBox&&!1===Wo.intersectsBox(u.boundingBox)))return;let x;if(u.isBufferGeometry){const w=u.index,T=u.attributes.position,M=u.morphAttributes.position,E=u.morphTargetsRelative,N=u.attributes.uv,C=u.attributes.uv2,L=u.groups,D=u.drawRange;if(null!==w)if(Array.isArray(h))for(let $=0,B=L.length;$<B;$++){const O=L[$],q=h[O.materialIndex];for(let ee=Math.max(O.start,D.start),Y=Math.min(O.start+O.count,D.start+D.count);ee<Y;ee+=3){const ce=w.getX(ee),he=w.getX(ee+1),Ie=w.getX(ee+2);x=dp(this,q,n,Wo,T,M,E,N,C,ce,he,Ie),x&&(x.faceIndex=Math.floor(ee/3),x.face.materialIndex=O.materialIndex,a.push(x))}}else for(let $=Math.max(0,D.start),B=Math.min(w.count,D.start+D.count);$<B;$+=3){const O=w.getX($),q=w.getX($+1),ee=w.getX($+2);x=dp(this,h,n,Wo,T,M,E,N,C,O,q,ee),x&&(x.faceIndex=Math.floor($/3),a.push(x))}else if(void 0!==T)if(Array.isArray(h))for(let $=0,B=L.length;$<B;$++){const O=L[$],q=h[O.materialIndex];for(let ee=Math.max(O.start,D.start),Y=Math.min(O.start+O.count,D.start+D.count);ee<Y;ee+=3)x=dp(this,q,n,Wo,T,M,E,N,C,ee,ee+1,ee+2),x&&(x.faceIndex=Math.floor(ee/3),x.face.materialIndex=O.materialIndex,a.push(x))}else for(let $=Math.max(0,D.start),B=Math.min(T.count,D.start+D.count);$<B;$+=3)x=dp(this,h,n,Wo,T,M,E,N,C,$,$+1,$+2),x&&(x.faceIndex=Math.floor($/3),a.push(x))}else u.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}function dp(b,n,a,u,h,g,x,w,T,M,E,N){Go.fromBufferAttribute(h,M),za.fromBufferAttribute(h,E),Xs.fromBufferAttribute(h,N);const C=b.morphTargetInfluences;if(g&&C){Ho.set(0,0,0),hp.set(0,0,0),be.set(0,0,0);for(let D=0,$=g.length;D<$;D++){const B=C[D],O=g[D];0!==B&&(Mf.fromBufferAttribute(O,M),cp.fromBufferAttribute(O,E),_f.fromBufferAttribute(O,N),x?(Ho.addScaledVector(Mf,B),hp.addScaledVector(cp,B),be.addScaledVector(_f,B)):(Ho.addScaledVector(Mf.sub(Go),B),hp.addScaledVector(cp.sub(za),B),be.addScaledVector(_f.sub(Xs),B)))}Go.add(Ho),za.add(hp),Xs.add(be)}b.isSkinnedMesh&&(b.boneTransform(M,Go),b.boneTransform(E,za),b.boneTransform(N,Xs));const L=function(D,$,B,O,q,ee,Y,ce){let he;if(he=$.side===Te?O.intersectTriangle(Y,ee,q,!0,ce):O.intersectTriangle(q,ee,Y,$.side!==Pe,ce),null===he)return null;Vi.copy(ce),Vi.applyMatrix4(D.matrixWorld);const Ie=B.ray.origin.distanceTo(Vi);return Ie<B.near||Ie>B.far?null:{distance:Ie,point:Vi.clone(),object:D}}(b,n,a,u,Go,za,Xs,Ui);if(L){w&&(kf.fromBufferAttribute(w,M),Rh.fromBufferAttribute(w,E),Lh.fromBufferAttribute(w,N),L.uv=Ur.getUV(Ui,Go,za,Xs,kf,Rh,Lh,new It)),T&&(kf.fromBufferAttribute(T,M),Rh.fromBufferAttribute(T,E),Lh.fromBufferAttribute(T,N),L.uv2=Ur.getUV(Ui,Go,za,Xs,kf,Rh,Lh,new It));const D={a:M,b:E,c:N,normal:new te,materialIndex:0};Ur.getNormal(Go,za,Xs,D.normal),L.face=D}return L}es.prototype.isMesh=!0;class j extends wn{constructor(n=1,a=1,u=1,h=1,g=1,x=1){super(),this.type="BoxGeometry",this.parameters={width:n,height:a,depth:u,widthSegments:h,heightSegments:g,depthSegments:x};const w=this;h=Math.floor(h),g=Math.floor(g),x=Math.floor(x);const T=[],M=[],E=[],N=[];let C=0,L=0;function D($,B,O,q,ee,Y,ce,he,Ie,Ae,We){const $e=Y/Ie,Oe=ce/Ae,At=Y/2,bt=ce/2,rt=he/2,Mt=Ie+1,qt=Ae+1;let Xt=0,nn=0;const vn=new te;for(let fn=0;fn<qt;fn++){const le=fn*Oe-bt;for(let fe=0;fe<Mt;fe++)vn[$]=(fe*$e-At)*q,vn[B]=le*ee,vn[O]=rt,M.push(vn.x,vn.y,vn.z),vn[$]=0,vn[B]=0,vn[O]=he>0?1:-1,E.push(vn.x,vn.y,vn.z),N.push(fe/Ie),N.push(1-fn/Ae),Xt+=1}for(let fn=0;fn<Ae;fn++)for(let le=0;le<Ie;le++){const it=C+le+Mt*(fn+1),ut=C+(le+1)+Mt*(fn+1),st=C+(le+1)+Mt*fn;T.push(C+le+Mt*fn,it,st),T.push(it,ut,st),nn+=6}w.addGroup(L,nn,We),L+=nn,C+=Xt}D("z","y","x",-1,-1,u,a,n,x,g,0),D("z","y","x",1,-1,u,a,-n,x,g,1),D("x","z","y",1,1,n,u,a,h,x,2),D("x","z","y",1,-1,n,u,-a,h,x,3),D("x","y","z",1,-1,n,a,u,h,g,4),D("x","y","z",-1,-1,n,a,-u,h,g,5),this.setIndex(T),this.setAttribute("position",new Pt(M,3)),this.setAttribute("normal",new Pt(E,3)),this.setAttribute("uv",new Pt(N,2))}static fromJSON(n){return new j(n.width,n.height,n.depth,n.widthSegments,n.heightSegments,n.depthSegments)}}function co(b){const n={};for(const a in b){n[a]={};for(const u in b[a]){const h=b[a][u];n[a][u]=h&&(h.isColor||h.isMatrix3||h.isMatrix4||h.isVector2||h.isVector3||h.isVector4||h.isTexture||h.isQuaternion)?h.clone():Array.isArray(h)?h.slice():h}}return n}function Fs(b){const n={};for(let a=0;a<b.length;a++){const u=co(b[a]);for(const h in u)n[h]=u[h]}return n}const we={clone:co,merge:Fs};class Ks extends En{constructor(n){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==n&&(void 0!==n.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(n))}copy(n){return super.copy(n),this.fragmentShader=n.fragmentShader,this.vertexShader=n.vertexShader,this.uniforms=co(n.uniforms),this.defines=Object.assign({},n.defines),this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.lights=n.lights,this.clipping=n.clipping,this.extensions=Object.assign({},n.extensions),this.glslVersion=n.glslVersion,this}toJSON(n){const a=super.toJSON(n);a.glslVersion=this.glslVersion,a.uniforms={};for(const h in this.uniforms){const g=this.uniforms[h].value;a.uniforms[h]=g&&g.isTexture?{type:"t",value:g.toJSON(n).uuid}:g&&g.isColor?{type:"c",value:g.getHex()}:g&&g.isVector2?{type:"v2",value:g.toArray()}:g&&g.isVector3?{type:"v3",value:g.toArray()}:g&&g.isVector4?{type:"v4",value:g.toArray()}:g&&g.isMatrix3?{type:"m3",value:g.toArray()}:g&&g.isMatrix4?{type:"m4",value:g.toArray()}:{value:g}}Object.keys(this.defines).length>0&&(a.defines=this.defines),a.vertexShader=this.vertexShader,a.fragmentShader=this.fragmentShader;const u={};for(const h in this.extensions)!0===this.extensions[h]&&(u[h]=!0);return Object.keys(u).length>0&&(a.extensions=u),a}}Ks.prototype.isShaderMaterial=!0;class ia extends Bn{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new sn,this.projectionMatrix=new sn,this.projectionMatrixInverse=new sn}copy(n,a){return super.copy(n,a),this.matrixWorldInverse.copy(n.matrixWorldInverse),this.projectionMatrix.copy(n.projectionMatrix),this.projectionMatrixInverse.copy(n.projectionMatrixInverse),this}getWorldDirection(n){this.updateWorldMatrix(!0,!1);const a=this.matrixWorld.elements;return n.set(-a[8],-a[9],-a[10]).normalize()}updateMatrixWorld(n){super.updateMatrixWorld(n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(n,a){super.updateWorldMatrix(n,a),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}ia.prototype.isCamera=!0;class cr extends ia{constructor(n=50,a=1,u=.1,h=2e3){super(),this.type="PerspectiveCamera",this.fov=n,this.zoom=1,this.near=u,this.far=h,this.focus=10,this.aspect=a,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(n,a){return super.copy(n,a),this.fov=n.fov,this.zoom=n.zoom,this.near=n.near,this.far=n.far,this.focus=n.focus,this.aspect=n.aspect,this.view=null===n.view?null:Object.assign({},n.view),this.filmGauge=n.filmGauge,this.filmOffset=n.filmOffset,this}setFocalLength(n){const a=.5*this.getFilmHeight()/n;this.fov=2*ao*Math.atan(a),this.updateProjectionMatrix()}getFocalLength(){const n=Math.tan(.5*Ia*this.fov);return.5*this.getFilmHeight()/n}getEffectiveFOV(){return 2*ao*Math.atan(Math.tan(.5*Ia*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(n,a,u,h,g,x){this.aspect=n/a,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=n,this.view.fullHeight=a,this.view.offsetX=u,this.view.offsetY=h,this.view.width=g,this.view.height=x,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const n=this.near;let a=n*Math.tan(.5*Ia*this.fov)/this.zoom,u=2*a,h=this.aspect*u,g=-.5*h;const x=this.view;if(null!==this.view&&this.view.enabled){const T=x.fullWidth,M=x.fullHeight;g+=x.offsetX*h/T,a-=x.offsetY*u/M,h*=x.width/T,u*=x.height/M}const w=this.filmOffset;0!==w&&(g+=n*w/this.getFilmWidth()),this.projectionMatrix.makePerspective(g,g+h,a,a-u,n,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(n){const a=super.toJSON(n);return a.object.fov=this.fov,a.object.zoom=this.zoom,a.object.near=this.near,a.object.far=this.far,a.object.focus=this.focus,a.object.aspect=this.aspect,null!==this.view&&(a.object.view=Object.assign({},this.view)),a.object.filmGauge=this.filmGauge,a.object.filmOffset=this.filmOffset,a}}cr.prototype.isPerspectiveCamera=!0;class Dh extends Bn{constructor(n,a,u){if(super(),this.type="CubeCamera",!0!==u.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=u;const h=new cr(90,1,n,a);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new te(1,0,0)),this.add(h);const g=new cr(90,1,n,a);g.layers=this.layers,g.up.set(0,-1,0),g.lookAt(new te(-1,0,0)),this.add(g);const x=new cr(90,1,n,a);x.layers=this.layers,x.up.set(0,0,1),x.lookAt(new te(0,1,0)),this.add(x);const w=new cr(90,1,n,a);w.layers=this.layers,w.up.set(0,0,-1),w.lookAt(new te(0,-1,0)),this.add(w);const T=new cr(90,1,n,a);T.layers=this.layers,T.up.set(0,-1,0),T.lookAt(new te(0,0,1)),this.add(T);const M=new cr(90,1,n,a);M.layers=this.layers,M.up.set(0,-1,0),M.lookAt(new te(0,0,-1)),this.add(M)}update(n,a){null===this.parent&&this.updateMatrixWorld();const u=this.renderTarget,[h,g,x,w,T,M]=this.children,E=n.xr.enabled,N=n.getRenderTarget();n.xr.enabled=!1;const C=u.texture.generateMipmaps;u.texture.generateMipmaps=!1,n.setRenderTarget(u,0),n.render(a,h),n.setRenderTarget(u,1),n.render(a,g),n.setRenderTarget(u,2),n.render(a,x),n.setRenderTarget(u,3),n.render(a,w),n.setRenderTarget(u,4),n.render(a,T),u.texture.generateMipmaps=C,n.setRenderTarget(u,5),n.render(a,M),n.setRenderTarget(N),n.xr.enabled=E}}class jo extends Br{constructor(n,a,u,h,g,x,w,T,M,E){super(n=void 0!==n?n:[],a=void 0!==a?a:dt,u,h,g,x,w=void 0!==w?w:_a,T,M,E),this.flipY=!1}get images(){return this.image}set images(n){this.image=n}}jo.prototype.isCubeTexture=!0;class Ef extends Si{constructor(n,a,u){Number.isInteger(a)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),a=u),super(n,n,a),this.texture=new jo(void 0,(a=a||{}).mapping,a.wrapS,a.wrapT,a.magFilter,a.minFilter,a.format,a.type,a.anisotropy,a.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==a.generateMipmaps&&a.generateMipmaps,this.texture.minFilter=void 0!==a.minFilter?a.minFilter:Zn,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(n,a){this.texture.type=a.type,this.texture.format=Ds,this.texture.encoding=a.encoding,this.texture.generateMipmaps=a.generateMipmaps,this.texture.minFilter=a.minFilter,this.texture.magFilter=a.magFilter;const x=new j(5,5,5),w=new Ks({name:"CubemapFromEquirect",uniforms:co({tEquirect:{value:null}}),vertexShader:"\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",fragmentShader:"\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",side:Te,blending:lt});w.uniforms.tEquirect.value=a;const T=new es(x,w),M=a.minFilter;return a.minFilter===Eo&&(a.minFilter=Zn),new Dh(1,10,this).update(n,T),a.minFilter=M,T.geometry.dispose(),T.material.dispose(),this}clear(n,a,u,h){const g=n.getRenderTarget();for(let x=0;x<6;x++)n.setRenderTarget(this,x),n.clear(a,u,h);n.setRenderTarget(g)}}Ef.prototype.isWebGLCubeRenderTarget=!0;const pp=new te,Qy=new te,If=new zr;class Ba{constructor(n=new te(1,0,0),a=0){this.normal=n,this.constant=a}set(n,a){return this.normal.copy(n),this.constant=a,this}setComponents(n,a,u,h){return this.normal.set(n,a,u),this.constant=h,this}setFromNormalAndCoplanarPoint(n,a){return this.normal.copy(n),this.constant=-a.dot(this.normal),this}setFromCoplanarPoints(n,a,u){const h=pp.subVectors(u,a).cross(Qy.subVectors(n,a)).normalize();return this.setFromNormalAndCoplanarPoint(h,n),this}copy(n){return this.normal.copy(n.normal),this.constant=n.constant,this}normalize(){const n=1/this.normal.length();return this.normal.multiplyScalar(n),this.constant*=n,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(n){return this.normal.dot(n)+this.constant}distanceToSphere(n){return this.distanceToPoint(n.center)-n.radius}projectPoint(n,a){return a.copy(this.normal).multiplyScalar(-this.distanceToPoint(n)).add(n)}intersectLine(n,a){const u=n.delta(pp),h=this.normal.dot(u);if(0===h)return 0===this.distanceToPoint(n.start)?a.copy(n.start):null;const g=-(n.start.dot(this.normal)+this.constant)/h;return g<0||g>1?null:a.copy(u).multiplyScalar(g).add(n.start)}intersectsLine(n){const a=this.distanceToPoint(n.start),u=this.distanceToPoint(n.end);return a<0&&u>0||u<0&&a>0}intersectsBox(n){return n.intersectsPlane(this)}intersectsSphere(n){return n.intersectsPlane(this)}coplanarPoint(n){return n.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(n,a){const u=a||If.getNormalMatrix(n),h=this.coplanarPoint(pp).applyMatrix4(n),g=this.normal.applyMatrix3(u).normalize();return this.constant=-h.dot(g),this}translate(n){return this.constant-=n.dot(this.normal),this}equals(n){return n.normal.equals(this.normal)&&n.constant===this.constant}clone(){return(new this.constructor).copy(this)}}Ba.prototype.isPlane=!0;const Ju=new Na,Fh=new te;class qo{constructor(n=new Ba,a=new Ba,u=new Ba,h=new Ba,g=new Ba,x=new Ba){this.planes=[n,a,u,h,g,x]}set(n,a,u,h,g,x){const w=this.planes;return w[0].copy(n),w[1].copy(a),w[2].copy(u),w[3].copy(h),w[4].copy(g),w[5].copy(x),this}copy(n){const a=this.planes;for(let u=0;u<6;u++)a[u].copy(n.planes[u]);return this}setFromProjectionMatrix(n){const a=this.planes,u=n.elements,h=u[0],g=u[1],x=u[2],w=u[3],T=u[4],M=u[5],E=u[6],N=u[7],C=u[8],L=u[9],D=u[10],$=u[11],B=u[12],O=u[13],q=u[14],ee=u[15];return a[0].setComponents(w-h,N-T,$-C,ee-B).normalize(),a[1].setComponents(w+h,N+T,$+C,ee+B).normalize(),a[2].setComponents(w+g,N+M,$+L,ee+O).normalize(),a[3].setComponents(w-g,N-M,$-L,ee-O).normalize(),a[4].setComponents(w-x,N-E,$-D,ee-q).normalize(),a[5].setComponents(w+x,N+E,$+D,ee+q).normalize(),this}intersectsObject(n){const a=n.geometry;return null===a.boundingSphere&&a.computeBoundingSphere(),Ju.copy(a.boundingSphere).applyMatrix4(n.matrixWorld),this.intersectsSphere(Ju)}intersectsSprite(n){return Ju.center.set(0,0,0),Ju.radius=.7071067811865476,Ju.applyMatrix4(n.matrixWorld),this.intersectsSphere(Ju)}intersectsSphere(n){const a=this.planes,u=n.center,h=-n.radius;for(let g=0;g<6;g++)if(a[g].distanceToPoint(u)<h)return!1;return!0}intersectsBox(n){const a=this.planes;for(let u=0;u<6;u++){const h=a[u];if(Fh.x=h.normal.x>0?n.max.x:n.min.x,Fh.y=h.normal.y>0?n.max.y:n.min.y,Fh.z=h.normal.z>0?n.max.z:n.min.z,h.distanceToPoint(Fh)<0)return!1}return!0}containsPoint(n){const a=this.planes;for(let u=0;u<6;u++)if(a[u].distanceToPoint(n)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function e0(){let b=null,n=!1,a=null,u=null;function h(g,x){a(g,x),u=b.requestAnimationFrame(h)}return{start:function(){!0!==n&&null!==a&&(u=b.requestAnimationFrame(h),n=!0)},stop:function(){b.cancelAnimationFrame(u),n=!1},setAnimationLoop:function(g){a=g},setContext:function(g){b=g}}}function Lr(b,n){const a=n.isWebGL2,u=new WeakMap;return{get:function(h){return h.isInterleavedBufferAttribute&&(h=h.data),u.get(h)},remove:function(h){h.isInterleavedBufferAttribute&&(h=h.data);const g=u.get(h);g&&(b.deleteBuffer(g.buffer),u.delete(h))},update:function(h,g){if(h.isGLBufferAttribute){const w=u.get(h);return void((!w||w.version<h.version)&&u.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version}))}h.isInterleavedBufferAttribute&&(h=h.data);const x=u.get(h);void 0===x?u.set(h,function(w,T){const M=w.array,E=w.usage,N=b.createBuffer();b.bindBuffer(T,N),b.bufferData(T,M,E),w.onUploadCallback();let C=5126;return M instanceof Float32Array?C=5126:M instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):M instanceof Uint16Array?w.isFloat16BufferAttribute?a?C=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):C=5123:M instanceof Int16Array?C=5122:M instanceof Uint32Array?C=5125:M instanceof Int32Array?C=5124:M instanceof Int8Array?C=5120:(M instanceof Uint8Array||M instanceof Uint8ClampedArray)&&(C=5121),{buffer:N,type:C,bytesPerElement:M.BYTES_PER_ELEMENT,version:w.version}}(h,g)):x.version<h.version&&(function(w,T,M){const E=T.array,N=T.updateRange;b.bindBuffer(M,w),-1===N.count?b.bufferSubData(M,0,E):(a?b.bufferSubData(M,N.offset*E.BYTES_PER_ELEMENT,E,N.offset,N.count):b.bufferSubData(M,N.offset*E.BYTES_PER_ELEMENT,E.subarray(N.offset,N.offset+N.count)),N.count=-1)}(x.buffer,h,g),x.version=h.version)}}}class Qu extends wn{constructor(n=1,a=1,u=1,h=1){super(),this.type="PlaneGeometry",this.parameters={width:n,height:a,widthSegments:u,heightSegments:h};const g=n/2,x=a/2,w=Math.floor(u),T=Math.floor(h),M=w+1,E=T+1,N=n/w,C=a/T,L=[],D=[],$=[],B=[];for(let O=0;O<E;O++){const q=O*C-x;for(let ee=0;ee<M;ee++)D.push(ee*N-g,-q,0),$.push(0,0,1),B.push(ee/w),B.push(1-O/T)}for(let O=0;O<T;O++)for(let q=0;q<w;q++){const Y=q+M*(O+1),ce=q+1+M*(O+1),he=q+1+M*O;L.push(q+M*O,Y,he),L.push(Y,ce,he)}this.setIndex(L),this.setAttribute("position",new Pt(D,3)),this.setAttribute("normal",new Pt($,3)),this.setAttribute("uv",new Pt(B,2))}static fromJSON(n){return new Qu(n.width,n.height,n.widthSegments,n.heightSegments)}}const Wn={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotVH = saturate( dot( geometry.viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float NoH ) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float NoV, float NoL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( NoL + NoV - NoL * NoV ) ) );\n}\nvec3 BRDF_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getIBLIrradiance( const in GeometricContext geometry ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec;\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\t\treflectVec = reflect( - viewDir, normal );\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\t#else\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\t\t\t#endif\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tlightMapIrradiance *= PI;\n\t#endif\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularTintFactor = specularTint;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARTINTMAP\n\t\t\tspecularTintFactor *= specularTintMapTexelToLinear( texture2D( specularTintMap, vUv ) ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularTintFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularTintFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenTint = sheenTint;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenTint;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += irradiance * BRDF_Sheen( material.roughness, directLight.direction, geometry, material.sheenTint );\n\t#else\n\t\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationTint, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = transmission.a;\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationTint;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( float roughness, float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n\t\tvec3 attenuationColor, float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularTint;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARTINTMAP\n\t\tuniform sampler2D specularTintMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenTint;\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Gt={common:{diffuse:{value:new Wt(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new zr},uv2Transform:{value:new zr},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new It(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Wt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Wt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new zr}},sprite:{diffuse:{value:new Wt(16777215)},opacity:{value:1},center:{value:new It(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new zr}}},Wi={basic:{uniforms:Fs([Gt.common,Gt.specularmap,Gt.envmap,Gt.aomap,Gt.lightmap,Gt.fog]),vertexShader:Wn.meshbasic_vert,fragmentShader:Wn.meshbasic_frag},lambert:{uniforms:Fs([Gt.common,Gt.specularmap,Gt.envmap,Gt.aomap,Gt.lightmap,Gt.emissivemap,Gt.fog,Gt.lights,{emissive:{value:new Wt(0)}}]),vertexShader:Wn.meshlambert_vert,fragmentShader:Wn.meshlambert_frag},phong:{uniforms:Fs([Gt.common,Gt.specularmap,Gt.envmap,Gt.aomap,Gt.lightmap,Gt.emissivemap,Gt.bumpmap,Gt.normalmap,Gt.displacementmap,Gt.fog,Gt.lights,{emissive:{value:new Wt(0)},specular:{value:new Wt(1118481)},shininess:{value:30}}]),vertexShader:Wn.meshphong_vert,fragmentShader:Wn.meshphong_frag},standard:{uniforms:Fs([Gt.common,Gt.envmap,Gt.aomap,Gt.lightmap,Gt.emissivemap,Gt.bumpmap,Gt.normalmap,Gt.displacementmap,Gt.roughnessmap,Gt.metalnessmap,Gt.fog,Gt.lights,{emissive:{value:new Wt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Wn.meshphysical_vert,fragmentShader:Wn.meshphysical_frag},toon:{uniforms:Fs([Gt.common,Gt.aomap,Gt.lightmap,Gt.emissivemap,Gt.bumpmap,Gt.normalmap,Gt.displacementmap,Gt.gradientmap,Gt.fog,Gt.lights,{emissive:{value:new Wt(0)}}]),vertexShader:Wn.meshtoon_vert,fragmentShader:Wn.meshtoon_frag},matcap:{uniforms:Fs([Gt.common,Gt.bumpmap,Gt.normalmap,Gt.displacementmap,Gt.fog,{matcap:{value:null}}]),vertexShader:Wn.meshmatcap_vert,fragmentShader:Wn.meshmatcap_frag},points:{uniforms:Fs([Gt.points,Gt.fog]),vertexShader:Wn.points_vert,fragmentShader:Wn.points_frag},dashed:{uniforms:Fs([Gt.common,Gt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Wn.linedashed_vert,fragmentShader:Wn.linedashed_frag},depth:{uniforms:Fs([Gt.common,Gt.displacementmap]),vertexShader:Wn.depth_vert,fragmentShader:Wn.depth_frag},normal:{uniforms:Fs([Gt.common,Gt.bumpmap,Gt.normalmap,Gt.displacementmap,{opacity:{value:1}}]),vertexShader:Wn.meshnormal_vert,fragmentShader:Wn.meshnormal_frag},sprite:{uniforms:Fs([Gt.sprite,Gt.fog]),vertexShader:Wn.sprite_vert,fragmentShader:Wn.sprite_frag},background:{uniforms:{uvTransform:{value:new zr},t2D:{value:null}},vertexShader:Wn.background_vert,fragmentShader:Wn.background_frag},cube:{uniforms:Fs([Gt.envmap,{opacity:{value:1}}]),vertexShader:Wn.cube_vert,fragmentShader:Wn.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Wn.equirect_vert,fragmentShader:Wn.equirect_frag},distanceRGBA:{uniforms:Fs([Gt.common,Gt.displacementmap,{referencePosition:{value:new te},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Wn.distanceRGBA_vert,fragmentShader:Wn.distanceRGBA_frag},shadow:{uniforms:Fs([Gt.lights,Gt.fog,{color:{value:new Wt(0)},opacity:{value:1}}]),vertexShader:Wn.shadow_vert,fragmentShader:Wn.shadow_frag}};function sg(b,n,a,u,h){const g=new Wt(0);let x,w,T=0,M=null,E=0,N=null;function C(L,D){a.buffers.color.setClear(L.r,L.g,L.b,D,h)}return{getClearColor:function(){return g},setClearColor:function(L,D=1){g.set(L),T=D,C(g,T)},getClearAlpha:function(){return T},setClearAlpha:function(L){T=L,C(g,T)},render:function(L,D){let $=!1,B=!0===D.isScene?D.background:null;B&&B.isTexture&&(B=n.get(B));const O=b.xr,q=O.getSession&&O.getSession();q&&"additive"===q.environmentBlendMode&&(B=null),null===B?C(g,T):B&&B.isColor&&(C(B,1),$=!0),(b.autoClear||$)&&b.clear(b.autoClearColor,b.autoClearDepth,b.autoClearStencil),B&&(B.isCubeTexture||B.mapping===Bt)?(void 0===w&&(w=new es(new j(1,1,1),new Ks({name:"BackgroundCubeMaterial",uniforms:co(Wi.cube.uniforms),vertexShader:Wi.cube.vertexShader,fragmentShader:Wi.cube.fragmentShader,side:Te,depthTest:!1,depthWrite:!1,fog:!1})),w.geometry.deleteAttribute("normal"),w.geometry.deleteAttribute("uv"),w.onBeforeRender=function(ee,Y,ce){this.matrixWorld.copyPosition(ce.matrixWorld)},Object.defineProperty(w.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),u.update(w)),w.material.uniforms.envMap.value=B,w.material.uniforms.flipEnvMap.value=B.isCubeTexture&&!1===B.isRenderTargetTexture?-1:1,M===B&&E===B.version&&N===b.toneMapping||(w.material.needsUpdate=!0,M=B,E=B.version,N=b.toneMapping),L.unshift(w,w.geometry,w.material,0,0,null)):B&&B.isTexture&&(void 0===x&&(x=new es(new Qu(2,2),new Ks({name:"BackgroundMaterial",uniforms:co(Wi.background.uniforms),vertexShader:Wi.background.vertexShader,fragmentShader:Wi.background.fragmentShader,side:Q,depthTest:!1,depthWrite:!1,fog:!1})),x.geometry.deleteAttribute("normal"),Object.defineProperty(x.material,"map",{get:function(){return this.uniforms.t2D.value}}),u.update(x)),x.material.uniforms.t2D.value=B,!0===B.matrixAutoUpdate&&B.updateMatrix(),x.material.uniforms.uvTransform.value.copy(B.matrix),M===B&&E===B.version&&N===b.toneMapping||(x.material.needsUpdate=!0,M=B,E=B.version,N=b.toneMapping),L.unshift(x,x.geometry,x.material,0,0,null))}}}function ec(b,n,a,u){const h=b.getParameter(34921),g=u.isWebGL2?null:n.get("OES_vertex_array_object"),x=u.isWebGL2||null!==g,w={},T=C(null);let M=T;function E(Y){return u.isWebGL2?b.bindVertexArray(Y):g.bindVertexArrayOES(Y)}function N(Y){return u.isWebGL2?b.deleteVertexArray(Y):g.deleteVertexArrayOES(Y)}function C(Y){const ce=[],he=[],Ie=[];for(let Ae=0;Ae<h;Ae++)ce[Ae]=0,he[Ae]=0,Ie[Ae]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:ce,enabledAttributes:he,attributeDivisors:Ie,object:Y,attributes:{},index:null}}function L(){const Y=M.newAttributes;for(let ce=0,he=Y.length;ce<he;ce++)Y[ce]=0}function D(Y){$(Y,0)}function $(Y,ce){const Ie=M.enabledAttributes,Ae=M.attributeDivisors;M.newAttributes[Y]=1,0===Ie[Y]&&(b.enableVertexAttribArray(Y),Ie[Y]=1),Ae[Y]!==ce&&((u.isWebGL2?b:n.get("ANGLE_instanced_arrays"))[u.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](Y,ce),Ae[Y]=ce)}function B(){const Y=M.newAttributes,ce=M.enabledAttributes;for(let he=0,Ie=ce.length;he<Ie;he++)ce[he]!==Y[he]&&(b.disableVertexAttribArray(he),ce[he]=0)}function O(Y,ce,he,Ie,Ae,We){!0!==u.isWebGL2||5124!==he&&5125!==he?b.vertexAttribPointer(Y,ce,he,Ie,Ae,We):b.vertexAttribIPointer(Y,ce,he,Ae,We)}function q(){ee(),M!==T&&(M=T,E(M.object))}function ee(){T.geometry=null,T.program=null,T.wireframe=!1}return{setup:function(Y,ce,he,Ie,Ae){let We=!1;if(x){const $e=function(Oe,At,bt){const rt=!0===bt.wireframe;let Mt=w[Oe.id];void 0===Mt&&(Mt={},w[Oe.id]=Mt);let qt=Mt[At.id];void 0===qt&&(qt={},Mt[At.id]=qt);let Xt=qt[rt];return void 0===Xt&&(Xt=C(u.isWebGL2?b.createVertexArray():g.createVertexArrayOES()),qt[rt]=Xt),Xt}(Ie,he,ce);M!==$e&&(M=$e,E(M.object)),We=function(Oe,At){const bt=M.attributes,rt=Oe.attributes;let Mt=0;for(const qt in rt){const Xt=bt[qt],nn=rt[qt];if(void 0===Xt||Xt.attribute!==nn||Xt.data!==nn.data)return!0;Mt++}return M.attributesNum!==Mt||M.index!==At}(Ie,Ae),We&&function(Oe,At){const bt={},rt=Oe.attributes;let Mt=0;for(const qt in rt){const Xt=rt[qt],nn={};nn.attribute=Xt,Xt.data&&(nn.data=Xt.data),bt[qt]=nn,Mt++}M.attributes=bt,M.attributesNum=Mt,M.index=At}(Ie,Ae)}else{const $e=!0===ce.wireframe;M.geometry===Ie.id&&M.program===he.id&&M.wireframe===$e||(M.geometry=Ie.id,M.program=he.id,M.wireframe=$e,We=!0)}!0===Y.isInstancedMesh&&(We=!0),null!==Ae&&a.update(Ae,34963),We&&(function($e,Oe,At,bt){if(!1===u.isWebGL2&&($e.isInstancedMesh||bt.isInstancedBufferGeometry)&&null===n.get("ANGLE_instanced_arrays"))return;L();const rt=bt.attributes,Mt=At.getAttributes(),qt=Oe.defaultAttributeValues;for(const Xt in Mt){const nn=Mt[Xt];if(nn.location>=0){let vn=rt[Xt];if(void 0===vn&&("instanceMatrix"===Xt&&$e.instanceMatrix&&(vn=$e.instanceMatrix),"instanceColor"===Xt&&$e.instanceColor&&(vn=$e.instanceColor)),void 0!==vn){const fn=vn.normalized,le=vn.itemSize,fe=a.get(vn);if(void 0===fe)continue;const it=fe.buffer,ut=fe.type,st=fe.bytesPerElement;if(vn.isInterleavedBufferAttribute){const kt=vn.data,Vt=kt.stride,Ot=vn.offset;if(kt&&kt.isInstancedInterleavedBuffer){for(let Ve=0;Ve<nn.locationSize;Ve++)$(nn.location+Ve,kt.meshPerAttribute);!0!==$e.isInstancedMesh&&void 0===bt._maxInstanceCount&&(bt._maxInstanceCount=kt.meshPerAttribute*kt.count)}else for(let Ve=0;Ve<nn.locationSize;Ve++)D(nn.location+Ve);b.bindBuffer(34962,it);for(let Ve=0;Ve<nn.locationSize;Ve++)O(nn.location+Ve,le/nn.locationSize,ut,fn,Vt*st,(Ot+le/nn.locationSize*Ve)*st)}else{if(vn.isInstancedBufferAttribute){for(let kt=0;kt<nn.locationSize;kt++)$(nn.location+kt,vn.meshPerAttribute);!0!==$e.isInstancedMesh&&void 0===bt._maxInstanceCount&&(bt._maxInstanceCount=vn.meshPerAttribute*vn.count)}else for(let kt=0;kt<nn.locationSize;kt++)D(nn.location+kt);b.bindBuffer(34962,it);for(let kt=0;kt<nn.locationSize;kt++)O(nn.location+kt,le/nn.locationSize,ut,fn,le*st,le/nn.locationSize*kt*st)}}else if(void 0!==qt){const fn=qt[Xt];if(void 0!==fn)switch(fn.length){case 2:b.vertexAttrib2fv(nn.location,fn);break;case 3:b.vertexAttrib3fv(nn.location,fn);break;case 4:b.vertexAttrib4fv(nn.location,fn);break;default:b.vertexAttrib1fv(nn.location,fn)}}}}B()}(Y,ce,he,Ie),null!==Ae&&b.bindBuffer(34963,a.get(Ae).buffer))},reset:q,resetDefaultState:ee,dispose:function(){q();for(const Y in w){const ce=w[Y];for(const he in ce){const Ie=ce[he];for(const Ae in Ie)N(Ie[Ae].object),delete Ie[Ae];delete ce[he]}delete w[Y]}},releaseStatesOfGeometry:function(Y){if(void 0===w[Y.id])return;const ce=w[Y.id];for(const he in ce){const Ie=ce[he];for(const Ae in Ie)N(Ie[Ae].object),delete Ie[Ae];delete ce[he]}delete w[Y.id]},releaseStatesOfProgram:function(Y){for(const ce in w){const he=w[ce];if(void 0===he[Y.id])continue;const Ie=he[Y.id];for(const Ae in Ie)N(Ie[Ae].object),delete Ie[Ae];delete he[Y.id]}},initAttributes:L,enableAttribute:D,disableUnusedAttributes:B}}function jl(b,n,a,u){const h=u.isWebGL2;let g;this.setMode=function(x){g=x},this.render=function(x,w){b.drawArrays(g,x,w),a.update(w,g,1)},this.renderInstances=function(x,w,T){if(0===T)return;let M,E;if(h)M=b,E="drawArraysInstanced";else if(M=n.get("ANGLE_instanced_arrays"),E="drawArraysInstancedANGLE",null===M)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");M[E](g,x,w,T),a.update(w,g,T)}}function t0(b,n,a){let u;function h(Y){if("highp"===Y){if(b.getShaderPrecisionFormat(35633,36338).precision>0&&b.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";Y="mediump"}return"mediump"===Y&&b.getShaderPrecisionFormat(35633,36337).precision>0&&b.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const g="undefined"!=typeof WebGL2RenderingContext&&b instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&b instanceof WebGL2ComputeRenderingContext;let x=void 0!==a.precision?a.precision:"highp";const w=h(x);w!==x&&(console.warn("THREE.WebGLRenderer:",x,"not supported, using",w,"instead."),x=w);const T=g||n.has("WEBGL_draw_buffers"),M=!0===a.logarithmicDepthBuffer,E=b.getParameter(34930),N=b.getParameter(35660),C=b.getParameter(3379),L=b.getParameter(34076),D=b.getParameter(34921),$=b.getParameter(36347),B=b.getParameter(36348),O=b.getParameter(36349),q=N>0,ee=g||n.has("OES_texture_float");return{isWebGL2:g,drawBuffers:T,getMaxAnisotropy:function(){if(void 0!==u)return u;if(!0===n.has("EXT_texture_filter_anisotropic")){const Y=n.get("EXT_texture_filter_anisotropic");u=b.getParameter(Y.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else u=0;return u},getMaxPrecision:h,precision:x,logarithmicDepthBuffer:M,maxTextures:E,maxVertexTextures:N,maxTextureSize:C,maxCubemapSize:L,maxAttributes:D,maxVertexUniforms:$,maxVaryings:B,maxFragmentUniforms:O,vertexTextures:q,floatFragmentTextures:ee,floatVertexTextures:q&&ee,maxSamples:g?b.getParameter(36183):0}}function ig(b){const n=this;let a=null,u=0,h=!1,g=!1;const x=new Ba,w=new zr,T={value:null,needsUpdate:!1};function M(){T.value!==a&&(T.value=a,T.needsUpdate=u>0),n.numPlanes=u,n.numIntersection=0}function E(N,C,L,D){const $=null!==N?N.length:0;let B=null;if(0!==$){if(B=T.value,!0!==D||null===B){const O=L+4*$,q=C.matrixWorldInverse;w.getNormalMatrix(q),(null===B||B.length<O)&&(B=new Float32Array(O));for(let ee=0,Y=L;ee!==$;++ee,Y+=4)x.copy(N[ee]).applyMatrix4(q,w),x.normal.toArray(B,Y),B[Y+3]=x.constant}T.value=B,T.needsUpdate=!0}return n.numPlanes=$,n.numIntersection=0,B}this.uniform=T,this.numPlanes=0,this.numIntersection=0,this.init=function(N,C,L){const D=0!==N.length||C||0!==u||h;return h=C,a=E(N,L,0),u=N.length,D},this.beginShadows=function(){g=!0,E(null)},this.endShadows=function(){g=!1,M()},this.setState=function(N,C,L){const D=N.clippingPlanes,$=N.clipIntersection,B=N.clipShadows,O=b.get(N);if(!h||null===D||0===D.length||g&&!B)g?E(null):M();else{const q=g?0:u,ee=4*q;let Y=O.clippingState||null;T.value=Y,Y=E(D,C,ee,L);for(let ce=0;ce!==ee;++ce)Y[ce]=a[ce];O.clippingState=Y,this.numIntersection=$?this.numPlanes:0,this.numPlanes+=q}}}function tc(b){let n=new WeakMap;function a(h,g){return g===en?h.mapping=dt:g===He&&(h.mapping=ke),h}function u(h){const g=h.target;g.removeEventListener("dispose",u);const x=n.get(g);void 0!==x&&(n.delete(g),x.dispose())}return{get:function(h){if(h&&h.isTexture&&!1===h.isRenderTargetTexture){const g=h.mapping;if(g===en||g===He){if(n.has(h))return a(n.get(h).texture,h.mapping);{const x=h.image;if(x&&x.height>0){const w=b.getRenderTarget(),T=new Ef(x.height/2);return T.fromEquirectangularTexture(b,h),n.set(h,T),b.setRenderTarget(w),h.addEventListener("dispose",u),a(T.texture,h.mapping)}return null}}}return h},dispose:function(){n=new WeakMap}}}Wi.physical={uniforms:Fs([Wi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new It(1,1)},clearcoatNormalMap:{value:null},sheenTint:{value:new Wt(0)},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new It},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationTint:{value:new Wt(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularTint:{value:new Wt(1,1,1)},specularTintMap:{value:null}}]),vertexShader:Wn.meshphysical_vert,fragmentShader:Wn.meshphysical_frag};class $h extends ia{constructor(n=-1,a=1,u=1,h=-1,g=.1,x=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=n,this.right=a,this.top=u,this.bottom=h,this.near=g,this.far=x,this.updateProjectionMatrix()}copy(n,a){return super.copy(n,a),this.left=n.left,this.right=n.right,this.top=n.top,this.bottom=n.bottom,this.near=n.near,this.far=n.far,this.zoom=n.zoom,this.view=null===n.view?null:Object.assign({},n.view),this}setViewOffset(n,a,u,h,g,x){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=n,this.view.fullHeight=a,this.view.offsetX=u,this.view.offsetY=h,this.view.width=g,this.view.height=x,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const n=(this.right-this.left)/(2*this.zoom),a=(this.top-this.bottom)/(2*this.zoom),u=(this.right+this.left)/2,h=(this.top+this.bottom)/2;let g=u-n,x=u+n,w=h+a,T=h-a;if(null!==this.view&&this.view.enabled){const M=(this.right-this.left)/this.view.fullWidth/this.zoom,E=(this.top-this.bottom)/this.view.fullHeight/this.zoom;g+=M*this.view.offsetX,x=g+M*this.view.width,w-=E*this.view.offsetY,T=w-E*this.view.height}this.projectionMatrix.makeOrthographic(g,x,w,T,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(n){const a=super.toJSON(n);return a.object.zoom=this.zoom,a.object.left=this.left,a.object.right=this.right,a.object.top=this.top,a.object.bottom=this.bottom,a.object.near=this.near,a.object.far=this.far,null!==this.view&&(a.object.view=Object.assign({},this.view)),a}}$h.prototype.isOrthographicCamera=!0;class Oh extends Ks{constructor(n){super(n),this.type="RawShaderMaterial"}}Oh.prototype.isRawShaderMaterial=!0;const ks=Math.pow(2,8),nc=[.125,.215,.35,.446,.526,.582],ag=5+nc.length,ho={[ds]:0,[so]:1,[No]:2,[rh]:3,[sh]:4,[Ol]:5,[$l]:6},og=new $h,{_lodPlanes:fp,_sizeLods:n0,_sigmas:mp}=function(){const b=[],n=[],a=[];let u=8;for(let h=0;h<ag;h++){const g=Math.pow(2,u);n.push(g);let x=1/g;h>4?x=nc[h-8+4-1]:0==h&&(x=0),a.push(x);const w=1/(g-1),T=-w/2,M=1+w/2,E=[T,T,M,T,M,M,T,T,M,M,T,M],N=6,C=6,L=3,D=2,$=1,B=new Float32Array(L*C*N),O=new Float32Array(D*C*N),q=new Float32Array($*C*N);for(let Y=0;Y<N;Y++){const ce=Y%3*2/3-1,he=Y>2?0:-1;B.set([ce,he,0,ce+2/3,he,0,ce+2/3,he+1,0,ce,he,0,ce+2/3,he+1,0,ce,he+1,0],L*C*Y),O.set(E,D*C*Y),q.set([Y,Y,Y,Y,Y,Y],$*C*Y)}const ee=new wn;ee.setAttribute("position",new On(B,L)),ee.setAttribute("uv",new On(O,D)),ee.setAttribute("faceIndex",new On(q,$)),b.push(ee),u>4&&u--}return{_lodPlanes:b,_sizeLods:n,_sigmas:a}}(),lg=new Wt;let ug=null;const Gi=(1+Math.sqrt(5))/2,rc=1/Gi,r0=[new te(1,1,1),new te(-1,1,1),new te(1,1,-1),new te(-1,1,-1),new te(0,Gi,rc),new te(0,Gi,-rc),new te(rc,0,Gi),new te(-rc,0,Gi),new te(Gi,rc,0),new te(-Gi,rc,0)];class sc{constructor(n){this._renderer=n,this._pingPongRenderTarget=null,this._blurMaterial=function(a){const u=new Float32Array(20),h=new te(0,1,0);return new Oh({name:"SphericalGaussianBlur",defines:{n:20},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:u},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:h},inputEncoding:{value:ho[ds]},outputEncoding:{value:ho[ds]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:lt,depthTest:!1,depthWrite:!1})}(),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(n,a=0,u=.1,h=100){ug=this._renderer.getRenderTarget();const g=this._allocateTargets();return this._sceneToCubeUV(n,u,h,g),a>0&&this._blur(g,0,0,a),this._applyPMREM(g),this._cleanup(g),g}fromEquirectangular(n){return this._fromTexture(n)}fromCubemap(n){return this._fromTexture(n)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=i0(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=s0(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let n=0;n<fp.length;n++)fp[n].dispose()}_cleanup(n){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(ug),n.scissorTest=!1,Nf(n,0,0,n.width,n.height)}_fromTexture(n){ug=this._renderer.getRenderTarget();const a=this._allocateTargets(n);return this._textureToCubeUV(n,a),this._applyPMREM(a),this._cleanup(a),a}_allocateTargets(n){const a={magFilter:or,minFilter:or,generateMipmaps:!1,type:eo,format:Cl,encoding:(b=n,void 0===b||b.type!==eo||b.encoding!==ds&&b.encoding!==so&&b.encoding!==$l?No:n.encoding),depthBuffer:!1},u=cg(a);var b;return u.depthBuffer=!n,this._pingPongRenderTarget=cg(a),u}_compileMaterial(n){const a=new es(fp[0],n);this._renderer.compile(a,og)}_sceneToCubeUV(n,a,u,h){const g=new cr(90,1,a,u),x=[1,-1,1,1,1,1],w=[1,1,1,-1,-1,-1],T=this._renderer,M=T.autoClear,E=T.outputEncoding,N=T.toneMapping;T.getClearColor(lg),T.toneMapping=_e,T.outputEncoding=ds,T.autoClear=!1;const C=new wr({name:"PMREM.Background",side:Te,depthWrite:!1,depthTest:!1}),L=new es(new j,C);let D=!1;const $=n.background;$?$.isColor&&(C.color.copy($),n.background=null,D=!0):(C.color.copy(lg),D=!0);for(let B=0;B<6;B++){const O=B%3;0==O?(g.up.set(0,x[B],0),g.lookAt(w[B],0,0)):1==O?(g.up.set(0,0,x[B]),g.lookAt(0,w[B],0)):(g.up.set(0,x[B],0),g.lookAt(0,0,w[B])),Nf(h,O*ks,B>2?ks:0,ks,ks),T.setRenderTarget(h),D&&T.render(L,g),T.render(n,g)}L.geometry.dispose(),L.material.dispose(),T.toneMapping=N,T.outputEncoding=E,T.autoClear=M,n.background=$}_textureToCubeUV(n,a){const u=this._renderer;n.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=i0()):null==this._equirectShader&&(this._equirectShader=s0());const h=n.isCubeTexture?this._cubemapShader:this._equirectShader,g=new es(fp[0],h),x=h.uniforms;x.envMap.value=n,n.isCubeTexture||x.texelSize.value.set(1/n.image.width,1/n.image.height),x.inputEncoding.value=ho[n.encoding],x.outputEncoding.value=ho[a.texture.encoding],Nf(a,0,0,3*ks,2*ks),u.setRenderTarget(a),u.render(g,og)}_applyPMREM(n){const a=this._renderer,u=a.autoClear;a.autoClear=!1;for(let h=1;h<ag;h++){const g=Math.sqrt(mp[h]*mp[h]-mp[h-1]*mp[h-1]);this._blur(n,h-1,h,g,r0[(h-1)%r0.length])}a.autoClear=u}_blur(n,a,u,h,g){const x=this._pingPongRenderTarget;this._halfBlur(n,x,a,u,h,"latitudinal",g),this._halfBlur(x,n,u,u,h,"longitudinal",g)}_halfBlur(n,a,u,h,g,x,w){const T=this._renderer,M=this._blurMaterial;"latitudinal"!==x&&"longitudinal"!==x&&console.error("blur direction must be either latitudinal or longitudinal!");const E=new es(fp[h],M),N=M.uniforms,C=n0[u]-1,L=isFinite(g)?Math.PI/(2*C):2*Math.PI/39,D=g/L,$=isFinite(g)?1+Math.floor(3*D):20;$>20&&console.warn(`sigmaRadians, ${g}, is too large and will clip, as it requested ${$} samples when the maximum is set to 20`);const B=[];let O=0;for(let ee=0;ee<20;++ee){const Y=ee/D,ce=Math.exp(-Y*Y/2);B.push(ce),0==ee?O+=ce:ee<$&&(O+=2*ce)}for(let ee=0;ee<B.length;ee++)B[ee]=B[ee]/O;N.envMap.value=n.texture,N.samples.value=$,N.weights.value=B,N.latitudinal.value="latitudinal"===x,w&&(N.poleAxis.value=w),N.dTheta.value=L,N.mipInt.value=8-u,N.inputEncoding.value=ho[n.texture.encoding],N.outputEncoding.value=ho[n.texture.encoding];const q=n0[h];Nf(a,3*Math.max(0,ks-2*q),(0===h?0:2*ks)+2*q*(h>4?h-8+4:0),3*q,2*q),T.setRenderTarget(a),T.render(E,og)}}function cg(b){const n=new Si(3*ks,3*ks,b);return n.texture.mapping=Bt,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Nf(b,n,a,u,h){b.viewport.set(n,a,u,h),b.scissor.set(n,a,u,h)}function s0(){const b=new It(1,1);return new Oh({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:b},inputEncoding:{value:ho[ds]},outputEncoding:{value:ho[ds]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:lt,depthTest:!1,depthWrite:!1})}function i0(){return new Oh({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:ho[ds]},outputEncoding:{value:ho[ds]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t",blending:lt,depthTest:!1,depthWrite:!1})}function _b(b){let n=new WeakMap,a=null;function u(h){const g=h.target;g.removeEventListener("dispose",u);const x=n.get(g);void 0!==x&&(n.delete(g),x.dispose())}return{get:function(h){if(h&&h.isTexture&&!1===h.isRenderTargetTexture){const g=h.mapping,x=g===en||g===He,w=g===dt||g===ke;if(x||w){if(n.has(h))return n.get(h).texture;{const T=h.image;if(x&&T&&T.height>0||w&&T&&function(M){let E=0;for(let N=0;N<6;N++)void 0!==M[N]&&E++;return 6===E}(T)){const M=b.getRenderTarget();null===a&&(a=new sc(b));const E=x?a.fromEquirectangular(h):a.fromCubemap(h);return n.set(h,E),b.setRenderTarget(M),h.addEventListener("dispose",u),E.texture}return null}}}return h},dispose:function(){n=new WeakMap,null!==a&&(a.dispose(),a=null)}}}function kb(b){const n={};function a(u){if(void 0!==n[u])return n[u];let h;switch(u){case"WEBGL_depth_texture":h=b.getExtension("WEBGL_depth_texture")||b.getExtension("MOZ_WEBGL_depth_texture")||b.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":h=b.getExtension("EXT_texture_filter_anisotropic")||b.getExtension("MOZ_EXT_texture_filter_anisotropic")||b.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":h=b.getExtension("WEBGL_compressed_texture_s3tc")||b.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||b.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":h=b.getExtension("WEBGL_compressed_texture_pvrtc")||b.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:h=b.getExtension(u)}return n[u]=h,h}return{has:function(u){return null!==a(u)},init:function(u){u.isWebGL2?a("EXT_color_buffer_float"):(a("WEBGL_depth_texture"),a("OES_texture_float"),a("OES_texture_half_float"),a("OES_texture_half_float_linear"),a("OES_standard_derivatives"),a("OES_element_index_uint"),a("OES_vertex_array_object"),a("ANGLE_instanced_arrays")),a("OES_texture_float_linear"),a("EXT_color_buffer_half_float")},get:function(u){const h=a(u);return null===h&&console.warn("THREE.WebGLRenderer: "+u+" extension not supported."),h}}}function hg(b,n,a,u){const h={},g=new WeakMap;function x(T){const M=T.target;null!==M.index&&n.remove(M.index);for(const N in M.attributes)n.remove(M.attributes[N]);M.removeEventListener("dispose",x),delete h[M.id];const E=g.get(M);E&&(n.remove(E),g.delete(M)),u.releaseStatesOfGeometry(M),!0===M.isInstancedBufferGeometry&&delete M._maxInstanceCount,a.memory.geometries--}function w(T){const M=[],E=T.index,N=T.attributes.position;let C=0;if(null!==E){const $=E.array;C=E.version;for(let B=0,O=$.length;B<O;B+=3){const q=$[B+0],ee=$[B+1],Y=$[B+2];M.push(q,ee,ee,Y,Y,q)}}else{C=N.version;for(let B=0,O=N.array.length/3-1;B<O;B+=3){const q=B+0,ee=B+1,Y=B+2;M.push(q,ee,ee,Y,Y,q)}}const L=new(Yu(M)>65535?Ku:Wl)(M,1);L.version=C;const D=g.get(T);D&&n.remove(D),g.set(T,L)}return{get:function(T,M){return!0===h[M.id]||(M.addEventListener("dispose",x),h[M.id]=!0,a.memory.geometries++),M},update:function(T){const M=T.attributes;for(const N in M)n.update(M[N],34962);const E=T.morphAttributes;for(const N in E){const C=E[N];for(let L=0,D=C.length;L<D;L++)n.update(C[L],34962)}},getWireframeAttribute:function(T){const M=g.get(T);if(M){const E=T.index;null!==E&&M.version<E.version&&w(T)}else w(T);return g.get(T)}}}function Pn(b,n,a,u){const h=u.isWebGL2;let g,x,w;this.setMode=function(T){g=T},this.setIndex=function(T){x=T.type,w=T.bytesPerElement},this.render=function(T,M){b.drawElements(g,M,x,T*w),a.update(M,g,1)},this.renderInstances=function(T,M,E){if(0===E)return;let N,C;if(h)N=b,C="drawElementsInstanced";else if(N=n.get("ANGLE_instanced_arrays"),C="drawElementsInstancedANGLE",null===N)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");N[C](g,M,x,T*w,E),a.update(M,g,E)}}function Rt(b){const n={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:n,programs:null,autoReset:!0,reset:function(){n.frame++,n.calls=0,n.triangles=0,n.points=0,n.lines=0},update:function(a,u,h){switch(n.calls++,u){case 4:n.triangles+=h*(a/3);break;case 1:n.lines+=h*(a/2);break;case 3:n.lines+=h*(a-1);break;case 2:n.lines+=h*a;break;case 0:n.points+=h*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",u)}}}}function Xo(b,n){return b[0]-n[0]}function a0(b,n){return Math.abs(n[1])-Math.abs(b[1])}function o0(b){const n={},a=new Float32Array(8),u=[];for(let h=0;h<8;h++)u[h]=[h,0];return{update:function(h,g,x,w){const T=h.morphTargetInfluences,M=void 0===T?0:T.length;let E=n[g.id];if(void 0===E||E.length!==M){E=[];for(let $=0;$<M;$++)E[$]=[$,0];n[g.id]=E}for(let $=0;$<M;$++){const B=E[$];B[0]=$,B[1]=T[$]}E.sort(a0);for(let $=0;$<8;$++)$<M&&E[$][1]?(u[$][0]=E[$][0],u[$][1]=E[$][1]):(u[$][0]=Number.MAX_SAFE_INTEGER,u[$][1]=0);u.sort(Xo);const N=g.morphAttributes.position,C=g.morphAttributes.normal;let L=0;for(let $=0;$<8;$++){const B=u[$],O=B[0],q=B[1];O!==Number.MAX_SAFE_INTEGER&&q?(N&&g.getAttribute("morphTarget"+$)!==N[O]&&g.setAttribute("morphTarget"+$,N[O]),C&&g.getAttribute("morphNormal"+$)!==C[O]&&g.setAttribute("morphNormal"+$,C[O]),a[$]=q,L+=q):(N&&!0===g.hasAttribute("morphTarget"+$)&&g.deleteAttribute("morphTarget"+$),C&&!0===g.hasAttribute("morphNormal"+$)&&g.deleteAttribute("morphNormal"+$),a[$]=0)}const D=g.morphTargetsRelative?1:1-L;w.getUniforms().setValue(b,"morphTargetBaseInfluence",D),w.getUniforms().setValue(b,"morphTargetInfluences",a)}}}function ic(b,n,a,u){let h=new WeakMap;function g(x){const w=x.target;w.removeEventListener("dispose",g),a.remove(w.instanceMatrix),null!==w.instanceColor&&a.remove(w.instanceColor)}return{update:function(x){const w=u.render.frame,M=n.get(x,x.geometry);return h.get(M)!==w&&(n.update(M),h.set(M,w)),x.isInstancedMesh&&(!1===x.hasEventListener("dispose",g)&&x.addEventListener("dispose",g),a.update(x.instanceMatrix,34962),null!==x.instanceColor&&a.update(x.instanceColor,34962)),M},dispose:function(){h=new WeakMap}}}class dg extends Br{constructor(n=null,a=1,u=1,h=1){super(null),this.image={data:n,width:a,height:u,depth:h},this.magFilter=or,this.minFilter=or,this.wrapR=Ln,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}dg.prototype.isDataTexture2DArray=!0;class pg extends Br{constructor(n=null,a=1,u=1,h=1){super(null),this.image={data:n,width:a,height:u,depth:h},this.magFilter=or,this.minFilter=or,this.wrapR=Ln,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}pg.prototype.isDataTexture3D=!0;const fg=new Br,l0=new dg,u0=new pg,mg=new jo,Af=[],Rf=[],gg=new Float32Array(16),Lf=new Float32Array(9),gp=new Float32Array(4);function ql(b,n,a){const u=b[0];if(u<=0||u>0)return b;const h=n*a;let g=Af[h];if(void 0===g&&(g=new Float32Array(h),Af[h]=g),0!==n){u.toArray(g,0);for(let x=1,w=0;x!==n;++x)w+=a,b[x].toArray(g,w)}return g}function ci(b,n){if(b.length!==n.length)return!1;for(let a=0,u=b.length;a<u;a++)if(b[a]!==n[a])return!1;return!0}function Ys(b,n){for(let a=0,u=n.length;a<u;a++)b[a]=n[a]}function c0(b,n){let a=Rf[n];void 0===a&&(a=new Int32Array(n),Rf[n]=a);for(let u=0;u!==n;++u)a[u]=b.allocateTextureUnit();return a}function Fn(b,n){const a=this.cache;a[0]!==n&&(b.uniform1f(this.addr,n),a[0]=n)}function Ph(b,n){const a=this.cache;if(void 0!==n.x)a[0]===n.x&&a[1]===n.y||(b.uniform2f(this.addr,n.x,n.y),a[0]=n.x,a[1]=n.y);else{if(ci(a,n))return;b.uniform2fv(this.addr,n),Ys(a,n)}}function Xn(b,n){const a=this.cache;if(void 0!==n.x)a[0]===n.x&&a[1]===n.y&&a[2]===n.z||(b.uniform3f(this.addr,n.x,n.y,n.z),a[0]=n.x,a[1]=n.y,a[2]=n.z);else if(void 0!==n.r)a[0]===n.r&&a[1]===n.g&&a[2]===n.b||(b.uniform3f(this.addr,n.r,n.g,n.b),a[0]=n.r,a[1]=n.g,a[2]=n.b);else{if(ci(a,n))return;b.uniform3fv(this.addr,n),Ys(a,n)}}function Eb(b,n){const a=this.cache;if(void 0!==n.x)a[0]===n.x&&a[1]===n.y&&a[2]===n.z&&a[3]===n.w||(b.uniform4f(this.addr,n.x,n.y,n.z,n.w),a[0]=n.x,a[1]=n.y,a[2]=n.z,a[3]=n.w);else{if(ci(a,n))return;b.uniform4fv(this.addr,n),Ys(a,n)}}function h0(b,n){const a=this.cache,u=n.elements;if(void 0===u){if(ci(a,n))return;b.uniformMatrix2fv(this.addr,!1,n),Ys(a,n)}else{if(ci(a,u))return;gp.set(u),b.uniformMatrix2fv(this.addr,!1,gp),Ys(a,u)}}function zh(b,n){const a=this.cache,u=n.elements;if(void 0===u){if(ci(a,n))return;b.uniformMatrix3fv(this.addr,!1,n),Ys(a,n)}else{if(ci(a,u))return;Lf.set(u),b.uniformMatrix3fv(this.addr,!1,Lf),Ys(a,u)}}function d0(b,n){const a=this.cache,u=n.elements;if(void 0===u){if(ci(a,n))return;b.uniformMatrix4fv(this.addr,!1,n),Ys(a,n)}else{if(ci(a,u))return;gg.set(u),b.uniformMatrix4fv(this.addr,!1,gg),Ys(a,u)}}function Ib(b,n){const a=this.cache;a[0]!==n&&(b.uniform1i(this.addr,n),a[0]=n)}function Cb(b,n){const a=this.cache;ci(a,n)||(b.uniform2iv(this.addr,n),Ys(a,n))}function p0(b,n){const a=this.cache;ci(a,n)||(b.uniform3iv(this.addr,n),Ys(a,n))}function Df(b,n){const a=this.cache;ci(a,n)||(b.uniform4iv(this.addr,n),Ys(a,n))}function yg(b,n){const a=this.cache;a[0]!==n&&(b.uniform1ui(this.addr,n),a[0]=n)}function xg(b,n){const a=this.cache;ci(a,n)||(b.uniform2uiv(this.addr,n),Ys(a,n))}function Bh(b,n){const a=this.cache;ci(a,n)||(b.uniform3uiv(this.addr,n),Ys(a,n))}function bg(b,n){const a=this.cache;ci(a,n)||(b.uniform4uiv(this.addr,n),Ys(a,n))}function Ff(b,n,a){const u=this.cache,h=a.allocateTextureUnit();u[0]!==h&&(b.uniform1i(this.addr,h),u[0]=h),a.safeSetTexture2D(n||fg,h)}function f0(b,n,a){const u=this.cache,h=a.allocateTextureUnit();u[0]!==h&&(b.uniform1i(this.addr,h),u[0]=h),a.setTexture3D(n||u0,h)}function m0(b,n,a){const u=this.cache,h=a.allocateTextureUnit();u[0]!==h&&(b.uniform1i(this.addr,h),u[0]=h),a.safeSetTextureCube(n||mg,h)}function g0(b,n,a){const u=this.cache,h=a.allocateTextureUnit();u[0]!==h&&(b.uniform1i(this.addr,h),u[0]=h),a.setTexture2DArray(n||l0,h)}function y0(b,n){b.uniform1fv(this.addr,n)}function x0(b,n){const a=ql(n,this.size,2);b.uniform2fv(this.addr,a)}function b0(b,n){const a=ql(n,this.size,3);b.uniform3fv(this.addr,a)}function v0(b,n){const a=ql(n,this.size,4);b.uniform4fv(this.addr,a)}function w0(b,n){const a=ql(n,this.size,4);b.uniformMatrix2fv(this.addr,!1,a)}function S0(b,n){const a=ql(n,this.size,9);b.uniformMatrix3fv(this.addr,!1,a)}function T0(b,n){const a=ql(n,this.size,16);b.uniformMatrix4fv(this.addr,!1,a)}function vg(b,n){b.uniform1iv(this.addr,n)}function wg(b,n){b.uniform2iv(this.addr,n)}function $f(b,n){b.uniform3iv(this.addr,n)}function Sg(b,n){b.uniform4iv(this.addr,n)}function ac(b,n){b.uniform1uiv(this.addr,n)}function Hi(b,n){b.uniform2uiv(this.addr,n)}function St(b,n){b.uniform3uiv(this.addr,n)}function M0(b,n){b.uniform4uiv(this.addr,n)}function Nb(b,n,a){const u=n.length,h=c0(a,u);b.uniform1iv(this.addr,h);for(let g=0;g!==u;++g)a.safeSetTexture2D(n[g]||fg,h[g])}function Tg(b,n,a){const u=n.length,h=c0(a,u);b.uniform1iv(this.addr,h);for(let g=0;g!==u;++g)a.safeSetTextureCube(n[g]||mg,h[g])}function Mg(b,n,a){this.id=b,this.addr=a,this.cache=[],this.setValue=function(u){switch(u){case 5126:return Fn;case 35664:return Ph;case 35665:return Xn;case 35666:return Eb;case 35674:return h0;case 35675:return zh;case 35676:return d0;case 5124:case 35670:return Ib;case 35667:case 35671:return Cb;case 35668:case 35672:return p0;case 35669:case 35673:return Df;case 5125:return yg;case 36294:return xg;case 36295:return Bh;case 36296:return bg;case 35678:case 36198:case 36298:case 36306:case 35682:return Ff;case 35679:case 36299:case 36307:return f0;case 35680:case 36300:case 36308:case 36293:return m0;case 36289:case 36303:case 36311:case 36292:return g0}}(n.type)}function _0(b,n,a){this.id=b,this.addr=a,this.cache=[],this.size=n.size,this.setValue=function(u){switch(u){case 5126:return y0;case 35664:return x0;case 35665:return b0;case 35666:return v0;case 35674:return w0;case 35675:return S0;case 35676:return T0;case 5124:case 35670:return vg;case 35667:case 35671:return wg;case 35668:case 35672:return $f;case 35669:case 35673:return Sg;case 5125:return ac;case 36294:return Hi;case 36295:return St;case 36296:return M0;case 35678:case 36198:case 36298:case 36306:case 35682:return Nb;case 35680:case 36300:case 36308:case 36293:return Tg}}(n.type)}function k0(b){this.id=b,this.seq=[],this.map={}}_0.prototype.updateCache=function(b){const n=this.cache;b instanceof Float32Array&&n.length!==b.length&&(this.cache=new Float32Array(b.length)),Ys(n,b)},k0.prototype.setValue=function(b,n,a){const u=this.seq;for(let h=0,g=u.length;h!==g;++h){const x=u[h];x.setValue(b,n[x.id],a)}};const _g=/(\w+)(\])?(\[|\.)?/g;function Of(b,n){b.seq.push(n),b.map[n.id]=n}function Ab(b,n,a){const u=b.name,h=u.length;for(_g.lastIndex=0;;){const g=_g.exec(u),x=_g.lastIndex;let w=g[1];const M=g[3];if("]"===g[2]&&(w|=0),void 0===M||"["===M&&x+2===h){Of(a,void 0===M?new Mg(w,b,n):new _0(w,b,n));break}{let E=a.map[w];void 0===E&&(E=new k0(w),Of(a,E)),a=E}}}function Xl(b,n){this.seq=[],this.map={};const a=b.getProgramParameter(n,35718);for(let u=0;u<a;++u){const h=b.getActiveUniform(n,u);Ab(h,b.getUniformLocation(n,h.name),this)}}function kg(b,n,a){const u=b.createShader(n);return b.shaderSource(u,a),b.compileShader(u),u}Xl.prototype.setValue=function(b,n,a,u){const h=this.map[n];void 0!==h&&h.setValue(b,a,u)},Xl.prototype.setOptional=function(b,n,a){const u=n[a];void 0!==u&&this.setValue(b,a,u)},Xl.upload=function(b,n,a,u){for(let h=0,g=n.length;h!==g;++h){const x=n[h],w=a[x.id];!1!==w.needsUpdate&&x.setValue(b,w.value,u)}},Xl.seqWithValue=function(b,n){const a=[];for(let u=0,h=b.length;u!==h;++u){const g=b[u];g.id in n&&a.push(g)}return a};let E0=0;function I0(b){switch(b){case ds:return["Linear","( value )"];case so:return["sRGB","( value )"];case No:return["RGBE","( value )"];case rh:return["RGBM","( value, 7.0 )"];case sh:return["RGBM","( value, 16.0 )"];case Ol:return["RGBD","( value, 256.0 )"];case $l:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case Gd:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",b),["Linear","( value )"]}}function C0(b,n,a){const u=b.getShaderParameter(n,35713),h=b.getShaderInfoLog(n).trim();return u&&""===h?"":a.toUpperCase()+"\n\n"+h+"\n\n"+function(g){const x=g.split("\n");for(let w=0;w<x.length;w++)x[w]=w+1+": "+x[w];return x.join("\n")}(b.getShaderSource(n))}function Uh(b,n){const a=I0(n);return"vec4 "+b+"( vec4 value ) { return "+a[0]+"ToLinear"+a[1]+"; }"}function N0(b,n){const a=I0(n);return"vec4 "+b+"( vec4 value ) { return LinearTo"+a[0]+a[1]+"; }"}function Rb(b,n){let a;switch(n){case V:a="Linear";break;case xe:a="Reinhard";break;case Ce:a="OptimizedCineon";break;case F:a="ACESFilmic";break;case qe:a="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",n),a="Linear"}return"vec3 "+b+"( vec3 color ) { return "+a+"ToneMapping( color ); }"}function aa(b){return""!==b}function yp(b,n){return b.replace(/NUM_DIR_LIGHTS/g,n.numDirLights).replace(/NUM_SPOT_LIGHTS/g,n.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,n.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,n.numPointLights).replace(/NUM_HEMI_LIGHTS/g,n.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,n.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,n.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,n.numPointLightShadows)}function A0(b,n){return b.replace(/NUM_CLIPPING_PLANES/g,n.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,n.numClippingPlanes-n.numClipIntersection)}const Re=/^[ \t]*#include +<([\w\d./]+)>/gm;function _n(b){return b.replace(Re,ps)}function ps(b,n){const a=Wn[n];if(void 0===a)throw new Error("Can not resolve #include <"+n+">");return _n(a)}const Lb=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,Db=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function R0(b){return b.replace(Db,L0).replace(Lb,Fb)}function Fb(b,n,a,u){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),L0(0,n,a,u)}function L0(b,n,a,u){let h="";for(let g=parseInt(n);g<parseInt(a);g++)h+=u.replace(/\[\s*i\s*\]/g,"[ "+g+" ]").replace(/UNROLLED_LOOP_INDEX/g,g);return h}function D0(b){let n="precision "+b.precision+" float;\nprecision "+b.precision+" int;";return"highp"===b.precision?n+="\n#define HIGH_PRECISION":"mediump"===b.precision?n+="\n#define MEDIUM_PRECISION":"lowp"===b.precision&&(n+="\n#define LOW_PRECISION"),n}function $b(b,n,a,u){const h=b.getContext(),g=a.defines;let x=a.vertexShader,w=a.fragmentShader;const T=function(Ae){let We="SHADOWMAP_TYPE_BASIC";return Ae.shadowMapType===H?We="SHADOWMAP_TYPE_PCF":Ae.shadowMapType===J?We="SHADOWMAP_TYPE_PCF_SOFT":Ae.shadowMapType===K&&(We="SHADOWMAP_TYPE_VSM"),We}(a),M=function(Ae){let We="ENVMAP_TYPE_CUBE";if(Ae.envMap)switch(Ae.envMapMode){case dt:case ke:We="ENVMAP_TYPE_CUBE";break;case Bt:case gn:We="ENVMAP_TYPE_CUBE_UV"}return We}(a),E=function(Ae){let We="ENVMAP_MODE_REFLECTION";if(Ae.envMap)switch(Ae.envMapMode){case ke:case gn:We="ENVMAP_MODE_REFRACTION"}return We}(a),N=function(Ae){let We="ENVMAP_BLENDING_NONE";if(Ae.envMap)switch(Ae.combine){case vu:We="ENVMAP_BLENDING_MULTIPLY";break;case Ta:We="ENVMAP_BLENDING_MIX";break;case Pc:We="ENVMAP_BLENDING_ADD"}return We}(a),C=b.gammaFactor>0?b.gammaFactor:1,L=a.isWebGL2?"":[(Ae=a).extensionDerivatives||Ae.envMapCubeUV||Ae.bumpMap||Ae.tangentSpaceNormalMap||Ae.clearcoatNormalMap||Ae.flatShading||"physical"===Ae.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(Ae.extensionFragDepth||Ae.logarithmicDepthBuffer)&&Ae.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",Ae.extensionDrawBuffers&&Ae.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(Ae.extensionShaderTextureLOD||Ae.envMap||Ae.transmission)&&Ae.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(aa).join("\n"),D=function(Ae){const We=[];for(const $e in Ae){const Oe=Ae[$e];!1!==Oe&&We.push("#define "+$e+" "+Oe)}return We.join("\n")}(g),$=h.createProgram();var Ae;let B,O,q=a.glslVersion?"#version "+a.glslVersion+"\n":"";a.isRawShaderMaterial?(B=[D].filter(aa).join("\n"),B.length>0&&(B+="\n"),O=[L,D].filter(aa).join("\n"),O.length>0&&(O+="\n")):(B=[D0(a),"#define SHADER_NAME "+a.shaderName,D,a.instancing?"#define USE_INSTANCING":"",a.instancingColor?"#define USE_INSTANCING_COLOR":"",a.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+C,"#define MAX_BONES "+a.maxBones,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp2?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+E:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.normalMap&&a.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",a.clearcoatMap?"#define USE_CLEARCOATMAP":"",a.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",a.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",a.displacementMap&&a.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",a.specularTintMap?"#define USE_SPECULARTINTMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.transmission?"#define USE_TRANSMISSION":"",a.transmissionMap?"#define USE_TRANSMISSIONMAP":"",a.thicknessMap?"#define USE_THICKNESSMAP":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors?"#define USE_COLOR":"",a.vertexAlphas?"#define USE_COLOR_ALPHA":"",a.vertexUvs?"#define USE_UV":"",a.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",a.flatShading?"#define FLAT_SHADED":"",a.skinning?"#define USE_SKINNING":"",a.useVertexTexture?"#define BONE_TEXTURE":"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals&&!1===a.flatShading?"#define USE_MORPHNORMALS":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+T:"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&a.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(aa).join("\n"),O=[L,D0(a),"#define SHADER_NAME "+a.shaderName,D,"#define GAMMA_FACTOR "+C,a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp2?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.matcap?"#define USE_MATCAP":"",a.envMap?"#define USE_ENVMAP":"",a.envMap?"#define "+M:"",a.envMap?"#define "+E:"",a.envMap?"#define "+N:"",a.lightMap?"#define USE_LIGHTMAP":"",a.aoMap?"#define USE_AOMAP":"",a.emissiveMap?"#define USE_EMISSIVEMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.normalMap&&a.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",a.normalMap&&a.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",a.clearcoat?"#define USE_CLEARCOAT":"",a.clearcoatMap?"#define USE_CLEARCOATMAP":"",a.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",a.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",a.specularTintMap?"#define USE_SPECULARTINTMAP":"",a.roughnessMap?"#define USE_ROUGHNESSMAP":"",a.metalnessMap?"#define USE_METALNESSMAP":"",a.alphaMap?"#define USE_ALPHAMAP":"",a.alphaTest?"#define USE_ALPHATEST":"",a.sheenTint?"#define USE_SHEEN":"",a.transmission?"#define USE_TRANSMISSION":"",a.transmissionMap?"#define USE_TRANSMISSIONMAP":"",a.thicknessMap?"#define USE_THICKNESSMAP":"",a.vertexTangents?"#define USE_TANGENT":"",a.vertexColors||a.instancingColor?"#define USE_COLOR":"",a.vertexAlphas?"#define USE_COLOR_ALPHA":"",a.vertexUvs?"#define USE_UV":"",a.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",a.gradientMap?"#define USE_GRADIENTMAP":"",a.flatShading?"#define FLAT_SHADED":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+T:"",a.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",a.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",a.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",a.logarithmicDepthBuffer&&a.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(a.extensionShaderTextureLOD||a.envMap)&&a.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",a.toneMapping!==_e?"#define TONE_MAPPING":"",a.toneMapping!==_e?Wn.tonemapping_pars_fragment:"",a.toneMapping!==_e?Rb("toneMapping",a.toneMapping):"",a.dithering?"#define DITHERING":"",a.format===_a?"#define OPAQUE":"",Wn.encodings_pars_fragment,a.map?Uh("mapTexelToLinear",a.mapEncoding):"",a.matcap?Uh("matcapTexelToLinear",a.matcapEncoding):"",a.envMap?Uh("envMapTexelToLinear",a.envMapEncoding):"",a.emissiveMap?Uh("emissiveMapTexelToLinear",a.emissiveMapEncoding):"",a.specularTintMap?Uh("specularTintMapTexelToLinear",a.specularTintMapEncoding):"",a.lightMap?Uh("lightMapTexelToLinear",a.lightMapEncoding):"",N0("linearToOutputTexel",a.outputEncoding),a.depthPacking?"#define DEPTH_PACKING "+a.depthPacking:"","\n"].filter(aa).join("\n")),x=_n(x),x=yp(x,a),x=A0(x,a),w=_n(w),w=yp(w,a),w=A0(w,a),x=R0(x),w=R0(w),a.isWebGL2&&!0!==a.isRawShaderMaterial&&(q="#version 300 es\n",B=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+B,O=["#define varying in",a.glslVersion===fh?"":"out highp vec4 pc_fragColor;",a.glslVersion===fh?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+O);const ee=q+O+w,Y=kg(h,35633,q+B+x),ce=kg(h,35632,ee);if(h.attachShader($,Y),h.attachShader($,ce),void 0!==a.index0AttributeName?h.bindAttribLocation($,0,a.index0AttributeName):!0===a.morphTargets&&h.bindAttribLocation($,0,"position"),h.linkProgram($),b.debug.checkShaderErrors){const Ae=h.getProgramInfoLog($).trim(),We=h.getShaderInfoLog(Y).trim(),$e=h.getShaderInfoLog(ce).trim();let Oe=!0,At=!0;if(!1===h.getProgramParameter($,35714)){Oe=!1;const bt=C0(h,Y,"vertex"),rt=C0(h,ce,"fragment");console.error("THREE.WebGLProgram: Shader Error "+h.getError()+" - VALIDATE_STATUS "+h.getProgramParameter($,35715)+"\n\nProgram Info Log: "+Ae+"\n"+bt+"\n"+rt)}else""!==Ae?console.warn("THREE.WebGLProgram: Program Info Log:",Ae):""!==We&&""!==$e||(At=!1);At&&(this.diagnostics={runnable:Oe,programLog:Ae,vertexShader:{log:We,prefix:B},fragmentShader:{log:$e,prefix:O}})}let he,Ie;return h.deleteShader(Y),h.deleteShader(ce),this.getUniforms=function(){return void 0===he&&(he=new Xl(h,$)),he},this.getAttributes=function(){return void 0===Ie&&(Ie=function(Ae,We){const $e={},Oe=Ae.getProgramParameter(We,35721);for(let At=0;At<Oe;At++){const bt=Ae.getActiveAttrib(We,At),rt=bt.name;let Mt=1;35674===bt.type&&(Mt=2),35675===bt.type&&(Mt=3),35676===bt.type&&(Mt=4),$e[rt]={type:bt.type,location:Ae.getAttribLocation(We,rt),locationSize:Mt}}return $e}(h,$)),Ie},this.destroy=function(){u.releaseStatesOfProgram(this),h.deleteProgram($),this.program=void 0},this.name=a.shaderName,this.id=E0++,this.cacheKey=n,this.usedTimes=1,this.program=$,this.vertexShader=Y,this.fragmentShader=ce,this}function Eg(b,n,a,u,h,g,x){const w=[],T=h.isWebGL2,M=h.logarithmicDepthBuffer,E=h.floatVertexTextures,N=h.maxVertexUniforms,C=h.vertexTextures;let L=h.precision;const D={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},$=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoat","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","specularIntensityMap","specularTintMap","specularTintMapEncoding","roughnessMap","metalnessMap","gradientMap","alphaMap","alphaTest","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","format","sheenTint","transmission","transmissionMap","thicknessMap"];function B(O){let q;return O&&O.isTexture?q=O.encoding:O&&O.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),q=O.texture.encoding):q=ds,q}return{getParameters:function(O,q,ee,Y,ce){const he=Y.fog,Ae=(O.isMeshStandardMaterial?a:n).get(O.envMap||(O.isMeshStandardMaterial?Y.environment:null)),We=D[O.type],$e=ce.isSkinnedMesh?function(qt){const Xt=qt.skeleton.bones;if(E)return 1024;{const vn=Math.floor((N-20)/4),fn=Math.min(vn,Xt.length);return fn<Xt.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+Xt.length+" bones. This GPU supports "+fn+"."),0):fn}}(ce):0;let Oe,At;if(null!==O.precision&&(L=h.getMaxPrecision(O.precision),L!==O.precision&&console.warn("THREE.WebGLProgram.getParameters:",O.precision,"not supported, using",L,"instead.")),We){const qt=Wi[We];Oe=qt.vertexShader,At=qt.fragmentShader}else Oe=O.vertexShader,At=O.fragmentShader;const bt=b.getRenderTarget(),rt=O.alphaTest>0,Mt=O.clearcoat>0;return{isWebGL2:T,shaderID:We,shaderName:O.type,vertexShader:Oe,fragmentShader:At,defines:O.defines,isRawShaderMaterial:!0===O.isRawShaderMaterial,glslVersion:O.glslVersion,precision:L,instancing:!0===ce.isInstancedMesh,instancingColor:!0===ce.isInstancedMesh&&null!==ce.instanceColor,supportsVertexTextures:C,outputEncoding:null!==bt?B(bt.texture):b.outputEncoding,map:!!O.map,mapEncoding:B(O.map),matcap:!!O.matcap,matcapEncoding:B(O.matcap),envMap:!!Ae,envMapMode:Ae&&Ae.mapping,envMapEncoding:B(Ae),envMapCubeUV:!!Ae&&(Ae.mapping===Bt||Ae.mapping===gn),lightMap:!!O.lightMap,lightMapEncoding:B(O.lightMap),aoMap:!!O.aoMap,emissiveMap:!!O.emissiveMap,emissiveMapEncoding:B(O.emissiveMap),bumpMap:!!O.bumpMap,normalMap:!!O.normalMap,objectSpaceNormalMap:O.normalMapType===Hd,tangentSpaceNormalMap:O.normalMapType===Ea,clearcoat:Mt,clearcoatMap:Mt&&!!O.clearcoatMap,clearcoatRoughnessMap:Mt&&!!O.clearcoatRoughnessMap,clearcoatNormalMap:Mt&&!!O.clearcoatNormalMap,displacementMap:!!O.displacementMap,roughnessMap:!!O.roughnessMap,metalnessMap:!!O.metalnessMap,specularMap:!!O.specularMap,specularIntensityMap:!!O.specularIntensityMap,specularTintMap:!!O.specularTintMap,specularTintMapEncoding:B(O.specularTintMap),alphaMap:!!O.alphaMap,alphaTest:rt,gradientMap:!!O.gradientMap,sheenTint:!!O.sheenTint&&(O.sheenTint.r>0||O.sheenTint.g>0||O.sheenTint.b>0),transmission:O.transmission>0,transmissionMap:!!O.transmissionMap,thicknessMap:!!O.thicknessMap,combine:O.combine,vertexTangents:!!O.normalMap&&!!ce.geometry&&!!ce.geometry.attributes.tangent,vertexColors:O.vertexColors,vertexAlphas:!0===O.vertexColors&&!!ce.geometry&&!!ce.geometry.attributes.color&&4===ce.geometry.attributes.color.itemSize,vertexUvs:!!(O.map||O.bumpMap||O.normalMap||O.specularMap||O.alphaMap||O.emissiveMap||O.roughnessMap||O.metalnessMap||O.clearcoatMap||O.clearcoatRoughnessMap||O.clearcoatNormalMap||O.displacementMap||O.transmissionMap||O.thicknessMap||O.specularIntensityMap||O.specularTintMap),uvsVertexOnly:!(O.map||O.bumpMap||O.normalMap||O.specularMap||O.alphaMap||O.emissiveMap||O.roughnessMap||O.metalnessMap||O.clearcoatNormalMap||O.transmission>0||O.transmissionMap||O.thicknessMap||O.specularIntensityMap||O.specularTintMap||!O.displacementMap),fog:!!he,useFog:O.fog,fogExp2:he&&he.isFogExp2,flatShading:!!O.flatShading,sizeAttenuation:O.sizeAttenuation,logarithmicDepthBuffer:M,skinning:!0===ce.isSkinnedMesh&&$e>0,maxBones:$e,useVertexTexture:E,morphTargets:!!ce.geometry&&!!ce.geometry.morphAttributes.position,morphNormals:!!ce.geometry&&!!ce.geometry.morphAttributes.normal,numDirLights:q.directional.length,numPointLights:q.point.length,numSpotLights:q.spot.length,numRectAreaLights:q.rectArea.length,numHemiLights:q.hemi.length,numDirLightShadows:q.directionalShadowMap.length,numPointLightShadows:q.pointShadowMap.length,numSpotLightShadows:q.spotShadowMap.length,numClippingPlanes:x.numPlanes,numClipIntersection:x.numIntersection,format:O.format,dithering:O.dithering,shadowMapEnabled:b.shadowMap.enabled&&ee.length>0,shadowMapType:b.shadowMap.type,toneMapping:O.toneMapped?b.toneMapping:_e,physicallyCorrectLights:b.physicallyCorrectLights,premultipliedAlpha:O.premultipliedAlpha,doubleSided:O.side===Pe,flipSided:O.side===Te,depthPacking:void 0!==O.depthPacking&&O.depthPacking,index0AttributeName:O.index0AttributeName,extensionDerivatives:O.extensions&&O.extensions.derivatives,extensionFragDepth:O.extensions&&O.extensions.fragDepth,extensionDrawBuffers:O.extensions&&O.extensions.drawBuffers,extensionShaderTextureLOD:O.extensions&&O.extensions.shaderTextureLOD,rendererExtensionFragDepth:T||u.has("EXT_frag_depth"),rendererExtensionDrawBuffers:T||u.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:T||u.has("EXT_shader_texture_lod"),customProgramCacheKey:O.customProgramCacheKey()}},getProgramCacheKey:function(O){const q=[];if(O.shaderID?q.push(O.shaderID):(q.push(O.fragmentShader),q.push(O.vertexShader)),void 0!==O.defines)for(const ee in O.defines)q.push(ee),q.push(O.defines[ee]);if(!1===O.isRawShaderMaterial){for(let ee=0;ee<$.length;ee++)q.push(O[$[ee]]);q.push(b.outputEncoding),q.push(b.gammaFactor)}return q.push(O.customProgramCacheKey),q.join()},getUniforms:function(O){const q=D[O.type];let ee;return ee=q?we.clone(Wi[q].uniforms):O.uniforms,ee},acquireProgram:function(O,q){let ee;for(let Y=0,ce=w.length;Y<ce;Y++){const he=w[Y];if(he.cacheKey===q){ee=he,++ee.usedTimes;break}}return void 0===ee&&(ee=new $b(b,q,O,g),w.push(ee)),ee},releaseProgram:function(O){if(0==--O.usedTimes){const q=w.indexOf(O);w[q]=w[w.length-1],w.pop(),O.destroy()}},programs:w}}function F0(){let b=new WeakMap;return{get:function(n){let a=b.get(n);return void 0===a&&(a={},b.set(n,a)),a},remove:function(n){b.delete(n)},update:function(n,a,u){b.get(n)[a]=u},dispose:function(){b=new WeakMap}}}function Ob(b,n){return b.groupOrder!==n.groupOrder?b.groupOrder-n.groupOrder:b.renderOrder!==n.renderOrder?b.renderOrder-n.renderOrder:b.program!==n.program?b.program.id-n.program.id:b.material.id!==n.material.id?b.material.id-n.material.id:b.z!==n.z?b.z-n.z:b.id-n.id}function vt(b,n){return b.groupOrder!==n.groupOrder?b.groupOrder-n.groupOrder:b.renderOrder!==n.renderOrder?b.renderOrder-n.renderOrder:b.z!==n.z?n.z-b.z:b.id-n.id}function xp(b){const n=[];let a=0;const u=[],h=[],g=[],x={id:-1};function w(T,M,E,N,C,L){let D=n[a];const $=b.get(E);return void 0===D?(D={id:T.id,object:T,geometry:M,material:E,program:$.program||x,groupOrder:N,renderOrder:T.renderOrder,z:C,group:L},n[a]=D):(D.id=T.id,D.object=T,D.geometry=M,D.material=E,D.program=$.program||x,D.groupOrder=N,D.renderOrder=T.renderOrder,D.z=C,D.group=L),a++,D}return{opaque:u,transmissive:h,transparent:g,init:function(){a=0,u.length=0,h.length=0,g.length=0},push:function(T,M,E,N,C,L){const D=w(T,M,E,N,C,L);E.transmission>0?h.push(D):!0===E.transparent?g.push(D):u.push(D)},unshift:function(T,M,E,N,C,L){const D=w(T,M,E,N,C,L);E.transmission>0?h.unshift(D):!0===E.transparent?g.unshift(D):u.unshift(D)},finish:function(){for(let T=a,M=n.length;T<M;T++){const E=n[T];if(null===E.id)break;E.id=null,E.object=null,E.geometry=null,E.material=null,E.program=null,E.group=null}},sort:function(T,M){u.length>1&&u.sort(T||Ob),h.length>1&&h.sort(M||vt),g.length>1&&g.sort(M||vt)}}}function an(b){let n=new WeakMap;return{get:function(a,u){let h;return!1===n.has(a)?(h=new xp(b),n.set(a,[h])):u>=n.get(a).length?(h=new xp(b),n.get(a).push(h)):h=n.get(a)[u],h},dispose:function(){n=new WeakMap}}}function Se(){const b={};return{get:function(n){if(void 0!==b[n.id])return b[n.id];let a;switch(n.type){case"DirectionalLight":a={direction:new te,color:new Wt};break;case"SpotLight":a={position:new te,direction:new te,color:new Wt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":a={position:new te,color:new Wt,distance:0,decay:0};break;case"HemisphereLight":a={direction:new te,skyColor:new Wt,groundColor:new Wt};break;case"RectAreaLight":a={color:new Wt,position:new te,halfWidth:new te,halfHeight:new te}}return b[n.id]=a,a}}}let Es=0;function hr(b,n){return(n.castShadow?1:0)-(b.castShadow?1:0)}function Kn(b,n){const a=new Se,u=function(){const T={};return{get:function(M){if(void 0!==T[M.id])return T[M.id];let E;switch(M.type){case"DirectionalLight":case"SpotLight":E={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new It};break;case"PointLight":E={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new It,shadowCameraNear:1,shadowCameraFar:1e3}}return T[M.id]=E,E}}}(),h={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let T=0;T<9;T++)h.probe.push(new te);const g=new te,x=new sn,w=new sn;return{setup:function(T,M){let E=0,N=0,C=0;for(let Ie=0;Ie<9;Ie++)h.probe[Ie].set(0,0,0);let L=0,D=0,$=0,B=0,O=0,q=0,ee=0,Y=0;T.sort(hr);const ce=!0!==M?Math.PI:1;for(let Ie=0,Ae=T.length;Ie<Ae;Ie++){const We=T[Ie],$e=We.color,Oe=We.intensity,At=We.distance,bt=We.shadow&&We.shadow.map?We.shadow.map.texture:null;if(We.isAmbientLight)E+=$e.r*Oe*ce,N+=$e.g*Oe*ce,C+=$e.b*Oe*ce;else if(We.isLightProbe)for(let rt=0;rt<9;rt++)h.probe[rt].addScaledVector(We.sh.coefficients[rt],Oe);else if(We.isDirectionalLight){const rt=a.get(We);if(rt.color.copy(We.color).multiplyScalar(We.intensity*ce),We.castShadow){const Mt=We.shadow,qt=u.get(We);qt.shadowBias=Mt.bias,qt.shadowNormalBias=Mt.normalBias,qt.shadowRadius=Mt.radius,qt.shadowMapSize=Mt.mapSize,h.directionalShadow[L]=qt,h.directionalShadowMap[L]=bt,h.directionalShadowMatrix[L]=We.shadow.matrix,q++}h.directional[L]=rt,L++}else if(We.isSpotLight){const rt=a.get(We);if(rt.position.setFromMatrixPosition(We.matrixWorld),rt.color.copy($e).multiplyScalar(Oe*ce),rt.distance=At,rt.coneCos=Math.cos(We.angle),rt.penumbraCos=Math.cos(We.angle*(1-We.penumbra)),rt.decay=We.decay,We.castShadow){const Mt=We.shadow,qt=u.get(We);qt.shadowBias=Mt.bias,qt.shadowNormalBias=Mt.normalBias,qt.shadowRadius=Mt.radius,qt.shadowMapSize=Mt.mapSize,h.spotShadow[$]=qt,h.spotShadowMap[$]=bt,h.spotShadowMatrix[$]=We.shadow.matrix,Y++}h.spot[$]=rt,$++}else if(We.isRectAreaLight){const rt=a.get(We);rt.color.copy($e).multiplyScalar(Oe),rt.halfWidth.set(.5*We.width,0,0),rt.halfHeight.set(0,.5*We.height,0),h.rectArea[B]=rt,B++}else if(We.isPointLight){const rt=a.get(We);if(rt.color.copy(We.color).multiplyScalar(We.intensity*ce),rt.distance=We.distance,rt.decay=We.decay,We.castShadow){const Mt=We.shadow,qt=u.get(We);qt.shadowBias=Mt.bias,qt.shadowNormalBias=Mt.normalBias,qt.shadowRadius=Mt.radius,qt.shadowMapSize=Mt.mapSize,qt.shadowCameraNear=Mt.camera.near,qt.shadowCameraFar=Mt.camera.far,h.pointShadow[D]=qt,h.pointShadowMap[D]=bt,h.pointShadowMatrix[D]=We.shadow.matrix,ee++}h.point[D]=rt,D++}else if(We.isHemisphereLight){const rt=a.get(We);rt.skyColor.copy(We.color).multiplyScalar(Oe*ce),rt.groundColor.copy(We.groundColor).multiplyScalar(Oe*ce),h.hemi[O]=rt,O++}}B>0&&(n.isWebGL2||!0===b.has("OES_texture_float_linear")?(h.rectAreaLTC1=Gt.LTC_FLOAT_1,h.rectAreaLTC2=Gt.LTC_FLOAT_2):!0===b.has("OES_texture_half_float_linear")?(h.rectAreaLTC1=Gt.LTC_HALF_1,h.rectAreaLTC2=Gt.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),h.ambient[0]=E,h.ambient[1]=N,h.ambient[2]=C;const he=h.hash;he.directionalLength===L&&he.pointLength===D&&he.spotLength===$&&he.rectAreaLength===B&&he.hemiLength===O&&he.numDirectionalShadows===q&&he.numPointShadows===ee&&he.numSpotShadows===Y||(h.directional.length=L,h.spot.length=$,h.rectArea.length=B,h.point.length=D,h.hemi.length=O,h.directionalShadow.length=q,h.directionalShadowMap.length=q,h.pointShadow.length=ee,h.pointShadowMap.length=ee,h.spotShadow.length=Y,h.spotShadowMap.length=Y,h.directionalShadowMatrix.length=q,h.pointShadowMatrix.length=ee,h.spotShadowMatrix.length=Y,he.directionalLength=L,he.pointLength=D,he.spotLength=$,he.rectAreaLength=B,he.hemiLength=O,he.numDirectionalShadows=q,he.numPointShadows=ee,he.numSpotShadows=Y,h.version=Es++)},setupView:function(T,M){let E=0,N=0,C=0,L=0,D=0;const $=M.matrixWorldInverse;for(let B=0,O=T.length;B<O;B++){const q=T[B];if(q.isDirectionalLight){const ee=h.directional[E];ee.direction.setFromMatrixPosition(q.matrixWorld),g.setFromMatrixPosition(q.target.matrixWorld),ee.direction.sub(g),ee.direction.transformDirection($),E++}else if(q.isSpotLight){const ee=h.spot[C];ee.position.setFromMatrixPosition(q.matrixWorld),ee.position.applyMatrix4($),ee.direction.setFromMatrixPosition(q.matrixWorld),g.setFromMatrixPosition(q.target.matrixWorld),ee.direction.sub(g),ee.direction.transformDirection($),C++}else if(q.isRectAreaLight){const ee=h.rectArea[L];ee.position.setFromMatrixPosition(q.matrixWorld),ee.position.applyMatrix4($),w.identity(),x.copy(q.matrixWorld),x.premultiply($),w.extractRotation(x),ee.halfWidth.set(.5*q.width,0,0),ee.halfHeight.set(0,.5*q.height,0),ee.halfWidth.applyMatrix4(w),ee.halfHeight.applyMatrix4(w),L++}else if(q.isPointLight){const ee=h.point[N];ee.position.setFromMatrixPosition(q.matrixWorld),ee.position.applyMatrix4($),N++}else if(q.isHemisphereLight){const ee=h.hemi[D];ee.direction.setFromMatrixPosition(q.matrixWorld),ee.direction.transformDirection($),ee.direction.normalize(),D++}}},state:h}}function $0(b,n){const a=new Kn(b,n),u=[],h=[];return{init:function(){u.length=0,h.length=0},state:{lightsArray:u,shadowsArray:h,lights:a},setupLights:function(g){a.setup(u,g)},setupLightsView:function(g){a.setupView(u,g)},pushLight:function(g){u.push(g)},pushShadow:function(g){h.push(g)}}}function Pb(b,n){let a=new WeakMap;return{get:function(u,h=0){let g;return!1===a.has(u)?(g=new $0(b,n),a.set(u,[g])):h>=a.get(u).length?(g=new $0(b,n),a.get(u).push(g)):g=a.get(u)[h],g},dispose:function(){a=new WeakMap}}}class Pf extends En{constructor(n){super(),this.type="MeshDepthMaterial",this.depthPacking=$u,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(n)}copy(n){return super.copy(n),this.depthPacking=n.depthPacking,this.map=n.map,this.alphaMap=n.alphaMap,this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this}}Pf.prototype.isMeshDepthMaterial=!0;class zf extends En{constructor(n){super(),this.type="MeshDistanceMaterial",this.referencePosition=new te,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(n)}copy(n){return super.copy(n),this.referencePosition.copy(n.referencePosition),this.nearDistance=n.nearDistance,this.farDistance=n.farDistance,this.map=n.map,this.alphaMap=n.alphaMap,this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this}}function Ig(b,n,a){let u=new qo;const h=new It,g=new It,x=new sr,w=new Pf({depthPacking:ih}),T=new zf,M={},E=a.maxTextureSize,N={0:Te,1:Q,2:Pe},C=new Ks({uniforms:{shadow_pass:{value:null},resolution:{value:new It},radius:{value:4},samples:{value:8}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\nuniform float samples;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),L=C.clone();L.defines.HORIZONTAL_PASS=1;const D=new wn;D.setAttribute("position",new On(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const $=new es(D,C),B=this;function O(Y,ce){const he=n.update($);C.uniforms.shadow_pass.value=Y.map.texture,C.uniforms.resolution.value=Y.mapSize,C.uniforms.radius.value=Y.radius,C.uniforms.samples.value=Y.blurSamples,b.setRenderTarget(Y.mapPass),b.clear(),b.renderBufferDirect(ce,null,he,C,$,null),L.uniforms.shadow_pass.value=Y.mapPass.texture,L.uniforms.resolution.value=Y.mapSize,L.uniforms.radius.value=Y.radius,L.uniforms.samples.value=Y.blurSamples,b.setRenderTarget(Y.map),b.clear(),b.renderBufferDirect(ce,null,he,L,$,null)}function q(Y,ce,he,Ie,Ae,We,$e){let Oe=null;const At=!0===Ie.isPointLight?Y.customDistanceMaterial:Y.customDepthMaterial;if(Oe=void 0!==At?At:!0===Ie.isPointLight?T:w,b.localClippingEnabled&&!0===he.clipShadows&&0!==he.clippingPlanes.length||he.displacementMap&&0!==he.displacementScale||he.alphaMap&&he.alphaTest>0){const bt=Oe.uuid,rt=he.uuid;let Mt=M[bt];void 0===Mt&&(Mt={},M[bt]=Mt);let qt=Mt[rt];void 0===qt&&(qt=Oe.clone(),Mt[rt]=qt),Oe=qt}return Oe.visible=he.visible,Oe.wireframe=he.wireframe,Oe.side=$e===K?null!==he.shadowSide?he.shadowSide:he.side:null!==he.shadowSide?he.shadowSide:N[he.side],Oe.alphaMap=he.alphaMap,Oe.alphaTest=he.alphaTest,Oe.clipShadows=he.clipShadows,Oe.clippingPlanes=he.clippingPlanes,Oe.clipIntersection=he.clipIntersection,Oe.displacementMap=he.displacementMap,Oe.displacementScale=he.displacementScale,Oe.displacementBias=he.displacementBias,Oe.wireframeLinewidth=he.wireframeLinewidth,Oe.linewidth=he.linewidth,!0===Ie.isPointLight&&!0===Oe.isMeshDistanceMaterial&&(Oe.referencePosition.setFromMatrixPosition(Ie.matrixWorld),Oe.nearDistance=Ae,Oe.farDistance=We),Oe}function ee(Y,ce,he,Ie,Ae){if(!1===Y.visible)return;if(Y.layers.test(ce.layers)&&(Y.isMesh||Y.isLine||Y.isPoints)&&(Y.castShadow||Y.receiveShadow&&Ae===K)&&(!Y.frustumCulled||u.intersectsObject(Y))){Y.modelViewMatrix.multiplyMatrices(he.matrixWorldInverse,Y.matrixWorld);const $e=n.update(Y),Oe=Y.material;if(Array.isArray(Oe)){const At=$e.groups;for(let bt=0,rt=At.length;bt<rt;bt++){const Mt=At[bt],qt=Oe[Mt.materialIndex];if(qt&&qt.visible){const Xt=q(Y,0,qt,Ie,he.near,he.far,Ae);b.renderBufferDirect(he,null,$e,Xt,Y,Mt)}}}else if(Oe.visible){const At=q(Y,0,Oe,Ie,he.near,he.far,Ae);b.renderBufferDirect(he,null,$e,At,Y,null)}}const We=Y.children;for(let $e=0,Oe=We.length;$e<Oe;$e++)ee(We[$e],ce,he,Ie,Ae)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=H,this.render=function(Y,ce,he){if(!1===B.enabled||!1===B.autoUpdate&&!1===B.needsUpdate||0===Y.length)return;const Ie=b.getRenderTarget(),Ae=b.getActiveCubeFace(),We=b.getActiveMipmapLevel(),$e=b.state;$e.setBlending(lt),$e.buffers.color.setClear(1,1,1,1),$e.buffers.depth.setTest(!0),$e.setScissorTest(!1);for(let Oe=0,At=Y.length;Oe<At;Oe++){const bt=Y[Oe],rt=bt.shadow;if(void 0===rt){console.warn("THREE.WebGLShadowMap:",bt,"has no shadow.");continue}if(!1===rt.autoUpdate&&!1===rt.needsUpdate)continue;h.copy(rt.mapSize);const Mt=rt.getFrameExtents();if(h.multiply(Mt),g.copy(rt.mapSize),(h.x>E||h.y>E)&&(h.x>E&&(g.x=Math.floor(E/Mt.x),h.x=g.x*Mt.x,rt.mapSize.x=g.x),h.y>E&&(g.y=Math.floor(E/Mt.y),h.y=g.y*Mt.y,rt.mapSize.y=g.y)),null===rt.map&&!rt.isPointLightShadow&&this.type===K){const Xt={minFilter:Zn,magFilter:Zn,format:Ds};rt.map=new Si(h.x,h.y,Xt),rt.map.texture.name=bt.name+".shadowMap",rt.mapPass=new Si(h.x,h.y,Xt),rt.camera.updateProjectionMatrix()}null===rt.map&&(rt.map=new Si(h.x,h.y,{minFilter:or,magFilter:or,format:Ds}),rt.map.texture.name=bt.name+".shadowMap",rt.camera.updateProjectionMatrix()),b.setRenderTarget(rt.map),b.clear();const qt=rt.getViewportCount();for(let Xt=0;Xt<qt;Xt++){const nn=rt.getViewport(Xt);x.set(g.x*nn.x,g.y*nn.y,g.x*nn.z,g.y*nn.w),$e.viewport(x),rt.updateMatrices(bt,Xt),u=rt.getFrustum(),ee(ce,he,rt.camera,bt,this.type)}rt.isPointLightShadow||this.type!==K||O(rt,he),rt.needsUpdate=!1}B.needsUpdate=!1,b.setRenderTarget(Ie,Ae,We)}}function po(b,n,a){const u=a.isWebGL2,h=new function(){let re=!1;const ze=new sr;let ft=null;const et=new sr(0,0,0,0);return{setMask:function(gt){ft===gt||re||(b.colorMask(gt,gt,gt,gt),ft=gt)},setLocked:function(gt){re=gt},setClear:function(gt,Lt,Ut,tn,me){!0===me&&(gt*=tn,Lt*=tn,Ut*=tn),ze.set(gt,Lt,Ut,tn),!1===et.equals(ze)&&(b.clearColor(gt,Lt,Ut,tn),et.copy(ze))},reset:function(){re=!1,ft=null,et.set(-1,0,0,0)}}},g=new function(){let re=!1,ze=null,ft=null,et=null;return{setTest:function(gt){gt?le(2929):fe(2929)},setMask:function(gt){ze===gt||re||(b.depthMask(gt),ze=gt)},setFunc:function(gt){if(ft!==gt){if(gt)switch(gt){case Qa:b.depthFunc(512);break;case ko:b.depthFunc(519);break;case Oc:b.depthFunc(513);break;default:b.depthFunc(515);break;case Sa:b.depthFunc(514);break;case bu:b.depthFunc(518);break;case oi:b.depthFunc(516);break;case kl:b.depthFunc(517)}else b.depthFunc(515);ft=gt}},setLocked:function(gt){re=gt},setClear:function(gt){et!==gt&&(b.clearDepth(gt),et=gt)},reset:function(){re=!1,ze=null,ft=null,et=null}}},x=new function(){let re=!1,ze=null,ft=null,et=null,gt=null,Lt=null,Ut=null,tn=null,me=null;return{setTest:function(Ht){re||(Ht?le(2960):fe(2960))},setMask:function(Ht){ze===Ht||re||(b.stencilMask(Ht),ze=Ht)},setFunc:function(Ht,us,Yn){ft===Ht&&et===us&&gt===Yn||(b.stencilFunc(Ht,us,Yn),ft=Ht,et=us,gt=Yn)},setOp:function(Ht,us,Yn){Lt===Ht&&Ut===us&&tn===Yn||(b.stencilOp(Ht,us,Yn),Lt=Ht,Ut=us,tn=Yn)},setLocked:function(Ht){re=Ht},setClear:function(Ht){me!==Ht&&(b.clearStencil(Ht),me=Ht)},reset:function(){re=!1,ze=null,ft=null,et=null,gt=null,Lt=null,Ut=null,tn=null,me=null}}};let w={},T=null,M={},E=null,N=!1,C=null,L=null,D=null,$=null,B=null,O=null,q=null,ee=!1,Y=null,ce=null,he=null,Ie=null,Ae=null;const We=b.getParameter(35661);let $e=!1,Oe=0;const At=b.getParameter(7938);-1!==At.indexOf("WebGL")?(Oe=parseFloat(/^WebGL (\d)/.exec(At)[1]),$e=Oe>=1):-1!==At.indexOf("OpenGL ES")&&(Oe=parseFloat(/^OpenGL ES (\d)/.exec(At)[1]),$e=Oe>=2);let bt=null,rt={};const Mt=b.getParameter(3088),qt=b.getParameter(2978),Xt=(new sr).fromArray(Mt),nn=(new sr).fromArray(qt);function vn(re,ze,ft){const et=new Uint8Array(4),gt=b.createTexture();b.bindTexture(re,gt),b.texParameteri(re,10241,9728),b.texParameteri(re,10240,9728);for(let Lt=0;Lt<ft;Lt++)b.texImage2D(ze+Lt,0,6408,1,1,0,6408,5121,et);return gt}const fn={};function le(re){!0!==w[re]&&(b.enable(re),w[re]=!0)}function fe(re){!1!==w[re]&&(b.disable(re),w[re]=!1)}fn[3553]=vn(3553,3553,1),fn[34067]=vn(34067,34069,6),h.setClear(0,0,0,1),g.setClear(1),x.setClear(0),le(2929),g.setFunc(_l),kt(!1),Vt(ve),le(2884),st(lt);const it={[Z]:32774,[Fe]:32778,[zt]:32779};if(u)it[Jt]=32775,it[on]=32776;else{const re=n.get("EXT_blend_minmax");null!==re&&(it[Jt]=re.MIN_EXT,it[on]=re.MAX_EXT)}const ut={[mn]:0,[bn]:1,[yr]:768,[Rr]:770,[$c]:776,[Ml]:774,[Ls]:772,[kr]:769,[is]:771,[xu]:775,[_o]:773};function st(re,ze,ft,et,gt,Lt,Ut,tn){if(re!==lt){if(!1===N&&(le(3042),N=!0),re===Ze)gt=gt||ze,Lt=Lt||ft,Ut=Ut||et,ze===L&&gt===B||(b.blendEquationSeparate(it[ze],it[gt]),L=ze,B=gt),ft===D&&et===$&&Lt===O&&Ut===q||(b.blendFuncSeparate(ut[ft],ut[et],ut[Lt],ut[Ut]),D=ft,$=et,O=Lt,q=Ut),C=re,ee=null;else if(re!==C||tn!==ee){if(L===Z&&B===Z||(b.blendEquation(32774),L=Z,B=Z),tn)switch(re){case yt:b.blendFuncSeparate(1,771,1,771);break;case wt:b.blendFunc(1,1);break;case ht:b.blendFuncSeparate(0,0,769,771);break;case $t:b.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",re)}else switch(re){case yt:b.blendFuncSeparate(770,771,1,771);break;case wt:b.blendFunc(770,1);break;case ht:b.blendFunc(0,769);break;case $t:b.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",re)}D=null,$=null,O=null,q=null,C=re,ee=tn}}else!0===N&&(fe(3042),N=!1)}function kt(re){Y!==re&&(b.frontFace(re?2304:2305),Y=re)}function Vt(re){re!==ue?(le(2884),re!==ce&&b.cullFace(re===ve?1029:re===ne?1028:1032)):fe(2884),ce=re}function Ot(re,ze,ft){re?(le(32823),Ie===ze&&Ae===ft||(b.polygonOffset(ze,ft),Ie=ze,Ae=ft)):fe(32823)}function Ve(re){void 0===re&&(re=33984+We-1),bt!==re&&(b.activeTexture(re),bt=re)}return{buffers:{color:h,depth:g,stencil:x},enable:le,disable:fe,bindFramebuffer:function(re,ze){return null===ze&&null!==T&&(ze=T),M[re]!==ze&&(b.bindFramebuffer(re,ze),M[re]=ze,u&&(36009===re&&(M[36160]=ze),36160===re&&(M[36009]=ze)),!0)},bindXRFramebuffer:function(re){re!==T&&(b.bindFramebuffer(36160,re),T=re)},useProgram:function(re){return E!==re&&(b.useProgram(re),E=re,!0)},setBlending:st,setMaterial:function(re,ze){re.side===Pe?fe(2884):le(2884);let ft=re.side===Te;ze&&(ft=!ft),kt(ft),re.blending===yt&&!1===re.transparent?st(lt):st(re.blending,re.blendEquation,re.blendSrc,re.blendDst,re.blendEquationAlpha,re.blendSrcAlpha,re.blendDstAlpha,re.premultipliedAlpha),g.setFunc(re.depthFunc),g.setTest(re.depthTest),g.setMask(re.depthWrite),h.setMask(re.colorWrite);const et=re.stencilWrite;x.setTest(et),et&&(x.setMask(re.stencilWriteMask),x.setFunc(re.stencilFunc,re.stencilRef,re.stencilFuncMask),x.setOp(re.stencilFail,re.stencilZFail,re.stencilZPass)),Ot(re.polygonOffset,re.polygonOffsetFactor,re.polygonOffsetUnits),!0===re.alphaToCoverage?le(32926):fe(32926)},setFlipSided:kt,setCullFace:Vt,setLineWidth:function(re){re!==he&&($e&&b.lineWidth(re),he=re)},setPolygonOffset:Ot,setScissorTest:function(re){re?le(3089):fe(3089)},activeTexture:Ve,bindTexture:function(re,ze){null===bt&&Ve();let ft=rt[bt];void 0===ft&&(ft={type:void 0,texture:void 0},rt[bt]=ft),ft.type===re&&ft.texture===ze||(b.bindTexture(re,ze||fn[re]),ft.type=re,ft.texture=ze)},unbindTexture:function(){const re=rt[bt];void 0!==re&&void 0!==re.type&&(b.bindTexture(re.type,null),re.type=void 0,re.texture=void 0)},compressedTexImage2D:function(){try{b.compressedTexImage2D.apply(b,arguments)}catch(re){console.error("THREE.WebGLState:",re)}},texImage2D:function(){try{b.texImage2D.apply(b,arguments)}catch(re){console.error("THREE.WebGLState:",re)}},texImage3D:function(){try{b.texImage3D.apply(b,arguments)}catch(re){console.error("THREE.WebGLState:",re)}},scissor:function(re){!1===Xt.equals(re)&&(b.scissor(re.x,re.y,re.z,re.w),Xt.copy(re))},viewport:function(re){!1===nn.equals(re)&&(b.viewport(re.x,re.y,re.z,re.w),nn.copy(re))},reset:function(){b.disable(3042),b.disable(2884),b.disable(2929),b.disable(32823),b.disable(3089),b.disable(2960),b.disable(32926),b.blendEquation(32774),b.blendFunc(1,0),b.blendFuncSeparate(1,0,1,0),b.colorMask(!0,!0,!0,!0),b.clearColor(0,0,0,0),b.depthMask(!0),b.depthFunc(513),b.clearDepth(1),b.stencilMask(4294967295),b.stencilFunc(519,0,4294967295),b.stencilOp(7680,7680,7680),b.clearStencil(0),b.cullFace(1029),b.frontFace(2305),b.polygonOffset(0,0),b.activeTexture(33984),b.bindFramebuffer(36160,null),!0===u&&(b.bindFramebuffer(36009,null),b.bindFramebuffer(36008,null)),b.useProgram(null),b.lineWidth(1),b.scissor(0,0,b.canvas.width,b.canvas.height),b.viewport(0,0,b.canvas.width,b.canvas.height),w={},bt=null,rt={},T=null,M={},E=null,N=!1,C=null,L=null,D=null,$=null,B=null,O=null,q=null,ee=!1,Y=null,ce=null,he=null,Ie=null,Ae=null,Xt.set(0,0,b.canvas.width,b.canvas.height),nn.set(0,0,b.canvas.width,b.canvas.height),h.reset(),g.reset(),x.reset()}}}function Bf(b,n,a,u,h,g,x){const w=h.isWebGL2,T=h.maxTextures,M=h.maxCubemapSize,E=h.maxTextureSize,N=h.maxSamples,C=new WeakMap;let L,D=!1;try{D="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(le){}function $(le,fe){return D?new OffscreenCanvas(le,fe):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function B(le,fe,it,ut){let st=1;if((le.width>ut||le.height>ut)&&(st=ut/Math.max(le.width,le.height)),st<1||!0===fe){if("undefined"!=typeof HTMLImageElement&&le instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&le instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&le instanceof ImageBitmap){const kt=fe?np:Math.floor,Vt=kt(st*le.width),Ot=kt(st*le.height);void 0===L&&(L=$(Vt,Ot));const Ve=it?$(Vt,Ot):L;return Ve.width=Vt,Ve.height=Ot,Ve.getContext("2d").drawImage(le,0,0,Vt,Ot),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+le.width+"x"+le.height+") to ("+Vt+"x"+Ot+")."),Ve}return"data"in le&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+le.width+"x"+le.height+")."),le}return le}function O(le){return mh(le.width)&&mh(le.height)}function q(le,fe){return le.generateMipmaps&&fe&&le.minFilter!==or&&le.minFilter!==Zn}function ee(le,fe,it,ut,st=1){b.generateMipmap(le),u.get(fe).__maxMipLevel=Math.log2(Math.max(it,ut,st))}function Y(le,fe,it){if(!1===w)return fe;if(null!==le){if(void 0!==b[le])return b[le];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+le+"'")}let ut=fe;return 6403===fe&&(5126===it&&(ut=33326),5131===it&&(ut=33325),5121===it&&(ut=33321)),6407===fe&&(5126===it&&(ut=34837),5131===it&&(ut=34843),5121===it&&(ut=32849)),6408===fe&&(5126===it&&(ut=34836),5131===it&&(ut=34842),5121===it&&(ut=32856)),33325!==ut&&33326!==ut&&34842!==ut&&34836!==ut||n.get("EXT_color_buffer_float"),ut}function ce(le){return le===or||le===El||le===Yi?9728:9729}function he(le){const fe=le.target;fe.removeEventListener("dispose",he),function(it){const ut=u.get(it);void 0!==ut.__webglInit&&(b.deleteTexture(ut.__webglTexture),u.remove(it))}(fe),fe.isVideoTexture&&C.delete(fe),x.memory.textures--}function Ie(le){const fe=le.target;fe.removeEventListener("dispose",Ie),function(it){const ut=it.texture,st=u.get(it),kt=u.get(ut);if(it){if(void 0!==kt.__webglTexture&&(b.deleteTexture(kt.__webglTexture),x.memory.textures--),it.depthTexture&&it.depthTexture.dispose(),it.isWebGLCubeRenderTarget)for(let Vt=0;Vt<6;Vt++)b.deleteFramebuffer(st.__webglFramebuffer[Vt]),st.__webglDepthbuffer&&b.deleteRenderbuffer(st.__webglDepthbuffer[Vt]);else b.deleteFramebuffer(st.__webglFramebuffer),st.__webglDepthbuffer&&b.deleteRenderbuffer(st.__webglDepthbuffer),st.__webglMultisampledFramebuffer&&b.deleteFramebuffer(st.__webglMultisampledFramebuffer),st.__webglColorRenderbuffer&&b.deleteRenderbuffer(st.__webglColorRenderbuffer),st.__webglDepthRenderbuffer&&b.deleteRenderbuffer(st.__webglDepthRenderbuffer);if(it.isWebGLMultipleRenderTargets)for(let Vt=0,Ot=ut.length;Vt<Ot;Vt++){const Ve=u.get(ut[Vt]);Ve.__webglTexture&&(b.deleteTexture(Ve.__webglTexture),x.memory.textures--),u.remove(ut[Vt])}u.remove(ut),u.remove(it)}}(fe)}let Ae=0;function We(le,fe){const it=u.get(le);if(le.isVideoTexture&&function(ut){const st=x.render.frame;C.get(ut)!==st&&(C.set(ut,st),ut.update())}(le),le.version>0&&it.__version!==le.version){const ut=le.image;if(void 0===ut)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==ut.complete)return void Mt(it,le,fe);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}a.activeTexture(33984+fe),a.bindTexture(3553,it.__webglTexture)}function $e(le,fe){const it=u.get(le);le.version>0&&it.__version!==le.version?function(ut,st,kt){if(6!==st.image.length)return;rt(ut,st),a.activeTexture(33984+kt),a.bindTexture(34067,ut.__webglTexture),b.pixelStorei(37440,st.flipY),b.pixelStorei(37441,st.premultiplyAlpha),b.pixelStorei(3317,st.unpackAlignment),b.pixelStorei(37443,0);const Vt=st&&(st.isCompressedTexture||st.image[0].isCompressedTexture),Ot=st.image[0]&&st.image[0].isDataTexture,Ve=[];for(let Ut=0;Ut<6;Ut++)Ve[Ut]=Vt||Ot?Ot?st.image[Ut].image:st.image[Ut]:B(st.image[Ut],!1,!0,M);const re=Ve[0],ze=O(re)||w,ft=g.convert(st.format),et=g.convert(st.type),gt=Y(st.internalFormat,ft,et);let Lt;if(bt(34067,st,ze),Vt){for(let Ut=0;Ut<6;Ut++){Lt=Ve[Ut].mipmaps;for(let tn=0;tn<Lt.length;tn++){const me=Lt[tn];st.format!==Ds&&st.format!==_a?null!==ft?a.compressedTexImage2D(34069+Ut,tn,gt,me.width,me.height,0,me.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):a.texImage2D(34069+Ut,tn,gt,me.width,me.height,0,ft,et,me.data)}}ut.__maxMipLevel=Lt.length-1}else{Lt=st.mipmaps;for(let Ut=0;Ut<6;Ut++)if(Ot){a.texImage2D(34069+Ut,0,gt,Ve[Ut].width,Ve[Ut].height,0,ft,et,Ve[Ut].data);for(let tn=0;tn<Lt.length;tn++){const me=Lt[tn].image[Ut].image;a.texImage2D(34069+Ut,tn+1,gt,me.width,me.height,0,ft,et,me.data)}}else{a.texImage2D(34069+Ut,0,gt,ft,et,Ve[Ut]);for(let tn=0;tn<Lt.length;tn++)a.texImage2D(34069+Ut,tn+1,gt,ft,et,Lt[tn].image[Ut])}ut.__maxMipLevel=Lt.length}q(st,ze)&&ee(34067,st,re.width,re.height),ut.__version=st.version,st.onUpdate&&st.onUpdate(st)}(it,le,fe):(a.activeTexture(33984+fe),a.bindTexture(34067,it.__webglTexture))}const Oe={[yn]:10497,[Ln]:33071,[Hr]:33648},At={[or]:9728,[El]:9984,[Yi]:9986,[Zn]:9729,[uf]:9985,[Eo]:9987};function bt(le,fe,it){if(it?(b.texParameteri(le,10242,Oe[fe.wrapS]),b.texParameteri(le,10243,Oe[fe.wrapT]),32879!==le&&35866!==le||b.texParameteri(le,32882,Oe[fe.wrapR]),b.texParameteri(le,10240,At[fe.magFilter]),b.texParameteri(le,10241,At[fe.minFilter])):(b.texParameteri(le,10242,33071),b.texParameteri(le,10243,33071),32879!==le&&35866!==le||b.texParameteri(le,32882,33071),fe.wrapS===Ln&&fe.wrapT===Ln||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),b.texParameteri(le,10240,ce(fe.magFilter)),b.texParameteri(le,10241,ce(fe.minFilter)),fe.minFilter!==or&&fe.minFilter!==Zn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===n.has("EXT_texture_filter_anisotropic")){const ut=n.get("EXT_texture_filter_anisotropic");if(fe.type===Vs&&!1===n.has("OES_texture_float_linear")||!1===w&&fe.type===no&&!1===n.has("OES_texture_half_float_linear"))return;(fe.anisotropy>1||u.get(fe).__currentAnisotropy)&&(b.texParameterf(le,ut.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(fe.anisotropy,h.getMaxAnisotropy())),u.get(fe).__currentAnisotropy=fe.anisotropy)}}function rt(le,fe){void 0===le.__webglInit&&(le.__webglInit=!0,fe.addEventListener("dispose",he),le.__webglTexture=b.createTexture(),x.memory.textures++)}function Mt(le,fe,it){let ut=3553;fe.isDataTexture2DArray&&(ut=35866),fe.isDataTexture3D&&(ut=32879),rt(le,fe),a.activeTexture(33984+it),a.bindTexture(ut,le.__webglTexture),b.pixelStorei(37440,fe.flipY),b.pixelStorei(37441,fe.premultiplyAlpha),b.pixelStorei(3317,fe.unpackAlignment),b.pixelStorei(37443,0);const st=(et=fe,!w&&(et.wrapS!==Ln||et.wrapT!==Ln||et.minFilter!==or&&et.minFilter!==Zn)&&!1===O(fe.image)),kt=B(fe.image,st,!1,E),Vt=O(kt)||w,Ot=g.convert(fe.format);var et;let Ve,re=g.convert(fe.type),ze=Y(fe.internalFormat,Ot,re);bt(ut,fe,Vt);const ft=fe.mipmaps;if(fe.isDepthTexture)ze=6402,w?ze=fe.type===Vs?36012:fe.type===to?33190:fe.type===Il?35056:33189:fe.type===Vs&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),fe.format===Zr&&6402===ze&&fe.type!==zc&&fe.type!==to&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),fe.type=zc,re=g.convert(fe.type)),fe.format===Bc&&6402===ze&&(ze=34041,fe.type!==Il&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),fe.type=Il,re=g.convert(fe.type))),a.texImage2D(3553,0,ze,kt.width,kt.height,0,Ot,re,null);else if(fe.isDataTexture)if(ft.length>0&&Vt){for(let et=0,gt=ft.length;et<gt;et++)Ve=ft[et],a.texImage2D(3553,et,ze,Ve.width,Ve.height,0,Ot,re,Ve.data);fe.generateMipmaps=!1,le.__maxMipLevel=ft.length-1}else a.texImage2D(3553,0,ze,kt.width,kt.height,0,Ot,re,kt.data),le.__maxMipLevel=0;else if(fe.isCompressedTexture){for(let et=0,gt=ft.length;et<gt;et++)Ve=ft[et],fe.format!==Ds&&fe.format!==_a?null!==Ot?a.compressedTexImage2D(3553,et,ze,Ve.width,Ve.height,0,Ve.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):a.texImage2D(3553,et,ze,Ve.width,Ve.height,0,Ot,re,Ve.data);le.__maxMipLevel=ft.length-1}else if(fe.isDataTexture2DArray)a.texImage3D(35866,0,ze,kt.width,kt.height,kt.depth,0,Ot,re,kt.data),le.__maxMipLevel=0;else if(fe.isDataTexture3D)a.texImage3D(32879,0,ze,kt.width,kt.height,kt.depth,0,Ot,re,kt.data),le.__maxMipLevel=0;else if(ft.length>0&&Vt){for(let et=0,gt=ft.length;et<gt;et++)Ve=ft[et],a.texImage2D(3553,et,ze,Ot,re,Ve);fe.generateMipmaps=!1,le.__maxMipLevel=ft.length-1}else a.texImage2D(3553,0,ze,Ot,re,kt),le.__maxMipLevel=0;q(fe,Vt)&&ee(ut,fe,kt.width,kt.height),le.__version=fe.version,fe.onUpdate&&fe.onUpdate(fe)}function qt(le,fe,it,ut,st){const kt=g.convert(it.format),Vt=g.convert(it.type),Ot=Y(it.internalFormat,kt,Vt);32879===st||35866===st?a.texImage3D(st,0,Ot,fe.width,fe.height,fe.depth,0,kt,Vt,null):a.texImage2D(st,0,Ot,fe.width,fe.height,0,kt,Vt,null),a.bindFramebuffer(36160,le),b.framebufferTexture2D(36160,ut,st,u.get(it).__webglTexture,0),a.bindFramebuffer(36160,null)}function Xt(le,fe,it){if(b.bindRenderbuffer(36161,le),fe.depthBuffer&&!fe.stencilBuffer){let ut=33189;if(it){const st=fe.depthTexture;st&&st.isDepthTexture&&(st.type===Vs?ut=36012:st.type===to&&(ut=33190));const kt=nn(fe);b.renderbufferStorageMultisample(36161,kt,ut,fe.width,fe.height)}else b.renderbufferStorage(36161,ut,fe.width,fe.height);b.framebufferRenderbuffer(36160,36096,36161,le)}else if(fe.depthBuffer&&fe.stencilBuffer){if(it){const ut=nn(fe);b.renderbufferStorageMultisample(36161,ut,35056,fe.width,fe.height)}else b.renderbufferStorage(36161,34041,fe.width,fe.height);b.framebufferRenderbuffer(36160,33306,36161,le)}else{const ut=!0===fe.isWebGLMultipleRenderTargets?fe.texture[0]:fe.texture,st=g.convert(ut.format),kt=g.convert(ut.type),Vt=Y(ut.internalFormat,st,kt);if(it){const Ot=nn(fe);b.renderbufferStorageMultisample(36161,Ot,Vt,fe.width,fe.height)}else b.renderbufferStorage(36161,Vt,fe.width,fe.height)}b.bindRenderbuffer(36161,null)}function nn(le){return w&&le.isWebGLMultisampleRenderTarget?Math.min(N,le.samples):0}let vn=!1,fn=!1;this.allocateTextureUnit=function(){const le=Ae;return le>=T&&console.warn("THREE.WebGLTextures: Trying to use "+le+" texture units while this GPU supports only "+T),Ae+=1,le},this.resetTextureUnits=function(){Ae=0},this.setTexture2D=We,this.setTexture2DArray=function(le,fe){const it=u.get(le);le.version>0&&it.__version!==le.version?Mt(it,le,fe):(a.activeTexture(33984+fe),a.bindTexture(35866,it.__webglTexture))},this.setTexture3D=function(le,fe){const it=u.get(le);le.version>0&&it.__version!==le.version?Mt(it,le,fe):(a.activeTexture(33984+fe),a.bindTexture(32879,it.__webglTexture))},this.setTextureCube=$e,this.setupRenderTarget=function(le){const fe=le.texture,it=u.get(le),ut=u.get(fe);le.addEventListener("dispose",Ie),!0!==le.isWebGLMultipleRenderTargets&&(ut.__webglTexture=b.createTexture(),ut.__version=fe.version,x.memory.textures++);const st=!0===le.isWebGLCubeRenderTarget,kt=!0===le.isWebGLMultipleRenderTargets,Vt=!0===le.isWebGLMultisampleRenderTarget,Ot=fe.isDataTexture3D||fe.isDataTexture2DArray,Ve=O(le)||w;if(!w||fe.format!==_a||fe.type!==Vs&&fe.type!==no||(fe.format=Ds,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),st){it.__webglFramebuffer=[];for(let re=0;re<6;re++)it.__webglFramebuffer[re]=b.createFramebuffer()}else if(it.__webglFramebuffer=b.createFramebuffer(),kt)if(h.drawBuffers){const re=le.texture;for(let ze=0,ft=re.length;ze<ft;ze++){const et=u.get(re[ze]);void 0===et.__webglTexture&&(et.__webglTexture=b.createTexture(),x.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(Vt)if(w){it.__webglMultisampledFramebuffer=b.createFramebuffer(),it.__webglColorRenderbuffer=b.createRenderbuffer(),b.bindRenderbuffer(36161,it.__webglColorRenderbuffer);const re=g.convert(fe.format),ze=g.convert(fe.type),ft=Y(fe.internalFormat,re,ze),et=nn(le);b.renderbufferStorageMultisample(36161,et,ft,le.width,le.height),a.bindFramebuffer(36160,it.__webglMultisampledFramebuffer),b.framebufferRenderbuffer(36160,36064,36161,it.__webglColorRenderbuffer),b.bindRenderbuffer(36161,null),le.depthBuffer&&(it.__webglDepthRenderbuffer=b.createRenderbuffer(),Xt(it.__webglDepthRenderbuffer,le,!0)),a.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(st){a.bindTexture(34067,ut.__webglTexture),bt(34067,fe,Ve);for(let re=0;re<6;re++)qt(it.__webglFramebuffer[re],le,fe,36064,34069+re);q(fe,Ve)&&ee(34067,fe,le.width,le.height),a.unbindTexture()}else if(kt){const re=le.texture;for(let ze=0,ft=re.length;ze<ft;ze++){const et=re[ze],gt=u.get(et);a.bindTexture(3553,gt.__webglTexture),bt(3553,et,Ve),qt(it.__webglFramebuffer,le,et,36064+ze,3553),q(et,Ve)&&ee(3553,et,le.width,le.height)}a.unbindTexture()}else{let re=3553;Ot&&(w?re=fe.isDataTexture3D?32879:35866:console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),a.bindTexture(re,ut.__webglTexture),bt(re,fe,Ve),qt(it.__webglFramebuffer,le,fe,36064,re),q(fe,Ve)&&ee(re,fe,le.width,le.height,le.depth),a.unbindTexture()}le.depthBuffer&&function(re){const ze=u.get(re),ft=!0===re.isWebGLCubeRenderTarget;if(re.depthTexture){if(ft)throw new Error("target.depthTexture not supported in Cube render targets");!function(et,gt){if(gt&&gt.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(a.bindFramebuffer(36160,et),!gt.depthTexture||!gt.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");u.get(gt.depthTexture).__webglTexture&&gt.depthTexture.image.width===gt.width&&gt.depthTexture.image.height===gt.height||(gt.depthTexture.image.width=gt.width,gt.depthTexture.image.height=gt.height,gt.depthTexture.needsUpdate=!0),We(gt.depthTexture,0);const Lt=u.get(gt.depthTexture).__webglTexture;if(gt.depthTexture.format===Zr)b.framebufferTexture2D(36160,36096,3553,Lt,0);else{if(gt.depthTexture.format!==Bc)throw new Error("Unknown depthTexture format");b.framebufferTexture2D(36160,33306,3553,Lt,0)}}(ze.__webglFramebuffer,re)}else if(ft){ze.__webglDepthbuffer=[];for(let et=0;et<6;et++)a.bindFramebuffer(36160,ze.__webglFramebuffer[et]),ze.__webglDepthbuffer[et]=b.createRenderbuffer(),Xt(ze.__webglDepthbuffer[et],re,!1)}else a.bindFramebuffer(36160,ze.__webglFramebuffer),ze.__webglDepthbuffer=b.createRenderbuffer(),Xt(ze.__webglDepthbuffer,re,!1);a.bindFramebuffer(36160,null)}(le)},this.updateRenderTargetMipmap=function(le){const fe=O(le)||w,it=!0===le.isWebGLMultipleRenderTargets?le.texture:[le.texture];for(let ut=0,st=it.length;ut<st;ut++){const kt=it[ut];if(q(kt,fe)){const Vt=le.isWebGLCubeRenderTarget?34067:3553,Ot=u.get(kt).__webglTexture;a.bindTexture(Vt,Ot),ee(Vt,kt,le.width,le.height),a.unbindTexture()}}},this.updateMultisampleRenderTarget=function(le){if(le.isWebGLMultisampleRenderTarget)if(w){const fe=le.width,it=le.height;let ut=16384;le.depthBuffer&&(ut|=256),le.stencilBuffer&&(ut|=1024);const st=u.get(le);a.bindFramebuffer(36008,st.__webglMultisampledFramebuffer),a.bindFramebuffer(36009,st.__webglFramebuffer),b.blitFramebuffer(0,0,fe,it,0,0,fe,it,ut,9728),a.bindFramebuffer(36008,null),a.bindFramebuffer(36009,st.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(le,fe){le&&le.isWebGLRenderTarget&&(!1===vn&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),vn=!0),le=le.texture),We(le,fe)},this.safeSetTextureCube=function(le,fe){le&&le.isWebGLCubeRenderTarget&&(!1===fn&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),fn=!0),le=le.texture),$e(le,fe)}}function ln(b,n,a){const u=a.isWebGL2;return{convert:function(h){let g;if(h===eo)return 5121;if(h===hn)return 32819;if(h===Zm)return 32820;if(h===wi)return 33635;if(h===Ym)return 5120;if(h===Ma)return 5122;if(h===zc)return 5123;if(h===Rd)return 5124;if(h===to)return 5125;if(h===Vs)return 5126;if(h===no)return u?5131:(g=n.get("OES_texture_half_float"),null!==g?g.HALF_FLOAT_OES:null);if(h===hs)return 6406;if(h===_a)return 6407;if(h===Ds)return 6408;if(h===Zi)return 6409;if(h===wu)return 6410;if(h===Zr)return 6402;if(h===Bc)return 34041;if(h===Jm)return 6403;if(h===qy)return 36244;if(h===nt)return 33319;if(h===cf)return 33320;if(h===hf)return 36248;if(h===Qm)return 36249;if(h===Ld||h===Su||h===Nl||h===Al){if(g=n.get("WEBGL_compressed_texture_s3tc"),null===g)return null;if(h===Ld)return g.COMPRESSED_RGB_S3TC_DXT1_EXT;if(h===Su)return g.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(h===Nl)return g.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(h===Al)return g.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(h===Io||h===Tu||h===Uc||h===Vc){if(g=n.get("WEBGL_compressed_texture_pvrtc"),null===g)return null;if(h===Io)return g.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(h===Tu)return g.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(h===Uc)return g.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(h===Vc)return g.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(h===Wc)return g=n.get("WEBGL_compressed_texture_etc1"),null!==g?g.COMPRESSED_RGB_ETC1_WEBGL:null;if((h===Mu||h===Rl)&&(g=n.get("WEBGL_compressed_texture_etc"),null!==g)){if(h===Mu)return g.COMPRESSED_RGB8_ETC2;if(h===Rl)return g.COMPRESSED_RGBA8_ETC2_EAC}return h===_u||h===ku||h===Eu||h===Iu||h===Gc||h===Dd||h===Hc||h===Fd||h===jc||h===qc||h===$d||h===eg||h===df||h===Cu||h===Au||h===Od||h===Xc||h===Kc||h===Yc||h===Pd||h===Zc||h===Jc||h===zd||h===Bd||h===Ru||h===Lu||h===Qc||h===Ud?(g=n.get("WEBGL_compressed_texture_astc"),null!==g?h:null):h===Nu?(g=n.get("EXT_texture_compression_bptc"),null!==g?h:null):h===Il?u?34042:(g=n.get("WEBGL_depth_texture"),null!==g?g.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}zf.prototype.isMeshDistanceMaterial=!0;class Ua extends cr{constructor(n=[]){super(),this.cameras=n}}Ua.prototype.isArrayCamera=!0;class fo extends Bn{constructor(){super(),this.type="Group"}}fo.prototype.isGroup=!0;const Vh={type:"move"};class Wh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new fo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new fo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new te,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new te),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new fo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new te,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new te),this._grip}dispatchEvent(n){return null!==this._targetRay&&this._targetRay.dispatchEvent(n),null!==this._grip&&this._grip.dispatchEvent(n),null!==this._hand&&this._hand.dispatchEvent(n),this}disconnect(n){return this.dispatchEvent({type:"disconnected",data:n}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(n,a,u){let h=null,g=null,x=null;const w=this._targetRay,T=this._grip,M=this._hand;if(n&&"visible-blurred"!==a.session.visibilityState)if(null!==w&&(h=a.getPose(n.targetRaySpace,u),null!==h&&(w.matrix.fromArray(h.transform.matrix),w.matrix.decompose(w.position,w.rotation,w.scale),h.linearVelocity?(w.hasLinearVelocity=!0,w.linearVelocity.copy(h.linearVelocity)):w.hasLinearVelocity=!1,h.angularVelocity?(w.hasAngularVelocity=!0,w.angularVelocity.copy(h.angularVelocity)):w.hasAngularVelocity=!1,this.dispatchEvent(Vh))),M&&n.hand){x=!0;for(const $ of n.hand.values()){const B=a.getJointPose($,u);if(void 0===M.joints[$.jointName]){const q=new fo;q.matrixAutoUpdate=!1,q.visible=!1,M.joints[$.jointName]=q,M.add(q)}const O=M.joints[$.jointName];null!==B&&(O.matrix.fromArray(B.transform.matrix),O.matrix.decompose(O.position,O.rotation,O.scale),O.jointRadius=B.radius),O.visible=null!==B}const C=M.joints["index-finger-tip"].position.distanceTo(M.joints["thumb-tip"].position),L=.02,D=.005;M.inputState.pinching&&C>L+D?(M.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:n.handedness,target:this})):!M.inputState.pinching&&C<=L-D&&(M.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:n.handedness,target:this}))}else null!==T&&n.gripSpace&&(g=a.getPose(n.gripSpace,u),null!==g&&(T.matrix.fromArray(g.transform.matrix),T.matrix.decompose(T.position,T.rotation,T.scale),g.linearVelocity?(T.hasLinearVelocity=!0,T.linearVelocity.copy(g.linearVelocity)):T.hasLinearVelocity=!1,g.angularVelocity?(T.hasAngularVelocity=!0,T.angularVelocity.copy(g.angularVelocity)):T.hasAngularVelocity=!1));return null!==w&&(w.visible=null!==h),null!==T&&(T.visible=null!==g),null!==M&&(M.visible=null!==x),this}}class Ko extends Ji{constructor(n,a){super();const u=this,h=n.state;let g=null,x=1,w=null,T="local-floor",M=null,E=null,N=null,C=null,L=null,D=!1,$=null,B=null,O=null,q=null,ee=null,Y=null;const ce=[],he=new Map,Ie=new cr;Ie.layers.enable(1),Ie.viewport=new sr;const Ae=new cr;Ae.layers.enable(2),Ae.viewport=new sr;const We=[Ie,Ae],$e=new Ua;$e.layers.enable(1),$e.layers.enable(2);let Oe=null,At=null;function bt(le){const fe=he.get(le.inputSource);fe&&fe.dispatchEvent({type:le.type,data:le.inputSource})}function rt(){he.forEach(function(le,fe){le.disconnect(fe)}),he.clear(),Oe=null,At=null,h.bindXRFramebuffer(null),n.setRenderTarget(n.getRenderTarget()),N&&a.deleteFramebuffer(N),$&&a.deleteFramebuffer($),B&&a.deleteRenderbuffer(B),O&&a.deleteRenderbuffer(O),N=null,$=null,B=null,O=null,L=null,C=null,E=null,g=null,fn.stop(),u.isPresenting=!1,u.dispatchEvent({type:"sessionend"})}function Mt(le){const fe=g.inputSources;for(let it=0;it<ce.length;it++)he.set(fe[it],ce[it]);for(let it=0;it<le.removed.length;it++){const ut=le.removed[it],st=he.get(ut);st&&(st.dispatchEvent({type:"disconnected",data:ut}),he.delete(ut))}for(let it=0;it<le.added.length;it++){const ut=le.added[it],st=he.get(ut);st&&st.dispatchEvent({type:"connected",data:ut})}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(le){let fe=ce[le];return void 0===fe&&(fe=new Wh,ce[le]=fe),fe.getTargetRaySpace()},this.getControllerGrip=function(le){let fe=ce[le];return void 0===fe&&(fe=new Wh,ce[le]=fe),fe.getGripSpace()},this.getHand=function(le){let fe=ce[le];return void 0===fe&&(fe=new Wh,ce[le]=fe),fe.getHandSpace()},this.setFramebufferScaleFactor=function(le){x=le,!0===u.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(le){T=le,!0===u.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return w},this.getBaseLayer=function(){return null!==C?C:L},this.getBinding=function(){return E},this.getFrame=function(){return q},this.getSession=function(){return g},this.setSession=async function(le){if(g=le,null!==g){g.addEventListener("select",bt),g.addEventListener("selectstart",bt),g.addEventListener("selectend",bt),g.addEventListener("squeeze",bt),g.addEventListener("squeezestart",bt),g.addEventListener("squeezeend",bt),g.addEventListener("end",rt),g.addEventListener("inputsourceschange",Mt);const fe=a.getContextAttributes();if(!0!==fe.xrCompatible&&await a.makeXRCompatible(),void 0===g.renderState.layers)L=new XRWebGLLayer(g,a,{antialias:fe.antialias,alpha:fe.alpha,depth:fe.depth,stencil:fe.stencil,framebufferScaleFactor:x}),g.updateRenderState({baseLayer:L});else if(a instanceof WebGLRenderingContext)L=new XRWebGLLayer(g,a,{antialias:!0,alpha:fe.alpha,depth:fe.depth,stencil:fe.stencil,framebufferScaleFactor:x}),g.updateRenderState({layers:[L]});else{D=fe.antialias;let it=null;fe.depth&&(Y=256,fe.stencil&&(Y|=1024),ee=fe.stencil?33306:36096,it=fe.stencil?35056:33190);const ut={colorFormat:fe.alpha?32856:32849,depthFormat:it,scaleFactor:x};E=new XRWebGLBinding(g,a),C=E.createProjectionLayer(ut),N=a.createFramebuffer(),g.updateRenderState({layers:[C]}),D&&($=a.createFramebuffer(),B=a.createRenderbuffer(),a.bindRenderbuffer(36161,B),a.renderbufferStorageMultisample(36161,4,32856,C.textureWidth,C.textureHeight),h.bindFramebuffer(36160,$),a.framebufferRenderbuffer(36160,36064,36161,B),a.bindRenderbuffer(36161,null),null!==it&&(O=a.createRenderbuffer(),a.bindRenderbuffer(36161,O),a.renderbufferStorageMultisample(36161,4,it,C.textureWidth,C.textureHeight),a.framebufferRenderbuffer(36160,ee,36161,O),a.bindRenderbuffer(36161,null)),h.bindFramebuffer(36160,null))}w=await g.requestReferenceSpace(T),fn.setContext(g),fn.start(),u.isPresenting=!0,u.dispatchEvent({type:"sessionstart"})}};const qt=new te,Xt=new te;function nn(le,fe){null===fe?le.matrixWorld.copy(le.matrix):le.matrixWorld.multiplyMatrices(fe.matrixWorld,le.matrix),le.matrixWorldInverse.copy(le.matrixWorld).invert()}this.updateCamera=function(le){if(null===g)return;$e.near=Ae.near=Ie.near=le.near,$e.far=Ae.far=Ie.far=le.far,Oe===$e.near&&At===$e.far||(g.updateRenderState({depthNear:$e.near,depthFar:$e.far}),Oe=$e.near,At=$e.far);const fe=le.parent,it=$e.cameras;nn($e,fe);for(let st=0;st<it.length;st++)nn(it[st],fe);$e.matrixWorld.decompose($e.position,$e.quaternion,$e.scale),le.position.copy($e.position),le.quaternion.copy($e.quaternion),le.scale.copy($e.scale),le.matrix.copy($e.matrix),le.matrixWorld.copy($e.matrixWorld);const ut=le.children;for(let st=0,kt=ut.length;st<kt;st++)ut[st].updateMatrixWorld(!0);2===it.length?function(st,kt,Vt){qt.setFromMatrixPosition(kt.matrixWorld),Xt.setFromMatrixPosition(Vt.matrixWorld);const Ot=qt.distanceTo(Xt),Ve=kt.projectionMatrix.elements,re=Vt.projectionMatrix.elements,ze=Ve[14]/(Ve[10]-1),ft=Ve[14]/(Ve[10]+1),et=(Ve[9]+1)/Ve[5],gt=(Ve[9]-1)/Ve[5],Lt=(Ve[8]-1)/Ve[0],Ut=(re[8]+1)/re[0],tn=ze*Lt,me=ze*Ut,Ht=Ot/(-Lt+Ut),us=Ht*-Lt;kt.matrixWorld.decompose(st.position,st.quaternion,st.scale),st.translateX(us),st.translateZ(Ht),st.matrixWorld.compose(st.position,st.quaternion,st.scale),st.matrixWorldInverse.copy(st.matrixWorld).invert();const Yn=ze+Ht,vr=ft+Ht;st.projectionMatrix.makePerspective(tn-us,me+(Ot-us),et*ft/vr*Yn,gt*ft/vr*Yn,Yn,vr)}($e,Ie,Ae):$e.projectionMatrix.copy(Ie.projectionMatrix)},this.getCamera=function(){return $e},this.getFoveation=function(){return null!==C?C.fixedFoveation:null!==L?L.fixedFoveation:void 0},this.setFoveation=function(le){null!==C&&(C.fixedFoveation=le),null!==L&&void 0!==L.fixedFoveation&&(L.fixedFoveation=le)};let vn=null;const fn=new e0;fn.setAnimationLoop(function(le,fe){if(M=fe.getViewerPose(w),q=fe,null!==M){const ut=M.views;null!==L&&h.bindXRFramebuffer(L.framebuffer);let st=!1;ut.length!==$e.cameras.length&&($e.cameras.length=0,st=!0);for(let kt=0;kt<ut.length;kt++){const Vt=ut[kt];let Ot=null;if(null!==L)Ot=L.getViewport(Vt);else{const re=E.getViewSubImage(C,Vt);h.bindXRFramebuffer(N),void 0!==re.depthStencilTexture&&a.framebufferTexture2D(36160,ee,3553,re.depthStencilTexture,0),a.framebufferTexture2D(36160,36064,3553,re.colorTexture,0),Ot=re.viewport}const Ve=We[kt];Ve.matrix.fromArray(Vt.transform.matrix),Ve.projectionMatrix.fromArray(Vt.projectionMatrix),Ve.viewport.set(Ot.x,Ot.y,Ot.width,Ot.height),0===kt&&$e.matrix.copy(Ve.matrix),!0===st&&$e.cameras.push(Ve)}D&&(h.bindXRFramebuffer($),null!==Y&&a.clear(Y))}const it=g.inputSources;for(let ut=0;ut<ce.length;ut++)ce[ut].update(it[ut],fe,w);if(vn&&vn(le,fe),D){const ut=C.textureWidth,st=C.textureHeight;h.bindFramebuffer(36008,$),h.bindFramebuffer(36009,N),a.invalidateFramebuffer(36008,[ee]),a.invalidateFramebuffer(36009,[ee]),a.blitFramebuffer(0,0,ut,st,0,0,ut,st,16384,9728),a.invalidateFramebuffer(36008,[36064]),h.bindFramebuffer(36008,null),h.bindFramebuffer(36009,null),h.bindFramebuffer(36160,$)}q=null}),this.setAnimationLoop=function(le){vn=le},this.dispose=function(){}}}function Yt(b){function n(u,h){u.opacity.value=h.opacity,h.color&&u.diffuse.value.copy(h.color),h.emissive&&u.emissive.value.copy(h.emissive).multiplyScalar(h.emissiveIntensity),h.map&&(u.map.value=h.map),h.alphaMap&&(u.alphaMap.value=h.alphaMap),h.specularMap&&(u.specularMap.value=h.specularMap),h.alphaTest>0&&(u.alphaTest.value=h.alphaTest);const g=b.get(h).envMap;if(g){u.envMap.value=g,u.flipEnvMap.value=g.isCubeTexture&&!1===g.isRenderTargetTexture?-1:1,u.reflectivity.value=h.reflectivity,u.ior.value=h.ior,u.refractionRatio.value=h.refractionRatio;const T=b.get(g).__maxMipLevel;void 0!==T&&(u.maxMipLevel.value=T)}let x,w;h.lightMap&&(u.lightMap.value=h.lightMap,u.lightMapIntensity.value=h.lightMapIntensity),h.aoMap&&(u.aoMap.value=h.aoMap,u.aoMapIntensity.value=h.aoMapIntensity),h.map?x=h.map:h.specularMap?x=h.specularMap:h.displacementMap?x=h.displacementMap:h.normalMap?x=h.normalMap:h.bumpMap?x=h.bumpMap:h.roughnessMap?x=h.roughnessMap:h.metalnessMap?x=h.metalnessMap:h.alphaMap?x=h.alphaMap:h.emissiveMap?x=h.emissiveMap:h.clearcoatMap?x=h.clearcoatMap:h.clearcoatNormalMap?x=h.clearcoatNormalMap:h.clearcoatRoughnessMap?x=h.clearcoatRoughnessMap:h.specularIntensityMap?x=h.specularIntensityMap:h.specularTintMap?x=h.specularTintMap:h.transmissionMap?x=h.transmissionMap:h.thicknessMap&&(x=h.thicknessMap),void 0!==x&&(x.isWebGLRenderTarget&&(x=x.texture),!0===x.matrixAutoUpdate&&x.updateMatrix(),u.uvTransform.value.copy(x.matrix)),h.aoMap?w=h.aoMap:h.lightMap&&(w=h.lightMap),void 0!==w&&(w.isWebGLRenderTarget&&(w=w.texture),!0===w.matrixAutoUpdate&&w.updateMatrix(),u.uv2Transform.value.copy(w.matrix))}function a(u,h){u.roughness.value=h.roughness,u.metalness.value=h.metalness,h.roughnessMap&&(u.roughnessMap.value=h.roughnessMap),h.metalnessMap&&(u.metalnessMap.value=h.metalnessMap),h.emissiveMap&&(u.emissiveMap.value=h.emissiveMap),h.bumpMap&&(u.bumpMap.value=h.bumpMap,u.bumpScale.value=h.bumpScale,h.side===Te&&(u.bumpScale.value*=-1)),h.normalMap&&(u.normalMap.value=h.normalMap,u.normalScale.value.copy(h.normalScale),h.side===Te&&u.normalScale.value.negate()),h.displacementMap&&(u.displacementMap.value=h.displacementMap,u.displacementScale.value=h.displacementScale,u.displacementBias.value=h.displacementBias),b.get(h).envMap&&(u.envMapIntensity.value=h.envMapIntensity)}return{refreshFogUniforms:function(u,h){u.fogColor.value.copy(h.color),h.isFog?(u.fogNear.value=h.near,u.fogFar.value=h.far):h.isFogExp2&&(u.fogDensity.value=h.density)},refreshMaterialUniforms:function(u,h,g,x,w){var M;h.isMeshBasicMaterial?n(u,h):h.isMeshLambertMaterial?(n(u,h),(M=h).emissiveMap&&(u.emissiveMap.value=M.emissiveMap)):h.isMeshToonMaterial?(n(u,h),function(T,M){M.gradientMap&&(T.gradientMap.value=M.gradientMap),M.emissiveMap&&(T.emissiveMap.value=M.emissiveMap),M.bumpMap&&(T.bumpMap.value=M.bumpMap,T.bumpScale.value=M.bumpScale,M.side===Te&&(T.bumpScale.value*=-1)),M.normalMap&&(T.normalMap.value=M.normalMap,T.normalScale.value.copy(M.normalScale),M.side===Te&&T.normalScale.value.negate()),M.displacementMap&&(T.displacementMap.value=M.displacementMap,T.displacementScale.value=M.displacementScale,T.displacementBias.value=M.displacementBias)}(u,h)):h.isMeshPhongMaterial?(n(u,h),function(T,M){T.specular.value.copy(M.specular),T.shininess.value=Math.max(M.shininess,1e-4),M.emissiveMap&&(T.emissiveMap.value=M.emissiveMap),M.bumpMap&&(T.bumpMap.value=M.bumpMap,T.bumpScale.value=M.bumpScale,M.side===Te&&(T.bumpScale.value*=-1)),M.normalMap&&(T.normalMap.value=M.normalMap,T.normalScale.value.copy(M.normalScale),M.side===Te&&T.normalScale.value.negate()),M.displacementMap&&(T.displacementMap.value=M.displacementMap,T.displacementScale.value=M.displacementScale,T.displacementBias.value=M.displacementBias)}(u,h)):h.isMeshStandardMaterial?(n(u,h),h.isMeshPhysicalMaterial?function(T,M,E){a(T,M),T.ior.value=M.ior,M.sheenTint&&T.sheenTint.value.copy(M.sheenTint),M.clearcoat>0&&(T.clearcoat.value=M.clearcoat,T.clearcoatRoughness.value=M.clearcoatRoughness,M.clearcoatMap&&(T.clearcoatMap.value=M.clearcoatMap),M.clearcoatRoughnessMap&&(T.clearcoatRoughnessMap.value=M.clearcoatRoughnessMap),M.clearcoatNormalMap&&(T.clearcoatNormalScale.value.copy(M.clearcoatNormalScale),T.clearcoatNormalMap.value=M.clearcoatNormalMap,M.side===Te&&T.clearcoatNormalScale.value.negate())),M.transmission>0&&(T.transmission.value=M.transmission,T.transmissionSamplerMap.value=E.texture,T.transmissionSamplerSize.value.set(E.width,E.height),M.transmissionMap&&(T.transmissionMap.value=M.transmissionMap),T.thickness.value=M.thickness,M.thicknessMap&&(T.thicknessMap.value=M.thicknessMap),T.attenuationDistance.value=M.attenuationDistance,T.attenuationTint.value.copy(M.attenuationTint)),T.specularIntensity.value=M.specularIntensity,T.specularTint.value.copy(M.specularTint),M.specularIntensityMap&&(T.specularIntensityMap.value=M.specularIntensityMap),M.specularTintMap&&(T.specularTintMap.value=M.specularTintMap)}(u,h,w):a(u,h)):h.isMeshMatcapMaterial?(n(u,h),function(T,M){M.matcap&&(T.matcap.value=M.matcap),M.bumpMap&&(T.bumpMap.value=M.bumpMap,T.bumpScale.value=M.bumpScale,M.side===Te&&(T.bumpScale.value*=-1)),M.normalMap&&(T.normalMap.value=M.normalMap,T.normalScale.value.copy(M.normalScale),M.side===Te&&T.normalScale.value.negate()),M.displacementMap&&(T.displacementMap.value=M.displacementMap,T.displacementScale.value=M.displacementScale,T.displacementBias.value=M.displacementBias)}(u,h)):h.isMeshDepthMaterial?(n(u,h),function(T,M){M.displacementMap&&(T.displacementMap.value=M.displacementMap,T.displacementScale.value=M.displacementScale,T.displacementBias.value=M.displacementBias)}(u,h)):h.isMeshDistanceMaterial?(n(u,h),function(T,M){M.displacementMap&&(T.displacementMap.value=M.displacementMap,T.displacementScale.value=M.displacementScale,T.displacementBias.value=M.displacementBias),T.referencePosition.value.copy(M.referencePosition),T.nearDistance.value=M.nearDistance,T.farDistance.value=M.farDistance}(u,h)):h.isMeshNormalMaterial?(n(u,h),function(T,M){M.bumpMap&&(T.bumpMap.value=M.bumpMap,T.bumpScale.value=M.bumpScale,M.side===Te&&(T.bumpScale.value*=-1)),M.normalMap&&(T.normalMap.value=M.normalMap,T.normalScale.value.copy(M.normalScale),M.side===Te&&T.normalScale.value.negate()),M.displacementMap&&(T.displacementMap.value=M.displacementMap,T.displacementScale.value=M.displacementScale,T.displacementBias.value=M.displacementBias)}(u,h)):h.isLineBasicMaterial?(function(T,M){T.diffuse.value.copy(M.color),T.opacity.value=M.opacity}(u,h),h.isLineDashedMaterial&&function(T,M){T.dashSize.value=M.dashSize,T.totalSize.value=M.dashSize+M.gapSize,T.scale.value=M.scale}(u,h)):h.isPointsMaterial?function(T,M,E,N){let C;T.diffuse.value.copy(M.color),T.opacity.value=M.opacity,T.size.value=M.size*E,T.scale.value=.5*N,M.map&&(T.map.value=M.map),M.alphaMap&&(T.alphaMap.value=M.alphaMap),M.alphaTest>0&&(T.alphaTest.value=M.alphaTest),M.map?C=M.map:M.alphaMap&&(C=M.alphaMap),void 0!==C&&(!0===C.matrixAutoUpdate&&C.updateMatrix(),T.uvTransform.value.copy(C.matrix))}(u,h,g,x):h.isSpriteMaterial?function(T,M){let E;T.diffuse.value.copy(M.color),T.opacity.value=M.opacity,T.rotation.value=M.rotation,M.map&&(T.map.value=M.map),M.alphaMap&&(T.alphaMap.value=M.alphaMap),M.alphaTest>0&&(T.alphaTest.value=M.alphaTest),M.map?E=M.map:M.alphaMap&&(E=M.alphaMap),void 0!==E&&(!0===E.matrixAutoUpdate&&E.updateMatrix(),T.uvTransform.value.copy(E.matrix))}(u,h):h.isShadowMaterial?(u.color.value.copy(h.color),u.opacity.value=h.opacity):h.isShaderMaterial&&(h.uniformsNeedUpdate=!1)}}}function lr(b={}){const n=void 0!==b.canvas?b.canvas:function(){const ae=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return ae.style.display="block",ae}(),a=void 0!==b.context?b.context:null,u=void 0!==b.alpha&&b.alpha,h=void 0===b.depth||b.depth,g=void 0===b.stencil||b.stencil,x=void 0!==b.antialias&&b.antialias,w=void 0===b.premultipliedAlpha||b.premultipliedAlpha,T=void 0!==b.preserveDrawingBuffer&&b.preserveDrawingBuffer,M=void 0!==b.powerPreference?b.powerPreference:"default",E=void 0!==b.failIfMajorPerformanceCaveat&&b.failIfMajorPerformanceCaveat;let N=null,C=null;const L=[],D=[];this.domElement=n,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=ds,this.physicallyCorrectLights=!1,this.toneMapping=_e,this.toneMappingExposure=1;const $=this;let B=!1,O=0,q=0,ee=null,Y=-1,ce=null;const he=new sr,Ie=new sr;let Ae=null,We=n.width,$e=n.height,Oe=1,At=null,bt=null;const rt=new sr(0,0,We,$e),Mt=new sr(0,0,We,$e);let qt=!1;const Xt=[],nn=new qo;let vn=!1,fn=!1,le=null;const fe=new sn,it=new te,ut={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function st(){return null===ee?Oe:1}let kt,Vt,Ot,Ve,re,ze,ft,et,gt,Lt,Ut,tn,me,Ht,us,Yn,vr,Li,ss,ir,xi,Ns,Nr,Ct=a;function Sm(ae,at){for(let Le=0;Le<ae.length;Le++){const Nt=n.getContext(ae[Le],at);if(null!==Nt)return Nt}return null}try{const ae={alpha:u,depth:h,stencil:g,antialias:x,premultipliedAlpha:w,preserveDrawingBuffer:T,powerPreference:M,failIfMajorPerformanceCaveat:E};if(n.addEventListener("webglcontextlost",dl,!1),n.addEventListener("webglcontextrestored",gx,!1),null===Ct){const at=["webgl2","webgl","experimental-webgl"];if(!0===$.isWebGL1Renderer&&at.shift(),Ct=Sm(at,ae),null===Ct)throw Sm(at)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===Ct.getShaderPrecisionFormat&&(Ct.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(ae){throw console.error("THREE.WebGLRenderer: "+ae.message),ae}function yd(){kt=new kb(Ct),Vt=new t0(Ct,kt,b),kt.init(Vt),Ns=new ln(Ct,kt,Vt),Ot=new po(Ct,kt,Vt),Xt[0]=1029,Ve=new Rt(Ct),re=new F0,ze=new Bf(Ct,kt,Ot,re,Vt,Ns,Ve),ft=new tc($),et=new _b($),gt=new Lr(Ct,Vt),Nr=new ec(Ct,kt,gt,Vt),Lt=new hg(Ct,gt,Ve,Nr),Ut=new ic(Ct,Lt,gt,Ve),ss=new o0(Ct),Yn=new ig(re),tn=new Eg($,ft,et,kt,Vt,Nr,Yn),me=new Yt(re),Ht=new an(re),us=new Pb(kt,Vt),Li=new sg($,ft,Ot,Ut,w),vr=new Ig($,Ut,Vt),ir=new jl(Ct,kt,Ve,Vt),xi=new Pn(Ct,kt,Ve,Vt),Ve.programs=tn.programs,$.capabilities=Vt,$.extensions=kt,$.properties=re,$.renderLists=Ht,$.shadowMap=vr,$.state=Ot,$.info=Ve}yd();const ti=new Ko($,Ct);function dl(ae){ae.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),B=!0}function gx(){console.log("THREE.WebGLRenderer: Context Restored."),B=!1;const ae=Ve.autoReset,at=vr.enabled,Le=vr.autoUpdate,ot=vr.needsUpdate,Nt=vr.type;yd(),Ve.autoReset=ae,vr.enabled=at,vr.autoUpdate=Le,vr.needsUpdate=ot,vr.type=Nt}function pu(ae){const at=ae.target;var Le;at.removeEventListener("dispose",pu),function(ot){const Nt=re.get(ot).programs;void 0!==Nt&&Nt.forEach(function(kn){tn.releaseProgram(kn)})}(Le=at),re.remove(Le)}this.xr=ti,this.getContext=function(){return Ct},this.getContextAttributes=function(){return Ct.getContextAttributes()},this.forceContextLoss=function(){const ae=kt.get("WEBGL_lose_context");ae&&ae.loseContext()},this.forceContextRestore=function(){const ae=kt.get("WEBGL_lose_context");ae&&ae.restoreContext()},this.getPixelRatio=function(){return Oe},this.setPixelRatio=function(ae){void 0!==ae&&(Oe=ae,this.setSize(We,$e,!1))},this.getSize=function(ae){return ae.set(We,$e)},this.setSize=function(ae,at,Le){ti.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(We=ae,$e=at,n.width=Math.floor(ae*Oe),n.height=Math.floor(at*Oe),!1!==Le&&(n.style.width=ae+"px",n.style.height=at+"px"),this.setViewport(0,0,ae,at))},this.getDrawingBufferSize=function(ae){return ae.set(We*Oe,$e*Oe).floor()},this.setDrawingBufferSize=function(ae,at,Le){We=ae,$e=at,Oe=Le,n.width=Math.floor(ae*Le),n.height=Math.floor(at*Le),this.setViewport(0,0,ae,at)},this.getCurrentViewport=function(ae){return ae.copy(he)},this.getViewport=function(ae){return ae.copy(rt)},this.setViewport=function(ae,at,Le,ot){ae.isVector4?rt.set(ae.x,ae.y,ae.z,ae.w):rt.set(ae,at,Le,ot),Ot.viewport(he.copy(rt).multiplyScalar(Oe).floor())},this.getScissor=function(ae){return ae.copy(Mt)},this.setScissor=function(ae,at,Le,ot){ae.isVector4?Mt.set(ae.x,ae.y,ae.z,ae.w):Mt.set(ae,at,Le,ot),Ot.scissor(Ie.copy(Mt).multiplyScalar(Oe).floor())},this.getScissorTest=function(){return qt},this.setScissorTest=function(ae){Ot.setScissorTest(qt=ae)},this.setOpaqueSort=function(ae){At=ae},this.setTransparentSort=function(ae){bt=ae},this.getClearColor=function(ae){return ae.copy(Li.getClearColor())},this.setClearColor=function(){Li.setClearColor.apply(Li,arguments)},this.getClearAlpha=function(){return Li.getClearAlpha()},this.setClearAlpha=function(){Li.setClearAlpha.apply(Li,arguments)},this.clear=function(ae,at,Le){let ot=0;(void 0===ae||ae)&&(ot|=16384),(void 0===at||at)&&(ot|=256),(void 0===Le||Le)&&(ot|=1024),Ct.clear(ot)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",dl,!1),n.removeEventListener("webglcontextrestored",gx,!1),Ht.dispose(),us.dispose(),re.dispose(),ft.dispose(),et.dispose(),Ut.dispose(),Nr.dispose(),ti.dispose(),ti.removeEventListener("sessionstart",cs),ti.removeEventListener("sessionend",gy),le&&(le.dispose(),le=null),fu.stop()},this.renderBufferImmediate=function(ae,at){Nr.initAttributes();const Le=re.get(ae);ae.hasPositions&&!Le.position&&(Le.position=Ct.createBuffer()),ae.hasNormals&&!Le.normal&&(Le.normal=Ct.createBuffer()),ae.hasUvs&&!Le.uv&&(Le.uv=Ct.createBuffer()),ae.hasColors&&!Le.color&&(Le.color=Ct.createBuffer());const ot=at.getAttributes();ae.hasPositions&&(Ct.bindBuffer(34962,Le.position),Ct.bufferData(34962,ae.positionArray,35048),Nr.enableAttribute(ot.position.location),Ct.vertexAttribPointer(ot.position.location,3,5126,!1,0,0)),ae.hasNormals&&(Ct.bindBuffer(34962,Le.normal),Ct.bufferData(34962,ae.normalArray,35048),Nr.enableAttribute(ot.normal.location),Ct.vertexAttribPointer(ot.normal.location,3,5126,!1,0,0)),ae.hasUvs&&(Ct.bindBuffer(34962,Le.uv),Ct.bufferData(34962,ae.uvArray,35048),Nr.enableAttribute(ot.uv.location),Ct.vertexAttribPointer(ot.uv.location,2,5126,!1,0,0)),ae.hasColors&&(Ct.bindBuffer(34962,Le.color),Ct.bufferData(34962,ae.colorArray,35048),Nr.enableAttribute(ot.color.location),Ct.vertexAttribPointer(ot.color.location,3,5126,!1,0,0)),Nr.disableUnusedAttributes(),Ct.drawArrays(4,0,ae.count),ae.count=0},this.renderBufferDirect=function(ae,at,Le,ot,Nt,kn){null===at&&(at=ut);const dn=Nt.isMesh&&Nt.matrixWorld.determinant()<0,Cn=xy(ae,at,ot,Nt);Ot.setMaterial(ot,dn);let Hn=Le.index;const pr=Le.attributes.position;if(null===Hn){if(void 0===pr||0===pr.count)return}else if(0===Hn.count)return;let tr,jn=1;!0===ot.wireframe&&(Hn=Lt.getWireframeAttribute(Le),jn=2),void 0===Le.morphAttributes.position&&void 0===Le.morphAttributes.normal||ss.update(Nt,Le,ot,Cn),Nr.setup(Nt,ot,Cn,Le,Hn);let Tn=ir;null!==Hn&&(tr=gt.get(Hn),Tn=xi,Tn.setIndex(tr));const fr=null!==Hn?Hn.count:pr.count,Jn=Le.drawRange.start*jn,pl=Le.drawRange.count*jn,bi=null!==kn?kn.start*jn:0,qi=null!==kn?kn.count*jn:1/0,fl=Math.max(Jn,bi),vs=Math.min(fr,Jn+pl,bi+qi)-1,wo=Math.max(0,vs-fl+1);if(0!==wo){if(Nt.isMesh)!0===ot.wireframe?(Ot.setLineWidth(ot.wireframeLinewidth*st()),Tn.setMode(1)):Tn.setMode(4);else if(Nt.isLine){let zs=ot.linewidth;void 0===zs&&(zs=1),Ot.setLineWidth(zs*st()),Tn.setMode(Nt.isLineSegments?1:Nt.isLineLoop?2:3)}else Nt.isPoints?Tn.setMode(0):Nt.isSprite&&Tn.setMode(4);if(Nt.isInstancedMesh)Tn.renderInstances(fl,wo,Nt.count);else if(Le.isInstancedBufferGeometry){const zs=Math.min(Le.instanceCount,Le._maxInstanceCount);Tn.renderInstances(fl,wo,zs)}else Tn.render(fl,wo)}},this.compile=function(ae,at){C=us.get(ae),C.init(),D.push(C),ae.traverseVisible(function(Le){Le.isLight&&Le.layers.test(at.layers)&&(C.pushLight(Le),Le.castShadow&&C.pushShadow(Le))}),C.setupLights($.physicallyCorrectLights),ae.traverse(function(Le){const ot=Le.material;if(ot)if(Array.isArray(ot))for(let Nt=0;Nt<ot.length;Nt++)Kp(ot[Nt],ae,Le);else Kp(ot,ae,Le)}),D.pop(),C=null};let Xp=null;function cs(){fu.stop()}function gy(){fu.start()}const fu=new e0;function Tm(ae,at,Le,ot){if(!1===ae.visible)return;if(ae.layers.test(at.layers))if(ae.isGroup)Le=ae.renderOrder;else if(ae.isLOD)!0===ae.autoUpdate&&ae.update(at);else if(ae.isLight)C.pushLight(ae),ae.castShadow&&C.pushShadow(ae);else if(ae.isSprite){if(!ae.frustumCulled||nn.intersectsSprite(ae)){ot&&it.setFromMatrixPosition(ae.matrixWorld).applyMatrix4(fe);const kn=Ut.update(ae),dn=ae.material;dn.visible&&N.push(ae,kn,dn,Le,it.z,null)}}else if(ae.isImmediateRenderObject)ot&&it.setFromMatrixPosition(ae.matrixWorld).applyMatrix4(fe),N.push(ae,null,ae.material,Le,it.z,null);else if((ae.isMesh||ae.isLine||ae.isPoints)&&(ae.isSkinnedMesh&&ae.skeleton.frame!==Ve.render.frame&&(ae.skeleton.update(),ae.skeleton.frame=Ve.render.frame),!ae.frustumCulled||nn.intersectsObject(ae))){ot&&it.setFromMatrixPosition(ae.matrixWorld).applyMatrix4(fe);const kn=Ut.update(ae),dn=ae.material;if(Array.isArray(dn)){const Cn=kn.groups;for(let Hn=0,pr=Cn.length;Hn<pr;Hn++){const tr=Cn[Hn],jn=dn[tr.materialIndex];jn&&jn.visible&&N.push(ae,kn,jn,Le,it.z,tr)}}else dn.visible&&N.push(ae,kn,dn,Le,it.z,null)}const Nt=ae.children;for(let kn=0,dn=Nt.length;kn<dn;kn++)Tm(Nt[kn],at,Le,ot)}function xd(ae,at,Le,ot){const Nt=ae.opaque,kn=ae.transmissive,dn=ae.transparent;C.setupLightsView(Le),kn.length>0&&function(Cn,Hn,pr){null===le&&(le=new(!0===x&&!0===Vt.isWebGL2?Pl:Si)(1024,1024,{generateMipmaps:!0,type:null!==Ns.convert(no)?no:eo,minFilter:Eo,magFilter:or,wrapS:Ln,wrapT:Ln}));const tr=$.getRenderTarget();$.setRenderTarget(le),$.clear();const jn=$.toneMapping;$.toneMapping=_e,bd(Cn,Hn,pr),$.toneMapping=jn,ze.updateMultisampleRenderTarget(le),ze.updateRenderTargetMipmap(le),$.setRenderTarget(tr)}(Nt,at,Le),ot&&Ot.viewport(he.copy(ot)),Nt.length>0&&bd(Nt,at,Le),kn.length>0&&bd(kn,at,Le),dn.length>0&&bd(dn,at,Le)}function bd(ae,at,Le){const ot=!0===at.isScene?at.overrideMaterial:null;for(let Nt=0,kn=ae.length;Nt<kn;Nt++){const dn=ae[Nt],Cn=dn.object,Hn=dn.geometry,pr=null===ot?dn.material:ot,tr=dn.group;Cn.layers.test(Le.layers)&&yy(Cn,at,Le,Hn,pr,tr)}}function yy(ae,at,Le,ot,Nt,kn){if(ae.onBeforeRender($,at,Le,ot,Nt,kn),ae.modelViewMatrix.multiplyMatrices(Le.matrixWorldInverse,ae.matrixWorld),ae.normalMatrix.getNormalMatrix(ae.modelViewMatrix),ae.isImmediateRenderObject){const dn=xy(Le,at,Nt,ae);Ot.setMaterial(Nt),Nr.reset(),Hn=dn,ae.render(function(pr){$.renderBufferImmediate(pr,Hn)})}else!0===Nt.transparent&&Nt.side===Pe?(Nt.side=Te,Nt.needsUpdate=!0,$.renderBufferDirect(Le,at,ot,Nt,ae,kn),Nt.side=Q,Nt.needsUpdate=!0,$.renderBufferDirect(Le,at,ot,Nt,ae,kn),Nt.side=Pe):$.renderBufferDirect(Le,at,ot,Nt,ae,kn);var Hn;ae.onAfterRender($,at,Le,ot,Nt,kn)}function Kp(ae,at,Le){!0!==at.isScene&&(at=ut);const ot=re.get(ae),Nt=C.state.lights,dn=Nt.state.version,Cn=tn.getParameters(ae,Nt.state,C.state.shadowsArray,at,Le),Hn=tn.getProgramCacheKey(Cn);let pr=ot.programs;ot.environment=ae.isMeshStandardMaterial?at.environment:null,ot.fog=at.fog,ot.envMap=(ae.isMeshStandardMaterial?et:ft).get(ae.envMap||ot.environment),void 0===pr&&(ae.addEventListener("dispose",pu),pr=new Map,ot.programs=pr);let tr=pr.get(Hn);if(void 0!==tr){if(ot.currentProgram===tr&&ot.lightsStateVersion===dn)return Mm(ae,Cn),tr}else Cn.uniforms=tn.getUniforms(ae),ae.onBuild(Cn,$),ae.onBeforeCompile(Cn,$),tr=tn.acquireProgram(Cn,Hn),pr.set(Hn,tr),ot.uniforms=Cn.uniforms;const jn=ot.uniforms;var Jn;(ae.isShaderMaterial||ae.isRawShaderMaterial)&&!0!==ae.clipping||(jn.clippingPlanes=Yn.uniform),Mm(ae,Cn),ot.needsLights=(Jn=ae).isMeshLambertMaterial||Jn.isMeshToonMaterial||Jn.isMeshPhongMaterial||Jn.isMeshStandardMaterial||Jn.isShadowMaterial||Jn.isShaderMaterial&&!0===Jn.lights,ot.lightsStateVersion=dn,ot.needsLights&&(jn.ambientLightColor.value=Nt.state.ambient,jn.lightProbe.value=Nt.state.probe,jn.directionalLights.value=Nt.state.directional,jn.directionalLightShadows.value=Nt.state.directionalShadow,jn.spotLights.value=Nt.state.spot,jn.spotLightShadows.value=Nt.state.spotShadow,jn.rectAreaLights.value=Nt.state.rectArea,jn.ltc_1.value=Nt.state.rectAreaLTC1,jn.ltc_2.value=Nt.state.rectAreaLTC2,jn.pointLights.value=Nt.state.point,jn.pointLightShadows.value=Nt.state.pointShadow,jn.hemisphereLights.value=Nt.state.hemi,jn.directionalShadowMap.value=Nt.state.directionalShadowMap,jn.directionalShadowMatrix.value=Nt.state.directionalShadowMatrix,jn.spotShadowMap.value=Nt.state.spotShadowMap,jn.spotShadowMatrix.value=Nt.state.spotShadowMatrix,jn.pointShadowMap.value=Nt.state.pointShadowMap,jn.pointShadowMatrix.value=Nt.state.pointShadowMatrix);const Tn=tr.getUniforms(),fr=Xl.seqWithValue(Tn.seq,jn);return ot.currentProgram=tr,ot.uniformsList=fr,tr}function Mm(ae,at){const Le=re.get(ae);Le.outputEncoding=at.outputEncoding,Le.instancing=at.instancing,Le.skinning=at.skinning,Le.morphTargets=at.morphTargets,Le.morphNormals=at.morphNormals,Le.numClippingPlanes=at.numClippingPlanes,Le.numIntersection=at.numClipIntersection,Le.vertexAlphas=at.vertexAlphas,Le.vertexTangents=at.vertexTangents}function xy(ae,at,Le,ot){!0!==at.isScene&&(at=ut),ze.resetTextureUnits();const Nt=at.fog,dn=null===ee?$.outputEncoding:ee.texture.encoding,Cn=(Le.isMeshStandardMaterial?et:ft).get(Le.envMap||(Le.isMeshStandardMaterial?at.environment:null)),Hn=!0===Le.vertexColors&&!!ot.geometry&&!!ot.geometry.attributes.color&&4===ot.geometry.attributes.color.itemSize,pr=!!ot.geometry&&!!ot.geometry.attributes.tangent,tr=!!ot.geometry&&!!ot.geometry.morphAttributes.position,jn=!!ot.geometry&&!!ot.geometry.morphAttributes.normal,Tn=re.get(Le),fr=C.state.lights;!0!==vn||!0!==fn&&ae===ce||Yn.setState(Le,ae,ae===ce&&Le.id===Y);let Jn=!1;Le.version===Tn.__version?Tn.needsLights&&Tn.lightsStateVersion!==fr.state.version||Tn.outputEncoding!==dn||ot.isInstancedMesh&&!1===Tn.instancing?Jn=!0:ot.isInstancedMesh||!0!==Tn.instancing?ot.isSkinnedMesh&&!1===Tn.skinning?Jn=!0:ot.isSkinnedMesh||!0!==Tn.skinning?Tn.envMap!==Cn||Le.fog&&Tn.fog!==Nt?Jn=!0:void 0===Tn.numClippingPlanes||Tn.numClippingPlanes===Yn.numPlanes&&Tn.numIntersection===Yn.numIntersection?(Tn.vertexAlphas!==Hn||Tn.vertexTangents!==pr||Tn.morphTargets!==tr||Tn.morphNormals!==jn)&&(Jn=!0):Jn=!0:Jn=!0:Jn=!0:(Jn=!0,Tn.__version=Le.version);let pl=Tn.currentProgram;!0===Jn&&(pl=Kp(Le,at,ot));let bi=!1,qi=!1,fl=!1;const vs=pl.getUniforms(),wo=Tn.uniforms;if(Ot.useProgram(pl.program)&&(bi=!0,qi=!0,fl=!0),Le.id!==Y&&(Y=Le.id,qi=!0),bi||ce!==ae){if(vs.setValue(Ct,"projectionMatrix",ae.projectionMatrix),Vt.logarithmicDepthBuffer&&vs.setValue(Ct,"logDepthBufFC",2/(Math.log(ae.far+1)/Math.LN2)),ce!==ae&&(ce=ae,qi=!0,fl=!0),Le.isShaderMaterial||Le.isMeshPhongMaterial||Le.isMeshToonMaterial||Le.isMeshStandardMaterial||Le.envMap){const ni=vs.map.cameraPosition;void 0!==ni&&ni.setValue(Ct,it.setFromMatrixPosition(ae.matrixWorld))}(Le.isMeshPhongMaterial||Le.isMeshToonMaterial||Le.isMeshLambertMaterial||Le.isMeshBasicMaterial||Le.isMeshStandardMaterial||Le.isShaderMaterial)&&vs.setValue(Ct,"isOrthographic",!0===ae.isOrthographicCamera),(Le.isMeshPhongMaterial||Le.isMeshToonMaterial||Le.isMeshLambertMaterial||Le.isMeshBasicMaterial||Le.isMeshStandardMaterial||Le.isShaderMaterial||Le.isShadowMaterial||ot.isSkinnedMesh)&&vs.setValue(Ct,"viewMatrix",ae.matrixWorldInverse)}if(ot.isSkinnedMesh){vs.setOptional(Ct,ot,"bindMatrix"),vs.setOptional(Ct,ot,"bindMatrixInverse");const ni=ot.skeleton;ni&&(Vt.floatVertexTextures?(null===ni.boneTexture&&ni.computeBoneTexture(),vs.setValue(Ct,"boneTexture",ni.boneTexture,ze),vs.setValue(Ct,"boneTextureSize",ni.boneTextureSize)):vs.setOptional(Ct,ni,"boneMatrices"))}var zs,As;return(qi||Tn.receiveShadow!==ot.receiveShadow)&&(Tn.receiveShadow=ot.receiveShadow,vs.setValue(Ct,"receiveShadow",ot.receiveShadow)),qi&&(vs.setValue(Ct,"toneMappingExposure",$.toneMappingExposure),Tn.needsLights&&((zs=wo).ambientLightColor.needsUpdate=As=fl,zs.lightProbe.needsUpdate=As,zs.directionalLights.needsUpdate=As,zs.directionalLightShadows.needsUpdate=As,zs.pointLights.needsUpdate=As,zs.pointLightShadows.needsUpdate=As,zs.spotLights.needsUpdate=As,zs.spotLightShadows.needsUpdate=As,zs.rectAreaLights.needsUpdate=As,zs.hemisphereLights.needsUpdate=As),Nt&&Le.fog&&me.refreshFogUniforms(wo,Nt),me.refreshMaterialUniforms(wo,Le,Oe,$e,le),Xl.upload(Ct,Tn.uniformsList,wo,ze)),Le.isShaderMaterial&&!0===Le.uniformsNeedUpdate&&(Xl.upload(Ct,Tn.uniformsList,wo,ze),Le.uniformsNeedUpdate=!1),Le.isSpriteMaterial&&vs.setValue(Ct,"center",ot.center),vs.setValue(Ct,"modelViewMatrix",ot.modelViewMatrix),vs.setValue(Ct,"normalMatrix",ot.normalMatrix),vs.setValue(Ct,"modelMatrix",ot.matrixWorld),pl}fu.setAnimationLoop(function(ae){Xp&&Xp(ae)}),"undefined"!=typeof window&&fu.setContext(window),this.setAnimationLoop=function(ae){Xp=ae,ti.setAnimationLoop(ae),null===ae?fu.stop():fu.start()},ti.addEventListener("sessionstart",cs),ti.addEventListener("sessionend",gy),this.render=function(ae,at){if(void 0===at||!0===at.isCamera){if(!0!==B){if(!0===ae.autoUpdate&&ae.updateMatrixWorld(),null===at.parent&&at.updateMatrixWorld(),!0===ti.enabled&&!0===ti.isPresenting&&(!0===ti.cameraAutoUpdate&&ti.updateCamera(at),at=ti.getCamera()),!0===ae.isScene&&ae.onBeforeRender($,ae,at,ee),C=us.get(ae,D.length),C.init(),D.push(C),fe.multiplyMatrices(at.projectionMatrix,at.matrixWorldInverse),nn.setFromProjectionMatrix(fe),fn=this.localClippingEnabled,vn=Yn.init(this.clippingPlanes,fn,at),N=Ht.get(ae,L.length),N.init(),L.push(N),Tm(ae,at,0,$.sortObjects),N.finish(),!0===$.sortObjects&&N.sort(At,bt),!0===vn&&Yn.beginShadows(),vr.render(C.state.shadowsArray,ae,at),!0===vn&&Yn.endShadows(),!0===this.info.autoReset&&this.info.reset(),Li.render(N,ae),C.setupLights($.physicallyCorrectLights),at.isArrayCamera){const ot=at.cameras;for(let Nt=0,kn=ot.length;Nt<kn;Nt++){const dn=ot[Nt];xd(N,ae,dn,dn.viewport)}}else xd(N,ae,at);null!==ee&&(ze.updateMultisampleRenderTarget(ee),ze.updateRenderTargetMipmap(ee)),!0===ae.isScene&&ae.onAfterRender($,ae,at),Ot.buffers.depth.setTest(!0),Ot.buffers.depth.setMask(!0),Ot.buffers.color.setMask(!0),Ot.setPolygonOffset(!1),Nr.resetDefaultState(),Y=-1,ce=null,D.pop(),C=D.length>0?D[D.length-1]:null,L.pop(),N=L.length>0?L[L.length-1]:null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return O},this.getActiveMipmapLevel=function(){return q},this.getRenderTarget=function(){return ee},this.setRenderTarget=function(ae,at=0,Le=0){ee=ae,O=at,q=Le,ae&&void 0===re.get(ae).__webglFramebuffer&&ze.setupRenderTarget(ae);let ot=null,Nt=!1,kn=!1;if(ae){const dn=ae.texture;(dn.isDataTexture3D||dn.isDataTexture2DArray)&&(kn=!0);const Cn=re.get(ae).__webglFramebuffer;ae.isWebGLCubeRenderTarget?(ot=Cn[at],Nt=!0):ot=ae.isWebGLMultisampleRenderTarget?re.get(ae).__webglMultisampledFramebuffer:Cn,he.copy(ae.viewport),Ie.copy(ae.scissor),Ae=ae.scissorTest}else he.copy(rt).multiplyScalar(Oe).floor(),Ie.copy(Mt).multiplyScalar(Oe).floor(),Ae=qt;if(Ot.bindFramebuffer(36160,ot)&&Vt.drawBuffers){let dn=!1;if(ae)if(ae.isWebGLMultipleRenderTargets){const Cn=ae.texture;if(Xt.length!==Cn.length||36064!==Xt[0]){for(let Hn=0,pr=Cn.length;Hn<pr;Hn++)Xt[Hn]=36064+Hn;Xt.length=Cn.length,dn=!0}}else 1===Xt.length&&36064===Xt[0]||(Xt[0]=36064,Xt.length=1,dn=!0);else 1===Xt.length&&1029===Xt[0]||(Xt[0]=1029,Xt.length=1,dn=!0);dn&&(Vt.isWebGL2?Ct.drawBuffers(Xt):kt.get("WEBGL_draw_buffers").drawBuffersWEBGL(Xt))}if(Ot.viewport(he),Ot.scissor(Ie),Ot.setScissorTest(Ae),Nt){const dn=re.get(ae.texture);Ct.framebufferTexture2D(36160,36064,34069+at,dn.__webglTexture,Le)}else if(kn){const dn=re.get(ae.texture);Ct.framebufferTextureLayer(36160,36064,dn.__webglTexture,Le||0,at||0)}Y=-1},this.readRenderTargetPixels=function(ae,at,Le,ot,Nt,kn,dn){if(!ae||!ae.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Cn=re.get(ae).__webglFramebuffer;if(ae.isWebGLCubeRenderTarget&&void 0!==dn&&(Cn=Cn[dn]),Cn){Ot.bindFramebuffer(36160,Cn);try{const Hn=ae.texture,pr=Hn.format,tr=Hn.type;if(pr!==Ds&&Ns.convert(pr)!==Ct.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const jn=tr===no&&(kt.has("EXT_color_buffer_half_float")||Vt.isWebGL2&&kt.has("EXT_color_buffer_float"));if(!(tr===eo||Ns.convert(tr)===Ct.getParameter(35738)||tr===Vs&&(Vt.isWebGL2||kt.has("OES_texture_float")||kt.has("WEBGL_color_buffer_float"))||jn))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===Ct.checkFramebufferStatus(36160)?at>=0&&at<=ae.width-ot&&Le>=0&&Le<=ae.height-Nt&&Ct.readPixels(at,Le,ot,Nt,Ns.convert(pr),Ns.convert(tr),kn):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const Hn=null!==ee?re.get(ee).__webglFramebuffer:null;Ot.bindFramebuffer(36160,Hn)}}},this.copyFramebufferToTexture=function(ae,at,Le=0){const ot=Math.pow(2,-Le),Nt=Math.floor(at.image.width*ot),kn=Math.floor(at.image.height*ot);let dn=Ns.convert(at.format);Vt.isWebGL2&&(6407===dn&&(dn=32849),6408===dn&&(dn=32856)),ze.setTexture2D(at,0),Ct.copyTexImage2D(3553,Le,dn,ae.x,ae.y,Nt,kn,0),Ot.unbindTexture()},this.copyTextureToTexture=function(ae,at,Le,ot=0){const Nt=at.image.width,kn=at.image.height,dn=Ns.convert(Le.format),Cn=Ns.convert(Le.type);ze.setTexture2D(Le,0),Ct.pixelStorei(37440,Le.flipY),Ct.pixelStorei(37441,Le.premultiplyAlpha),Ct.pixelStorei(3317,Le.unpackAlignment),at.isDataTexture?Ct.texSubImage2D(3553,ot,ae.x,ae.y,Nt,kn,dn,Cn,at.image.data):at.isCompressedTexture?Ct.compressedTexSubImage2D(3553,ot,ae.x,ae.y,at.mipmaps[0].width,at.mipmaps[0].height,dn,at.mipmaps[0].data):Ct.texSubImage2D(3553,ot,ae.x,ae.y,dn,Cn,at.image),0===ot&&Le.generateMipmaps&&Ct.generateMipmap(3553),Ot.unbindTexture()},this.copyTextureToTexture3D=function(ae,at,Le,ot,Nt=0){if($.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const kn=ae.max.x-ae.min.x+1,dn=ae.max.y-ae.min.y+1,Cn=ae.max.z-ae.min.z+1,Hn=Ns.convert(ot.format),pr=Ns.convert(ot.type);let tr;if(ot.isDataTexture3D)ze.setTexture3D(ot,0),tr=32879;else{if(!ot.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");ze.setTexture2DArray(ot,0),tr=35866}Ct.pixelStorei(37440,ot.flipY),Ct.pixelStorei(37441,ot.premultiplyAlpha),Ct.pixelStorei(3317,ot.unpackAlignment);const jn=Ct.getParameter(3314),Tn=Ct.getParameter(32878),fr=Ct.getParameter(3316),Jn=Ct.getParameter(3315),pl=Ct.getParameter(32877),bi=Le.isCompressedTexture?Le.mipmaps[0]:Le.image;Ct.pixelStorei(3314,bi.width),Ct.pixelStorei(32878,bi.height),Ct.pixelStorei(3316,ae.min.x),Ct.pixelStorei(3315,ae.min.y),Ct.pixelStorei(32877,ae.min.z),Le.isDataTexture||Le.isDataTexture3D?Ct.texSubImage3D(tr,Nt,at.x,at.y,at.z,kn,dn,Cn,Hn,pr,bi.data):Le.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),Ct.compressedTexSubImage3D(tr,Nt,at.x,at.y,at.z,kn,dn,Cn,Hn,bi.data)):Ct.texSubImage3D(tr,Nt,at.x,at.y,at.z,kn,dn,Cn,Hn,pr,bi),Ct.pixelStorei(3314,jn),Ct.pixelStorei(32878,Tn),Ct.pixelStorei(3316,fr),Ct.pixelStorei(3315,Jn),Ct.pixelStorei(32877,pl),0===Nt&&ot.generateMipmaps&&Ct.generateMipmap(tr),Ot.unbindTexture()},this.initTexture=function(ae){ze.setTexture2D(ae,0),Ot.unbindTexture()},this.resetState=function(){O=0,q=0,ee=null,Ot.reset(),Nr.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class qr extends lr{}qr.prototype.isWebGL1Renderer=!0;class mo{constructor(n,a=25e-5){this.name="",this.color=new Wt(n),this.density=a}clone(){return new mo(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}mo.prototype.isFogExp2=!0;class Dr{constructor(n,a=1,u=1e3){this.name="",this.color=new Wt(n),this.near=a,this.far=u}clone(){return new Dr(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Dr.prototype.isFog=!0;class An extends Bn{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(n,a){return super.copy(n,a),null!==n.background&&(this.background=n.background.clone()),null!==n.environment&&(this.environment=n.environment.clone()),null!==n.fog&&(this.fog=n.fog.clone()),null!==n.overrideMaterial&&(this.overrideMaterial=n.overrideMaterial.clone()),this.autoUpdate=n.autoUpdate,this.matrixAutoUpdate=n.matrixAutoUpdate,this}toJSON(n){const a=super.toJSON(n);return null!==this.fog&&(a.object.fog=this.fog.toJSON()),a}}An.prototype.isScene=!0;class Zs{constructor(n,a){this.array=n,this.stride=a,this.count=void 0!==n?n.length/a:0,this.usage=io,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Ws()}onUploadCallback(){}set needsUpdate(n){!0===n&&this.version++}setUsage(n){return this.usage=n,this}copy(n){return this.array=new n.array.constructor(n.array),this.count=n.count,this.stride=n.stride,this.usage=n.usage,this}copyAt(n,a,u){n*=this.stride,u*=a.stride;for(let h=0,g=this.stride;h<g;h++)this.array[n+h]=a.array[u+h];return this}set(n,a=0){return this.array.set(n,a),this}clone(n){void 0===n.arrayBuffers&&(n.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Ws()),void 0===n.arrayBuffers[this.array.buffer._uuid]&&(n.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const a=new this.array.constructor(n.arrayBuffers[this.array.buffer._uuid]),u=new this.constructor(a,this.stride);return u.setUsage(this.usage),u}onUpload(n){return this.onUploadCallback=n,this}toJSON(n){return void 0===n.arrayBuffers&&(n.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Ws()),void 0===n.arrayBuffers[this.array.buffer._uuid]&&(n.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}Zs.prototype.isInterleavedBuffer=!0;const Fr=new te;class oa{constructor(n,a,u,h=!1){this.name="",this.data=n,this.itemSize=a,this.offset=u,this.normalized=!0===h}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(n){this.data.needsUpdate=n}applyMatrix4(n){for(let a=0,u=this.data.count;a<u;a++)Fr.x=this.getX(a),Fr.y=this.getY(a),Fr.z=this.getZ(a),Fr.applyMatrix4(n),this.setXYZ(a,Fr.x,Fr.y,Fr.z);return this}applyNormalMatrix(n){for(let a=0,u=this.count;a<u;a++)Fr.x=this.getX(a),Fr.y=this.getY(a),Fr.z=this.getZ(a),Fr.applyNormalMatrix(n),this.setXYZ(a,Fr.x,Fr.y,Fr.z);return this}transformDirection(n){for(let a=0,u=this.count;a<u;a++)Fr.x=this.getX(a),Fr.y=this.getY(a),Fr.z=this.getZ(a),Fr.transformDirection(n),this.setXYZ(a,Fr.x,Fr.y,Fr.z);return this}setX(n,a){return this.data.array[n*this.data.stride+this.offset]=a,this}setY(n,a){return this.data.array[n*this.data.stride+this.offset+1]=a,this}setZ(n,a){return this.data.array[n*this.data.stride+this.offset+2]=a,this}setW(n,a){return this.data.array[n*this.data.stride+this.offset+3]=a,this}getX(n){return this.data.array[n*this.data.stride+this.offset]}getY(n){return this.data.array[n*this.data.stride+this.offset+1]}getZ(n){return this.data.array[n*this.data.stride+this.offset+2]}getW(n){return this.data.array[n*this.data.stride+this.offset+3]}setXY(n,a,u){return this.data.array[(n=n*this.data.stride+this.offset)+0]=a,this.data.array[n+1]=u,this}setXYZ(n,a,u,h){return this.data.array[(n=n*this.data.stride+this.offset)+0]=a,this.data.array[n+1]=u,this.data.array[n+2]=h,this}setXYZW(n,a,u,h,g){return this.data.array[(n=n*this.data.stride+this.offset)+0]=a,this.data.array[n+1]=u,this.data.array[n+2]=h,this.data.array[n+3]=g,this}clone(n){if(void 0===n){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const a=[];for(let u=0;u<this.count;u++){const h=u*this.data.stride+this.offset;for(let g=0;g<this.itemSize;g++)a.push(this.data.array[h+g])}return new On(new this.array.constructor(a),this.itemSize,this.normalized)}return void 0===n.interleavedBuffers&&(n.interleavedBuffers={}),void 0===n.interleavedBuffers[this.data.uuid]&&(n.interleavedBuffers[this.data.uuid]=this.data.clone(n)),new oa(n.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(n){if(void 0===n){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const a=[];for(let u=0;u<this.count;u++){const h=u*this.data.stride+this.offset;for(let g=0;g<this.itemSize;g++)a.push(this.data.array[h+g])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:a,normalized:this.normalized}}return void 0===n.interleavedBuffers&&(n.interleavedBuffers={}),void 0===n.interleavedBuffers[this.data.uuid]&&(n.interleavedBuffers[this.data.uuid]=this.data.toJSON(n)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}oa.prototype.isInterleavedBufferAttribute=!0;class oc extends En{constructor(n){super(),this.type="SpriteMaterial",this.color=new Wt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this.map=n.map,this.alphaMap=n.alphaMap,this.rotation=n.rotation,this.sizeAttenuation=n.sizeAttenuation,this}}let Yo;oc.prototype.isSpriteMaterial=!0;const lc=new te,Kl=new te,uc=new te,Zo=new It,Jo=new It,Yl=new sn,Gh=new te,cc=new te,Hh=new te,Uf=new It,bp=new It,Vf=new It;class Zl extends Bn{constructor(n){if(super(),this.type="Sprite",void 0===Yo){Yo=new wn;const a=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),u=new Zs(a,5);Yo.setIndex([0,1,2,0,2,3]),Yo.setAttribute("position",new oa(u,3,0,!1)),Yo.setAttribute("uv",new oa(u,2,3,!1))}this.geometry=Yo,this.material=void 0!==n?n:new oc,this.center=new It(.5,.5)}raycast(n,a){null===n.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Kl.setFromMatrixScale(this.matrixWorld),Yl.copy(n.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(n.camera.matrixWorldInverse,this.matrixWorld),uc.setFromMatrixPosition(this.modelViewMatrix),n.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&Kl.multiplyScalar(-uc.z);const u=this.material.rotation;let h,g;0!==u&&(g=Math.cos(u),h=Math.sin(u));const x=this.center;hi(Gh.set(-.5,-.5,0),uc,x,Kl,h,g),hi(cc.set(.5,-.5,0),uc,x,Kl,h,g),hi(Hh.set(.5,.5,0),uc,x,Kl,h,g),Uf.set(0,0),bp.set(1,0),Vf.set(1,1);let w=n.ray.intersectTriangle(Gh,cc,Hh,!1,lc);if(null===w&&(hi(cc.set(-.5,.5,0),uc,x,Kl,h,g),bp.set(0,1),w=n.ray.intersectTriangle(Gh,Hh,cc,!1,lc),null===w))return;const T=n.ray.origin.distanceTo(lc);T<n.near||T>n.far||a.push({distance:T,point:lc.clone(),uv:Ur.getUV(lc,Gh,cc,Hh,Uf,bp,Vf,new It),face:null,object:this})}copy(n){return super.copy(n),void 0!==n.center&&this.center.copy(n.center),this.material=n.material,this}}function hi(b,n,a,u,h,g){Zo.subVectors(b,a).addScalar(.5).multiply(u),void 0!==h?(Jo.x=g*Zo.x-h*Zo.y,Jo.y=h*Zo.x+g*Zo.y):Jo.copy(Zo),b.copy(n),b.x+=Jo.x,b.y+=Jo.y,b.applyMatrix4(Yl)}Zl.prototype.isSprite=!0;const la=new te,ls=new te;class Qo extends Bn{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(n){super.copy(n,!1);const a=n.levels;for(let u=0,h=a.length;u<h;u++){const g=a[u];this.addLevel(g.object.clone(),g.distance)}return this.autoUpdate=n.autoUpdate,this}addLevel(n,a=0){a=Math.abs(a);const u=this.levels;let h;for(h=0;h<u.length&&!(a<u[h].distance);h++);return u.splice(h,0,{distance:a,object:n}),this.add(n),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(n){const a=this.levels;if(a.length>0){let u,h;for(u=1,h=a.length;u<h&&!(n<a[u].distance);u++);return a[u-1].object}return null}raycast(n,a){if(this.levels.length>0){la.setFromMatrixPosition(this.matrixWorld);const u=n.ray.origin.distanceTo(la);this.getObjectForDistance(u).raycast(n,a)}}update(n){const a=this.levels;if(a.length>1){la.setFromMatrixPosition(n.matrixWorld),ls.setFromMatrixPosition(this.matrixWorld);const u=la.distanceTo(ls)/n.zoom;let h,g;for(a[0].object.visible=!0,h=1,g=a.length;h<g&&u>=a[h].distance;h++)a[h-1].object.visible=!1,a[h].object.visible=!0;for(this._currentLevel=h-1;h<g;h++)a[h].object.visible=!1}}toJSON(n){const a=super.toJSON(n);!1===this.autoUpdate&&(a.object.autoUpdate=!1),a.object.levels=[];const u=this.levels;for(let h=0,g=u.length;h<g;h++){const x=u[h];a.object.levels.push({object:x.object.uuid,distance:x.distance})}return a}}const Wf=new te,vp=new sr,Gf=new sr,jh=new te,Jl=new sn;class Va extends es{constructor(n,a){super(n,a),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new sn,this.bindMatrixInverse=new sn}copy(n){return super.copy(n),this.bindMode=n.bindMode,this.bindMatrix.copy(n.bindMatrix),this.bindMatrixInverse.copy(n.bindMatrixInverse),this.skeleton=n.skeleton,this}bind(n,a){this.skeleton=n,void 0===a&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),a=this.matrixWorld),this.bindMatrix.copy(a),this.bindMatrixInverse.copy(a).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const n=new sr,a=this.geometry.attributes.skinWeight;for(let u=0,h=a.count;u<h;u++){n.x=a.getX(u),n.y=a.getY(u),n.z=a.getZ(u),n.w=a.getW(u);const g=1/n.manhattanLength();g!==1/0?n.multiplyScalar(g):n.set(1,0,0,0),a.setXYZW(u,n.x,n.y,n.z,n.w)}}updateMatrixWorld(n){super.updateMatrixWorld(n),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(n,a){const u=this.skeleton,h=this.geometry;vp.fromBufferAttribute(h.attributes.skinIndex,n),Gf.fromBufferAttribute(h.attributes.skinWeight,n),Wf.fromBufferAttribute(h.attributes.position,n).applyMatrix4(this.bindMatrix),a.set(0,0,0);for(let g=0;g<4;g++){const x=Gf.getComponent(g);if(0!==x){const w=vp.getComponent(g);Jl.multiplyMatrices(u.bones[w].matrixWorld,u.boneInverses[w]),a.addScaledVector(jh.copy(Wf).applyMatrix4(Jl),x)}}return a.applyMatrix4(this.bindMatrixInverse)}}Va.prototype.isSkinnedMesh=!0;class ts extends Bn{constructor(){super(),this.type="Bone"}}ts.prototype.isBone=!0;class di extends Br{constructor(n=null,a=1,u=1,h,g,x,w,T,M=or,E=or,N,C){super(null,x,w,T,M,E,h,g,N,C),this.image={data:n,width:a,height:u},this.magFilter=M,this.minFilter=E,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}di.prototype.isDataTexture=!0;const Me=new sn,wp=new sn;class qh{constructor(n=[],a=[]){this.uuid=Ws(),this.bones=n.slice(0),this.boneInverses=a,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const n=this.bones,a=this.boneInverses;if(this.boneMatrices=new Float32Array(16*n.length),0===a.length)this.calculateInverses();else if(n.length!==a.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let u=0,h=this.bones.length;u<h;u++)this.boneInverses.push(new sn)}}calculateInverses(){this.boneInverses.length=0;for(let n=0,a=this.bones.length;n<a;n++){const u=new sn;this.bones[n]&&u.copy(this.bones[n].matrixWorld).invert(),this.boneInverses.push(u)}}pose(){for(let n=0,a=this.bones.length;n<a;n++){const u=this.bones[n];u&&u.matrixWorld.copy(this.boneInverses[n]).invert()}for(let n=0,a=this.bones.length;n<a;n++){const u=this.bones[n];u&&(u.parent&&u.parent.isBone?(u.matrix.copy(u.parent.matrixWorld).invert(),u.matrix.multiply(u.matrixWorld)):u.matrix.copy(u.matrixWorld),u.matrix.decompose(u.position,u.quaternion,u.scale))}}update(){const n=this.bones,a=this.boneInverses,u=this.boneMatrices,h=this.boneTexture;for(let g=0,x=n.length;g<x;g++)Me.multiplyMatrices(n[g]?n[g].matrixWorld:wp,a[g]),Me.toArray(u,16*g);null!==h&&(h.needsUpdate=!0)}clone(){return new qh(this.bones,this.boneInverses)}computeBoneTexture(){let n=Math.sqrt(4*this.bones.length);n=tp(n),n=Math.max(n,4);const a=new Float32Array(n*n*4);a.set(this.boneMatrices);const u=new di(a,n,n,Ds,Vs);return this.boneMatrices=a,this.boneTexture=u,this.boneTextureSize=n,this}getBoneByName(n){for(let a=0,u=this.bones.length;a<u;a++){const h=this.bones[a];if(h.name===n)return h}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(n,a){this.uuid=n.uuid;for(let u=0,h=n.bones.length;u<h;u++){const g=n.bones[u];let x=a[g];void 0===x&&(console.warn("THREE.Skeleton: No bone found with UUID:",g),x=new ts),this.bones.push(x),this.boneInverses.push((new sn).fromArray(n.boneInverses[u]))}return this.init(),this}toJSON(){const n={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};n.uuid=this.uuid;const a=this.bones,u=this.boneInverses;for(let h=0,g=a.length;h<g;h++)n.bones.push(a[h].uuid),n.boneInverses.push(u[h].toArray());return n}}class dr extends On{constructor(n,a,u,h=1){"number"==typeof u&&(h=u,u=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(n,a,u),this.meshPerAttribute=h}copy(n){return super.copy(n),this.meshPerAttribute=n.meshPerAttribute,this}toJSON(){const n=super.toJSON();return n.meshPerAttribute=this.meshPerAttribute,n.isInstancedBufferAttribute=!0,n}}dr.prototype.isInstancedBufferAttribute=!0;const ua=new sn,Gn=new sn,go=[],Sp=new es;class hc extends es{constructor(n,a,u){super(n,a),this.instanceMatrix=new dr(new Float32Array(16*u),16),this.instanceColor=null,this.count=u,this.frustumCulled=!1}copy(n){return super.copy(n),this.instanceMatrix.copy(n.instanceMatrix),null!==n.instanceColor&&(this.instanceColor=n.instanceColor.clone()),this.count=n.count,this}getColorAt(n,a){a.fromArray(this.instanceColor.array,3*n)}getMatrixAt(n,a){a.fromArray(this.instanceMatrix.array,16*n)}raycast(n,a){const u=this.matrixWorld,h=this.count;if(Sp.geometry=this.geometry,Sp.material=this.material,void 0!==Sp.material)for(let g=0;g<h;g++){this.getMatrixAt(g,ua),Gn.multiplyMatrices(u,ua),Sp.matrixWorld=Gn,Sp.raycast(n,go);for(let x=0,w=go.length;x<w;x++){const T=go[x];T.instanceId=g,T.object=this,a.push(T)}go.length=0}}setColorAt(n,a){null===this.instanceColor&&(this.instanceColor=new dr(new Float32Array(3*this.instanceMatrix.count),3)),a.toArray(this.instanceColor.array,3*n)}setMatrixAt(n,a){a.toArray(this.instanceMatrix.array,16*n)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}hc.prototype.isInstancedMesh=!0;class Vr extends En{constructor(n){super(),this.type="LineBasicMaterial",this.color=new Wt(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this.linewidth=n.linewidth,this.linecap=n.linecap,this.linejoin=n.linejoin,this}}Vr.prototype.isLineBasicMaterial=!0;const Cg=new te,Ng=new te,Ag=new sn,Tp=new Ra,Mp=new Na;class _i extends Bn{constructor(n=new wn,a=new Vr){super(),this.type="Line",this.geometry=n,this.material=a,this.updateMorphTargets()}copy(n){return super.copy(n),this.material=n.material,this.geometry=n.geometry,this}computeLineDistances(){const n=this.geometry;if(n.isBufferGeometry)if(null===n.index){const a=n.attributes.position,u=[0];for(let h=1,g=a.count;h<g;h++)Cg.fromBufferAttribute(a,h-1),Ng.fromBufferAttribute(a,h),u[h]=u[h-1],u[h]+=Cg.distanceTo(Ng);n.setAttribute("lineDistance",new Pt(u,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else n.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(n,a){const u=this.geometry,h=this.matrixWorld,g=n.params.Line.threshold,x=u.drawRange;if(null===u.boundingSphere&&u.computeBoundingSphere(),Mp.copy(u.boundingSphere),Mp.applyMatrix4(h),Mp.radius+=g,!1===n.ray.intersectsSphere(Mp))return;Ag.copy(h).invert(),Tp.copy(n.ray).applyMatrix4(Ag);const w=g/((this.scale.x+this.scale.y+this.scale.z)/3),T=w*w,M=new te,E=new te,N=new te,C=new te,L=this.isLineSegments?2:1;if(u.isBufferGeometry){const D=u.index,$=u.attributes.position;if(null!==D)for(let B=Math.max(0,x.start),O=Math.min(D.count,x.start+x.count)-1;B<O;B+=L){const q=D.getX(B),ee=D.getX(B+1);if(M.fromBufferAttribute($,q),E.fromBufferAttribute($,ee),Tp.distanceSqToSegment(M,E,C,N)>T)continue;C.applyMatrix4(this.matrixWorld);const Y=n.ray.origin.distanceTo(C);Y<n.near||Y>n.far||a.push({distance:Y,point:N.clone().applyMatrix4(this.matrixWorld),index:B,face:null,faceIndex:null,object:this})}else for(let B=Math.max(0,x.start),O=Math.min($.count,x.start+x.count)-1;B<O;B+=L){if(M.fromBufferAttribute($,B),E.fromBufferAttribute($,B+1),Tp.distanceSqToSegment(M,E,C,N)>T)continue;C.applyMatrix4(this.matrixWorld);const q=n.ray.origin.distanceTo(C);q<n.near||q>n.far||a.push({distance:q,point:N.clone().applyMatrix4(this.matrixWorld),index:B,face:null,faceIndex:null,object:this})}}else u.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const n=this.geometry;if(n.isBufferGeometry){const a=n.morphAttributes,u=Object.keys(a);if(u.length>0){const h=a[u[0]];if(void 0!==h){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let g=0,x=h.length;g<x;g++){const w=h[g].name||String(g);this.morphTargetInfluences.push(0),this.morphTargetDictionary[w]=g}}}}else{const a=n.morphTargets;void 0!==a&&a.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}_i.prototype.isLine=!0;const Hf=new te,Js=new te;class pi extends _i{constructor(n,a){super(n,a),this.type="LineSegments"}computeLineDistances(){const n=this.geometry;if(n.isBufferGeometry)if(null===n.index){const a=n.attributes.position,u=[];for(let h=0,g=a.count;h<g;h+=2)Hf.fromBufferAttribute(a,h),Js.fromBufferAttribute(a,h+1),u[h]=0===h?0:u[h-1],u[h+1]=u[h]+Hf.distanceTo(Js);n.setAttribute("lineDistance",new Pt(u,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else n.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}pi.prototype.isLineSegments=!0;class jf extends _i{constructor(n,a){super(n,a),this.type="LineLoop"}}jf.prototype.isLineLoop=!0;class Ql extends En{constructor(n){super(),this.type="PointsMaterial",this.color=new Wt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this.map=n.map,this.alphaMap=n.alphaMap,this.size=n.size,this.sizeAttenuation=n.sizeAttenuation,this}}Ql.prototype.isPointsMaterial=!0;const Rg=new sn,Wa=new Ra,dc=new Na,Xh=new te;class eu extends Bn{constructor(n=new wn,a=new Ql){super(),this.type="Points",this.geometry=n,this.material=a,this.updateMorphTargets()}copy(n){return super.copy(n),this.material=n.material,this.geometry=n.geometry,this}raycast(n,a){const u=this.geometry,h=this.matrixWorld,g=n.params.Points.threshold,x=u.drawRange;if(null===u.boundingSphere&&u.computeBoundingSphere(),dc.copy(u.boundingSphere),dc.applyMatrix4(h),dc.radius+=g,!1===n.ray.intersectsSphere(dc))return;Rg.copy(h).invert(),Wa.copy(n.ray).applyMatrix4(Rg);const w=g/((this.scale.x+this.scale.y+this.scale.z)/3),T=w*w;if(u.isBufferGeometry){const M=u.index,E=u.attributes.position;if(null!==M)for(let N=Math.max(0,x.start),C=Math.min(M.count,x.start+x.count);N<C;N++){const L=M.getX(N);Xh.fromBufferAttribute(E,L),qf(Xh,L,T,h,n,a,this)}else for(let N=Math.max(0,x.start),C=Math.min(E.count,x.start+x.count);N<C;N++)Xh.fromBufferAttribute(E,N),qf(Xh,N,T,h,n,a,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const n=this.geometry;if(n.isBufferGeometry){const a=n.morphAttributes,u=Object.keys(a);if(u.length>0){const h=a[u[0]];if(void 0!==h){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let g=0,x=h.length;g<x;g++){const w=h[g].name||String(g);this.morphTargetInfluences.push(0),this.morphTargetDictionary[w]=g}}}}else{const a=n.morphTargets;void 0!==a&&a.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function qf(b,n,a,u,h,g,x){const w=Wa.distanceSqToPoint(b);if(w<a){const T=new te;Wa.closestPointToPoint(b,T),T.applyMatrix4(u);const M=h.ray.origin.distanceTo(T);if(M<h.near||M>h.far)return;g.push({distance:M,distanceToRay:Math.sqrt(w),point:T,index:n,face:null,object:x})}}eu.prototype.isPoints=!0;class Lg extends Br{constructor(n,a,u,h,g,x,w,T,M){super(n,a,u,h,g,x,w,T,M),this.format=void 0!==w?w:_a,this.minFilter=void 0!==x?x:Zn,this.magFilter=void 0!==g?g:Zn,this.generateMipmaps=!1;const E=this;"requestVideoFrameCallback"in n&&n.requestVideoFrameCallback(function N(){E.needsUpdate=!0,n.requestVideoFrameCallback(N)})}clone(){return new this.constructor(this.image).copy(this)}update(){const n=this.image;!("requestVideoFrameCallback"in n)&&n.readyState>=n.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}Lg.prototype.isVideoTexture=!0;class Xf extends Br{constructor(n,a,u,h,g,x,w,T,M,E,N,C){super(null,x,w,T,M,E,h,g,N,C),this.image={width:a,height:u},this.mipmaps=n,this.flipY=!1,this.generateMipmaps=!1}}Xf.prototype.isCompressedTexture=!0;class Kh extends Br{constructor(n,a,u,h,g,x,w,T,M){super(n,a,u,h,g,x,w,T,M),this.needsUpdate=!0}}Kh.prototype.isCanvasTexture=!0;class _p extends Br{constructor(n,a,u,h,g,x,w,T,M,E){if((E=void 0!==E?E:Zr)!==Zr&&E!==Bc)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===u&&E===Zr&&(u=zc),void 0===u&&E===Bc&&(u=Il),super(null,h,g,x,w,T,E,u,M),this.image={width:n,height:a},this.magFilter=void 0!==w?w:or,this.minFilter=void 0!==T?T:or,this.flipY=!1,this.generateMipmaps=!1}}_p.prototype.isDepthTexture=!0;class el extends wn{constructor(n=1,a=8,u=0,h=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:n,segments:a,thetaStart:u,thetaLength:h},a=Math.max(3,a);const g=[],x=[],w=[],T=[],M=new te,E=new It;x.push(0,0,0),w.push(0,0,1),T.push(.5,.5);for(let N=0,C=3;N<=a;N++,C+=3){const L=u+N/a*h;M.x=n*Math.cos(L),M.y=n*Math.sin(L),x.push(M.x,M.y,M.z),w.push(0,0,1),E.x=(x[C]/n+1)/2,E.y=(x[C+1]/n+1)/2,T.push(E.x,E.y)}for(let N=1;N<=a;N++)g.push(N,N+1,0);this.setIndex(g),this.setAttribute("position",new Pt(x,3)),this.setAttribute("normal",new Pt(w,3)),this.setAttribute("uv",new Pt(T,2))}static fromJSON(n){return new el(n.radius,n.segments,n.thetaStart,n.thetaLength)}}class tl extends wn{constructor(n=1,a=1,u=1,h=8,g=1,x=!1,w=0,T=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:n,radiusBottom:a,height:u,radialSegments:h,heightSegments:g,openEnded:x,thetaStart:w,thetaLength:T};const M=this;h=Math.floor(h),g=Math.floor(g);const E=[],N=[],C=[],L=[];let D=0;const $=[],B=u/2;let O=0;function q(ee){const Y=D,ce=new It,he=new te;let Ie=0;const Ae=!0===ee?n:a,We=!0===ee?1:-1;for(let Oe=1;Oe<=h;Oe++)N.push(0,B*We,0),C.push(0,We,0),L.push(.5,.5),D++;const $e=D;for(let Oe=0;Oe<=h;Oe++){const At=Oe/h*T+w,bt=Math.cos(At),rt=Math.sin(At);he.x=Ae*rt,he.y=B*We,he.z=Ae*bt,N.push(he.x,he.y,he.z),C.push(0,We,0),ce.x=.5*bt+.5,ce.y=.5*rt*We+.5,L.push(ce.x,ce.y),D++}for(let Oe=0;Oe<h;Oe++){const At=Y+Oe,bt=$e+Oe;!0===ee?E.push(bt,bt+1,At):E.push(bt+1,bt,At),Ie+=3}M.addGroup(O,Ie,!0===ee?1:2),O+=Ie}(function(){const ee=new te,Y=new te;let ce=0;const he=(a-n)/u;for(let Ie=0;Ie<=g;Ie++){const Ae=[],We=Ie/g,$e=We*(a-n)+n;for(let Oe=0;Oe<=h;Oe++){const At=Oe/h,bt=At*T+w,rt=Math.sin(bt),Mt=Math.cos(bt);Y.x=$e*rt,Y.y=-We*u+B,Y.z=$e*Mt,N.push(Y.x,Y.y,Y.z),ee.set(rt,he,Mt).normalize(),C.push(ee.x,ee.y,ee.z),L.push(At,1-We),Ae.push(D++)}$.push(Ae)}for(let Ie=0;Ie<h;Ie++)for(let Ae=0;Ae<g;Ae++){const $e=$[Ae+1][Ie],Oe=$[Ae+1][Ie+1],At=$[Ae][Ie+1];E.push($[Ae][Ie],$e,At),E.push($e,Oe,At),ce+=6}M.addGroup(O,ce,0),O+=ce})(),!1===x&&(n>0&&q(!0),a>0&&q(!1)),this.setIndex(E),this.setAttribute("position",new Pt(N,3)),this.setAttribute("normal",new Pt(C,3)),this.setAttribute("uv",new Pt(L,2))}static fromJSON(n){return new tl(n.radiusTop,n.radiusBottom,n.height,n.radialSegments,n.heightSegments,n.openEnded,n.thetaStart,n.thetaLength)}}class tu extends tl{constructor(n=1,a=1,u=8,h=1,g=!1,x=0,w=2*Math.PI){super(0,n,a,u,h,g,x,w),this.type="ConeGeometry",this.parameters={radius:n,height:a,radialSegments:u,heightSegments:h,openEnded:g,thetaStart:x,thetaLength:w}}static fromJSON(n){return new tu(n.radius,n.height,n.radialSegments,n.heightSegments,n.openEnded,n.thetaStart,n.thetaLength)}}class fi extends wn{constructor(n,a,u=1,h=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:n,indices:a,radius:u,detail:h};const g=[],x=[];function w(C,L,D,$){const B=$+1,O=[];for(let q=0;q<=B;q++){O[q]=[];const ee=C.clone().lerp(D,q/B),Y=L.clone().lerp(D,q/B),ce=B-q;for(let he=0;he<=ce;he++)O[q][he]=0===he&&q===B?ee:ee.clone().lerp(Y,he/ce)}for(let q=0;q<B;q++)for(let ee=0;ee<2*(B-q)-1;ee++){const Y=Math.floor(ee/2);ee%2==0?(T(O[q][Y+1]),T(O[q+1][Y]),T(O[q][Y])):(T(O[q][Y+1]),T(O[q+1][Y+1]),T(O[q+1][Y]))}}function T(C){g.push(C.x,C.y,C.z)}function M(C,L){const D=3*C;L.x=n[D+0],L.y=n[D+1],L.z=n[D+2]}function E(C,L,D,$){$<0&&1===C.x&&(x[L]=C.x-1),0===D.x&&0===D.z&&(x[L]=$/2/Math.PI+.5)}function N(C){return Math.atan2(C.z,-C.x)}(function(C){const L=new te,D=new te,$=new te;for(let B=0;B<a.length;B+=3)M(a[B+0],L),M(a[B+1],D),M(a[B+2],$),w(L,D,$,C)})(h),function(C){const L=new te;for(let D=0;D<g.length;D+=3)L.x=g[D+0],L.y=g[D+1],L.z=g[D+2],L.normalize().multiplyScalar(C),g[D+0]=L.x,g[D+1]=L.y,g[D+2]=L.z}(u),function(){const C=new te;for(let D=0;D<g.length;D+=3){C.x=g[D+0],C.y=g[D+1],C.z=g[D+2];const $=N(C)/2/Math.PI+.5,B=(L=C,Math.atan2(-L.y,Math.sqrt(L.x*L.x+L.z*L.z))/Math.PI+.5);x.push($,1-B)}var L;(function(){const D=new te,$=new te,B=new te,O=new te,q=new It,ee=new It,Y=new It;for(let ce=0,he=0;ce<g.length;ce+=9,he+=6){D.set(g[ce+0],g[ce+1],g[ce+2]),$.set(g[ce+3],g[ce+4],g[ce+5]),B.set(g[ce+6],g[ce+7],g[ce+8]),q.set(x[he+0],x[he+1]),ee.set(x[he+2],x[he+3]),Y.set(x[he+4],x[he+5]),O.copy(D).add($).add(B).divideScalar(3);const Ie=N(O);E(q,he+0,D,Ie),E(ee,he+2,$,Ie),E(Y,he+4,B,Ie)}})(),function(){for(let D=0;D<x.length;D+=6){const $=x[D+0],B=x[D+2],O=x[D+4],q=Math.max($,B,O),ee=Math.min($,B,O);q>.9&&ee<.1&&($<.2&&(x[D+0]+=1),B<.2&&(x[D+2]+=1),O<.2&&(x[D+4]+=1))}}()}(),this.setAttribute("position",new Pt(g,3)),this.setAttribute("normal",new Pt(g.slice(),3)),this.setAttribute("uv",new Pt(x,2)),0===h?this.computeVertexNormals():this.normalizeNormals()}static fromJSON(n){return new fi(n.vertices,n.indices,n.radius,n.details)}}class Yh extends fi{constructor(n=1,a=0){const u=(1+Math.sqrt(5))/2,h=1/u;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-h,-u,0,-h,u,0,h,-u,0,h,u,-h,-u,0,-h,u,0,h,-u,0,h,u,0,-u,0,-h,u,0,-h,-u,0,h,u,0,h],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],n,a),this.type="DodecahedronGeometry",this.parameters={radius:n,detail:a}}static fromJSON(n){return new Yh(n.radius,n.detail)}}const Zh=new te,$s=new te,fs=new te,Jh=new Ur;class Kf extends wn{constructor(n,a){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:a},a=void 0!==a?a:1,!0===n.isGeometry)return void console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const u=Math.pow(10,4),h=Math.cos(Ia*a),g=n.getIndex(),x=n.getAttribute("position"),w=g?g.count:x.count,T=[0,0,0],M=["a","b","c"],E=new Array(3),N={},C=[];for(let L=0;L<w;L+=3){g?(T[0]=g.getX(L),T[1]=g.getX(L+1),T[2]=g.getX(L+2)):(T[0]=L,T[1]=L+1,T[2]=L+2);const{a:D,b:$,c:B}=Jh;if(D.fromBufferAttribute(x,T[0]),$.fromBufferAttribute(x,T[1]),B.fromBufferAttribute(x,T[2]),Jh.getNormal(fs),E[0]=`${Math.round(D.x*u)},${Math.round(D.y*u)},${Math.round(D.z*u)}`,E[1]=`${Math.round($.x*u)},${Math.round($.y*u)},${Math.round($.z*u)}`,E[2]=`${Math.round(B.x*u)},${Math.round(B.y*u)},${Math.round(B.z*u)}`,E[0]!==E[1]&&E[1]!==E[2]&&E[2]!==E[0])for(let O=0;O<3;O++){const q=(O+1)%3,ee=E[O],Y=E[q],ce=Jh[M[O]],he=Jh[M[q]],Ie=`${ee}_${Y}`,Ae=`${Y}_${ee}`;Ae in N&&N[Ae]?(fs.dot(N[Ae].normal)<=h&&(C.push(ce.x,ce.y,ce.z),C.push(he.x,he.y,he.z)),N[Ae]=null):Ie in N||(N[Ie]={index0:T[O],index1:T[q],normal:fs.clone()})}}for(const L in N)if(N[L]){const{index0:D,index1:$}=N[L];Zh.fromBufferAttribute(x,D),$s.fromBufferAttribute(x,$),C.push(Zh.x,Zh.y,Zh.z),C.push($s.x,$s.y,$s.z)}this.setAttribute("position",new Pt(C,3))}}class ki{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(n,a){const u=this.getUtoTmapping(n);return this.getPoint(u,a)}getPoints(n=5){const a=[];for(let u=0;u<=n;u++)a.push(this.getPoint(u/n));return a}getSpacedPoints(n=5){const a=[];for(let u=0;u<=n;u++)a.push(this.getPointAt(u/n));return a}getLength(){const n=this.getLengths();return n[n.length-1]}getLengths(n=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===n+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const a=[];let u,h=this.getPoint(0),g=0;a.push(0);for(let x=1;x<=n;x++)u=this.getPoint(x/n),g+=u.distanceTo(h),a.push(g),h=u;return this.cacheArcLengths=a,a}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(n,a){const u=this.getLengths();let h=0;const g=u.length;let x;x=a||n*u[g-1];let w,T=0,M=g-1;for(;T<=M;)if(h=Math.floor(T+(M-T)/2),w=u[h]-x,w<0)T=h+1;else{if(!(w>0)){M=h;break}M=h-1}if(h=M,u[h]===x)return h/(g-1);const E=u[h];return(h+(x-E)/(u[h+1]-E))/(g-1)}getTangent(n,a){const u=1e-4;let h=n-u,g=n+u;h<0&&(h=0),g>1&&(g=1);const x=this.getPoint(h),w=this.getPoint(g),T=a||(x.isVector2?new It:new te);return T.copy(w).sub(x).normalize(),T}getTangentAt(n,a){const u=this.getUtoTmapping(n);return this.getTangent(u,a)}computeFrenetFrames(n,a){const u=new te,h=[],g=[],x=[],w=new te,T=new sn;for(let L=0;L<=n;L++)h[L]=this.getTangentAt(L/n,new te),h[L].normalize();g[0]=new te,x[0]=new te;let M=Number.MAX_VALUE;const E=Math.abs(h[0].x),N=Math.abs(h[0].y),C=Math.abs(h[0].z);E<=M&&(M=E,u.set(1,0,0)),N<=M&&(M=N,u.set(0,1,0)),C<=M&&u.set(0,0,1),w.crossVectors(h[0],u).normalize(),g[0].crossVectors(h[0],w),x[0].crossVectors(h[0],g[0]);for(let L=1;L<=n;L++){if(g[L]=g[L-1].clone(),x[L]=x[L-1].clone(),w.crossVectors(h[L-1],h[L]),w.length()>Number.EPSILON){w.normalize();const D=Math.acos(jr(h[L-1].dot(h[L]),-1,1));g[L].applyMatrix4(T.makeRotationAxis(w,D))}x[L].crossVectors(h[L],g[L])}if(!0===a){let L=Math.acos(jr(g[0].dot(g[n]),-1,1));L/=n,h[0].dot(w.crossVectors(g[0],g[n]))>0&&(L=-L);for(let D=1;D<=n;D++)g[D].applyMatrix4(T.makeRotationAxis(h[D],L*D)),x[D].crossVectors(h[D],g[D])}return{tangents:h,normals:g,binormals:x}}clone(){return(new this.constructor).copy(this)}copy(n){return this.arcLengthDivisions=n.arcLengthDivisions,this}toJSON(){const n={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return n.arcLengthDivisions=this.arcLengthDivisions,n.type=this.type,n}fromJSON(n){return this.arcLengthDivisions=n.arcLengthDivisions,this}}class yo extends ki{constructor(n=0,a=0,u=1,h=1,g=0,x=2*Math.PI,w=!1,T=0){super(),this.type="EllipseCurve",this.aX=n,this.aY=a,this.xRadius=u,this.yRadius=h,this.aStartAngle=g,this.aEndAngle=x,this.aClockwise=w,this.aRotation=T}getPoint(n,a){const u=a||new It,h=2*Math.PI;let g=this.aEndAngle-this.aStartAngle;const x=Math.abs(g)<Number.EPSILON;for(;g<0;)g+=h;for(;g>h;)g-=h;g<Number.EPSILON&&(g=x?0:h),!0!==this.aClockwise||x||(g===h?g=-h:g-=h);const w=this.aStartAngle+n*g;let T=this.aX+this.xRadius*Math.cos(w),M=this.aY+this.yRadius*Math.sin(w);if(0!==this.aRotation){const E=Math.cos(this.aRotation),N=Math.sin(this.aRotation),C=T-this.aX,L=M-this.aY;T=C*E-L*N+this.aX,M=C*N+L*E+this.aY}return u.set(T,M)}copy(n){return super.copy(n),this.aX=n.aX,this.aY=n.aY,this.xRadius=n.xRadius,this.yRadius=n.yRadius,this.aStartAngle=n.aStartAngle,this.aEndAngle=n.aEndAngle,this.aClockwise=n.aClockwise,this.aRotation=n.aRotation,this}toJSON(){const n=super.toJSON();return n.aX=this.aX,n.aY=this.aY,n.xRadius=this.xRadius,n.yRadius=this.yRadius,n.aStartAngle=this.aStartAngle,n.aEndAngle=this.aEndAngle,n.aClockwise=this.aClockwise,n.aRotation=this.aRotation,n}fromJSON(n){return super.fromJSON(n),this.aX=n.aX,this.aY=n.aY,this.xRadius=n.xRadius,this.yRadius=n.yRadius,this.aStartAngle=n.aStartAngle,this.aEndAngle=n.aEndAngle,this.aClockwise=n.aClockwise,this.aRotation=n.aRotation,this}}yo.prototype.isEllipseCurve=!0;class kp extends yo{constructor(n,a,u,h,g,x){super(n,a,u,u,h,g,x),this.type="ArcCurve"}}function Qs(){let b=0,n=0,a=0,u=0;function h(g,x,w,T){b=g,n=w,a=-3*g+3*x-2*w-T,u=2*g-2*x+w+T}return{initCatmullRom:function(g,x,w,T,M){h(x,w,M*(w-g),M*(T-x))},initNonuniformCatmullRom:function(g,x,w,T,M,E,N){let C=(x-g)/M-(w-g)/(M+E)+(w-x)/E,L=(w-x)/E-(T-x)/(E+N)+(T-w)/N;C*=E,L*=E,h(x,w,C,L)},calc:function(g){const x=g*g;return b+n*g+a*x+u*(x*g)}}}kp.prototype.isArcCurve=!0;const Is=new te,Ep=new Qs,mi=new Qs,Ip=new Qs;class nu extends ki{constructor(n=[],a=!1,u="centripetal",h=.5){super(),this.type="CatmullRomCurve3",this.points=n,this.closed=a,this.curveType=u,this.tension=h}getPoint(n,a=new te){const u=a,h=this.points,g=h.length,x=(g-(this.closed?0:1))*n;let w,T,M=Math.floor(x),E=x-M;this.closed?M+=M>0?0:(Math.floor(Math.abs(M)/g)+1)*g:0===E&&M===g-1&&(M=g-2,E=1),this.closed||M>0?w=h[(M-1)%g]:(Is.subVectors(h[0],h[1]).add(h[0]),w=Is);const N=h[M%g],C=h[(M+1)%g];if(this.closed||M+2<g?T=h[(M+2)%g]:(Is.subVectors(h[g-1],h[g-2]).add(h[g-1]),T=Is),"centripetal"===this.curveType||"chordal"===this.curveType){const L="chordal"===this.curveType?.5:.25;let D=Math.pow(w.distanceToSquared(N),L),$=Math.pow(N.distanceToSquared(C),L),B=Math.pow(C.distanceToSquared(T),L);$<1e-4&&($=1),D<1e-4&&(D=$),B<1e-4&&(B=$),Ep.initNonuniformCatmullRom(w.x,N.x,C.x,T.x,D,$,B),mi.initNonuniformCatmullRom(w.y,N.y,C.y,T.y,D,$,B),Ip.initNonuniformCatmullRom(w.z,N.z,C.z,T.z,D,$,B)}else"catmullrom"===this.curveType&&(Ep.initCatmullRom(w.x,N.x,C.x,T.x,this.tension),mi.initCatmullRom(w.y,N.y,C.y,T.y,this.tension),Ip.initCatmullRom(w.z,N.z,C.z,T.z,this.tension));return u.set(Ep.calc(E),mi.calc(E),Ip.calc(E)),u}copy(n){super.copy(n),this.points=[];for(let a=0,u=n.points.length;a<u;a++)this.points.push(n.points[a].clone());return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}toJSON(){const n=super.toJSON();n.points=[];for(let a=0,u=this.points.length;a<u;a++)n.points.push(this.points[a].toArray());return n.closed=this.closed,n.curveType=this.curveType,n.tension=this.tension,n}fromJSON(n){super.fromJSON(n),this.points=[];for(let a=0,u=n.points.length;a<u;a++){const h=n.points[a];this.points.push((new te).fromArray(h))}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}}function ru(b,n,a,u,h){const g=.5*(u-n),x=.5*(h-a),w=b*b;return(2*a-2*u+g+x)*(b*w)+(-3*a+3*u-2*g-x)*w+g*b+a}function ms(b,n,a,u){return function(h,g){const x=1-h;return x*x*g}(b,n)+2*(1-(h=b))*h*a+function(h,g){return h*h*g}(b,u);var h}function ca(b,n,a,u,h){return function(g,x){const w=1-g;return w*w*w*x}(b,n)+function(g,x){const w=1-g;return 3*w*w*g*x}(b,a)+3*(1-(g=b))*g*g*u+function(g,x){return g*g*g*x}(b,h);var g}nu.prototype.isCatmullRomCurve3=!0;class pc extends ki{constructor(n=new It,a=new It,u=new It,h=new It){super(),this.type="CubicBezierCurve",this.v0=n,this.v1=a,this.v2=u,this.v3=h}getPoint(n,a=new It){const u=a,h=this.v0,g=this.v1,x=this.v2,w=this.v3;return u.set(ca(n,h.x,g.x,x.x,w.x),ca(n,h.y,g.y,x.y,w.y)),u}copy(n){return super.copy(n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this.v3.copy(n.v3),this}toJSON(){const n=super.toJSON();return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n.v3=this.v3.toArray(),n}fromJSON(n){return super.fromJSON(n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this.v3.fromArray(n.v3),this}}pc.prototype.isCubicBezierCurve=!0;class Yf extends ki{constructor(n=new te,a=new te,u=new te,h=new te){super(),this.type="CubicBezierCurve3",this.v0=n,this.v1=a,this.v2=u,this.v3=h}getPoint(n,a=new te){const u=a,h=this.v0,g=this.v1,x=this.v2,w=this.v3;return u.set(ca(n,h.x,g.x,x.x,w.x),ca(n,h.y,g.y,x.y,w.y),ca(n,h.z,g.z,x.z,w.z)),u}copy(n){return super.copy(n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this.v3.copy(n.v3),this}toJSON(){const n=super.toJSON();return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n.v3=this.v3.toArray(),n}fromJSON(n){return super.fromJSON(n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this.v3.fromArray(n.v3),this}}Yf.prototype.isCubicBezierCurve3=!0;class Qh extends ki{constructor(n=new It,a=new It){super(),this.type="LineCurve",this.v1=n,this.v2=a}getPoint(n,a=new It){const u=a;return 1===n?u.copy(this.v2):(u.copy(this.v2).sub(this.v1),u.multiplyScalar(n).add(this.v1)),u}getPointAt(n,a){return this.getPoint(n,a)}getTangent(n,a){const u=a||new It;return u.copy(this.v2).sub(this.v1).normalize(),u}copy(n){return super.copy(n),this.v1.copy(n.v1),this.v2.copy(n.v2),this}toJSON(){const n=super.toJSON();return n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n}fromJSON(n){return super.fromJSON(n),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this}}Qh.prototype.isLineCurve=!0;class Zf extends ki{constructor(n=new te,a=new te){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=n,this.v2=a}getPoint(n,a=new te){const u=a;return 1===n?u.copy(this.v2):(u.copy(this.v2).sub(this.v1),u.multiplyScalar(n).add(this.v1)),u}getPointAt(n,a){return this.getPoint(n,a)}copy(n){return super.copy(n),this.v1.copy(n.v1),this.v2.copy(n.v2),this}toJSON(){const n=super.toJSON();return n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n}fromJSON(n){return super.fromJSON(n),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this}}class su extends ki{constructor(n=new It,a=new It,u=new It){super(),this.type="QuadraticBezierCurve",this.v0=n,this.v1=a,this.v2=u}getPoint(n,a=new It){const u=a,h=this.v0,g=this.v1,x=this.v2;return u.set(ms(n,h.x,g.x,x.x),ms(n,h.y,g.y,x.y)),u}copy(n){return super.copy(n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this}toJSON(){const n=super.toJSON();return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n}fromJSON(n){return super.fromJSON(n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this}}su.prototype.isQuadraticBezierCurve=!0;class ed extends ki{constructor(n=new te,a=new te,u=new te){super(),this.type="QuadraticBezierCurve3",this.v0=n,this.v1=a,this.v2=u}getPoint(n,a=new te){const u=a,h=this.v0,g=this.v1,x=this.v2;return u.set(ms(n,h.x,g.x,x.x),ms(n,h.y,g.y,x.y),ms(n,h.z,g.z,x.z)),u}copy(n){return super.copy(n),this.v0.copy(n.v0),this.v1.copy(n.v1),this.v2.copy(n.v2),this}toJSON(){const n=super.toJSON();return n.v0=this.v0.toArray(),n.v1=this.v1.toArray(),n.v2=this.v2.toArray(),n}fromJSON(n){return super.fromJSON(n),this.v0.fromArray(n.v0),this.v1.fromArray(n.v1),this.v2.fromArray(n.v2),this}}ed.prototype.isQuadraticBezierCurve3=!0;class Ga extends ki{constructor(n=[]){super(),this.type="SplineCurve",this.points=n}getPoint(n,a=new It){const u=a,h=this.points,g=(h.length-1)*n,x=Math.floor(g),w=g-x,T=h[0===x?x:x-1],M=h[x],E=h[x>h.length-2?h.length-1:x+1],N=h[x>h.length-3?h.length-1:x+2];return u.set(ru(w,T.x,M.x,E.x,N.x),ru(w,T.y,M.y,E.y,N.y)),u}copy(n){super.copy(n),this.points=[];for(let a=0,u=n.points.length;a<u;a++)this.points.push(n.points[a].clone());return this}toJSON(){const n=super.toJSON();n.points=[];for(let a=0,u=this.points.length;a<u;a++)n.points.push(this.points[a].toArray());return n}fromJSON(n){super.fromJSON(n),this.points=[];for(let a=0,u=n.points.length;a<u;a++){const h=n.points[a];this.points.push((new It).fromArray(h))}return this}}Ga.prototype.isSplineCurve=!0;var Jf=Object.freeze({__proto__:null,ArcCurve:kp,CatmullRomCurve3:nu,CubicBezierCurve:pc,CubicBezierCurve3:Yf,EllipseCurve:yo,LineCurve:Qh,LineCurve3:Zf,QuadraticBezierCurve:su,QuadraticBezierCurve3:ed,SplineCurve:Ga});function Qf(b,n,a,u,h){let g,x;if(h===function(w,T,M,E){let N=0;for(let C=T,L=M-E;C<M;C+=E)N+=(w[L]-w[C])*(w[C+1]+w[L+1]),L=C;return N}(b,n,a,u)>0)for(g=n;g<a;g+=u)x=Fg(g,b[g],b[g+1],x);else for(g=a-u;g>=n;g-=u)x=Fg(g,b[g],b[g+1],x);return x&&rl(x,x.next)&&(il(x),x=x.next),x}function ns(b,n){if(!b)return b;n||(n=b);let a,u=b;do{if(a=!1,u.steiner||!rl(u,u.next)&&0!==In(u.prev,u,u.next))u=u.next;else{if(il(u),u=n=u.prev,u===u.next)break;a=!0}}while(a||u!==n);return n}function nl(b,n,a,u,h,g,x){if(!b)return;!x&&g&&function(E,N,C,L){let D=E;do{null===D.z&&(D.z=tm(D.x,D.y,N,C,L)),D.prevZ=D.prev,D.nextZ=D.next,D=D.next}while(D!==E);D.prevZ.nextZ=null,D.prevZ=null,function($){let B,O,q,ee,Y,ce,he,Ie,Ae=1;do{for(O=$,$=null,Y=null,ce=0;O;){for(ce++,q=O,he=0,B=0;B<Ae&&(he++,q=q.nextZ,q);B++);for(Ie=Ae;he>0||Ie>0&&q;)0!==he&&(0===Ie||!q||O.z<=q.z)?(ee=O,O=O.nextZ,he--):(ee=q,q=q.nextZ,Ie--),Y?Y.nextZ=ee:$=ee,ee.prevZ=Y,Y=ee;O=q}Y.nextZ=null,Ae*=2}while(ce>1)}(D)}(b,u,h,g);let w,T,M=b;for(;b.prev!==b.next;)if(w=b.prev,T=b.next,g?fc(b,u,h,g):Er(b))n.push(w.i/a),n.push(b.i/a),n.push(T.i/a),il(b),b=T.next,M=T.next;else if((b=T)===M){x?1===x?nl(b=O0(ns(b),n,a),n,a,u,h,g,2):2===x&&ha(b,n,a,u,h,g):nl(ns(b),n,a,u,h,g,1);break}}function Er(b){const n=b.prev,a=b,u=b.next;if(In(n,a,u)>=0)return!1;let h=b.next.next;for(;h!==b.prev;){if(br(n.x,n.y,a.x,a.y,u.x,u.y,h.x,h.y)&&In(h.prev,h,h.next)>=0)return!1;h=h.next}return!0}function fc(b,n,a,u){const h=b.prev,g=b,x=b.next;if(In(h,g,x)>=0)return!1;const M=h.x>g.x?h.x>x.x?h.x:x.x:g.x>x.x?g.x:x.x,E=h.y>g.y?h.y>x.y?h.y:x.y:g.y>x.y?g.y:x.y,N=tm(h.x<g.x?h.x<x.x?h.x:x.x:g.x<x.x?g.x:x.x,h.y<g.y?h.y<x.y?h.y:x.y:g.y<x.y?g.y:x.y,n,a,u),C=tm(M,E,n,a,u);let L=b.prevZ,D=b.nextZ;for(;L&&L.z>=N&&D&&D.z<=C;){if(L!==b.prev&&L!==b.next&&br(h.x,h.y,g.x,g.y,x.x,x.y,L.x,L.y)&&In(L.prev,L,L.next)>=0||(L=L.prevZ,D!==b.prev&&D!==b.next&&br(h.x,h.y,g.x,g.y,x.x,x.y,D.x,D.y)&&In(D.prev,D,D.next)>=0))return!1;D=D.nextZ}for(;L&&L.z>=N;){if(L!==b.prev&&L!==b.next&&br(h.x,h.y,g.x,g.y,x.x,x.y,L.x,L.y)&&In(L.prev,L,L.next)>=0)return!1;L=L.prevZ}for(;D&&D.z<=C;){if(D!==b.prev&&D!==b.next&&br(h.x,h.y,g.x,g.y,x.x,x.y,D.x,D.y)&&In(D.prev,D,D.next)>=0)return!1;D=D.nextZ}return!0}function O0(b,n,a){let u=b;do{const h=u.prev,g=u.next.next;!rl(h,g)&&Xr(h,u,u.next,g)&&sl(h,g)&&sl(g,h)&&(n.push(h.i/a),n.push(u.i/a),n.push(g.i/a),il(u),il(u.next),u=b=g),u=u.next}while(u!==b);return ns(u)}function ha(b,n,a,u,h,g){let x=b;do{let w=x.next.next;for(;w!==x.prev;){if(x.i!==w.i&&Cs(x,w)){let T=Cp(x,w);return x=ns(x,x.next),T=ns(T,T.next),nl(x,n,a,u,h,g),void nl(T,n,a,u,h,g)}w=w.next}x=x.next}while(x!==b)}function Qt(b,n){return b.x-n.x}function em(b,n){if(n=function(a,u){let h=u;const g=a.x,x=a.y;let w,T=-1/0;do{if(x<=h.y&&x>=h.next.y&&h.next.y!==h.y){const D=h.x+(x-h.y)*(h.next.x-h.x)/(h.next.y-h.y);if(D<=g&&D>T){if(T=D,D===g){if(x===h.y)return h;if(x===h.next.y)return h.next}w=h.x<h.next.x?h:h.next}}h=h.next}while(h!==u);if(!w)return null;if(g===T)return w;const M=w,E=w.x,N=w.y;let C,L=1/0;h=w;do{g>=h.x&&h.x>=E&&g!==h.x&&br(x<N?g:T,x,E,N,x<N?T:g,x,h.x,h.y)&&(C=Math.abs(x-h.y)/(g-h.x),sl(h,a)&&(C<L||C===L&&(h.x>w.x||h.x===w.x&&Dg(w,h)))&&(w=h,L=C)),h=h.next}while(h!==M);return w}(b,n)){const a=Cp(n,b);ns(n,n.next),ns(a,a.next)}}function Dg(b,n){return In(b.prev,b,n.prev)<0&&In(n.next,b,b.next)<0}function tm(b,n,a,u,h){return(b=1431655765&((b=858993459&((b=252645135&((b=16711935&((b=32767*(b-a)*h)|b<<8))|b<<4))|b<<2))|b<<1))|(n=1431655765&((n=858993459&((n=252645135&((n=16711935&((n=32767*(n-u)*h)|n<<8))|n<<4))|n<<2))|n<<1))<<1}function gs(b){let n=b,a=b;do{(n.x<a.x||n.x===a.x&&n.y<a.y)&&(a=n),n=n.next}while(n!==b);return a}function br(b,n,a,u,h,g,x,w){return(h-x)*(n-w)-(b-x)*(g-w)>=0&&(b-x)*(u-w)-(a-x)*(n-w)>=0&&(a-x)*(g-w)-(h-x)*(u-w)>=0}function Cs(b,n){return b.next.i!==n.i&&b.prev.i!==n.i&&!function(a,u){let h=a;do{if(h.i!==a.i&&h.next.i!==a.i&&h.i!==u.i&&h.next.i!==u.i&&Xr(h,h.next,a,u))return!0;h=h.next}while(h!==a);return!1}(b,n)&&(sl(b,n)&&sl(n,b)&&function(a,u){let h=a,g=!1;const x=(a.x+u.x)/2,w=(a.y+u.y)/2;do{h.y>w!=h.next.y>w&&h.next.y!==h.y&&x<(h.next.x-h.x)*(w-h.y)/(h.next.y-h.y)+h.x&&(g=!g),h=h.next}while(h!==a);return g}(b,n)&&(In(b.prev,b,n.prev)||In(b,n.prev,n))||rl(b,n)&&In(b.prev,b,b.next)>0&&In(n.prev,n,n.next)>0)}function In(b,n,a){return(n.y-b.y)*(a.x-n.x)-(n.x-b.x)*(a.y-n.y)}function rl(b,n){return b.x===n.x&&b.y===n.y}function Xr(b,n,a,u){const h=gi(In(b,n,a)),g=gi(In(b,n,u)),x=gi(In(a,u,b)),w=gi(In(a,u,n));return h!==g&&x!==w||!(0!==h||!td(b,a,n))||!(0!==g||!td(b,u,n))||!(0!==x||!td(a,b,u))||!(0!==w||!td(a,n,u))}function td(b,n,a){return n.x<=Math.max(b.x,a.x)&&n.x>=Math.min(b.x,a.x)&&n.y<=Math.max(b.y,a.y)&&n.y>=Math.min(b.y,a.y)}function gi(b){return b>0?1:b<0?-1:0}function sl(b,n){return In(b.prev,b,b.next)<0?In(b,n,b.next)>=0&&In(b,b.prev,n)>=0:In(b,n,b.prev)<0||In(b,b.next,n)<0}function Cp(b,n){const a=new Np(b.i,b.x,b.y),u=new Np(n.i,n.x,n.y),h=b.next,g=n.prev;return b.next=n,n.prev=b,a.next=h,h.prev=a,u.next=a,a.prev=u,g.next=u,u.prev=g,u}function Fg(b,n,a,u){const h=new Np(b,n,a);return u?(h.next=u.next,h.prev=u,u.next.prev=h,u.next=h):(h.prev=h,h.next=h),h}function il(b){b.next.prev=b.prev,b.prev.next=b.next,b.prevZ&&(b.prevZ.nextZ=b.nextZ),b.nextZ&&(b.nextZ.prevZ=b.prevZ)}function Np(b,n,a){this.i=b,this.x=n,this.y=a,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Ha{static area(n){const a=n.length;let u=0;for(let h=a-1,g=0;g<a;h=g++)u+=n[h].x*n[g].y-n[g].x*n[h].y;return.5*u}static isClockWise(n){return Ha.area(n)<0}static triangulateShape(n,a){const u=[],h=[],g=[];Ir(n),Kr(u,n);let x=n.length;a.forEach(Ir);for(let T=0;T<a.length;T++)h.push(x),x+=a[T].length,Kr(u,a[T]);const w=function(T,M,E=2){const N=M&&M.length,C=N?M[0]*E:T.length;let L=Qf(T,0,C,E,!0);const D=[];if(!L||L.next===L.prev)return D;let $,B,O,q,ee,Y,ce;if(N&&(L=function(he,Ie,Ae,We){const $e=[];let Oe,At,bt,rt,Mt;for(Oe=0,At=Ie.length;Oe<At;Oe++)bt=Ie[Oe]*We,rt=Oe<At-1?Ie[Oe+1]*We:he.length,Mt=Qf(he,bt,rt,We,!1),Mt===Mt.next&&(Mt.steiner=!0),$e.push(gs(Mt));for($e.sort(Qt),Oe=0;Oe<$e.length;Oe++)em($e[Oe],Ae),Ae=ns(Ae,Ae.next);return Ae}(T,M,L,E)),T.length>80*E){$=O=T[0],B=q=T[1];for(let he=E;he<C;he+=E)ee=T[he],Y=T[he+1],ee<$&&($=ee),Y<B&&(B=Y),ee>O&&(O=ee),Y>q&&(q=Y);ce=Math.max(O-$,q-B),ce=0!==ce?1/ce:0}return nl(L,D,E,$,B,ce),D}(u,h);for(let T=0;T<w.length;T+=3)g.push(w.slice(T,T+3));return g}}function Ir(b){const n=b.length;n>2&&b[n-1].equals(b[0])&&b.pop()}function Kr(b,n){for(let a=0;a<n.length;a++)b.push(n[a].x),b.push(n[a].y)}class $r extends wn{constructor(n,a){super(),this.type="ExtrudeGeometry",this.parameters={shapes:n,options:a},n=Array.isArray(n)?n:[n];const u=this,h=[],g=[];for(let w=0,T=n.length;w<T;w++)x(n[w]);function x(w){const T=[],M=void 0!==a.curveSegments?a.curveSegments:12,E=void 0!==a.steps?a.steps:1;let N=void 0!==a.depth?a.depth:100,C=void 0===a.bevelEnabled||a.bevelEnabled,L=void 0!==a.bevelThickness?a.bevelThickness:6,D=void 0!==a.bevelSize?a.bevelSize:L-2,$=void 0!==a.bevelOffset?a.bevelOffset:0,B=void 0!==a.bevelSegments?a.bevelSegments:3;const O=a.extrudePath,q=void 0!==a.UVGenerator?a.UVGenerator:zb;void 0!==a.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),N=a.amount);let ee,Y,ce,he,Ie,Ae=!1;O&&(ee=O.getSpacedPoints(E),Ae=!0,C=!1,Y=O.computeFrenetFrames(E,!1),ce=new te,he=new te,Ie=new te),C||(B=0,L=0,D=0,$=0);const We=w.extractPoints(M);let $e=We.shape;const Oe=We.holes;if(!Ha.isClockWise($e)){$e=$e.reverse();for(let Ve=0,re=Oe.length;Ve<re;Ve++){const ze=Oe[Ve];Ha.isClockWise(ze)&&(Oe[Ve]=ze.reverse())}}const At=Ha.triangulateShape($e,Oe),bt=$e;for(let Ve=0,re=Oe.length;Ve<re;Ve++)$e=$e.concat(Oe[Ve]);function rt(Ve,re,ze){return re||console.error("THREE.ExtrudeGeometry: vec does not exist"),re.clone().multiplyScalar(ze).add(Ve)}const Mt=$e.length,qt=At.length;function Xt(Ve,re,ze){let ft,et,gt;const Lt=Ve.x-re.x,Ut=Ve.y-re.y,tn=ze.x-Ve.x,me=ze.y-Ve.y,Ht=Lt*Lt+Ut*Ut;if(Math.abs(Lt*me-Ut*tn)>Number.EPSILON){const Yn=Math.sqrt(Ht),vr=Math.sqrt(tn*tn+me*me),Li=re.x-Ut/Yn,ss=re.y+Lt/Yn,ir=((ze.x-me/vr-Li)*me-(ze.y+tn/vr-ss)*tn)/(Lt*me-Ut*tn);ft=Li+Lt*ir-Ve.x,et=ss+Ut*ir-Ve.y;const xi=ft*ft+et*et;if(xi<=2)return new It(ft,et);gt=Math.sqrt(xi/2)}else{let Yn=!1;Lt>Number.EPSILON?tn>Number.EPSILON&&(Yn=!0):Lt<-Number.EPSILON?tn<-Number.EPSILON&&(Yn=!0):Math.sign(Ut)===Math.sign(me)&&(Yn=!0),Yn?(ft=-Ut,et=Lt,gt=Math.sqrt(Ht)):(ft=Lt,et=Ut,gt=Math.sqrt(Ht/2))}return new It(ft/gt,et/gt)}const nn=[];for(let Ve=0,re=bt.length,ze=re-1,ft=Ve+1;Ve<re;Ve++,ze++,ft++)ze===re&&(ze=0),ft===re&&(ft=0),nn[Ve]=Xt(bt[Ve],bt[ze],bt[ft]);const vn=[];let fn,le=nn.concat();for(let Ve=0,re=Oe.length;Ve<re;Ve++){const ze=Oe[Ve];fn=[];for(let ft=0,et=ze.length,gt=et-1,Lt=ft+1;ft<et;ft++,gt++,Lt++)gt===et&&(gt=0),Lt===et&&(Lt=0),fn[ft]=Xt(ze[ft],ze[gt],ze[Lt]);vn.push(fn),le=le.concat(fn)}for(let Ve=0;Ve<B;Ve++){const re=Ve/B,ze=L*Math.cos(re*Math.PI/2),ft=D*Math.sin(re*Math.PI/2)+$;for(let et=0,gt=bt.length;et<gt;et++){const Lt=rt(bt[et],nn[et],ft);ut(Lt.x,Lt.y,-ze)}for(let et=0,gt=Oe.length;et<gt;et++){const Lt=Oe[et];fn=vn[et];for(let Ut=0,tn=Lt.length;Ut<tn;Ut++){const me=rt(Lt[Ut],fn[Ut],ft);ut(me.x,me.y,-ze)}}}const fe=D+$;for(let Ve=0;Ve<Mt;Ve++){const re=C?rt($e[Ve],le[Ve],fe):$e[Ve];Ae?(he.copy(Y.normals[0]).multiplyScalar(re.x),ce.copy(Y.binormals[0]).multiplyScalar(re.y),Ie.copy(ee[0]).add(he).add(ce),ut(Ie.x,Ie.y,Ie.z)):ut(re.x,re.y,0)}for(let Ve=1;Ve<=E;Ve++)for(let re=0;re<Mt;re++){const ze=C?rt($e[re],le[re],fe):$e[re];Ae?(he.copy(Y.normals[Ve]).multiplyScalar(ze.x),ce.copy(Y.binormals[Ve]).multiplyScalar(ze.y),Ie.copy(ee[Ve]).add(he).add(ce),ut(Ie.x,Ie.y,Ie.z)):ut(ze.x,ze.y,N/E*Ve)}for(let Ve=B-1;Ve>=0;Ve--){const re=Ve/B,ze=L*Math.cos(re*Math.PI/2),ft=D*Math.sin(re*Math.PI/2)+$;for(let et=0,gt=bt.length;et<gt;et++){const Lt=rt(bt[et],nn[et],ft);ut(Lt.x,Lt.y,N+ze)}for(let et=0,gt=Oe.length;et<gt;et++){const Lt=Oe[et];fn=vn[et];for(let Ut=0,tn=Lt.length;Ut<tn;Ut++){const me=rt(Lt[Ut],fn[Ut],ft);Ae?ut(me.x,me.y+ee[E-1].y,ee[E-1].x+ze):ut(me.x,me.y,N+ze)}}}function it(Ve,re){let ze=Ve.length;for(;--ze>=0;){const ft=ze;let et=ze-1;et<0&&(et=Ve.length-1);for(let gt=0,Lt=E+2*B;gt<Lt;gt++){const Ut=Mt*gt,tn=Mt*(gt+1);kt(re+ft+Ut,re+et+Ut,re+et+tn,re+ft+tn)}}}function ut(Ve,re,ze){T.push(Ve),T.push(re),T.push(ze)}function st(Ve,re,ze){Vt(Ve),Vt(re),Vt(ze);const ft=h.length/3,et=q.generateTopUV(u,h,ft-3,ft-2,ft-1);Ot(et[0]),Ot(et[1]),Ot(et[2])}function kt(Ve,re,ze,ft){Vt(Ve),Vt(re),Vt(ft),Vt(re),Vt(ze),Vt(ft);const et=h.length/3,gt=q.generateSideWallUV(u,h,et-6,et-3,et-2,et-1);Ot(gt[0]),Ot(gt[1]),Ot(gt[3]),Ot(gt[1]),Ot(gt[2]),Ot(gt[3])}function Vt(Ve){h.push(T[3*Ve+0]),h.push(T[3*Ve+1]),h.push(T[3*Ve+2])}function Ot(Ve){g.push(Ve.x),g.push(Ve.y)}(function(){const Ve=h.length/3;if(C){let re=0,ze=Mt*re;for(let ft=0;ft<qt;ft++){const et=At[ft];st(et[2]+ze,et[1]+ze,et[0]+ze)}re=E+2*B,ze=Mt*re;for(let ft=0;ft<qt;ft++){const et=At[ft];st(et[0]+ze,et[1]+ze,et[2]+ze)}}else{for(let re=0;re<qt;re++){const ze=At[re];st(ze[2],ze[1],ze[0])}for(let re=0;re<qt;re++){const ze=At[re];st(ze[0]+Mt*E,ze[1]+Mt*E,ze[2]+Mt*E)}}u.addGroup(Ve,h.length/3-Ve,0)})(),function(){const Ve=h.length/3;let re=0;it(bt,re),re+=bt.length;for(let ze=0,ft=Oe.length;ze<ft;ze++){const et=Oe[ze];it(et,re),re+=et.length}u.addGroup(Ve,h.length/3-Ve,1)}()}this.setAttribute("position",new Pt(h,3)),this.setAttribute("uv",new Pt(g,2)),this.computeVertexNormals()}toJSON(){const n=super.toJSON();return function(a,u,h){if(h.shapes=[],Array.isArray(a))for(let g=0,x=a.length;g<x;g++)h.shapes.push(a[g].uuid);else h.shapes.push(a.uuid);return void 0!==u.extrudePath&&(h.options.extrudePath=u.extrudePath.toJSON()),h}(this.parameters.shapes,this.parameters.options,n)}static fromJSON(n,a){const u=[];for(let g=0,x=n.shapes.length;g<x;g++)u.push(a[n.shapes[g]]);const h=n.options.extrudePath;return void 0!==h&&(n.options.extrudePath=(new Jf[h.type]).fromJSON(h)),new $r(u,n.options)}}const zb={generateTopUV:function(b,n,a,u,h){const w=n[3*u],T=n[3*u+1],M=n[3*h],E=n[3*h+1];return[new It(n[3*a],n[3*a+1]),new It(w,T),new It(M,E)]},generateSideWallUV:function(b,n,a,u,h,g){const x=n[3*a],w=n[3*a+1],T=n[3*a+2],M=n[3*u],E=n[3*u+1],N=n[3*u+2],C=n[3*h],L=n[3*h+1],D=n[3*h+2],$=n[3*g],B=n[3*g+1],O=n[3*g+2];return Math.abs(w-E)<Math.abs(x-M)?[new It(x,1-T),new It(M,1-N),new It(C,1-D),new It($,1-O)]:[new It(w,1-T),new It(E,1-N),new It(L,1-D),new It(B,1-O)]}};class xo extends fi{constructor(n=1,a=0){const u=(1+Math.sqrt(5))/2;super([-1,u,0,1,u,0,-1,-u,0,1,-u,0,0,-1,u,0,1,u,0,-1,-u,0,1,-u,u,0,-1,u,0,1,-u,0,-1,-u,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],n,a),this.type="IcosahedronGeometry",this.parameters={radius:n,detail:a}}static fromJSON(n){return new xo(n.radius,n.detail)}}class ja extends wn{constructor(n,a=12,u=0,h=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:n,segments:a,phiStart:u,phiLength:h},a=Math.floor(a),h=jr(h,0,2*Math.PI);const g=[],x=[],w=[],T=1/a,M=new te,E=new It;for(let N=0;N<=a;N++){const C=u+N*T*h,L=Math.sin(C),D=Math.cos(C);for(let $=0;$<=n.length-1;$++)M.x=n[$].x*L,M.y=n[$].y,M.z=n[$].x*D,x.push(M.x,M.y,M.z),E.x=N/a,E.y=$/(n.length-1),w.push(E.x,E.y)}for(let N=0;N<a;N++)for(let C=0;C<n.length-1;C++){const L=C+N*n.length,$=L+n.length,B=L+n.length+1,O=L+1;g.push(L,$,O),g.push($,B,O)}if(this.setIndex(g),this.setAttribute("position",new Pt(x,3)),this.setAttribute("uv",new Pt(w,2)),this.computeVertexNormals(),h===2*Math.PI){const N=this.attributes.normal.array,C=new te,L=new te,D=new te,$=a*n.length*3;for(let B=0,O=0;B<n.length;B++,O+=3)C.x=N[O+0],C.y=N[O+1],C.z=N[O+2],L.x=N[$+O+0],L.y=N[$+O+1],L.z=N[$+O+2],D.addVectors(C,L).normalize(),N[O+0]=N[$+O+0]=D.x,N[O+1]=N[$+O+1]=D.y,N[O+2]=N[$+O+2]=D.z}}static fromJSON(n){return new ja(n.points,n.segments,n.phiStart,n.phiLength)}}class al extends fi{constructor(n=1,a=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],n,a),this.type="OctahedronGeometry",this.parameters={radius:n,detail:a}}static fromJSON(n){return new al(n.radius,n.detail)}}class nd extends wn{constructor(n,a,u){super(),this.type="ParametricGeometry",this.parameters={func:n,slices:a,stacks:u};const h=[],g=[],x=[],w=[],T=1e-5,M=new te,E=new te,N=new te,C=new te,L=new te;n.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const D=a+1;for(let $=0;$<=u;$++){const B=$/u;for(let O=0;O<=a;O++){const q=O/a;n(q,B,E),g.push(E.x,E.y,E.z),q-T>=0?(n(q-T,B,N),C.subVectors(E,N)):(n(q+T,B,N),C.subVectors(N,E)),B-T>=0?(n(q,B-T,N),L.subVectors(E,N)):(n(q,B+T,N),L.subVectors(N,E)),M.crossVectors(C,L).normalize(),x.push(M.x,M.y,M.z),w.push(q,B)}}for(let $=0;$<u;$++)for(let B=0;B<a;B++){const q=$*D+B+1,ee=($+1)*D+B+1,Y=($+1)*D+B;h.push($*D+B,q,Y),h.push(q,ee,Y)}this.setIndex(h),this.setAttribute("position",new Pt(g,3)),this.setAttribute("normal",new Pt(x,3)),this.setAttribute("uv",new Pt(w,2))}}class ol extends wn{constructor(n=.5,a=1,u=8,h=1,g=0,x=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:n,outerRadius:a,thetaSegments:u,phiSegments:h,thetaStart:g,thetaLength:x},u=Math.max(3,u);const w=[],T=[],M=[],E=[];let N=n;const C=(a-n)/(h=Math.max(1,h)),L=new te,D=new It;for(let $=0;$<=h;$++){for(let B=0;B<=u;B++){const O=g+B/u*x;L.x=N*Math.cos(O),L.y=N*Math.sin(O),T.push(L.x,L.y,L.z),M.push(0,0,1),D.x=(L.x/a+1)/2,D.y=(L.y/a+1)/2,E.push(D.x,D.y)}N+=C}for(let $=0;$<h;$++){const B=$*(u+1);for(let O=0;O<u;O++){const q=O+B,Y=q+u+1,ce=q+u+2,he=q+1;w.push(q,Y,he),w.push(Y,ce,he)}}this.setIndex(w),this.setAttribute("position",new Pt(T,3)),this.setAttribute("normal",new Pt(M,3)),this.setAttribute("uv",new Pt(E,2))}static fromJSON(n){return new ol(n.innerRadius,n.outerRadius,n.thetaSegments,n.phiSegments,n.thetaStart,n.thetaLength)}}class mc extends wn{constructor(n,a=12){super(),this.type="ShapeGeometry",this.parameters={shapes:n,curveSegments:a};const u=[],h=[],g=[],x=[];let w=0,T=0;if(!1===Array.isArray(n))M(n);else for(let E=0;E<n.length;E++)M(n[E]),this.addGroup(w,T,E),w+=T,T=0;function M(E){const N=h.length/3,C=E.extractPoints(a);let L=C.shape;const D=C.holes;!1===Ha.isClockWise(L)&&(L=L.reverse());for(let B=0,O=D.length;B<O;B++){const q=D[B];!0===Ha.isClockWise(q)&&(D[B]=q.reverse())}const $=Ha.triangulateShape(L,D);for(let B=0,O=D.length;B<O;B++)L=L.concat(D[B]);for(let B=0,O=L.length;B<O;B++){const q=L[B];h.push(q.x,q.y,0),g.push(0,0,1),x.push(q.x,q.y)}for(let B=0,O=$.length;B<O;B++){const q=$[B];u.push(q[0]+N,q[1]+N,q[2]+N),T+=3}}this.setIndex(u),this.setAttribute("position",new Pt(h,3)),this.setAttribute("normal",new Pt(g,3)),this.setAttribute("uv",new Pt(x,2))}toJSON(){const n=super.toJSON();return function(a,u){if(u.shapes=[],Array.isArray(a))for(let h=0,g=a.length;h<g;h++)u.shapes.push(a[h].uuid);else u.shapes.push(a.uuid);return u}(this.parameters.shapes,n)}static fromJSON(n,a){const u=[];for(let h=0,g=n.shapes.length;h<g;h++)u.push(a[n.shapes[h]]);return new mc(u,n.curveSegments)}}class iu extends wn{constructor(n=1,a=32,u=16,h=0,g=2*Math.PI,x=0,w=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:n,widthSegments:a,heightSegments:u,phiStart:h,phiLength:g,thetaStart:x,thetaLength:w},a=Math.max(3,Math.floor(a)),u=Math.max(2,Math.floor(u));const T=Math.min(x+w,Math.PI);let M=0;const E=[],N=new te,C=new te,L=[],D=[],$=[],B=[];for(let O=0;O<=u;O++){const q=[],ee=O/u;let Y=0;0==O&&0==x?Y=.5/a:O==u&&T==Math.PI&&(Y=-.5/a);for(let ce=0;ce<=a;ce++){const he=ce/a;N.x=-n*Math.cos(h+he*g)*Math.sin(x+ee*w),N.y=n*Math.cos(x+ee*w),N.z=n*Math.sin(h+he*g)*Math.sin(x+ee*w),D.push(N.x,N.y,N.z),C.copy(N).normalize(),$.push(C.x,C.y,C.z),B.push(he+Y,1-ee),q.push(M++)}E.push(q)}for(let O=0;O<u;O++)for(let q=0;q<a;q++){const ee=E[O][q+1],Y=E[O][q],ce=E[O+1][q],he=E[O+1][q+1];(0!==O||x>0)&&L.push(ee,Y,he),(O!==u-1||T<Math.PI)&&L.push(Y,ce,he)}this.setIndex(L),this.setAttribute("position",new Pt(D,3)),this.setAttribute("normal",new Pt($,3)),this.setAttribute("uv",new Pt(B,2))}static fromJSON(n){return new iu(n.radius,n.widthSegments,n.heightSegments,n.phiStart,n.phiLength,n.thetaStart,n.thetaLength)}}class da extends fi{constructor(n=1,a=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],n,a),this.type="TetrahedronGeometry",this.parameters={radius:n,detail:a}}static fromJSON(n){return new da(n.radius,n.detail)}}class Os extends $r{constructor(n,a={}){const u=a.font;if(!u||!u.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new wn;const h=u.generateShapes(n,a.size);a.depth=void 0!==a.height?a.height:50,void 0===a.bevelThickness&&(a.bevelThickness=10),void 0===a.bevelSize&&(a.bevelSize=8),void 0===a.bevelEnabled&&(a.bevelEnabled=!1),super(h,a),this.type="TextGeometry"}}class rd extends wn{constructor(n=1,a=.4,u=8,h=6,g=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:n,tube:a,radialSegments:u,tubularSegments:h,arc:g},u=Math.floor(u),h=Math.floor(h);const x=[],w=[],T=[],M=[],E=new te,N=new te,C=new te;for(let L=0;L<=u;L++)for(let D=0;D<=h;D++){const $=D/h*g,B=L/u*Math.PI*2;N.x=(n+a*Math.cos(B))*Math.cos($),N.y=(n+a*Math.cos(B))*Math.sin($),N.z=a*Math.sin(B),w.push(N.x,N.y,N.z),E.x=n*Math.cos($),E.y=n*Math.sin($),C.subVectors(N,E).normalize(),T.push(C.x,C.y,C.z),M.push(D/h),M.push(L/u)}for(let L=1;L<=u;L++)for(let D=1;D<=h;D++){const B=(h+1)*(L-1)+D-1,O=(h+1)*(L-1)+D,q=(h+1)*L+D;x.push((h+1)*L+D-1,B,q),x.push(B,O,q)}this.setIndex(x),this.setAttribute("position",new Pt(w,3)),this.setAttribute("normal",new Pt(T,3)),this.setAttribute("uv",new Pt(M,2))}static fromJSON(n){return new rd(n.radius,n.tube,n.radialSegments,n.tubularSegments,n.arc)}}class Ei extends wn{constructor(n=1,a=.4,u=64,h=8,g=2,x=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:n,tube:a,tubularSegments:u,radialSegments:h,p:g,q:x},u=Math.floor(u),h=Math.floor(h);const w=[],T=[],M=[],E=[],N=new te,C=new te,L=new te,D=new te,$=new te,B=new te,O=new te;for(let ee=0;ee<=u;++ee){const Y=ee/u*g*Math.PI*2;q(Y,g,x,n,L),q(Y+.01,g,x,n,D),B.subVectors(D,L),O.addVectors(D,L),$.crossVectors(B,O),O.crossVectors($,B),$.normalize(),O.normalize();for(let ce=0;ce<=h;++ce){const he=ce/h*Math.PI*2,Ie=-a*Math.cos(he),Ae=a*Math.sin(he);N.x=L.x+(Ie*O.x+Ae*$.x),N.y=L.y+(Ie*O.y+Ae*$.y),N.z=L.z+(Ie*O.z+Ae*$.z),T.push(N.x,N.y,N.z),C.subVectors(N,L).normalize(),M.push(C.x,C.y,C.z),E.push(ee/u),E.push(ce/h)}}for(let ee=1;ee<=u;ee++)for(let Y=1;Y<=h;Y++){const he=(h+1)*ee+(Y-1),Ie=(h+1)*ee+Y,Ae=(h+1)*(ee-1)+Y;w.push((h+1)*(ee-1)+(Y-1),he,Ae),w.push(he,Ie,Ae)}function q(ee,Y,ce,he,Ie){const Ae=Math.cos(ee),We=Math.sin(ee),$e=ce/Y*ee,Oe=Math.cos($e);Ie.x=he*(2+Oe)*.5*Ae,Ie.y=he*(2+Oe)*We*.5,Ie.z=he*Math.sin($e)*.5}this.setIndex(w),this.setAttribute("position",new Pt(T,3)),this.setAttribute("normal",new Pt(M,3)),this.setAttribute("uv",new Pt(E,2))}static fromJSON(n){return new Ei(n.radius,n.tube,n.tubularSegments,n.radialSegments,n.p,n.q)}}class sd extends wn{constructor(n,a=64,u=1,h=8,g=!1){super(),this.type="TubeGeometry",this.parameters={path:n,tubularSegments:a,radius:u,radialSegments:h,closed:g};const x=n.computeFrenetFrames(a,g);this.tangents=x.tangents,this.normals=x.normals,this.binormals=x.binormals;const w=new te,T=new te,M=new It;let E=new te;const N=[],C=[],L=[],D=[];function $(B){E=n.getPointAt(B/a,E);const O=x.normals[B],q=x.binormals[B];for(let ee=0;ee<=h;ee++){const Y=ee/h*Math.PI*2,ce=Math.sin(Y),he=-Math.cos(Y);T.x=he*O.x+ce*q.x,T.y=he*O.y+ce*q.y,T.z=he*O.z+ce*q.z,T.normalize(),C.push(T.x,T.y,T.z),w.x=E.x+u*T.x,w.y=E.y+u*T.y,w.z=E.z+u*T.z,N.push(w.x,w.y,w.z)}}(function(){for(let B=0;B<a;B++)$(B);$(!1===g?a:0),function(){for(let B=0;B<=a;B++)for(let O=0;O<=h;O++)M.x=B/a,M.y=O/h,L.push(M.x,M.y)}(),function(){for(let B=1;B<=a;B++)for(let O=1;O<=h;O++){const ee=(h+1)*B+(O-1),Y=(h+1)*B+O,ce=(h+1)*(B-1)+O;D.push((h+1)*(B-1)+(O-1),ee,ce),D.push(ee,Y,ce)}}()})(),this.setIndex(D),this.setAttribute("position",new Pt(N,3)),this.setAttribute("normal",new Pt(C,3)),this.setAttribute("uv",new Pt(L,2))}toJSON(){const n=super.toJSON();return n.path=this.parameters.path.toJSON(),n}static fromJSON(n){return new sd((new Jf[n.path.type]).fromJSON(n.path),n.tubularSegments,n.radius,n.radialSegments,n.closed)}}class $g extends wn{constructor(n){if(super(),this.type="WireframeGeometry",!0===n.isGeometry)return void console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");const a=[],u=new Set,h=new te,g=new te;if(null!==n.index){const x=n.attributes.position,w=n.index;let T=n.groups;0===T.length&&(T=[{start:0,count:w.count,materialIndex:0}]);for(let M=0,E=T.length;M<E;++M){const N=T[M],C=N.start;for(let L=C,D=C+N.count;L<D;L+=3)for(let $=0;$<3;$++){const B=w.getX(L+$),O=w.getX(L+($+1)%3);h.fromBufferAttribute(x,B),g.fromBufferAttribute(x,O),!0===P0(h,g,u)&&(a.push(h.x,h.y,h.z),a.push(g.x,g.y,g.z))}}}else{const x=n.attributes.position;for(let w=0,T=x.count/3;w<T;w++)for(let M=0;M<3;M++){const N=3*w+(M+1)%3;h.fromBufferAttribute(x,3*w+M),g.fromBufferAttribute(x,N),!0===P0(h,g,u)&&(a.push(h.x,h.y,h.z),a.push(g.x,g.y,g.z))}}this.setAttribute("position",new Pt(a,3))}}function P0(b,n,a){const u=`${b.x},${b.y},${b.z}-${n.x},${n.y},${n.z}`,h=`${n.x},${n.y},${n.z}-${b.x},${b.y},${b.z}`;return!0!==a.has(u)&&!0!==a.has(h)&&(a.add(u,h),!0)}var z0=Object.freeze({__proto__:null,BoxGeometry:j,BoxBufferGeometry:j,CircleGeometry:el,CircleBufferGeometry:el,ConeGeometry:tu,ConeBufferGeometry:tu,CylinderGeometry:tl,CylinderBufferGeometry:tl,DodecahedronGeometry:Yh,DodecahedronBufferGeometry:Yh,EdgesGeometry:Kf,ExtrudeGeometry:$r,ExtrudeBufferGeometry:$r,IcosahedronGeometry:xo,IcosahedronBufferGeometry:xo,LatheGeometry:ja,LatheBufferGeometry:ja,OctahedronGeometry:al,OctahedronBufferGeometry:al,ParametricGeometry:nd,ParametricBufferGeometry:nd,PlaneGeometry:Qu,PlaneBufferGeometry:Qu,PolyhedronGeometry:fi,PolyhedronBufferGeometry:fi,RingGeometry:ol,RingBufferGeometry:ol,ShapeGeometry:mc,ShapeBufferGeometry:mc,SphereGeometry:iu,SphereBufferGeometry:iu,TetrahedronGeometry:da,TetrahedronBufferGeometry:da,TextGeometry:Os,TextBufferGeometry:Os,TorusGeometry:rd,TorusBufferGeometry:rd,TorusKnotGeometry:Ei,TorusKnotBufferGeometry:Ei,TubeGeometry:sd,TubeBufferGeometry:sd,WireframeGeometry:$g});class gc extends En{constructor(n){super(),this.type="ShadowMaterial",this.color=new Wt(0),this.transparent=!0,this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this}}gc.prototype.isShadowMaterial=!0;class Ap extends En{constructor(n){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Wt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Wt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ea,this.normalScale=new It(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(n)}copy(n){return super.copy(n),this.defines={STANDARD:""},this.color.copy(n.color),this.roughness=n.roughness,this.metalness=n.metalness,this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.roughnessMap=n.roughnessMap,this.metalnessMap=n.metalnessMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.envMapIntensity=n.envMapIntensity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.flatShading=n.flatShading,this}}Ap.prototype.isMeshStandardMaterial=!0;class yc extends Ap{constructor(n){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new It(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return jr(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(a){this.ior=(1+.4*a)/(1-.4*a)}}),this.sheenTint=new Wt(0),this.transmission=0,this.transmissionMap=null,this.thickness=.01,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationTint=new Wt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularTint=new Wt(1,1,1),this.specularTintMap=null,this._clearcoat=0,this._transmission=0,this.setValues(n)}get clearcoat(){return this._clearcoat}set clearcoat(n){this._clearcoat>0!=n>0&&this.version++,this._clearcoat=n}get transmission(){return this._transmission}set transmission(n){this._transmission>0!=n>0&&this.version++,this._transmission=n}copy(n){return super.copy(n),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=n.clearcoat,this.clearcoatMap=n.clearcoatMap,this.clearcoatRoughness=n.clearcoatRoughness,this.clearcoatRoughnessMap=n.clearcoatRoughnessMap,this.clearcoatNormalMap=n.clearcoatNormalMap,this.clearcoatNormalScale.copy(n.clearcoatNormalScale),this.ior=n.ior,this.sheenTint.copy(n.sheenTint),this.transmission=n.transmission,this.transmissionMap=n.transmissionMap,this.thickness=n.thickness,this.thicknessMap=n.thicknessMap,this.attenuationDistance=n.attenuationDistance,this.attenuationTint.copy(n.attenuationTint),this.specularIntensity=n.specularIntensity,this.specularIntensityMap=n.specularIntensityMap,this.specularTint.copy(n.specularTint),this.specularTintMap=n.specularTintMap,this}}yc.prototype.isMeshPhysicalMaterial=!0;class id extends En{constructor(n){super(),this.type="MeshPhongMaterial",this.color=new Wt(16777215),this.specular=new Wt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Wt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ea,this.normalScale=new It(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=vu,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this.specular.copy(n.specular),this.shininess=n.shininess,this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this.flatShading=n.flatShading,this}}id.prototype.isMeshPhongMaterial=!0;class Og extends En{constructor(n){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Wt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Wt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ea,this.normalScale=new It(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this.map=n.map,this.gradientMap=n.gradientMap,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.alphaMap=n.alphaMap,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this}}Og.prototype.isMeshToonMaterial=!0;class au extends En{constructor(n){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ea,this.normalScale=new It(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(n)}copy(n){return super.copy(n),this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.flatShading=n.flatShading,this}}au.prototype.isMeshNormalMaterial=!0;class Rp extends En{constructor(n){super(),this.type="MeshLambertMaterial",this.color=new Wt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Wt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=vu,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(n)}copy(n){return super.copy(n),this.color.copy(n.color),this.map=n.map,this.lightMap=n.lightMap,this.lightMapIntensity=n.lightMapIntensity,this.aoMap=n.aoMap,this.aoMapIntensity=n.aoMapIntensity,this.emissive.copy(n.emissive),this.emissiveMap=n.emissiveMap,this.emissiveIntensity=n.emissiveIntensity,this.specularMap=n.specularMap,this.alphaMap=n.alphaMap,this.envMap=n.envMap,this.combine=n.combine,this.reflectivity=n.reflectivity,this.refractionRatio=n.refractionRatio,this.wireframe=n.wireframe,this.wireframeLinewidth=n.wireframeLinewidth,this.wireframeLinecap=n.wireframeLinecap,this.wireframeLinejoin=n.wireframeLinejoin,this}}Rp.prototype.isMeshLambertMaterial=!0;class Pg extends En{constructor(n){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Wt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Ea,this.normalScale=new It(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(n)}copy(n){return super.copy(n),this.defines={MATCAP:""},this.color.copy(n.color),this.matcap=n.matcap,this.map=n.map,this.bumpMap=n.bumpMap,this.bumpScale=n.bumpScale,this.normalMap=n.normalMap,this.normalMapType=n.normalMapType,this.normalScale.copy(n.normalScale),this.displacementMap=n.displacementMap,this.displacementScale=n.displacementScale,this.displacementBias=n.displacementBias,this.alphaMap=n.alphaMap,this.flatShading=n.flatShading,this}}Pg.prototype.isMeshMatcapMaterial=!0;class zg extends Vr{constructor(n){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(n)}copy(n){return super.copy(n),this.scale=n.scale,this.dashSize=n.dashSize,this.gapSize=n.gapSize,this}}zg.prototype.isLineDashedMaterial=!0;var Bb=Object.freeze({__proto__:null,ShadowMaterial:gc,SpriteMaterial:oc,RawShaderMaterial:Oh,ShaderMaterial:Ks,PointsMaterial:Ql,MeshPhysicalMaterial:yc,MeshStandardMaterial:Ap,MeshPhongMaterial:id,MeshToonMaterial:Og,MeshNormalMaterial:au,MeshLambertMaterial:Rp,MeshDepthMaterial:Pf,MeshDistanceMaterial:zf,MeshBasicMaterial:wr,MeshMatcapMaterial:Pg,LineDashedMaterial:zg,LineBasicMaterial:Vr,Material:En});const Tr={arraySlice:function(b,n,a){return Tr.isTypedArray(b)?new b.constructor(b.subarray(n,void 0!==a?a:b.length)):b.slice(n,a)},convertArray:function(b,n,a){return!b||!a&&b.constructor===n?b:"number"==typeof n.BYTES_PER_ELEMENT?new n(b):Array.prototype.slice.call(b)},isTypedArray:function(b){return ArrayBuffer.isView(b)&&!(b instanceof DataView)},getKeyframeOrder:function(b){const n=b.length,a=new Array(n);for(let u=0;u!==n;++u)a[u]=u;return a.sort(function(u,h){return b[u]-b[h]}),a},sortedArray:function(b,n,a){const u=b.length,h=new b.constructor(u);for(let g=0,x=0;x!==u;++g){const w=a[g]*n;for(let T=0;T!==n;++T)h[x++]=b[w+T]}return h},flattenJSON:function(b,n,a,u){let h=1,g=b[0];for(;void 0!==g&&void 0===g[u];)g=b[h++];if(void 0===g)return;let x=g[u];if(void 0!==x)if(Array.isArray(x))do{x=g[u],void 0!==x&&(n.push(g.time),a.push.apply(a,x)),g=b[h++]}while(void 0!==g);else if(void 0!==x.toArray)do{x=g[u],void 0!==x&&(n.push(g.time),x.toArray(a,a.length)),g=b[h++]}while(void 0!==g);else do{x=g[u],void 0!==x&&(n.push(g.time),a.push(x)),g=b[h++]}while(void 0!==g)},subclip:function(b,n,a,u,h=30){const g=b.clone();g.name=n;const x=[];for(let T=0;T<g.tracks.length;++T){const M=g.tracks[T],E=M.getValueSize(),N=[],C=[];for(let L=0;L<M.times.length;++L){const D=M.times[L]*h;if(!(D<a||D>=u)){N.push(M.times[L]);for(let $=0;$<E;++$)C.push(M.values[L*E+$])}}0!==N.length&&(M.times=Tr.convertArray(N,M.times.constructor),M.values=Tr.convertArray(C,M.values.constructor),x.push(M))}g.tracks=x;let w=1/0;for(let T=0;T<g.tracks.length;++T)w>g.tracks[T].times[0]&&(w=g.tracks[T].times[0]);for(let T=0;T<g.tracks.length;++T)g.tracks[T].shift(-1*w);return g.resetDuration(),g},makeClipAdditive:function(b,n=0,a=b,u=30){u<=0&&(u=30);const h=a.tracks.length,g=n/u;for(let x=0;x<h;++x){const w=a.tracks[x],T=w.ValueTypeName;if("bool"===T||"string"===T)continue;const M=b.tracks.find(function(O){return O.name===w.name&&O.ValueTypeName===T});if(void 0===M)continue;let E=0;const N=w.getValueSize();w.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(E=N/3);let C=0;const L=M.getValueSize();M.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(C=L/3);const D=w.times.length-1;let $;if(g<=w.times[0])$=Tr.arraySlice(w.values,E,N-E);else if(g>=w.times[D]){const O=D*N+E;$=Tr.arraySlice(w.values,O,O+N-E)}else{const O=w.createInterpolant(),q=E,ee=N-E;O.evaluate(g),$=Tr.arraySlice(O.resultBuffer,q,ee)}"quaternion"===T&&(new Qr).fromArray($).normalize().conjugate().toArray($);const B=M.times.length;for(let O=0;O<B;++O){const q=O*L+C;if("quaternion"===T)Qr.multiplyQuaternionsFlat(M.values,q,$,0,M.values,q);else{const ee=L-2*C;for(let Y=0;Y<ee;++Y)M.values[q+Y]-=$[Y]}}}return b.blendMode=th,b}};class Ii{constructor(n,a,u,h){this.parameterPositions=n,this._cachedIndex=0,this.resultBuffer=void 0!==h?h:new a.constructor(u),this.sampleValues=a,this.valueSize=u,this.settings=null,this.DefaultSettings_={}}evaluate(n){const a=this.parameterPositions;let u=this._cachedIndex,h=a[u],g=a[u-1];e:{t:{let x;n:{r:if(!(n<h)){for(let w=u+2;;){if(void 0===h){if(n<g)break r;return u=a.length,this._cachedIndex=u,this.afterEnd_(u-1,n,g)}if(u===w)break;if(g=h,h=a[++u],n<h)break t}x=a.length;break n}if(n>=g)break e;{const w=a[1];n<w&&(u=2,g=w);for(let T=u-2;;){if(void 0===g)return this._cachedIndex=0,this.beforeStart_(0,n,h);if(u===T)break;if(h=g,g=a[--u-1],n>=g)break t}x=u,u=0}}for(;u<x;){const w=u+x>>>1;n<a[w]?x=w:u=w+1}if(h=a[u],g=a[u-1],void 0===g)return this._cachedIndex=0,this.beforeStart_(0,n,h);if(void 0===h)return u=a.length,this._cachedIndex=u,this.afterEnd_(u-1,g,n)}this._cachedIndex=u,this.intervalChanged_(u,g,h)}return this.interpolate_(u,g,n,h)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(n){const a=this.resultBuffer,u=this.sampleValues,h=this.valueSize,g=n*h;for(let x=0;x!==h;++x)a[x]=u[g+x];return a}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Ii.prototype.beforeStart_=Ii.prototype.copySampleValue_,Ii.prototype.afterEnd_=Ii.prototype.copySampleValue_;class xc extends Ii{constructor(n,a,u,h){super(n,a,u,h),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ka,endingEnd:ka}}intervalChanged_(n,a,u){const h=this.parameterPositions;let g=n-2,x=n+1,w=h[g],T=h[x];if(void 0===w)switch(this.getSettings_().endingStart){case ro:g=n,w=2*a-u;break;case Fl:g=h.length-2,w=a+h[g]-h[g+1];break;default:g=n,w=u}if(void 0===T)switch(this.getSettings_().endingEnd){case ro:x=n,T=2*u-a;break;case Fl:x=1,T=u+h[1]-h[0];break;default:x=n-1,T=a}const M=.5*(u-a),E=this.valueSize;this._weightPrev=M/(a-w),this._weightNext=M/(T-u),this._offsetPrev=g*E,this._offsetNext=x*E}interpolate_(n,a,u,h){const g=this.resultBuffer,x=this.sampleValues,w=this.valueSize,T=n*w,M=T-w,E=this._offsetPrev,N=this._offsetNext,C=this._weightPrev,L=this._weightNext,D=(u-a)/(h-a),$=D*D,B=$*D,O=-C*B+2*C*$-C*D,q=(1+C)*B+(-1.5-2*C)*$+(-.5+C)*D+1,ee=(-1-L)*B+(1.5+L)*$+.5*D,Y=L*B-L*$;for(let ce=0;ce!==w;++ce)g[ce]=O*x[E+ce]+q*x[M+ce]+ee*x[T+ce]+Y*x[N+ce];return g}}class bc extends Ii{constructor(n,a,u,h){super(n,a,u,h)}interpolate_(n,a,u,h){const g=this.resultBuffer,x=this.sampleValues,w=this.valueSize,T=n*w,M=T-w,E=(u-a)/(h-a),N=1-E;for(let C=0;C!==w;++C)g[C]=x[M+C]*N+x[T+C]*E;return g}}class nm extends Ii{constructor(n,a,u,h){super(n,a,u,h)}interpolate_(n){return this.copySampleValue_(n-1)}}class rs{constructor(n,a,u,h){if(void 0===n)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===a||0===a.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+n);this.name=n,this.times=Tr.convertArray(a,this.TimeBufferType),this.values=Tr.convertArray(u,this.ValueBufferType),this.setInterpolation(h||this.DefaultInterpolation)}static toJSON(n){const a=n.constructor;let u;if(a.toJSON!==this.toJSON)u=a.toJSON(n);else{u={name:n.name,times:Tr.convertArray(n.times,Array),values:Tr.convertArray(n.values,Array)};const h=n.getInterpolation();h!==n.DefaultInterpolation&&(u.interpolation=h)}return u.type=n.ValueTypeName,u}InterpolantFactoryMethodDiscrete(n){return new nm(this.times,this.values,this.getValueSize(),n)}InterpolantFactoryMethodLinear(n){return new bc(this.times,this.values,this.getValueSize(),n)}InterpolantFactoryMethodSmooth(n){return new xc(this.times,this.values,this.getValueSize(),n)}setInterpolation(n){let a;switch(n){case Ll:a=this.InterpolantFactoryMethodDiscrete;break;case Dl:a=this.InterpolantFactoryMethodLinear;break;case Du:a=this.InterpolantFactoryMethodSmooth}if(void 0===a){const u="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(n===this.DefaultInterpolation)throw new Error(u);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",u),this}return this.createInterpolant=a,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ll;case this.InterpolantFactoryMethodLinear:return Dl;case this.InterpolantFactoryMethodSmooth:return Du}}getValueSize(){return this.values.length/this.times.length}shift(n){if(0!==n){const a=this.times;for(let u=0,h=a.length;u!==h;++u)a[u]+=n}return this}scale(n){if(1!==n){const a=this.times;for(let u=0,h=a.length;u!==h;++u)a[u]*=n}return this}trim(n,a){const u=this.times,h=u.length;let g=0,x=h-1;for(;g!==h&&u[g]<n;)++g;for(;-1!==x&&u[x]>a;)--x;if(++x,0!==g||x!==h){g>=x&&(x=Math.max(x,1),g=x-1);const w=this.getValueSize();this.times=Tr.arraySlice(u,g,x),this.values=Tr.arraySlice(this.values,g*w,x*w)}return this}validate(){let n=!0;const a=this.getValueSize();a-Math.floor(a)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),n=!1);const u=this.times,h=this.values,g=u.length;0===g&&(console.error("THREE.KeyframeTrack: Track is empty.",this),n=!1);let x=null;for(let w=0;w!==g;w++){const T=u[w];if("number"==typeof T&&isNaN(T)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,w,T),n=!1;break}if(null!==x&&x>T){console.error("THREE.KeyframeTrack: Out of order keys.",this,w,T,x),n=!1;break}x=T}if(void 0!==h&&Tr.isTypedArray(h))for(let w=0,T=h.length;w!==T;++w){const M=h[w];if(isNaN(M)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,w,M),n=!1;break}}return n}optimize(){const n=Tr.arraySlice(this.times),a=Tr.arraySlice(this.values),u=this.getValueSize(),h=this.getInterpolation()===Du,g=n.length-1;let x=1;for(let w=1;w<g;++w){let T=!1;const M=n[w];if(M!==n[w+1]&&(1!==w||M!==n[0]))if(h)T=!0;else{const E=w*u,N=E-u,C=E+u;for(let L=0;L!==u;++L){const D=a[E+L];if(D!==a[N+L]||D!==a[C+L]){T=!0;break}}}if(T){if(w!==x){n[x]=n[w];const E=w*u,N=x*u;for(let C=0;C!==u;++C)a[N+C]=a[E+C]}++x}}if(g>0){n[x]=n[g];for(let w=g*u,T=x*u,M=0;M!==u;++M)a[T+M]=a[w+M];++x}return x!==n.length?(this.times=Tr.arraySlice(n,0,x),this.values=Tr.arraySlice(a,0,x*u)):(this.times=n,this.values=a),this}clone(){const n=Tr.arraySlice(this.times,0),a=Tr.arraySlice(this.values,0),u=new this.constructor(this.name,n,a);return u.createInterpolant=this.createInterpolant,u}}rs.prototype.TimeBufferType=Float32Array,rs.prototype.ValueBufferType=Float32Array,rs.prototype.DefaultInterpolation=Dl;class bo extends rs{}bo.prototype.ValueTypeName="bool",bo.prototype.ValueBufferType=Array,bo.prototype.DefaultInterpolation=Ll,bo.prototype.InterpolantFactoryMethodLinear=void 0,bo.prototype.InterpolantFactoryMethodSmooth=void 0;class ei extends rs{}ei.prototype.ValueTypeName="color";class Lp extends rs{}Lp.prototype.ValueTypeName="number";class B0 extends Ii{constructor(n,a,u,h){super(n,a,u,h)}interpolate_(n,a,u,h){const g=this.resultBuffer,x=this.sampleValues,w=this.valueSize,T=(u-a)/(h-a);let M=n*w;for(let E=M+w;M!==E;M+=4)Qr.slerpFlat(g,0,x,M-w,x,M,T);return g}}class ad extends rs{InterpolantFactoryMethodLinear(n){return new B0(this.times,this.values,this.getValueSize(),n)}}ad.prototype.ValueTypeName="quaternion",ad.prototype.DefaultInterpolation=Dl,ad.prototype.InterpolantFactoryMethodSmooth=void 0;class vc extends rs{}vc.prototype.ValueTypeName="string",vc.prototype.ValueBufferType=Array,vc.prototype.DefaultInterpolation=Ll,vc.prototype.InterpolantFactoryMethodLinear=void 0,vc.prototype.InterpolantFactoryMethodSmooth=void 0;class ou extends rs{}ou.prototype.ValueTypeName="vector";class lu{constructor(n,a=-1,u,h=Co){this.name=n,this.tracks=u,this.duration=a,this.blendMode=h,this.uuid=Ws(),this.duration<0&&this.resetDuration()}static parse(n){const a=[],u=n.tracks,h=1/(n.fps||1);for(let x=0,w=u.length;x!==w;++x)a.push(rm(u[x]).scale(h));const g=new this(n.name,n.duration,a,n.blendMode);return g.uuid=n.uuid,g}static toJSON(n){const a=[],u=n.tracks,h={name:n.name,duration:n.duration,tracks:a,uuid:n.uuid,blendMode:n.blendMode};for(let g=0,x=u.length;g!==x;++g)a.push(rs.toJSON(u[g]));return h}static CreateFromMorphTargetSequence(n,a,u,h){const g=a.length,x=[];for(let w=0;w<g;w++){let T=[],M=[];T.push((w+g-1)%g,w,(w+1)%g),M.push(0,1,0);const E=Tr.getKeyframeOrder(T);T=Tr.sortedArray(T,1,E),M=Tr.sortedArray(M,1,E),h||0!==T[0]||(T.push(g),M.push(M[0])),x.push(new Lp(".morphTargetInfluences["+a[w].name+"]",T,M).scale(1/u))}return new this(n,-1,x)}static findByName(n,a){let u=n;if(!Array.isArray(n)){const h=n;u=h.geometry&&h.geometry.animations||h.animations}for(let h=0;h<u.length;h++)if(u[h].name===a)return u[h];return null}static CreateClipsFromMorphTargetSequences(n,a,u){const h={},g=/^([\w-]*?)([\d]+)$/;for(let w=0,T=n.length;w<T;w++){const M=n[w],E=M.name.match(g);if(E&&E.length>1){const N=E[1];let C=h[N];C||(h[N]=C=[]),C.push(M)}}const x=[];for(const w in h)x.push(this.CreateFromMorphTargetSequence(w,h[w],a,u));return x}static parseAnimation(n,a){if(!n)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const u=function(E,N,C,L,D){if(0!==C.length){const $=[],B=[];Tr.flattenJSON(C,$,B,L),0!==$.length&&D.push(new E(N,$,B))}},h=[],g=n.name||"default",x=n.fps||30,w=n.blendMode;let T=n.length||-1;const M=n.hierarchy||[];for(let E=0;E<M.length;E++){const N=M[E].keys;if(N&&0!==N.length)if(N[0].morphTargets){const C={};let L;for(L=0;L<N.length;L++)if(N[L].morphTargets)for(let D=0;D<N[L].morphTargets.length;D++)C[N[L].morphTargets[D]]=-1;for(const D in C){const $=[],B=[];for(let O=0;O!==N[L].morphTargets.length;++O){const q=N[L];$.push(q.time),B.push(q.morphTarget===D?1:0)}h.push(new Lp(".morphTargetInfluence["+D+"]",$,B))}T=C.length*(x||1)}else{const C=".bones["+a[E].name+"]";u(ou,C+".position",N,"pos",h),u(ad,C+".quaternion",N,"rot",h),u(ou,C+".scale",N,"scl",h)}}return 0===h.length?null:new this(g,T,h,w)}resetDuration(){let n=0;for(let a=0,u=this.tracks.length;a!==u;++a){const h=this.tracks[a];n=Math.max(n,h.times[h.times.length-1])}return this.duration=n,this}trim(){for(let n=0;n<this.tracks.length;n++)this.tracks[n].trim(0,this.duration);return this}validate(){let n=!0;for(let a=0;a<this.tracks.length;a++)n=n&&this.tracks[a].validate();return n}optimize(){for(let n=0;n<this.tracks.length;n++)this.tracks[n].optimize();return this}clone(){const n=[];for(let a=0;a<this.tracks.length;a++)n.push(this.tracks[a].clone());return new this.constructor(this.name,this.duration,n,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function rm(b){if(void 0===b.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const n=function(a){switch(a.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Lp;case"vector":case"vector2":case"vector3":case"vector4":return ou;case"color":return ei;case"quaternion":return ad;case"bool":case"boolean":return bo;case"string":return vc}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+a)}(b.type);if(void 0===b.times){const a=[],u=[];Tr.flattenJSON(b.keys,a,u,"value"),b.times=a,b.values=u}return void 0!==n.parse?n.parse(b):new n(b.name,b.times,b.values,b.interpolation)}const ll={enabled:!1,files:{},add:function(b,n){!1!==this.enabled&&(this.files[b]=n)},get:function(b){if(!1!==this.enabled)return this.files[b]},remove:function(b){delete this.files[b]},clear:function(){this.files={}}};class sm{constructor(n,a,u){const h=this;let g,x=!1,w=0,T=0;const M=[];this.onStart=void 0,this.onLoad=n,this.onProgress=a,this.onError=u,this.itemStart=function(E){T++,!1===x&&void 0!==h.onStart&&h.onStart(E,w,T),x=!0},this.itemEnd=function(E){w++,void 0!==h.onProgress&&h.onProgress(E,w,T),w===T&&(x=!1,void 0!==h.onLoad&&h.onLoad())},this.itemError=function(E){void 0!==h.onError&&h.onError(E)},this.resolveURL=function(E){return g?g(E):E},this.setURLModifier=function(E){return g=E,this},this.addHandler=function(E,N){return M.push(E,N),this},this.removeHandler=function(E){const N=M.indexOf(E);return-1!==N&&M.splice(N,2),this},this.getHandler=function(E){for(let N=0,C=M.length;N<C;N+=2){const L=M[N],D=M[N+1];if(L.global&&(L.lastIndex=0),L.test(E))return D}return null}}}const im=new sm;class ys{constructor(n){this.manager=void 0!==n?n:im,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(n,a){const u=this;return new Promise(function(h,g){u.load(n,h,a,g)})}parse(){}setCrossOrigin(n){return this.crossOrigin=n,this}setWithCredentials(n){return this.withCredentials=n,this}setPath(n){return this.path=n,this}setResourcePath(n){return this.resourcePath=n,this}setRequestHeader(n){return this.requestHeader=n,this}}const Ci={};class Ni extends ys{constructor(n){super(n)}load(n,a,u,h){void 0===n&&(n=""),void 0!==this.path&&(n=this.path+n),n=this.manager.resolveURL(n);const g=this,x=ll.get(n);if(void 0!==x)return g.manager.itemStart(n),setTimeout(function(){a&&a(x),g.manager.itemEnd(n)},0),x;if(void 0!==Ci[n])return void Ci[n].push({onLoad:a,onProgress:u,onError:h});const w=n.match(/^data:(.*?)(;base64)?,(.*)$/);let T;if(w){const M=w[1],E=!!w[2];let N=w[3];N=decodeURIComponent(N),E&&(N=atob(N));try{let C;const L=(this.responseType||"").toLowerCase();switch(L){case"arraybuffer":case"blob":const D=new Uint8Array(N.length);for(let B=0;B<N.length;B++)D[B]=N.charCodeAt(B);C="blob"===L?new Blob([D.buffer],{type:M}):D.buffer;break;case"document":C=(new DOMParser).parseFromString(N,M);break;case"json":C=JSON.parse(N);break;default:C=N}setTimeout(function(){a&&a(C),g.manager.itemEnd(n)},0)}catch(C){setTimeout(function(){h&&h(C),g.manager.itemError(n),g.manager.itemEnd(n)},0)}}else{Ci[n]=[],Ci[n].push({onLoad:a,onProgress:u,onError:h}),T=new XMLHttpRequest,T.open("GET",n,!0),T.addEventListener("load",function(M){const E=this.response,N=Ci[n];if(delete Ci[n],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),ll.add(n,E);for(let C=0,L=N.length;C<L;C++){const D=N[C];D.onLoad&&D.onLoad(E)}g.manager.itemEnd(n)}else{for(let C=0,L=N.length;C<L;C++){const D=N[C];D.onError&&D.onError(M)}g.manager.itemError(n),g.manager.itemEnd(n)}},!1),T.addEventListener("progress",function(M){const E=Ci[n];for(let N=0,C=E.length;N<C;N++){const L=E[N];L.onProgress&&L.onProgress(M)}},!1),T.addEventListener("error",function(M){const E=Ci[n];delete Ci[n];for(let N=0,C=E.length;N<C;N++){const L=E[N];L.onError&&L.onError(M)}g.manager.itemError(n),g.manager.itemEnd(n)},!1),T.addEventListener("abort",function(M){const E=Ci[n];delete Ci[n];for(let N=0,C=E.length;N<C;N++){const L=E[N];L.onError&&L.onError(M)}g.manager.itemError(n),g.manager.itemEnd(n)},!1),void 0!==this.responseType&&(T.responseType=this.responseType),void 0!==this.withCredentials&&(T.withCredentials=this.withCredentials),T.overrideMimeType&&T.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const M in this.requestHeader)T.setRequestHeader(M,this.requestHeader[M]);T.send(null)}return g.manager.itemStart(n),T}setResponseType(n){return this.responseType=n,this}setMimeType(n){return this.mimeType=n,this}}class Bg extends ys{constructor(n){super(n)}load(n,a,u,h){const g=this,x=new Ni(this.manager);x.setPath(this.path),x.setRequestHeader(this.requestHeader),x.setWithCredentials(this.withCredentials),x.load(n,function(w){try{a(g.parse(JSON.parse(w)))}catch(T){h?h(T):console.error(T),g.manager.itemError(n)}},u,h)}parse(n){const a=[];for(let u=0;u<n.length;u++){const h=lu.parse(n[u]);a.push(h)}return a}}class am extends ys{constructor(n){super(n)}load(n,a,u,h){const g=this,x=[],w=new Xf,T=new Ni(this.manager);T.setPath(this.path),T.setResponseType("arraybuffer"),T.setRequestHeader(this.requestHeader),T.setWithCredentials(g.withCredentials);let M=0;function E(N){T.load(n[N],function(C){const L=g.parse(C,!0);x[N]={width:L.width,height:L.height,format:L.format,mipmaps:L.mipmaps},M+=1,6===M&&(1===L.mipmapCount&&(w.minFilter=Zn),w.image=x,w.format=L.format,w.needsUpdate=!0,a&&a(w))},u,h)}if(Array.isArray(n))for(let N=0,C=n.length;N<C;++N)E(N);else T.load(n,function(N){const C=g.parse(N,!0);if(C.isCubemap){const L=C.mipmaps.length/C.mipmapCount;for(let D=0;D<L;D++){x[D]={mipmaps:[]};for(let $=0;$<C.mipmapCount;$++)x[D].mipmaps.push(C.mipmaps[D*C.mipmapCount+$]),x[D].format=C.format,x[D].width=C.width,x[D].height=C.height}w.image=x}else w.image.width=C.width,w.image.height=C.height,w.mipmaps=C.mipmaps;1===C.mipmapCount&&(w.minFilter=Zn),w.format=C.format,w.needsUpdate=!0,a&&a(w)},u,h);return w}}class ul extends ys{constructor(n){super(n)}load(n,a,u,h){void 0!==this.path&&(n=this.path+n),n=this.manager.resolveURL(n);const g=this,x=ll.get(n);if(void 0!==x)return g.manager.itemStart(n),setTimeout(function(){a&&a(x),g.manager.itemEnd(n)},0),x;const w=document.createElementNS("http://www.w3.org/1999/xhtml","img");function T(){w.removeEventListener("load",T,!1),w.removeEventListener("error",M,!1),ll.add(n,this),a&&a(this),g.manager.itemEnd(n)}function M(E){w.removeEventListener("load",T,!1),w.removeEventListener("error",M,!1),h&&h(E),g.manager.itemError(n),g.manager.itemEnd(n)}return w.addEventListener("load",T,!1),w.addEventListener("error",M,!1),"data:"!==n.substr(0,5)&&void 0!==this.crossOrigin&&(w.crossOrigin=this.crossOrigin),g.manager.itemStart(n),w.src=n,w}}class od extends ys{constructor(n){super(n)}load(n,a,u,h){const g=new jo,x=new ul(this.manager);x.setCrossOrigin(this.crossOrigin),x.setPath(this.path);let w=0;function T(M){x.load(n[M],function(E){g.images[M]=E,w++,6===w&&(g.needsUpdate=!0,a&&a(g))},void 0,h)}for(let M=0;M<n.length;++M)T(M);return g}}class ld extends ys{constructor(n){super(n)}load(n,a,u,h){const g=this,x=new di,w=new Ni(this.manager);return w.setResponseType("arraybuffer"),w.setRequestHeader(this.requestHeader),w.setPath(this.path),w.setWithCredentials(g.withCredentials),w.load(n,function(T){const M=g.parse(T);M&&(void 0!==M.image?x.image=M.image:void 0!==M.data&&(x.image.width=M.width,x.image.height=M.height,x.image.data=M.data),x.wrapS=void 0!==M.wrapS?M.wrapS:Ln,x.wrapT=void 0!==M.wrapT?M.wrapT:Ln,x.magFilter=void 0!==M.magFilter?M.magFilter:Zn,x.minFilter=void 0!==M.minFilter?M.minFilter:Zn,x.anisotropy=void 0!==M.anisotropy?M.anisotropy:1,void 0!==M.encoding&&(x.encoding=M.encoding),void 0!==M.flipY&&(x.flipY=M.flipY),void 0!==M.format&&(x.format=M.format),void 0!==M.type&&(x.type=M.type),void 0!==M.mipmaps&&(x.mipmaps=M.mipmaps,x.minFilter=Eo),1===M.mipmapCount&&(x.minFilter=Zn),void 0!==M.generateMipmaps&&(x.generateMipmaps=M.generateMipmaps),x.needsUpdate=!0,a&&a(x,M))},u,h),x}}class wc extends ys{constructor(n){super(n)}load(n,a,u,h){const g=new Br,x=new ul(this.manager);return x.setCrossOrigin(this.crossOrigin),x.setPath(this.path),x.load(n,function(w){g.image=w;const T=n.search(/\.jpe?g($|\?)/i)>0||0===n.search(/^data\:image\/jpeg/);g.format=T?_a:Ds,g.needsUpdate=!0,void 0!==a&&a(g)},u,h),g}}class Dp extends ki{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(n){this.curves.push(n)}closePath(){const n=this.curves[0].getPoint(0),a=this.curves[this.curves.length-1].getPoint(1);n.equals(a)||this.curves.push(new Qh(a,n))}getPoint(n){const a=n*this.getLength(),u=this.getCurveLengths();let h=0;for(;h<u.length;){if(u[h]>=a){const g=u[h]-a,x=this.curves[h],w=x.getLength();return x.getPointAt(0===w?0:1-g/w)}h++}return null}getLength(){const n=this.getCurveLengths();return n[n.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const n=[];let a=0;for(let u=0,h=this.curves.length;u<h;u++)a+=this.curves[u].getLength(),n.push(a);return this.cacheLengths=n,n}getSpacedPoints(n=40){const a=[];for(let u=0;u<=n;u++)a.push(this.getPoint(u/n));return this.autoClose&&a.push(a[0]),a}getPoints(n=12){const a=[];let u;for(let h=0,g=this.curves;h<g.length;h++){const x=g[h],T=x.getPoints(x&&x.isEllipseCurve?2*n:x&&(x.isLineCurve||x.isLineCurve3)?1:x&&x.isSplineCurve?n*x.points.length:n);for(let M=0;M<T.length;M++){const E=T[M];u&&u.equals(E)||(a.push(E),u=E)}}return this.autoClose&&a.length>1&&!a[a.length-1].equals(a[0])&&a.push(a[0]),a}copy(n){super.copy(n),this.curves=[];for(let a=0,u=n.curves.length;a<u;a++)this.curves.push(n.curves[a].clone());return this.autoClose=n.autoClose,this}toJSON(){const n=super.toJSON();n.autoClose=this.autoClose,n.curves=[];for(let a=0,u=this.curves.length;a<u;a++)n.curves.push(this.curves[a].toJSON());return n}fromJSON(n){super.fromJSON(n),this.autoClose=n.autoClose,this.curves=[];for(let a=0,u=n.curves.length;a<u;a++){const h=n.curves[a];this.curves.push((new Jf[h.type]).fromJSON(h))}return this}}class xs extends Dp{constructor(n){super(),this.type="Path",this.currentPoint=new It,n&&this.setFromPoints(n)}setFromPoints(n){this.moveTo(n[0].x,n[0].y);for(let a=1,u=n.length;a<u;a++)this.lineTo(n[a].x,n[a].y);return this}moveTo(n,a){return this.currentPoint.set(n,a),this}lineTo(n,a){const u=new Qh(this.currentPoint.clone(),new It(n,a));return this.curves.push(u),this.currentPoint.set(n,a),this}quadraticCurveTo(n,a,u,h){const g=new su(this.currentPoint.clone(),new It(n,a),new It(u,h));return this.curves.push(g),this.currentPoint.set(u,h),this}bezierCurveTo(n,a,u,h,g,x){const w=new pc(this.currentPoint.clone(),new It(n,a),new It(u,h),new It(g,x));return this.curves.push(w),this.currentPoint.set(g,x),this}splineThru(n){const a=[this.currentPoint.clone()].concat(n),u=new Ga(a);return this.curves.push(u),this.currentPoint.copy(n[n.length-1]),this}arc(n,a,u,h,g,x){return this.absarc(n+this.currentPoint.x,a+this.currentPoint.y,u,h,g,x),this}absarc(n,a,u,h,g,x){return this.absellipse(n,a,u,u,h,g,x),this}ellipse(n,a,u,h,g,x,w,T){return this.absellipse(n+this.currentPoint.x,a+this.currentPoint.y,u,h,g,x,w,T),this}absellipse(n,a,u,h,g,x,w,T){const M=new yo(n,a,u,h,g,x,w,T);if(this.curves.length>0){const N=M.getPoint(0);N.equals(this.currentPoint)||this.lineTo(N.x,N.y)}this.curves.push(M);const E=M.getPoint(1);return this.currentPoint.copy(E),this}copy(n){return super.copy(n),this.currentPoint.copy(n.currentPoint),this}toJSON(){const n=super.toJSON();return n.currentPoint=this.currentPoint.toArray(),n}fromJSON(n){return super.fromJSON(n),this.currentPoint.fromArray(n.currentPoint),this}}class pa extends xs{constructor(n){super(n),this.uuid=Ws(),this.type="Shape",this.holes=[]}getPointsHoles(n){const a=[];for(let u=0,h=this.holes.length;u<h;u++)a[u]=this.holes[u].getPoints(n);return a}extractPoints(n){return{shape:this.getPoints(n),holes:this.getPointsHoles(n)}}copy(n){super.copy(n),this.holes=[];for(let a=0,u=n.holes.length;a<u;a++)this.holes.push(n.holes[a].clone());return this}toJSON(){const n=super.toJSON();n.uuid=this.uuid,n.holes=[];for(let a=0,u=this.holes.length;a<u;a++)n.holes.push(this.holes[a].toJSON());return n}fromJSON(n){super.fromJSON(n),this.uuid=n.uuid,this.holes=[];for(let a=0,u=n.holes.length;a<u;a++){const h=n.holes[a];this.holes.push((new xs).fromJSON(h))}return this}}class Ai extends Bn{constructor(n,a=1){super(),this.type="Light",this.color=new Wt(n),this.intensity=a}dispose(){}copy(n){return super.copy(n),this.color.copy(n.color),this.intensity=n.intensity,this}toJSON(n){const a=super.toJSON(n);return a.object.color=this.color.getHex(),a.object.intensity=this.intensity,void 0!==this.groundColor&&(a.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(a.object.distance=this.distance),void 0!==this.angle&&(a.object.angle=this.angle),void 0!==this.decay&&(a.object.decay=this.decay),void 0!==this.penumbra&&(a.object.penumbra=this.penumbra),void 0!==this.shadow&&(a.object.shadow=this.shadow.toJSON()),a}}Ai.prototype.isLight=!0;class fa extends Ai{constructor(n,a,u){super(n,u),this.type="HemisphereLight",this.position.copy(Bn.DefaultUp),this.updateMatrix(),this.groundColor=new Wt(a)}copy(n){return Ai.prototype.copy.call(this,n),this.groundColor.copy(n.groundColor),this}}fa.prototype.isHemisphereLight=!0;const yi=new sn,Sc=new te,om=new te;class Fp{constructor(n){this.camera=n,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new It(512,512),this.map=null,this.mapPass=null,this.matrix=new sn,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new qo,this._frameExtents=new It(1,1),this._viewportCount=1,this._viewports=[new sr(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(n){const a=this.camera,u=this.matrix;Sc.setFromMatrixPosition(n.matrixWorld),a.position.copy(Sc),om.setFromMatrixPosition(n.target.matrixWorld),a.lookAt(om),a.updateMatrixWorld(),yi.multiplyMatrices(a.projectionMatrix,a.matrixWorldInverse),this._frustum.setFromProjectionMatrix(yi),u.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),u.multiply(a.projectionMatrix),u.multiply(a.matrixWorldInverse)}getViewport(n){return this._viewports[n]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(n){return this.camera=n.camera.clone(),this.bias=n.bias,this.radius=n.radius,this.mapSize.copy(n.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const n={};return 0!==this.bias&&(n.bias=this.bias),0!==this.normalBias&&(n.normalBias=this.normalBias),1!==this.radius&&(n.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(n.mapSize=this.mapSize.toArray()),n.camera=this.camera.toJSON(!1).object,delete n.camera.matrix,n}}class bs extends Fp{constructor(){super(new cr(50,1,.5,500)),this.focus=1}updateMatrices(n){const a=this.camera,u=2*ao*n.angle*this.focus,h=this.mapSize.width/this.mapSize.height,g=n.distance||a.far;u===a.fov&&h===a.aspect&&g===a.far||(a.fov=u,a.aspect=h,a.far=g,a.updateProjectionMatrix()),super.updateMatrices(n)}copy(n){return super.copy(n),this.focus=n.focus,this}}bs.prototype.isSpotLightShadow=!0;class cl extends Ai{constructor(n,a,u=0,h=Math.PI/3,g=0,x=1){super(n,a),this.type="SpotLight",this.position.copy(Bn.DefaultUp),this.updateMatrix(),this.target=new Bn,this.distance=u,this.angle=h,this.penumbra=g,this.decay=x,this.shadow=new bs}get power(){return this.intensity*Math.PI}set power(n){this.intensity=n/Math.PI}dispose(){this.shadow.dispose()}copy(n){return super.copy(n),this.distance=n.distance,this.angle=n.angle,this.penumbra=n.penumbra,this.decay=n.decay,this.target=n.target.clone(),this.shadow=n.shadow.clone(),this}}cl.prototype.isSpotLight=!0;const U0=new sn,$p=new te,Ug=new te;class lm extends Fp{constructor(){super(new cr(90,1,.5,500)),this._frameExtents=new It(4,2),this._viewportCount=6,this._viewports=[new sr(2,1,1,1),new sr(0,1,1,1),new sr(3,1,1,1),new sr(1,1,1,1),new sr(3,0,1,1),new sr(1,0,1,1)],this._cubeDirections=[new te(1,0,0),new te(-1,0,0),new te(0,0,1),new te(0,0,-1),new te(0,1,0),new te(0,-1,0)],this._cubeUps=[new te(0,1,0),new te(0,1,0),new te(0,1,0),new te(0,1,0),new te(0,0,1),new te(0,0,-1)]}updateMatrices(n,a=0){const u=this.camera,h=this.matrix,g=n.distance||u.far;g!==u.far&&(u.far=g,u.updateProjectionMatrix()),$p.setFromMatrixPosition(n.matrixWorld),u.position.copy($p),Ug.copy(u.position),Ug.add(this._cubeDirections[a]),u.up.copy(this._cubeUps[a]),u.lookAt(Ug),u.updateMatrixWorld(),h.makeTranslation(-$p.x,-$p.y,-$p.z),U0.multiplyMatrices(u.projectionMatrix,u.matrixWorldInverse),this._frustum.setFromProjectionMatrix(U0)}}lm.prototype.isPointLightShadow=!0;class ud extends Ai{constructor(n,a,u=0,h=1){super(n,a),this.type="PointLight",this.distance=u,this.decay=h,this.shadow=new lm}get power(){return 4*this.intensity*Math.PI}set power(n){this.intensity=n/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(n){return super.copy(n),this.distance=n.distance,this.decay=n.decay,this.shadow=n.shadow.clone(),this}}ud.prototype.isPointLight=!0;class Op extends Fp{constructor(){super(new $h(-5,5,5,-5,.5,500))}}Op.prototype.isDirectionalLightShadow=!0;class Pp extends Ai{constructor(n,a){super(n,a),this.type="DirectionalLight",this.position.copy(Bn.DefaultUp),this.updateMatrix(),this.target=new Bn,this.shadow=new Op}dispose(){this.shadow.dispose()}copy(n){return super.copy(n),this.target=n.target.clone(),this.shadow=n.shadow.clone(),this}}Pp.prototype.isDirectionalLight=!0;class Ri extends Ai{constructor(n,a){super(n,a),this.type="AmbientLight"}}Ri.prototype.isAmbientLight=!0;class um extends Ai{constructor(n,a,u=10,h=10){super(n,a),this.type="RectAreaLight",this.width=u,this.height=h}get power(){return this.intensity*this.width*this.height*Math.PI}set power(n){this.intensity=n/(this.width*this.height*Math.PI)}copy(n){return super.copy(n),this.width=n.width,this.height=n.height,this}toJSON(n){const a=super.toJSON(n);return a.object.width=this.width,a.object.height=this.height,a}}um.prototype.isRectAreaLight=!0;class cd{constructor(){this.coefficients=[];for(let n=0;n<9;n++)this.coefficients.push(new te)}set(n){for(let a=0;a<9;a++)this.coefficients[a].copy(n[a]);return this}zero(){for(let n=0;n<9;n++)this.coefficients[n].set(0,0,0);return this}getAt(n,a){const u=n.x,h=n.y,g=n.z,x=this.coefficients;return a.copy(x[0]).multiplyScalar(.282095),a.addScaledVector(x[1],.488603*h),a.addScaledVector(x[2],.488603*g),a.addScaledVector(x[3],.488603*u),a.addScaledVector(x[4],u*h*1.092548),a.addScaledVector(x[5],h*g*1.092548),a.addScaledVector(x[6],.315392*(3*g*g-1)),a.addScaledVector(x[7],u*g*1.092548),a.addScaledVector(x[8],.546274*(u*u-h*h)),a}getIrradianceAt(n,a){const u=n.x,h=n.y,g=n.z,x=this.coefficients;return a.copy(x[0]).multiplyScalar(.886227),a.addScaledVector(x[1],1.023328*h),a.addScaledVector(x[2],1.023328*g),a.addScaledVector(x[3],1.023328*u),a.addScaledVector(x[4],.858086*u*h),a.addScaledVector(x[5],.858086*h*g),a.addScaledVector(x[6],.743125*g*g-.247708),a.addScaledVector(x[7],.858086*u*g),a.addScaledVector(x[8],.429043*(u*u-h*h)),a}add(n){for(let a=0;a<9;a++)this.coefficients[a].add(n.coefficients[a]);return this}addScaledSH(n,a){for(let u=0;u<9;u++)this.coefficients[u].addScaledVector(n.coefficients[u],a);return this}scale(n){for(let a=0;a<9;a++)this.coefficients[a].multiplyScalar(n);return this}lerp(n,a){for(let u=0;u<9;u++)this.coefficients[u].lerp(n.coefficients[u],a);return this}equals(n){for(let a=0;a<9;a++)if(!this.coefficients[a].equals(n.coefficients[a]))return!1;return!0}copy(n){return this.set(n.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(n,a=0){const u=this.coefficients;for(let h=0;h<9;h++)u[h].fromArray(n,a+3*h);return this}toArray(n=[],a=0){const u=this.coefficients;for(let h=0;h<9;h++)u[h].toArray(n,a+3*h);return n}static getBasisAt(n,a){const u=n.x,h=n.y,g=n.z;a[0]=.282095,a[1]=.488603*h,a[2]=.488603*g,a[3]=.488603*u,a[4]=1.092548*u*h,a[5]=1.092548*h*g,a[6]=.315392*(3*g*g-1),a[7]=1.092548*u*g,a[8]=.546274*(u*u-h*h)}}cd.prototype.isSphericalHarmonics3=!0;class Tc extends Ai{constructor(n=new cd,a=1){super(void 0,a),this.sh=n}copy(n){return super.copy(n),this.sh.copy(n.sh),this}fromJSON(n){return this.intensity=n.intensity,this.sh.fromArray(n.sh),this}toJSON(n){const a=super.toJSON(n);return a.object.sh=this.sh.toArray(),a}}Tc.prototype.isLightProbe=!0;class V0 extends ys{constructor(n){super(n),this.textures={}}load(n,a,u,h){const g=this,x=new Ni(g.manager);x.setPath(g.path),x.setRequestHeader(g.requestHeader),x.setWithCredentials(g.withCredentials),x.load(n,function(w){try{a(g.parse(JSON.parse(w)))}catch(T){h?h(T):console.error(T),g.manager.itemError(n)}},u,h)}parse(n){const a=this.textures;function u(g){return void 0===a[g]&&console.warn("THREE.MaterialLoader: Undefined texture",g),a[g]}const h=new Bb[n.type];if(void 0!==n.uuid&&(h.uuid=n.uuid),void 0!==n.name&&(h.name=n.name),void 0!==n.color&&void 0!==h.color&&h.color.setHex(n.color),void 0!==n.roughness&&(h.roughness=n.roughness),void 0!==n.metalness&&(h.metalness=n.metalness),void 0!==n.sheenTint&&(h.sheenTint=(new Wt).setHex(n.sheenTint)),void 0!==n.emissive&&void 0!==h.emissive&&h.emissive.setHex(n.emissive),void 0!==n.specular&&void 0!==h.specular&&h.specular.setHex(n.specular),void 0!==n.specularIntensity&&(h.specularIntensity=n.specularIntensity),void 0!==n.specularTint&&void 0!==h.specularTint&&h.specularTint.setHex(n.specularTint),void 0!==n.shininess&&(h.shininess=n.shininess),void 0!==n.clearcoat&&(h.clearcoat=n.clearcoat),void 0!==n.clearcoatRoughness&&(h.clearcoatRoughness=n.clearcoatRoughness),void 0!==n.transmission&&(h.transmission=n.transmission),void 0!==n.thickness&&(h.thickness=n.thickness),void 0!==n.attenuationDistance&&(h.attenuationDistance=n.attenuationDistance),void 0!==n.attenuationTint&&void 0!==h.attenuationTint&&h.attenuationTint.setHex(n.attenuationTint),void 0!==n.fog&&(h.fog=n.fog),void 0!==n.flatShading&&(h.flatShading=n.flatShading),void 0!==n.blending&&(h.blending=n.blending),void 0!==n.combine&&(h.combine=n.combine),void 0!==n.side&&(h.side=n.side),void 0!==n.shadowSide&&(h.shadowSide=n.shadowSide),void 0!==n.opacity&&(h.opacity=n.opacity),void 0!==n.format&&(h.format=n.format),void 0!==n.transparent&&(h.transparent=n.transparent),void 0!==n.alphaTest&&(h.alphaTest=n.alphaTest),void 0!==n.depthTest&&(h.depthTest=n.depthTest),void 0!==n.depthWrite&&(h.depthWrite=n.depthWrite),void 0!==n.colorWrite&&(h.colorWrite=n.colorWrite),void 0!==n.stencilWrite&&(h.stencilWrite=n.stencilWrite),void 0!==n.stencilWriteMask&&(h.stencilWriteMask=n.stencilWriteMask),void 0!==n.stencilFunc&&(h.stencilFunc=n.stencilFunc),void 0!==n.stencilRef&&(h.stencilRef=n.stencilRef),void 0!==n.stencilFuncMask&&(h.stencilFuncMask=n.stencilFuncMask),void 0!==n.stencilFail&&(h.stencilFail=n.stencilFail),void 0!==n.stencilZFail&&(h.stencilZFail=n.stencilZFail),void 0!==n.stencilZPass&&(h.stencilZPass=n.stencilZPass),void 0!==n.wireframe&&(h.wireframe=n.wireframe),void 0!==n.wireframeLinewidth&&(h.wireframeLinewidth=n.wireframeLinewidth),void 0!==n.wireframeLinecap&&(h.wireframeLinecap=n.wireframeLinecap),void 0!==n.wireframeLinejoin&&(h.wireframeLinejoin=n.wireframeLinejoin),void 0!==n.rotation&&(h.rotation=n.rotation),1!==n.linewidth&&(h.linewidth=n.linewidth),void 0!==n.dashSize&&(h.dashSize=n.dashSize),void 0!==n.gapSize&&(h.gapSize=n.gapSize),void 0!==n.scale&&(h.scale=n.scale),void 0!==n.polygonOffset&&(h.polygonOffset=n.polygonOffset),void 0!==n.polygonOffsetFactor&&(h.polygonOffsetFactor=n.polygonOffsetFactor),void 0!==n.polygonOffsetUnits&&(h.polygonOffsetUnits=n.polygonOffsetUnits),void 0!==n.dithering&&(h.dithering=n.dithering),void 0!==n.alphaToCoverage&&(h.alphaToCoverage=n.alphaToCoverage),void 0!==n.premultipliedAlpha&&(h.premultipliedAlpha=n.premultipliedAlpha),void 0!==n.visible&&(h.visible=n.visible),void 0!==n.toneMapped&&(h.toneMapped=n.toneMapped),void 0!==n.userData&&(h.userData=n.userData),void 0!==n.vertexColors&&(h.vertexColors="number"==typeof n.vertexColors?n.vertexColors>0:n.vertexColors),void 0!==n.uniforms)for(const g in n.uniforms){const x=n.uniforms[g];switch(h.uniforms[g]={},x.type){case"t":h.uniforms[g].value=u(x.value);break;case"c":h.uniforms[g].value=(new Wt).setHex(x.value);break;case"v2":h.uniforms[g].value=(new It).fromArray(x.value);break;case"v3":h.uniforms[g].value=(new te).fromArray(x.value);break;case"v4":h.uniforms[g].value=(new sr).fromArray(x.value);break;case"m3":h.uniforms[g].value=(new zr).fromArray(x.value);break;case"m4":h.uniforms[g].value=(new sn).fromArray(x.value);break;default:h.uniforms[g].value=x.value}}if(void 0!==n.defines&&(h.defines=n.defines),void 0!==n.vertexShader&&(h.vertexShader=n.vertexShader),void 0!==n.fragmentShader&&(h.fragmentShader=n.fragmentShader),void 0!==n.extensions)for(const g in n.extensions)h.extensions[g]=n.extensions[g];if(void 0!==n.shading&&(h.flatShading=1===n.shading),void 0!==n.size&&(h.size=n.size),void 0!==n.sizeAttenuation&&(h.sizeAttenuation=n.sizeAttenuation),void 0!==n.map&&(h.map=u(n.map)),void 0!==n.matcap&&(h.matcap=u(n.matcap)),void 0!==n.alphaMap&&(h.alphaMap=u(n.alphaMap)),void 0!==n.bumpMap&&(h.bumpMap=u(n.bumpMap)),void 0!==n.bumpScale&&(h.bumpScale=n.bumpScale),void 0!==n.normalMap&&(h.normalMap=u(n.normalMap)),void 0!==n.normalMapType&&(h.normalMapType=n.normalMapType),void 0!==n.normalScale){let g=n.normalScale;!1===Array.isArray(g)&&(g=[g,g]),h.normalScale=(new It).fromArray(g)}return void 0!==n.displacementMap&&(h.displacementMap=u(n.displacementMap)),void 0!==n.displacementScale&&(h.displacementScale=n.displacementScale),void 0!==n.displacementBias&&(h.displacementBias=n.displacementBias),void 0!==n.roughnessMap&&(h.roughnessMap=u(n.roughnessMap)),void 0!==n.metalnessMap&&(h.metalnessMap=u(n.metalnessMap)),void 0!==n.emissiveMap&&(h.emissiveMap=u(n.emissiveMap)),void 0!==n.emissiveIntensity&&(h.emissiveIntensity=n.emissiveIntensity),void 0!==n.specularMap&&(h.specularMap=u(n.specularMap)),void 0!==n.specularIntensityMap&&(h.specularIntensityMap=u(n.specularIntensityMap)),void 0!==n.specularTintMap&&(h.specularTintMap=u(n.specularTintMap)),void 0!==n.envMap&&(h.envMap=u(n.envMap)),void 0!==n.envMapIntensity&&(h.envMapIntensity=n.envMapIntensity),void 0!==n.reflectivity&&(h.reflectivity=n.reflectivity),void 0!==n.refractionRatio&&(h.refractionRatio=n.refractionRatio),void 0!==n.lightMap&&(h.lightMap=u(n.lightMap)),void 0!==n.lightMapIntensity&&(h.lightMapIntensity=n.lightMapIntensity),void 0!==n.aoMap&&(h.aoMap=u(n.aoMap)),void 0!==n.aoMapIntensity&&(h.aoMapIntensity=n.aoMapIntensity),void 0!==n.gradientMap&&(h.gradientMap=u(n.gradientMap)),void 0!==n.clearcoatMap&&(h.clearcoatMap=u(n.clearcoatMap)),void 0!==n.clearcoatRoughnessMap&&(h.clearcoatRoughnessMap=u(n.clearcoatRoughnessMap)),void 0!==n.clearcoatNormalMap&&(h.clearcoatNormalMap=u(n.clearcoatNormalMap)),void 0!==n.clearcoatNormalScale&&(h.clearcoatNormalScale=(new It).fromArray(n.clearcoatNormalScale)),void 0!==n.transmissionMap&&(h.transmissionMap=u(n.transmissionMap)),void 0!==n.thicknessMap&&(h.thicknessMap=u(n.thicknessMap)),h}setTextures(n){return this.textures=n,this}}class zp{static decodeText(n){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(n);let a="";for(let u=0,h=n.length;u<h;u++)a+=String.fromCharCode(n[u]);try{return decodeURIComponent(escape(a))}catch(u){return a}}static extractUrlBase(n){const a=n.lastIndexOf("/");return-1===a?"./":n.substr(0,a+1)}}class hd extends wn{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(n){return super.copy(n),this.instanceCount=n.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const n=super.toJSON(this);return n.instanceCount=this.instanceCount,n.isInstancedBufferGeometry=!0,n}}hd.prototype.isInstancedBufferGeometry=!0;class W0 extends ys{constructor(n){super(n)}load(n,a,u,h){const g=this,x=new Ni(g.manager);x.setPath(g.path),x.setRequestHeader(g.requestHeader),x.setWithCredentials(g.withCredentials),x.load(n,function(w){try{a(g.parse(JSON.parse(w)))}catch(T){h?h(T):console.error(T),g.manager.itemError(n)}},u,h)}parse(n){const a={},u={};function h(N,C){if(void 0!==a[C])return a[C];const L=N.interleavedBuffers[C],D=function(O,q){if(void 0!==u[q])return u[q];const Y=new Uint32Array(O.arrayBuffers[q]).buffer;return u[q]=Y,Y}(N,L.buffer),$=Un(L.type,D),B=new Zs($,L.stride);return B.uuid=L.uuid,a[C]=B,B}const g=n.isInstancedBufferGeometry?new hd:new wn,x=n.data.index;if(void 0!==x){const N=Un(x.type,x.array);g.setIndex(new On(N,1))}const w=n.data.attributes;for(const N in w){const C=w[N];let L;if(C.isInterleavedBufferAttribute){const D=h(n.data,C.data);L=new oa(D,C.itemSize,C.offset,C.normalized)}else{const D=Un(C.type,C.array);L=new(C.isInstancedBufferAttribute?dr:On)(D,C.itemSize,C.normalized)}void 0!==C.name&&(L.name=C.name),void 0!==C.usage&&L.setUsage(C.usage),void 0!==C.updateRange&&(L.updateRange.offset=C.updateRange.offset,L.updateRange.count=C.updateRange.count),g.setAttribute(N,L)}const T=n.data.morphAttributes;if(T)for(const N in T){const C=T[N],L=[];for(let D=0,$=C.length;D<$;D++){const B=C[D];let O;if(B.isInterleavedBufferAttribute){const q=h(n.data,B.data);O=new oa(q,B.itemSize,B.offset,B.normalized)}else{const q=Un(B.type,B.array);O=new On(q,B.itemSize,B.normalized)}void 0!==B.name&&(O.name=B.name),L.push(O)}g.morphAttributes[N]=L}n.data.morphTargetsRelative&&(g.morphTargetsRelative=!0);const M=n.data.groups||n.data.drawcalls||n.data.offsets;if(void 0!==M)for(let N=0,C=M.length;N!==C;++N){const L=M[N];g.addGroup(L.start,L.count,L.materialIndex)}const E=n.data.boundingSphere;if(void 0!==E){const N=new te;void 0!==E.center&&N.fromArray(E.center),g.boundingSphere=new Na(N,E.radius)}return n.name&&(g.name=n.name),n.userData&&(g.userData=n.userData),g}}class G0 extends ys{constructor(n){super(n)}load(n,a,u,h){const g=this,x=""===this.path?zp.extractUrlBase(n):this.path;this.resourcePath=this.resourcePath||x;const w=new Ni(this.manager);w.setPath(this.path),w.setRequestHeader(this.requestHeader),w.setWithCredentials(this.withCredentials),w.load(n,function(T){let M=null;try{M=JSON.parse(T)}catch(N){return void 0!==h&&h(N),void console.error("THREE:ObjectLoader: Can't parse "+n+".",N.message)}const E=M.metadata;void 0!==E&&void 0!==E.type&&"geometry"!==E.type.toLowerCase()?g.parse(M,a):console.error("THREE.ObjectLoader: Can't load "+n)},u,h)}async loadAsync(n,a){const u=""===this.path?zp.extractUrlBase(n):this.path;this.resourcePath=this.resourcePath||u;const h=new Ni(this.manager);h.setPath(this.path),h.setRequestHeader(this.requestHeader),h.setWithCredentials(this.withCredentials);const g=await h.loadAsync(n,a),x=JSON.parse(g),w=x.metadata;if(void 0===w||void 0===w.type||"geometry"===w.type.toLowerCase())throw new Error("THREE.ObjectLoader: Can't load "+n);return await this.parseAsync(x)}parse(n,a){const u=this.parseAnimations(n.animations),h=this.parseShapes(n.shapes),g=this.parseGeometries(n.geometries,h),x=this.parseImages(n.images,function(){void 0!==a&&a(M)}),w=this.parseTextures(n.textures,x),T=this.parseMaterials(n.materials,w),M=this.parseObject(n.object,g,T,w,u),E=this.parseSkeletons(n.skeletons,M);if(this.bindSkeletons(M,E),void 0!==a){let N=!1;for(const C in x)if(x[C]instanceof HTMLImageElement){N=!0;break}!1===N&&a(M)}return M}async parseAsync(n){const a=this.parseAnimations(n.animations),u=this.parseShapes(n.shapes),h=this.parseGeometries(n.geometries,u),g=await this.parseImagesAsync(n.images),x=this.parseTextures(n.textures,g),w=this.parseMaterials(n.materials,x),T=this.parseObject(n.object,h,w,x,a),M=this.parseSkeletons(n.skeletons,T);return this.bindSkeletons(T,M),T}parseShapes(n){const a={};if(void 0!==n)for(let u=0,h=n.length;u<h;u++){const g=(new pa).fromJSON(n[u]);a[g.uuid]=g}return a}parseSkeletons(n,a){const u={},h={};if(a.traverse(function(g){g.isBone&&(h[g.uuid]=g)}),void 0!==n)for(let g=0,x=n.length;g<x;g++){const w=(new qh).fromJSON(n[g],h);u[w.uuid]=w}return u}parseGeometries(n,a){const u={};if(void 0!==n){const h=new W0;for(let g=0,x=n.length;g<x;g++){let w;const T=n[g];switch(T.type){case"BufferGeometry":case"InstancedBufferGeometry":w=h.parse(T);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:T.type in z0?w=z0[T.type].fromJSON(T,a):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${T.type}"`)}w.uuid=T.uuid,void 0!==T.name&&(w.name=T.name),!0===w.isBufferGeometry&&void 0!==T.userData&&(w.userData=T.userData),u[T.uuid]=w}}return u}parseMaterials(n,a){const u={},h={};if(void 0!==n){const g=new V0;g.setTextures(a);for(let x=0,w=n.length;x<w;x++){const T=n[x];if("MultiMaterial"===T.type){const M=[];for(let E=0;E<T.materials.length;E++){const N=T.materials[E];void 0===u[N.uuid]&&(u[N.uuid]=g.parse(N)),M.push(u[N.uuid])}h[T.uuid]=M}else void 0===u[T.uuid]&&(u[T.uuid]=g.parse(T)),h[T.uuid]=u[T.uuid]}}return h}parseAnimations(n){const a={};if(void 0!==n)for(let u=0;u<n.length;u++){const g=lu.parse(n[u]);a[g.uuid]=g}return a}parseImages(n,a){const u=this,h={};let g;function x(w){if("string"==typeof w){const T=w;return M=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(T)?T:u.resourcePath+T,u.manager.itemStart(M),g.load(M,function(){u.manager.itemEnd(M)},void 0,function(){u.manager.itemError(M),u.manager.itemEnd(M)})}var M;return w.data?{data:Un(w.type,w.data),width:w.width,height:w.height}:null}if(void 0!==n&&n.length>0){const w=new sm(a);g=new ul(w),g.setCrossOrigin(this.crossOrigin);for(let T=0,M=n.length;T<M;T++){const E=n[T],N=E.url;if(Array.isArray(N)){h[E.uuid]=[];for(let C=0,L=N.length;C<L;C++){const D=x(N[C]);null!==D&&(D instanceof HTMLImageElement?h[E.uuid].push(D):h[E.uuid].push(new di(D.data,D.width,D.height)))}}else{const C=x(E.url);null!==C&&(h[E.uuid]=C)}}}return h}async parseImagesAsync(n){const a=this,u={};let h;async function g(x){if("string"==typeof x){const w=x,T=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(w)?w:a.resourcePath+w;return await h.loadAsync(T)}return x.data?{data:Un(x.type,x.data),width:x.width,height:x.height}:null}if(void 0!==n&&n.length>0){h=new ul(this.manager),h.setCrossOrigin(this.crossOrigin);for(let x=0,w=n.length;x<w;x++){const T=n[x],M=T.url;if(Array.isArray(M)){u[T.uuid]=[];for(let E=0,N=M.length;E<N;E++){const C=M[E],L=await g(C);null!==L&&(L instanceof HTMLImageElement?u[T.uuid].push(L):u[T.uuid].push(new di(L.data,L.width,L.height)))}}else{const E=await g(T.url);null!==E&&(u[T.uuid]=E)}}}return u}parseTextures(n,a){function u(g,x){return"number"==typeof g?g:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",g),x[g])}const h={};if(void 0!==n)for(let g=0,x=n.length;g<x;g++){const w=n[g];let T;void 0===w.image&&console.warn('THREE.ObjectLoader: No "image" specified for',w.uuid),void 0===a[w.image]&&console.warn("THREE.ObjectLoader: Undefined image",w.image);const M=a[w.image];Array.isArray(M)?(T=new jo(M),6===M.length&&(T.needsUpdate=!0)):(T=M&&M.data?new di(M.data,M.width,M.height):new Br(M),M&&(T.needsUpdate=!0)),T.uuid=w.uuid,void 0!==w.name&&(T.name=w.name),void 0!==w.mapping&&(T.mapping=u(w.mapping,Vg)),void 0!==w.offset&&T.offset.fromArray(w.offset),void 0!==w.repeat&&T.repeat.fromArray(w.repeat),void 0!==w.center&&T.center.fromArray(w.center),void 0!==w.rotation&&(T.rotation=w.rotation),void 0!==w.wrap&&(T.wrapS=u(w.wrap[0],Wg),T.wrapT=u(w.wrap[1],Wg)),void 0!==w.format&&(T.format=w.format),void 0!==w.type&&(T.type=w.type),void 0!==w.encoding&&(T.encoding=w.encoding),void 0!==w.minFilter&&(T.minFilter=u(w.minFilter,Gg)),void 0!==w.magFilter&&(T.magFilter=u(w.magFilter,Gg)),void 0!==w.anisotropy&&(T.anisotropy=w.anisotropy),void 0!==w.flipY&&(T.flipY=w.flipY),void 0!==w.premultiplyAlpha&&(T.premultiplyAlpha=w.premultiplyAlpha),void 0!==w.unpackAlignment&&(T.unpackAlignment=w.unpackAlignment),h[w.uuid]=T}return h}parseObject(n,a,u,h,g){let x,w,T;function M(C){return void 0===a[C]&&console.warn("THREE.ObjectLoader: Undefined geometry",C),a[C]}function E(C){if(void 0!==C){if(Array.isArray(C)){const L=[];for(let D=0,$=C.length;D<$;D++){const B=C[D];void 0===u[B]&&console.warn("THREE.ObjectLoader: Undefined material",B),L.push(u[B])}return L}return void 0===u[C]&&console.warn("THREE.ObjectLoader: Undefined material",C),u[C]}}function N(C){return void 0===h[C]&&console.warn("THREE.ObjectLoader: Undefined texture",C),h[C]}switch(n.type){case"Scene":x=new An,void 0!==n.background&&(x.background=Number.isInteger(n.background)?new Wt(n.background):N(n.background)),void 0!==n.environment&&(x.environment=N(n.environment)),void 0!==n.fog&&("Fog"===n.fog.type?x.fog=new Dr(n.fog.color,n.fog.near,n.fog.far):"FogExp2"===n.fog.type&&(x.fog=new mo(n.fog.color,n.fog.density)));break;case"PerspectiveCamera":x=new cr(n.fov,n.aspect,n.near,n.far),void 0!==n.focus&&(x.focus=n.focus),void 0!==n.zoom&&(x.zoom=n.zoom),void 0!==n.filmGauge&&(x.filmGauge=n.filmGauge),void 0!==n.filmOffset&&(x.filmOffset=n.filmOffset),void 0!==n.view&&(x.view=Object.assign({},n.view));break;case"OrthographicCamera":x=new $h(n.left,n.right,n.top,n.bottom,n.near,n.far),void 0!==n.zoom&&(x.zoom=n.zoom),void 0!==n.view&&(x.view=Object.assign({},n.view));break;case"AmbientLight":x=new Ri(n.color,n.intensity);break;case"DirectionalLight":x=new Pp(n.color,n.intensity);break;case"PointLight":x=new ud(n.color,n.intensity,n.distance,n.decay);break;case"RectAreaLight":x=new um(n.color,n.intensity,n.width,n.height);break;case"SpotLight":x=new cl(n.color,n.intensity,n.distance,n.angle,n.penumbra,n.decay);break;case"HemisphereLight":x=new fa(n.color,n.groundColor,n.intensity);break;case"LightProbe":x=(new Tc).fromJSON(n);break;case"SkinnedMesh":w=M(n.geometry),T=E(n.material),x=new Va(w,T),void 0!==n.bindMode&&(x.bindMode=n.bindMode),void 0!==n.bindMatrix&&x.bindMatrix.fromArray(n.bindMatrix),void 0!==n.skeleton&&(x.skeleton=n.skeleton);break;case"Mesh":w=M(n.geometry),T=E(n.material),x=new es(w,T);break;case"InstancedMesh":w=M(n.geometry),T=E(n.material);const L=n.instanceMatrix,D=n.instanceColor;x=new hc(w,T,n.count),x.instanceMatrix=new dr(new Float32Array(L.array),16),void 0!==D&&(x.instanceColor=new dr(new Float32Array(D.array),D.itemSize));break;case"LOD":x=new Qo;break;case"Line":x=new _i(M(n.geometry),E(n.material));break;case"LineLoop":x=new jf(M(n.geometry),E(n.material));break;case"LineSegments":x=new pi(M(n.geometry),E(n.material));break;case"PointCloud":case"Points":x=new eu(M(n.geometry),E(n.material));break;case"Sprite":x=new Zl(E(n.material));break;case"Group":x=new fo;break;case"Bone":x=new ts;break;default:x=new Bn}if(x.uuid=n.uuid,void 0!==n.name&&(x.name=n.name),void 0!==n.matrix?(x.matrix.fromArray(n.matrix),void 0!==n.matrixAutoUpdate&&(x.matrixAutoUpdate=n.matrixAutoUpdate),x.matrixAutoUpdate&&x.matrix.decompose(x.position,x.quaternion,x.scale)):(void 0!==n.position&&x.position.fromArray(n.position),void 0!==n.rotation&&x.rotation.fromArray(n.rotation),void 0!==n.quaternion&&x.quaternion.fromArray(n.quaternion),void 0!==n.scale&&x.scale.fromArray(n.scale)),void 0!==n.castShadow&&(x.castShadow=n.castShadow),void 0!==n.receiveShadow&&(x.receiveShadow=n.receiveShadow),n.shadow&&(void 0!==n.shadow.bias&&(x.shadow.bias=n.shadow.bias),void 0!==n.shadow.normalBias&&(x.shadow.normalBias=n.shadow.normalBias),void 0!==n.shadow.radius&&(x.shadow.radius=n.shadow.radius),void 0!==n.shadow.mapSize&&x.shadow.mapSize.fromArray(n.shadow.mapSize),void 0!==n.shadow.camera&&(x.shadow.camera=this.parseObject(n.shadow.camera))),void 0!==n.visible&&(x.visible=n.visible),void 0!==n.frustumCulled&&(x.frustumCulled=n.frustumCulled),void 0!==n.renderOrder&&(x.renderOrder=n.renderOrder),void 0!==n.userData&&(x.userData=n.userData),void 0!==n.layers&&(x.layers.mask=n.layers),void 0!==n.children){const C=n.children;for(let L=0;L<C.length;L++)x.add(this.parseObject(C[L],a,u,h,g))}if(void 0!==n.animations){const C=n.animations;for(let L=0;L<C.length;L++)x.animations.push(g[C[L]])}if("LOD"===n.type){void 0!==n.autoUpdate&&(x.autoUpdate=n.autoUpdate);const C=n.levels;for(let L=0;L<C.length;L++){const D=C[L],$=x.getObjectByProperty("uuid",D.object);void 0!==$&&x.addLevel($,D.distance)}}return x}bindSkeletons(n,a){0!==Object.keys(a).length&&n.traverse(function(u){if(!0===u.isSkinnedMesh&&void 0!==u.skeleton){const h=a[u.skeleton];void 0===h?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",u.skeleton):u.bind(h,u.bindMatrix)}})}setTexturePath(n){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(n)}}const Vg={UVMapping:Ue,CubeReflectionMapping:dt,CubeRefractionMapping:ke,EquirectangularReflectionMapping:en,EquirectangularRefractionMapping:He,CubeUVReflectionMapping:Bt,CubeUVRefractionMapping:gn},Wg={RepeatWrapping:yn,ClampToEdgeWrapping:Ln,MirroredRepeatWrapping:Hr},Gg={NearestFilter:or,NearestMipmapNearestFilter:El,NearestMipmapLinearFilter:Yi,LinearFilter:Zn,LinearMipmapNearestFilter:uf,LinearMipmapLinearFilter:Eo};class Hg extends ys{constructor(n){super(n),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(n){return this.options=n,this}load(n,a,u,h){void 0===n&&(n=""),void 0!==this.path&&(n=this.path+n),n=this.manager.resolveURL(n);const g=this,x=ll.get(n);if(void 0!==x)return g.manager.itemStart(n),setTimeout(function(){a&&a(x),g.manager.itemEnd(n)},0),x;const w={};w.credentials="anonymous"===this.crossOrigin?"same-origin":"include",w.headers=this.requestHeader,fetch(n,w).then(function(T){return T.blob()}).then(function(T){return createImageBitmap(T,Object.assign(g.options,{colorSpaceConversion:"none"}))}).then(function(T){ll.add(n,T),a&&a(T),g.manager.itemEnd(n)}).catch(function(T){h&&h(T),g.manager.itemError(n),g.manager.itemEnd(n)}),g.manager.itemStart(n)}}Hg.prototype.isImageBitmapLoader=!0;class cm{constructor(){this.type="ShapePath",this.color=new Wt,this.subPaths=[],this.currentPath=null}moveTo(n,a){return this.currentPath=new xs,this.subPaths.push(this.currentPath),this.currentPath.moveTo(n,a),this}lineTo(n,a){return this.currentPath.lineTo(n,a),this}quadraticCurveTo(n,a,u,h){return this.currentPath.quadraticCurveTo(n,a,u,h),this}bezierCurveTo(n,a,u,h,g,x){return this.currentPath.bezierCurveTo(n,a,u,h,g,x),this}splineThru(n){return this.currentPath.splineThru(n),this}toShapes(n,a){function u(q){const ee=[];for(let Y=0,ce=q.length;Y<ce;Y++){const he=q[Y],Ie=new pa;Ie.curves=he.curves,ee.push(Ie)}return ee}function h(q,ee){const Y=ee.length;let ce=!1;for(let he=Y-1,Ie=0;Ie<Y;he=Ie++){let Ae=ee[he],We=ee[Ie],$e=We.x-Ae.x,Oe=We.y-Ae.y;if(Math.abs(Oe)>Number.EPSILON){if(Oe<0&&(Ae=ee[Ie],$e=-$e,We=ee[he],Oe=-Oe),q.y<Ae.y||q.y>We.y)continue;if(q.y===Ae.y){if(q.x===Ae.x)return!0}else{const At=Oe*(q.x-Ae.x)-$e*(q.y-Ae.y);if(0===At)return!0;if(At<0)continue;ce=!ce}}else{if(q.y!==Ae.y)continue;if(We.x<=q.x&&q.x<=Ae.x||Ae.x<=q.x&&q.x<=We.x)return!0}}return ce}const g=Ha.isClockWise,x=this.subPaths;if(0===x.length)return[];if(!0===a)return u(x);let w,T,M;const E=[];if(1===x.length)return T=x[0],M=new pa,M.curves=T.curves,E.push(M),E;let N=!g(x[0].getPoints());N=n?!N:N;const C=[],L=[];let D,$,B=[],O=0;L[O]=void 0,B[O]=[];for(let q=0,ee=x.length;q<ee;q++)T=x[q],D=T.getPoints(),w=g(D),w=n?!w:w,w?(!N&&L[O]&&O++,L[O]={s:new pa,p:D},L[O].s.curves=T.curves,N&&O++,B[O]=[]):B[O].push({h:T,p:D[0]});if(!L[0])return u(x);if(L.length>1){let q=!1;const ee=[];for(let Y=0,ce=L.length;Y<ce;Y++)C[Y]=[];for(let Y=0,ce=L.length;Y<ce;Y++){const he=B[Y];for(let Ie=0;Ie<he.length;Ie++){const Ae=he[Ie];let We=!0;for(let $e=0;$e<L.length;$e++)h(Ae.p,L[$e].p)&&(Y!==$e&&ee.push({froms:Y,tos:$e,hole:Ie}),We?(We=!1,C[$e].push(Ae)):q=!0);We&&C[Y].push(Ae)}}ee.length>0&&(q||(B=C))}for(let q=0,ee=L.length;q<ee;q++){M=L[q].s,E.push(M),$=B[q];for(let Y=0,ce=$.length;Y<ce;Y++)M.holes.push($[Y].h)}return E}}class jg{constructor(n){this.type="Font",this.data=n}generateShapes(n,a=100){const u=[],h=function(g,x,w){const T=Array.from(g),M=x/w.resolution,E=(w.boundingBox.yMax-w.boundingBox.yMin+w.underlineThickness)*M,N=[];let C=0,L=0;for(let D=0;D<T.length;D++){const $=T[D];if("\n"===$)C=0,L-=E;else{const B=qg($,M,C,L,w);C+=B.offsetX,N.push(B.path)}}return N}(n,a,this.data);for(let g=0,x=h.length;g<x;g++)Array.prototype.push.apply(u,h[g].toShapes());return u}}function qg(b,n,a,u,h){const g=h.glyphs[b]||h.glyphs["?"];if(!g)return void console.error('THREE.Font: character "'+b+'" does not exists in font family '+h.familyName+".");const x=new cm;let w,T,M,E,N,C,L,D;if(g.o){const $=g._cachedOutline||(g._cachedOutline=g.o.split(" "));for(let B=0,O=$.length;B<O;)switch($[B++]){case"m":w=$[B++]*n+a,T=$[B++]*n+u,x.moveTo(w,T);break;case"l":w=$[B++]*n+a,T=$[B++]*n+u,x.lineTo(w,T);break;case"q":M=$[B++]*n+a,E=$[B++]*n+u,N=$[B++]*n+a,C=$[B++]*n+u,x.quadraticCurveTo(N,C,M,E);break;case"b":M=$[B++]*n+a,E=$[B++]*n+u,N=$[B++]*n+a,C=$[B++]*n+u,L=$[B++]*n+a,D=$[B++]*n+u,x.bezierCurveTo(N,C,L,D,M,E)}}return{offsetX:g.ha*n,path:x}}jg.prototype.isFont=!0;class hm extends ys{constructor(n){super(n)}load(n,a,u,h){const g=this,x=new Ni(this.manager);x.setPath(this.path),x.setRequestHeader(this.requestHeader),x.setWithCredentials(g.withCredentials),x.load(n,function(w){let T;try{T=JSON.parse(w)}catch(E){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),T=JSON.parse(w.substring(65,w.length-2))}const M=g.parse(T);a&&a(M)},u,h)}parse(n){return new jg(n)}}let Mc;const dd={getContext:function(){return void 0===Mc&&(Mc=new(window.AudioContext||window.webkitAudioContext)),Mc},setContext:function(b){Mc=b}};class Bp extends ys{constructor(n){super(n)}load(n,a,u,h){const g=this,x=new Ni(this.manager);x.setResponseType("arraybuffer"),x.setPath(this.path),x.setRequestHeader(this.requestHeader),x.setWithCredentials(this.withCredentials),x.load(n,function(w){try{const T=w.slice(0);dd.getContext().decodeAudioData(T,function(M){a(M)})}catch(T){h?h(T):console.error(T),g.manager.itemError(n)}},u,h)}}class dm extends Tc{constructor(n,a,u=1){super(void 0,u);const h=(new Wt).set(n),g=(new Wt).set(a),x=new te(h.r,h.g,h.b),w=new te(g.r,g.g,g.b),T=Math.sqrt(Math.PI),M=T*Math.sqrt(.75);this.sh.coefficients[0].copy(x).add(w).multiplyScalar(T),this.sh.coefficients[1].copy(x).sub(w).multiplyScalar(M)}}dm.prototype.isHemisphereLightProbe=!0;class Xg extends Tc{constructor(n,a=1){super(void 0,a);const u=(new Wt).set(n);this.sh.coefficients[0].set(u.r,u.g,u.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Xg.prototype.isAmbientLightProbe=!0;const Kg=new sn,Yg=new sn;class pm{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new cr,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new cr,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(n){const a=this._cache;if(a.focus!==n.focus||a.fov!==n.fov||a.aspect!==n.aspect*this.aspect||a.near!==n.near||a.far!==n.far||a.zoom!==n.zoom||a.eyeSep!==this.eyeSep){a.focus=n.focus,a.fov=n.fov,a.aspect=n.aspect*this.aspect,a.near=n.near,a.far=n.far,a.zoom=n.zoom,a.eyeSep=this.eyeSep;const u=n.projectionMatrix.clone(),h=a.eyeSep/2,g=h*a.near/a.focus,x=a.near*Math.tan(Ia*a.fov*.5)/a.zoom;let w,T;Yg.elements[12]=-h,Kg.elements[12]=h,w=-x*a.aspect+g,T=x*a.aspect+g,u.elements[0]=2*a.near/(T-w),u.elements[8]=(T+w)/(T-w),this.cameraL.projectionMatrix.copy(u),w=-x*a.aspect-g,T=x*a.aspect-g,u.elements[0]=2*a.near/(T-w),u.elements[8]=(T+w)/(T-w),this.cameraR.projectionMatrix.copy(u)}this.cameraL.matrixWorld.copy(n.matrixWorld).multiply(Yg),this.cameraR.matrixWorld.copy(n.matrixWorld).multiply(Kg)}}class H0{constructor(n=!0){this.autoStart=n,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Zg(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let n=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const a=Zg();n=(a-this.oldTime)/1e3,this.oldTime=a,this.elapsedTime+=n}return n}}function Zg(){return("undefined"==typeof performance?Date:performance).now()}const uu=new te,j0=new Qr,Ub=new te,_c=new te;class Vb extends Bn{constructor(){super(),this.type="AudioListener",this.context=dd.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new H0}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(n){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=n,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(n){return this.gain.gain.setTargetAtTime(n,this.context.currentTime,.01),this}updateMatrixWorld(n){super.updateMatrixWorld(n);const a=this.context.listener,u=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(uu,j0,Ub),_c.set(0,0,-1).applyQuaternion(j0),a.positionX){const h=this.context.currentTime+this.timeDelta;a.positionX.linearRampToValueAtTime(uu.x,h),a.positionY.linearRampToValueAtTime(uu.y,h),a.positionZ.linearRampToValueAtTime(uu.z,h),a.forwardX.linearRampToValueAtTime(_c.x,h),a.forwardY.linearRampToValueAtTime(_c.y,h),a.forwardZ.linearRampToValueAtTime(_c.z,h),a.upX.linearRampToValueAtTime(u.x,h),a.upY.linearRampToValueAtTime(u.y,h),a.upZ.linearRampToValueAtTime(u.z,h)}else a.setPosition(uu.x,uu.y,uu.z),a.setOrientation(_c.x,_c.y,_c.z,u.x,u.y,u.z)}}class Jg extends Bn{constructor(n){super(),this.type="Audio",this.listener=n,this.context=n.context,this.gain=this.context.createGain(),this.gain.connect(n.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(n){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=n,this.connect(),this}setMediaElementSource(n){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(n),this.connect(),this}setMediaStreamSource(n){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(n),this.connect(),this}setBuffer(n){return this.buffer=n,this.sourceType="buffer",this.autoplay&&this.play(),this}play(n=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+n;const a=this.context.createBufferSource();return a.buffer=this.buffer,a.loop=this.loop,a.loopStart=this.loopStart,a.loopEnd=this.loopEnd,a.onended=this.onEnded.bind(this),a.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=a,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let n=1,a=this.filters.length;n<a;n++)this.filters[n-1].connect(this.filters[n]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let n=1,a=this.filters.length;n<a;n++)this.filters[n-1].disconnect(this.filters[n]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(n){return n||(n=[]),!0===this._connected?(this.disconnect(),this.filters=n.slice(),this.connect()):this.filters=n.slice(),this}setDetune(n){if(this.detune=n,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(n){return this.setFilters(n?[n]:[])}setPlaybackRate(n){if(!1!==this.hasPlaybackControl)return this.playbackRate=n,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(n){if(!1!==this.hasPlaybackControl)return this.loop=n,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(n){return this.loopStart=n,this}setLoopEnd(n){return this.loopEnd=n,this}getVolume(){return this.gain.gain.value}setVolume(n){return this.gain.gain.setTargetAtTime(n,this.context.currentTime,.01),this}}const ma=new te,q0=new Qr,Wb=new te,kc=new te;class fm extends Jg{constructor(n){super(n),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(n){return this.panner.refDistance=n,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(n){return this.panner.rolloffFactor=n,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(n){return this.panner.distanceModel=n,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(n){return this.panner.maxDistance=n,this}setDirectionalCone(n,a,u){return this.panner.coneInnerAngle=n,this.panner.coneOuterAngle=a,this.panner.coneOuterGain=u,this}updateMatrixWorld(n){if(super.updateMatrixWorld(n),!0===this.hasPlaybackControl&&!1===this.isPlaying)return;this.matrixWorld.decompose(ma,q0,Wb),kc.set(0,0,1).applyQuaternion(q0);const a=this.panner;if(a.positionX){const u=this.context.currentTime+this.listener.timeDelta;a.positionX.linearRampToValueAtTime(ma.x,u),a.positionY.linearRampToValueAtTime(ma.y,u),a.positionZ.linearRampToValueAtTime(ma.z,u),a.orientationX.linearRampToValueAtTime(kc.x,u),a.orientationY.linearRampToValueAtTime(kc.y,u),a.orientationZ.linearRampToValueAtTime(kc.z,u)}else a.setPosition(ma.x,ma.y,ma.z),a.setOrientation(kc.x,kc.y,kc.z)}}class Up{constructor(n,a=2048){this.analyser=n.context.createAnalyser(),this.analyser.fftSize=a,this.data=new Uint8Array(this.analyser.frequencyBinCount),n.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let n=0;const a=this.getFrequencyData();for(let u=0;u<a.length;u++)n+=a[u];return n/a.length}}class Vp{constructor(n,a,u){let h,g,x;switch(this.binding=n,this.valueSize=u,a){case"quaternion":h=this._slerp,g=this._slerpAdditive,x=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*u),this._workIndex=5;break;case"string":case"bool":h=this._select,g=this._select,x=this._setAdditiveIdentityOther,this.buffer=new Array(5*u);break;default:h=this._lerp,g=this._lerpAdditive,x=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*u)}this._mixBufferRegion=h,this._mixBufferRegionAdditive=g,this._setIdentity=x,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(n,a){const u=this.buffer,h=this.valueSize,g=n*h+h;let x=this.cumulativeWeight;if(0===x){for(let w=0;w!==h;++w)u[g+w]=u[w];x=a}else x+=a,this._mixBufferRegion(u,g,0,a/x,h);this.cumulativeWeight=x}accumulateAdditive(n){const a=this.buffer,u=this.valueSize,h=u*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(a,h,0,n,u),this.cumulativeWeightAdditive+=n}apply(n){const a=this.valueSize,u=this.buffer,h=n*a+a,g=this.cumulativeWeight,x=this.cumulativeWeightAdditive,w=this.binding;this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,g<1&&this._mixBufferRegion(u,h,a*this._origIndex,1-g,a),x>0&&this._mixBufferRegionAdditive(u,h,this._addIndex*a,1,a);for(let T=a,M=a+a;T!==M;++T)if(u[T]!==u[T+a]){w.setValue(u,h);break}}saveOriginalState(){const a=this.buffer,u=this.valueSize,h=u*this._origIndex;this.binding.getValue(a,h);for(let g=u,x=h;g!==x;++g)a[g]=a[h+g%u];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){this.binding.setValue(this.buffer,3*this.valueSize)}_setAdditiveIdentityNumeric(){const n=this._addIndex*this.valueSize,a=n+this.valueSize;for(let u=n;u<a;u++)this.buffer[u]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const n=this._origIndex*this.valueSize,a=this._addIndex*this.valueSize;for(let u=0;u<this.valueSize;u++)this.buffer[a+u]=this.buffer[n+u]}_select(n,a,u,h,g){if(h>=.5)for(let x=0;x!==g;++x)n[a+x]=n[u+x]}_slerp(n,a,u,h){Qr.slerpFlat(n,a,n,a,n,u,h)}_slerpAdditive(n,a,u,h,g){const x=this._workIndex*g;Qr.multiplyQuaternionsFlat(n,x,n,a,n,u),Qr.slerpFlat(n,a,n,a,n,x,h)}_lerp(n,a,u,h,g){const x=1-h;for(let w=0;w!==g;++w){const T=a+w;n[T]=n[T]*x+n[u+w]*h}}_lerpAdditive(n,a,u,h,g){for(let x=0;x!==g;++x){const w=a+x;n[w]=n[w]+n[u+x]*h}}}const Qg=new RegExp("[\\[\\]\\.:\\/]","g"),ey="[^\\[\\]\\.:\\/]",Gb="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",X0=/((?:WC+[\/:])*)/.source.replace("WC",ey),Hb=/(WCOD+)?/.source.replace("WCOD",Gb),jb=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",ey),K0=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",ey),Y0=new RegExp("^"+X0+Hb+jb+K0+"$"),qb=["material","materials","bones"];class er{constructor(n,a,u){this.path=a,this.parsedPath=u||er.parseTrackName(a),this.node=er.findNode(n,this.parsedPath.nodeName)||n,this.rootNode=n,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(n,a,u){return n&&n.isAnimationObjectGroup?new er.Composite(n,a,u):new er(n,a,u)}static sanitizeNodeName(n){return n.replace(/\s/g,"_").replace(Qg,"")}static parseTrackName(n){const a=Y0.exec(n);if(!a)throw new Error("PropertyBinding: Cannot parse trackName: "+n);const u={nodeName:a[2],objectName:a[3],objectIndex:a[4],propertyName:a[5],propertyIndex:a[6]},h=u.nodeName&&u.nodeName.lastIndexOf(".");if(void 0!==h&&-1!==h){const g=u.nodeName.substring(h+1);-1!==qb.indexOf(g)&&(u.nodeName=u.nodeName.substring(0,h),u.objectName=g)}if(null===u.propertyName||0===u.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+n);return u}static findNode(n,a){if(!a||""===a||"."===a||-1===a||a===n.name||a===n.uuid)return n;if(n.skeleton){const u=n.skeleton.getBoneByName(a);if(void 0!==u)return u}if(n.children){const u=function(g){for(let x=0;x<g.length;x++){const w=g[x];if(w.name===a||w.uuid===a)return w;const T=u(w.children);if(T)return T}return null},h=u(n.children);if(h)return h}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(n,a){n[a]=this.targetObject[this.propertyName]}_getValue_array(n,a){const u=this.resolvedProperty;for(let h=0,g=u.length;h!==g;++h)n[a++]=u[h]}_getValue_arrayElement(n,a){n[a]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(n,a){this.resolvedProperty.toArray(n,a)}_setValue_direct(n,a){this.targetObject[this.propertyName]=n[a]}_setValue_direct_setNeedsUpdate(n,a){this.targetObject[this.propertyName]=n[a],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(n,a){this.targetObject[this.propertyName]=n[a],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(n,a){const u=this.resolvedProperty;for(let h=0,g=u.length;h!==g;++h)u[h]=n[a++]}_setValue_array_setNeedsUpdate(n,a){const u=this.resolvedProperty;for(let h=0,g=u.length;h!==g;++h)u[h]=n[a++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(n,a){const u=this.resolvedProperty;for(let h=0,g=u.length;h!==g;++h)u[h]=n[a++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(n,a){this.resolvedProperty[this.propertyIndex]=n[a]}_setValue_arrayElement_setNeedsUpdate(n,a){this.resolvedProperty[this.propertyIndex]=n[a],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(n,a){this.resolvedProperty[this.propertyIndex]=n[a],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(n,a){this.resolvedProperty.fromArray(n,a)}_setValue_fromArray_setNeedsUpdate(n,a){this.resolvedProperty.fromArray(n,a),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(n,a){this.resolvedProperty.fromArray(n,a),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(n,a){this.bind(),this.getValue(n,a)}_setValue_unbound(n,a){this.bind(),this.setValue(n,a)}bind(){let n=this.node;const a=this.parsedPath,u=a.objectName,h=a.propertyName;let g=a.propertyIndex;if(n||(n=er.findNode(this.rootNode,a.nodeName)||this.rootNode,this.node=n),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!n)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(u){let M=a.objectIndex;switch(u){case"materials":if(!n.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!n.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);n=n.material.materials;break;case"bones":if(!n.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);n=n.skeleton.bones;for(let E=0;E<n.length;E++)if(n[E].name===M){M=E;break}break;default:if(void 0===n[u])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);n=n[u]}if(void 0!==M){if(void 0===n[M])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,n);n=n[M]}}const x=n[h];if(void 0===x)return void console.error("THREE.PropertyBinding: Trying to update property for track: "+a.nodeName+"."+h+" but it wasn't found.",n);let w=this.Versioning.None;this.targetObject=n,void 0!==n.needsUpdate?w=this.Versioning.NeedsUpdate:void 0!==n.matrixWorldNeedsUpdate&&(w=this.Versioning.MatrixWorldNeedsUpdate);let T=this.BindingType.Direct;if(void 0!==g){if("morphTargetInfluences"===h){if(!n.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!n.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!n.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==n.morphTargetDictionary[g]&&(g=n.morphTargetDictionary[g])}T=this.BindingType.ArrayElement,this.resolvedProperty=x,this.propertyIndex=g}else void 0!==x.fromArray&&void 0!==x.toArray?(T=this.BindingType.HasFromToArray,this.resolvedProperty=x):Array.isArray(x)?(T=this.BindingType.EntireArray,this.resolvedProperty=x):this.propertyName=h;this.getValue=this.GetterByBindingType[T],this.setValue=this.SetterByBindingTypeAndVersioning[T][w]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}er.Composite=class{constructor(b,n,a){const u=a||er.parseTrackName(n);this._targetGroup=b,this._bindings=b.subscribe_(n,u)}getValue(b,n){this.bind();const u=this._bindings[this._targetGroup.nCachedObjects_];void 0!==u&&u.getValue(b,n)}setValue(b,n){const a=this._bindings;for(let u=this._targetGroup.nCachedObjects_,h=a.length;u!==h;++u)a[u].setValue(b,n)}bind(){const b=this._bindings;for(let n=this._targetGroup.nCachedObjects_,a=b.length;n!==a;++n)b[n].bind()}unbind(){const b=this._bindings;for(let n=this._targetGroup.nCachedObjects_,a=b.length;n!==a;++n)b[n].unbind()}},er.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},er.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},er.prototype.GetterByBindingType=[er.prototype._getValue_direct,er.prototype._getValue_array,er.prototype._getValue_arrayElement,er.prototype._getValue_toArray],er.prototype.SetterByBindingTypeAndVersioning=[[er.prototype._setValue_direct,er.prototype._setValue_direct_setNeedsUpdate,er.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[er.prototype._setValue_array,er.prototype._setValue_array_setNeedsUpdate,er.prototype._setValue_array_setMatrixWorldNeedsUpdate],[er.prototype._setValue_arrayElement,er.prototype._setValue_arrayElement_setNeedsUpdate,er.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[er.prototype._setValue_fromArray,er.prototype._setValue_fromArray_setNeedsUpdate,er.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class Z0{constructor(){this.uuid=Ws(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const n={};this._indicesByUUID=n;for(let u=0,h=arguments.length;u!==h;++u)n[arguments[u].uuid]=u;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const a=this;this.stats={objects:{get total(){return a._objects.length},get inUse(){return this.total-a.nCachedObjects_}},get bindingsPerObject(){return a._bindings.length}}}add(){const n=this._objects,a=this._indicesByUUID,u=this._paths,h=this._parsedPaths,g=this._bindings,x=g.length;let w,T=n.length,M=this.nCachedObjects_;for(let E=0,N=arguments.length;E!==N;++E){const C=arguments[E],L=C.uuid;let D=a[L];if(void 0===D){D=T++,a[L]=D,n.push(C);for(let $=0,B=x;$!==B;++$)g[$].push(new er(C,u[$],h[$]))}else if(D<M){w=n[D];const $=--M,B=n[$];a[B.uuid]=D,n[D]=B,a[L]=$,n[$]=C;for(let O=0,q=x;O!==q;++O){const ee=g[O];let ce=ee[D];ee[D]=ee[$],void 0===ce&&(ce=new er(C,u[O],h[O])),ee[$]=ce}}else n[D]!==w&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=M}remove(){const n=this._objects,a=this._indicesByUUID,u=this._bindings,h=u.length;let g=this.nCachedObjects_;for(let x=0,w=arguments.length;x!==w;++x){const T=arguments[x],M=T.uuid,E=a[M];if(void 0!==E&&E>=g){const N=g++,C=n[N];a[C.uuid]=E,n[E]=C,a[M]=N,n[N]=T;for(let L=0,D=h;L!==D;++L){const $=u[L],O=$[E];$[E]=$[N],$[N]=O}}}this.nCachedObjects_=g}uncache(){const n=this._objects,a=this._indicesByUUID,u=this._bindings,h=u.length;let g=this.nCachedObjects_,x=n.length;for(let w=0,T=arguments.length;w!==T;++w){const M=arguments[w].uuid,E=a[M];if(void 0!==E)if(delete a[M],E<g){const N=--g,C=n[N],L=--x,D=n[L];a[C.uuid]=E,n[E]=C,a[D.uuid]=N,n[N]=D,n.pop();for(let $=0,B=h;$!==B;++$){const O=u[$],ee=O[L];O[E]=O[N],O[N]=ee,O.pop()}}else{const N=--x,C=n[N];N>0&&(a[C.uuid]=E),n[E]=C,n.pop();for(let L=0,D=h;L!==D;++L){const $=u[L];$[E]=$[N],$.pop()}}}this.nCachedObjects_=g}subscribe_(n,a){const u=this._bindingsIndicesByPath;let h=u[n];const g=this._bindings;if(void 0!==h)return g[h];const x=this._paths,w=this._parsedPaths,T=this._objects,E=this.nCachedObjects_,N=new Array(T.length);h=g.length,u[n]=h,x.push(n),w.push(a),g.push(N);for(let C=E,L=T.length;C!==L;++C)N[C]=new er(T[C],n,a);return N}unsubscribe_(n){const a=this._bindingsIndicesByPath,u=a[n];if(void 0!==u){const h=this._paths,g=this._parsedPaths,x=this._bindings,w=x.length-1,T=x[w];a[n[w]]=u,x[u]=T,x.pop(),g[u]=g[w],g.pop(),h[u]=h[w],h.pop()}}}Z0.prototype.isAnimationObjectGroup=!0;class Xb{constructor(n,a,u=null,h=a.blendMode){this._mixer=n,this._clip=a,this._localRoot=u,this.blendMode=h;const g=a.tracks,x=g.length,w=new Array(x),T={endingStart:ka,endingEnd:ka};for(let M=0;M!==x;++M){const E=g[M].createInterpolant(null);w[M]=E,E.settings=T}this._interpolantSettings=T,this._interpolants=w,this._propertyBindings=new Array(x),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Wd,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(n){return this._startTime=n,this}setLoop(n,a){return this.loop=n,this.repetitions=a,this}setEffectiveWeight(n){return this.weight=n,this._effectiveWeight=this.enabled?n:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(n){return this._scheduleFading(n,0,1)}fadeOut(n){return this._scheduleFading(n,1,0)}crossFadeFrom(n,a,u){if(n.fadeOut(a),this.fadeIn(a),u){const h=this._clip.duration,g=n._clip.duration,w=h/g;n.warp(1,g/h,a),this.warp(w,1,a)}return this}crossFadeTo(n,a,u){return n.crossFadeFrom(this,a,u)}stopFading(){const n=this._weightInterpolant;return null!==n&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(n)),this}setEffectiveTimeScale(n){return this.timeScale=n,this._effectiveTimeScale=this.paused?0:n,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(n){return this.timeScale=this._clip.duration/n,this.stopWarping()}syncWith(n){return this.time=n.time,this.timeScale=n.timeScale,this.stopWarping()}halt(n){return this.warp(this._effectiveTimeScale,0,n)}warp(n,a,u){const h=this._mixer,g=h.time,x=this.timeScale;let w=this._timeScaleInterpolant;null===w&&(w=h._lendControlInterpolant(),this._timeScaleInterpolant=w);const T=w.parameterPositions,M=w.sampleValues;return T[0]=g,T[1]=g+u,M[0]=n/x,M[1]=a/x,this}stopWarping(){const n=this._timeScaleInterpolant;return null!==n&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(n)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(n,a,u,h){if(!this.enabled)return void this._updateWeight(n);const g=this._startTime;if(null!==g){const T=(n-g)*u;if(T<0||0===u)return;this._startTime=null,a=u*T}a*=this._updateTimeScale(n);const x=this._updateTime(a),w=this._updateWeight(n);if(w>0){const T=this._interpolants,M=this._propertyBindings;if(this.blendMode===th)for(let E=0,N=T.length;E!==N;++E)T[E].evaluate(x),M[E].accumulateAdditive(w);else for(let E=0,N=T.length;E!==N;++E)T[E].evaluate(x),M[E].accumulate(h,w)}}_updateWeight(n){let a=0;if(this.enabled){a=this.weight;const u=this._weightInterpolant;if(null!==u){const h=u.evaluate(n)[0];a*=h,n>u.parameterPositions[1]&&(this.stopFading(),0===h&&(this.enabled=!1))}}return this._effectiveWeight=a,a}_updateTimeScale(n){let a=0;if(!this.paused){a=this.timeScale;const u=this._timeScaleInterpolant;null!==u&&(a*=u.evaluate(n)[0],n>u.parameterPositions[1]&&(this.stopWarping(),0===a?this.paused=!0:this.timeScale=a))}return this._effectiveTimeScale=a,a}_updateTime(n){const a=this._clip.duration,u=this.loop;let h=this.time+n,g=this._loopCount;const x=u===eh;if(0===n)return-1===g?h:x&&1==(1&g)?a-h:h;if(u===Vd){-1===g&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(h>=a)h=a;else{if(!(h<0)){this.time=h;break e}h=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=h,this._mixer.dispatchEvent({type:"finished",action:this,direction:n<0?-1:1})}}else{if(-1===g&&(n>=0?(g=0,this._setEndings(!0,0===this.repetitions,x)):this._setEndings(0===this.repetitions,!0,x)),h>=a||h<0){const w=Math.floor(h/a);h-=a*w,g+=Math.abs(w);const T=this.repetitions-g;if(T<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,h=n>0?a:0,this.time=h,this._mixer.dispatchEvent({type:"finished",action:this,direction:n>0?1:-1});else{if(1===T){const M=n<0;this._setEndings(M,!M,x)}else this._setEndings(!1,!1,x);this._loopCount=g,this.time=h,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:w})}}else this.time=h;if(x&&1==(1&g))return a-h}return h}_setEndings(n,a,u){const h=this._interpolantSettings;u?(h.endingStart=ro,h.endingEnd=ro):(h.endingStart=n?this.zeroSlopeAtStart?ro:ka:Fl,h.endingEnd=a?this.zeroSlopeAtEnd?ro:ka:Fl)}_scheduleFading(n,a,u){const h=this._mixer,g=h.time;let x=this._weightInterpolant;null===x&&(x=h._lendControlInterpolant(),this._weightInterpolant=x);const w=x.parameterPositions,T=x.sampleValues;return w[0]=g,T[0]=a,w[1]=g+n,T[1]=u,this}}class ty extends Ji{constructor(n){super(),this._root=n,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(n,a){const u=n._localRoot||this._root,h=n._clip.tracks,g=h.length,x=n._propertyBindings,w=n._interpolants,T=u.uuid,M=this._bindingsByRootAndName;let E=M[T];void 0===E&&(E={},M[T]=E);for(let N=0;N!==g;++N){const C=h[N],L=C.name;let D=E[L];if(void 0!==D)x[N]=D;else{if(D=x[N],void 0!==D){null===D._cacheIndex&&(++D.referenceCount,this._addInactiveBinding(D,T,L));continue}D=new Vp(er.create(u,L,a&&a._propertyBindings[N].binding.parsedPath),C.ValueTypeName,C.getValueSize()),++D.referenceCount,this._addInactiveBinding(D,T,L),x[N]=D}w[N].resultBuffer=D.buffer}}_activateAction(n){if(!this._isActiveAction(n)){if(null===n._cacheIndex){const u=(n._localRoot||this._root).uuid,h=n._clip.uuid,g=this._actionsByClip[h];this._bindAction(n,g&&g.knownActions[0]),this._addInactiveAction(n,h,u)}const a=n._propertyBindings;for(let u=0,h=a.length;u!==h;++u){const g=a[u];0==g.useCount++&&(this._lendBinding(g),g.saveOriginalState())}this._lendAction(n)}}_deactivateAction(n){if(this._isActiveAction(n)){const a=n._propertyBindings;for(let u=0,h=a.length;u!==h;++u){const g=a[u];0==--g.useCount&&(g.restoreOriginalState(),this._takeBackBinding(g))}this._takeBackAction(n)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const n=this;this.stats={actions:{get total(){return n._actions.length},get inUse(){return n._nActiveActions}},bindings:{get total(){return n._bindings.length},get inUse(){return n._nActiveBindings}},controlInterpolants:{get total(){return n._controlInterpolants.length},get inUse(){return n._nActiveControlInterpolants}}}}_isActiveAction(n){const a=n._cacheIndex;return null!==a&&a<this._nActiveActions}_addInactiveAction(n,a,u){const h=this._actions,g=this._actionsByClip;let x=g[a];if(void 0===x)x={knownActions:[n],actionByRoot:{}},n._byClipCacheIndex=0,g[a]=x;else{const w=x.knownActions;n._byClipCacheIndex=w.length,w.push(n)}n._cacheIndex=h.length,h.push(n),x.actionByRoot[u]=n}_removeInactiveAction(n){const a=this._actions,u=a[a.length-1],h=n._cacheIndex;u._cacheIndex=h,a[h]=u,a.pop(),n._cacheIndex=null;const g=n._clip.uuid,x=this._actionsByClip,w=x[g],T=w.knownActions,M=T[T.length-1],E=n._byClipCacheIndex;M._byClipCacheIndex=E,T[E]=M,T.pop(),n._byClipCacheIndex=null,delete w.actionByRoot[(n._localRoot||this._root).uuid],0===T.length&&delete x[g],this._removeInactiveBindingsForAction(n)}_removeInactiveBindingsForAction(n){const a=n._propertyBindings;for(let u=0,h=a.length;u!==h;++u){const g=a[u];0==--g.referenceCount&&this._removeInactiveBinding(g)}}_lendAction(n){const a=this._actions,u=n._cacheIndex,h=this._nActiveActions++,g=a[h];n._cacheIndex=h,a[h]=n,g._cacheIndex=u,a[u]=g}_takeBackAction(n){const a=this._actions,u=n._cacheIndex,h=--this._nActiveActions,g=a[h];n._cacheIndex=h,a[h]=n,g._cacheIndex=u,a[u]=g}_addInactiveBinding(n,a,u){const h=this._bindingsByRootAndName,g=this._bindings;let x=h[a];void 0===x&&(x={},h[a]=x),x[u]=n,n._cacheIndex=g.length,g.push(n)}_removeInactiveBinding(n){const a=this._bindings,u=n.binding,h=u.rootNode.uuid,g=u.path,x=this._bindingsByRootAndName,w=x[h],T=a[a.length-1],M=n._cacheIndex;T._cacheIndex=M,a[M]=T,a.pop(),delete w[g],0===Object.keys(w).length&&delete x[h]}_lendBinding(n){const a=this._bindings,u=n._cacheIndex,h=this._nActiveBindings++,g=a[h];n._cacheIndex=h,a[h]=n,g._cacheIndex=u,a[u]=g}_takeBackBinding(n){const a=this._bindings,u=n._cacheIndex,h=--this._nActiveBindings,g=a[h];n._cacheIndex=h,a[h]=n,g._cacheIndex=u,a[u]=g}_lendControlInterpolant(){const n=this._controlInterpolants,a=this._nActiveControlInterpolants++;let u=n[a];return void 0===u&&(u=new bc(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),u.__cacheIndex=a,n[a]=u),u}_takeBackControlInterpolant(n){const a=this._controlInterpolants,u=n.__cacheIndex,h=--this._nActiveControlInterpolants,g=a[h];n.__cacheIndex=h,a[h]=n,g.__cacheIndex=u,a[u]=g}clipAction(n,a,u){const h=a||this._root,g=h.uuid;let x="string"==typeof n?lu.findByName(h,n):n;const w=null!==x?x.uuid:n,T=this._actionsByClip[w];let M=null;if(void 0===u&&(u=null!==x?x.blendMode:Co),void 0!==T){const N=T.actionByRoot[g];if(void 0!==N&&N.blendMode===u)return N;M=T.knownActions[0],null===x&&(x=M._clip)}if(null===x)return null;const E=new Xb(this,x,a,u);return this._bindAction(E,M),this._addInactiveAction(E,w,g),E}existingAction(n,a){const u=a||this._root,h=u.uuid,g="string"==typeof n?lu.findByName(u,n):n,w=this._actionsByClip[g?g.uuid:n];return void 0!==w&&w.actionByRoot[h]||null}stopAllAction(){const n=this._actions;for(let a=this._nActiveActions-1;a>=0;--a)n[a].stop();return this}update(n){const a=this._actions,u=this._nActiveActions,h=this.time+=n*=this.timeScale,g=Math.sign(n),x=this._accuIndex^=1;for(let M=0;M!==u;++M)a[M]._update(h,n,g,x);const w=this._bindings,T=this._nActiveBindings;for(let M=0;M!==T;++M)w[M].apply(x);return this}setTime(n){this.time=0;for(let a=0;a<this._actions.length;a++)this._actions[a].time=0;return this.update(n)}getRoot(){return this._root}uncacheClip(n){const a=this._actions,u=n.uuid,h=this._actionsByClip,g=h[u];if(void 0!==g){const x=g.knownActions;for(let w=0,T=x.length;w!==T;++w){const M=x[w];this._deactivateAction(M);const E=M._cacheIndex,N=a[a.length-1];M._cacheIndex=null,M._byClipCacheIndex=null,N._cacheIndex=E,a[E]=N,a.pop(),this._removeInactiveBindingsForAction(M)}delete h[u]}}uncacheRoot(n){const a=n.uuid,u=this._actionsByClip;for(const g in u){const x=u[g].actionByRoot[a];void 0!==x&&(this._deactivateAction(x),this._removeInactiveAction(x))}const h=this._bindingsByRootAndName[a];if(void 0!==h)for(const g in h){const x=h[g];x.restoreOriginalState(),this._removeInactiveBinding(x)}}uncacheAction(n,a){const u=this.existingAction(n,a);null!==u&&(this._deactivateAction(u),this._removeInactiveAction(u))}}ty.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class mm{constructor(n){"string"==typeof n&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),n=arguments[1]),this.value=n}clone(){return new mm(void 0===this.value.clone?this.value:this.value.clone())}}class Ps extends Zs{constructor(n,a,u=1){super(n,a),this.meshPerAttribute=u}copy(n){return super.copy(n),this.meshPerAttribute=n.meshPerAttribute,this}clone(n){const a=super.clone(n);return a.meshPerAttribute=this.meshPerAttribute,a}toJSON(n){const a=super.toJSON(n);return a.isInstancedInterleavedBuffer=!0,a.meshPerAttribute=this.meshPerAttribute,a}}Ps.prototype.isInstancedInterleavedBuffer=!0;class vo{constructor(n,a,u,h,g){this.buffer=n,this.type=a,this.itemSize=u,this.elementSize=h,this.count=g,this.version=0}set needsUpdate(n){!0===n&&this.version++}setBuffer(n){return this.buffer=n,this}setType(n,a){return this.type=n,this.elementSize=a,this}setItemSize(n){return this.itemSize=n,this}setCount(n){return this.count=n,this}}vo.prototype.isGLBufferAttribute=!0;class Kb{constructor(n,a,u=0,h=1/0){this.ray=new Ra(n,a),this.near=u,this.far=h,this.camera=null,this.layers=new ju,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(n,a){this.ray.set(n,a)}setFromCamera(n,a){a&&a.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(a.matrixWorld),this.ray.direction.set(n.x,n.y,.5).unproject(a).sub(this.ray.origin).normalize(),this.camera=a):a&&a.isOrthographicCamera?(this.ray.origin.set(n.x,n.y,(a.near+a.far)/(a.near-a.far)).unproject(a),this.ray.direction.set(0,0,-1).transformDirection(a.matrixWorld),this.camera=a):console.error("THREE.Raycaster: Unsupported camera type: "+a.type)}intersectObject(n,a=!1,u=[]){return ny(n,this,u,a),u.sort(J0),u}intersectObjects(n,a=!1,u=[]){for(let h=0,g=n.length;h<g;h++)ny(n[h],this,u,a);return u.sort(J0),u}}function J0(b,n){return b.distance-n.distance}function ny(b,n,a,u){if(b.layers.test(n.layers)&&b.raycast(n,a),!0===u){const h=b.children;for(let g=0,x=h.length;g<x;g++)ny(h[g],n,a,!0)}}class Yb{constructor(n=1,a=0,u=0){return this.radius=n,this.phi=a,this.theta=u,this}set(n,a,u){return this.radius=n,this.phi=a,this.theta=u,this}copy(n){return this.radius=n.radius,this.phi=n.phi,this.theta=n.theta,this}makeSafe(){const n=1e-6;return this.phi=Math.max(n,Math.min(Math.PI-n,this.phi)),this}setFromVector3(n){return this.setFromCartesianCoords(n.x,n.y,n.z)}setFromCartesianCoords(n,a,u){return this.radius=Math.sqrt(n*n+a*a+u*u),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(n,u),this.phi=Math.acos(jr(a/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class Zb{constructor(n=1,a=0,u=0){return this.radius=n,this.theta=a,this.y=u,this}set(n,a,u){return this.radius=n,this.theta=a,this.y=u,this}copy(n){return this.radius=n.radius,this.theta=n.theta,this.y=n.y,this}setFromVector3(n){return this.setFromCartesianCoords(n.x,n.y,n.z)}setFromCartesianCoords(n,a,u){return this.radius=Math.sqrt(n*n+u*u),this.theta=Math.atan2(n,u),this.y=a,this}clone(){return(new this.constructor).copy(this)}}const Q0=new It;class pd{constructor(n=new It(1/0,1/0),a=new It(-1/0,-1/0)){this.min=n,this.max=a}set(n,a){return this.min.copy(n),this.max.copy(a),this}setFromPoints(n){this.makeEmpty();for(let a=0,u=n.length;a<u;a++)this.expandByPoint(n[a]);return this}setFromCenterAndSize(n,a){const u=Q0.copy(a).multiplyScalar(.5);return this.min.copy(n).sub(u),this.max.copy(n).add(u),this}clone(){return(new this.constructor).copy(this)}copy(n){return this.min.copy(n.min),this.max.copy(n.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(n){return this.isEmpty()?n.set(0,0):n.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(n){return this.isEmpty()?n.set(0,0):n.subVectors(this.max,this.min)}expandByPoint(n){return this.min.min(n),this.max.max(n),this}expandByVector(n){return this.min.sub(n),this.max.add(n),this}expandByScalar(n){return this.min.addScalar(-n),this.max.addScalar(n),this}containsPoint(n){return!(n.x<this.min.x||n.x>this.max.x||n.y<this.min.y||n.y>this.max.y)}containsBox(n){return this.min.x<=n.min.x&&n.max.x<=this.max.x&&this.min.y<=n.min.y&&n.max.y<=this.max.y}getParameter(n,a){return a.set((n.x-this.min.x)/(this.max.x-this.min.x),(n.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(n){return!(n.max.x<this.min.x||n.min.x>this.max.x||n.max.y<this.min.y||n.min.y>this.max.y)}clampPoint(n,a){return a.copy(n).clamp(this.min,this.max)}distanceToPoint(n){return Q0.copy(n).clamp(this.min,this.max).sub(n).length()}intersect(n){return this.min.max(n.min),this.max.min(n.max),this}union(n){return this.min.min(n.min),this.max.max(n.max),this}translate(n){return this.min.add(n),this.max.add(n),this}equals(n){return n.min.equals(this.min)&&n.max.equals(this.max)}}pd.prototype.isBox2=!0;const ex=new te,gm=new te;class tx{constructor(n=new te,a=new te){this.start=n,this.end=a}set(n,a){return this.start.copy(n),this.end.copy(a),this}copy(n){return this.start.copy(n.start),this.end.copy(n.end),this}getCenter(n){return n.addVectors(this.start,this.end).multiplyScalar(.5)}delta(n){return n.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(n,a){return this.delta(a).multiplyScalar(n).add(this.start)}closestPointToPointParameter(n,a){ex.subVectors(n,this.start),gm.subVectors(this.end,this.start);const u=gm.dot(gm);let h=gm.dot(ex)/u;return a&&(h=jr(h,0,1)),h}closestPointToPoint(n,a,u){const h=this.closestPointToPointParameter(n,a);return this.delta(u).multiplyScalar(h).add(this.start)}applyMatrix4(n){return this.start.applyMatrix4(n),this.end.applyMatrix4(n),this}equals(n){return n.start.equals(this.start)&&n.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}class nx extends Bn{constructor(n){super(),this.material=n,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}nx.prototype.isImmediateRenderObject=!0;const rx=new te;class Jb extends Bn{constructor(n,a){super(),this.light=n,this.light.updateMatrixWorld(),this.matrix=n.matrixWorld,this.matrixAutoUpdate=!1,this.color=a;const u=new wn,h=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let x=0,w=1,T=32;x<T;x++,w++){const M=x/T*Math.PI*2,E=w/T*Math.PI*2;h.push(Math.cos(M),Math.sin(M),1,Math.cos(E),Math.sin(E),1)}u.setAttribute("position",new Pt(h,3));const g=new Vr({fog:!1,toneMapped:!1});this.cone=new pi(u,g),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const n=this.light.distance?this.light.distance:1e3,a=n*Math.tan(this.light.angle);this.cone.scale.set(a,a,n),rx.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(rx),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const cu=new te,ym=new sn,ry=new sn;class sx extends pi{constructor(n){const a=ji(n),u=new wn,h=[],g=[],x=new Wt(0,0,1),w=new Wt(0,1,0);for(let T=0;T<a.length;T++){const M=a[T];M.parent&&M.parent.isBone&&(h.push(0,0,0),h.push(0,0,0),g.push(x.r,x.g,x.b),g.push(w.r,w.g,w.b))}u.setAttribute("position",new Pt(h,3)),u.setAttribute("color",new Pt(g,3)),super(u,new Vr({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=n,this.bones=a,this.matrix=n.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(n){const a=this.bones,u=this.geometry,h=u.getAttribute("position");ry.copy(this.root.matrixWorld).invert();for(let g=0,x=0;g<a.length;g++){const w=a[g];w.parent&&w.parent.isBone&&(ym.multiplyMatrices(ry,w.matrixWorld),cu.setFromMatrixPosition(ym),h.setXYZ(x,cu.x,cu.y,cu.z),ym.multiplyMatrices(ry,w.parent.matrixWorld),cu.setFromMatrixPosition(ym),h.setXYZ(x+1,cu.x,cu.y,cu.z),x+=2)}u.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(n)}}function ji(b){const n=[];b&&b.isBone&&n.push(b);for(let a=0;a<b.children.length;a++)n.push.apply(n,ji(b.children[a]));return n}class ix extends es{constructor(n,a,u){super(new iu(a,4,2),new wr({wireframe:!0,fog:!1,toneMapped:!1})),this.light=n,this.light.updateMatrixWorld(),this.color=u,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Qb=new te,fd=new Wt,Wp=new Wt;class Ec extends Bn{constructor(n,a,u){super(),this.light=n,this.light.updateMatrixWorld(),this.matrix=n.matrixWorld,this.matrixAutoUpdate=!1,this.color=u;const h=new al(a);h.rotateY(.5*Math.PI),this.material=new wr({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);const g=h.getAttribute("position"),x=new Float32Array(3*g.count);h.setAttribute("color",new On(x,3)),this.add(new es(h,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const n=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const a=n.geometry.getAttribute("color");fd.copy(this.light.color),Wp.copy(this.light.groundColor);for(let u=0,h=a.count;u<h;u++){const g=u<h/2?fd:Wp;a.setXYZ(u,g.r,g.g,g.b)}a.needsUpdate=!0}n.lookAt(Qb.setFromMatrixPosition(this.light.matrixWorld).negate())}}class hu extends pi{constructor(n=10,a=10,u=4473924,h=8947848){u=new Wt(u),h=new Wt(h);const g=a/2,x=n/a,w=n/2,T=[],M=[];for(let N=0,C=0,L=-w;N<=a;N++,L+=x){T.push(-w,0,L,w,0,L),T.push(L,0,-w,L,0,w);const D=N===g?u:h;D.toArray(M,C),C+=3,D.toArray(M,C),C+=3,D.toArray(M,C),C+=3,D.toArray(M,C),C+=3}const E=new wn;E.setAttribute("position",new Pt(T,3)),E.setAttribute("color",new Pt(M,3)),super(E,new Vr({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}class ev extends pi{constructor(n=10,a=16,u=8,h=64,g=4473924,x=8947848){g=new Wt(g),x=new Wt(x);const w=[],T=[];for(let E=0;E<=a;E++){const N=E/a*(2*Math.PI),C=Math.sin(N)*n,L=Math.cos(N)*n;w.push(0,0,0),w.push(C,0,L);const D=1&E?g:x;T.push(D.r,D.g,D.b),T.push(D.r,D.g,D.b)}for(let E=0;E<=u;E++){const N=1&E?g:x,C=n-n/u*E;for(let L=0;L<h;L++){let D=L/h*(2*Math.PI),$=Math.sin(D)*C,B=Math.cos(D)*C;w.push($,0,B),T.push(N.r,N.g,N.b),D=(L+1)/h*(2*Math.PI),$=Math.sin(D)*C,B=Math.cos(D)*C,w.push($,0,B),T.push(N.r,N.g,N.b)}}const M=new wn;M.setAttribute("position",new Pt(w,3)),M.setAttribute("color",new Pt(T,3)),super(M,new Vr({vertexColors:!0,toneMapped:!1})),this.type="PolarGridHelper"}}const Gp=new te,md=new te,qa=new te;class sy extends Bn{constructor(n,a,u){super(),this.light=n,this.light.updateMatrixWorld(),this.matrix=n.matrixWorld,this.matrixAutoUpdate=!1,this.color=u,void 0===a&&(a=1);let h=new wn;h.setAttribute("position",new Pt([-a,a,0,a,a,0,a,-a,0,-a,-a,0,-a,a,0],3));const g=new Vr({fog:!1,toneMapped:!1});this.lightPlane=new _i(h,g),this.add(this.lightPlane),h=new wn,h.setAttribute("position",new Pt([0,0,0,0,0,1],3)),this.targetLine=new _i(h,g),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Gp.setFromMatrixPosition(this.light.matrixWorld),md.setFromMatrixPosition(this.light.target.matrixWorld),qa.subVectors(md,Gp),this.lightPlane.lookAt(md),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(md),this.targetLine.scale.z=qa.length()}}const Ic=new te,Or=new ia;class Hp extends pi{constructor(n){const a=new wn,u=new Vr({color:16777215,vertexColors:!0,toneMapped:!1}),h=[],g=[],x={},w=new Wt(16755200),T=new Wt(16711680),M=new Wt(43775),E=new Wt(16777215),N=new Wt(3355443);function C(D,$,B){L(D,B),L($,B)}function L(D,$){h.push(0,0,0),g.push($.r,$.g,$.b),void 0===x[D]&&(x[D]=[]),x[D].push(h.length/3-1)}C("n1","n2",w),C("n2","n4",w),C("n4","n3",w),C("n3","n1",w),C("f1","f2",w),C("f2","f4",w),C("f4","f3",w),C("f3","f1",w),C("n1","f1",w),C("n2","f2",w),C("n3","f3",w),C("n4","f4",w),C("p","n1",T),C("p","n2",T),C("p","n3",T),C("p","n4",T),C("u1","u2",M),C("u2","u3",M),C("u3","u1",M),C("c","t",E),C("p","c",N),C("cn1","cn2",N),C("cn3","cn4",N),C("cf1","cf2",N),C("cf3","cf4",N),a.setAttribute("position",new Pt(h,3)),a.setAttribute("color",new Pt(g,3)),super(a,u),this.type="CameraHelper",this.camera=n,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=n.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=x,this.update()}update(){const n=this.geometry,a=this.pointMap;Or.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Cr("c",a,n,Or,0,0,-1),Cr("t",a,n,Or,0,0,1),Cr("n1",a,n,Or,-1,-1,-1),Cr("n2",a,n,Or,1,-1,-1),Cr("n3",a,n,Or,-1,1,-1),Cr("n4",a,n,Or,1,1,-1),Cr("f1",a,n,Or,-1,-1,1),Cr("f2",a,n,Or,1,-1,1),Cr("f3",a,n,Or,-1,1,1),Cr("f4",a,n,Or,1,1,1),Cr("u1",a,n,Or,.7,1.1,-1),Cr("u2",a,n,Or,-.7,1.1,-1),Cr("u3",a,n,Or,0,2,-1),Cr("cf1",a,n,Or,-1,0,1),Cr("cf2",a,n,Or,1,0,1),Cr("cf3",a,n,Or,0,-1,1),Cr("cf4",a,n,Or,0,1,1),Cr("cn1",a,n,Or,-1,0,-1),Cr("cn2",a,n,Or,1,0,-1),Cr("cn3",a,n,Or,0,-1,-1),Cr("cn4",a,n,Or,0,1,-1),n.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Cr(b,n,a,u,h,g,x){Ic.set(h,g,x).unproject(u);const w=n[b];if(void 0!==w){const T=a.getAttribute("position");for(let M=0,E=w.length;M<E;M++)T.setXYZ(w[M],Ic.x,Ic.y,Ic.z)}}const du=new Gs;class xm extends pi{constructor(n,a=16776960){const u=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),h=new Float32Array(24),g=new wn;g.setIndex(new On(u,1)),g.setAttribute("position",new On(h,3)),super(g,new Vr({color:a,toneMapped:!1})),this.object=n,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(n){if(void 0!==n&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&du.setFromObject(this.object),du.isEmpty())return;const a=du.min,u=du.max,h=this.geometry.attributes.position,g=h.array;g[0]=u.x,g[1]=u.y,g[2]=u.z,g[3]=a.x,g[4]=u.y,g[5]=u.z,g[6]=a.x,g[7]=a.y,g[8]=u.z,g[9]=u.x,g[10]=a.y,g[11]=u.z,g[12]=u.x,g[13]=u.y,g[14]=a.z,g[15]=a.x,g[16]=u.y,g[17]=a.z,g[18]=a.x,g[19]=a.y,g[20]=a.z,g[21]=u.x,g[22]=a.y,g[23]=a.z,h.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(n){return this.object=n,this.update(),this}copy(n){return pi.prototype.copy.call(this,n),this.object=n.object,this}}class iy extends pi{constructor(n,a=16776960){const u=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),h=new wn;h.setIndex(new On(u,1)),h.setAttribute("position",new Pt([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(h,new Vr({color:a,toneMapped:!1})),this.box=n,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(n){const a=this.box;a.isEmpty()||(a.getCenter(this.position),a.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(n))}}class bm extends _i{constructor(n,a=1,u=16776960){const h=u,g=new wn;g.setAttribute("position",new Pt([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),g.computeBoundingSphere(),super(g,new Vr({color:h,toneMapped:!1})),this.type="PlaneHelper",this.plane=n,this.size=a;const x=new wn;x.setAttribute("position",new Pt([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),x.computeBoundingSphere(),this.add(new es(x,new wr({color:h,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(n){let a=-this.plane.constant;Math.abs(a)<1e-8&&(a=1e-8),this.scale.set(.5*this.size,.5*this.size,a),this.children[0].material.side=a<0?Te:Q,this.lookAt(this.plane.normal),super.updateMatrixWorld(n)}}const jp=new te;let gd,qp;class ay extends Bn{constructor(n=new te(0,0,1),a=new te(0,0,0),u=1,h=16776960,g=.2*u,x=.2*g){super(),this.type="ArrowHelper",void 0===gd&&(gd=new wn,gd.setAttribute("position",new Pt([0,0,0,0,1,0],3)),qp=new tl(0,.5,1,5,1),qp.translate(0,-.5,0)),this.position.copy(a),this.line=new _i(gd,new Vr({color:h,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new es(qp,new wr({color:h,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(n),this.setLength(u,g,x)}setDirection(n){if(n.y>.99999)this.quaternion.set(0,0,0,1);else if(n.y<-.99999)this.quaternion.set(1,0,0,0);else{jp.set(n.z,0,-n.x).normalize();const a=Math.acos(n.y);this.quaternion.setFromAxisAngle(jp,a)}}setLength(n,a=.2*n,u=.2*a){this.line.scale.set(1,Math.max(1e-4,n-a),1),this.line.updateMatrix(),this.cone.scale.set(u,a,u),this.cone.position.y=n,this.cone.updateMatrix()}setColor(n){this.line.material.color.set(n),this.cone.material.color.set(n)}copy(n){return super.copy(n,!1),this.line.copy(n.line),this.cone.copy(n.cone),this}}class vm extends pi{constructor(n=1){const a=[0,0,0,n,0,0,0,0,0,0,n,0,0,0,0,0,0,n],u=new wn;u.setAttribute("position",new Pt(a,3)),u.setAttribute("color",new Pt([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3)),super(u,new Vr({vertexColors:!0,toneMapped:!1})),this.type="AxesHelper"}setColors(n,a,u){const h=new Wt,g=this.geometry.attributes.color.array;return h.set(n),h.toArray(g,0),h.toArray(g,3),h.set(a),h.toArray(g,6),h.toArray(g,9),h.set(u),h.toArray(g,12),h.toArray(g,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}const wm=new Float32Array(1),oy=new Int32Array(wm.buffer);class hl{static toHalfFloat(n){wm[0]=n;const a=oy[0];let u=a>>16&32768,h=a>>12&2047;const g=a>>23&255;return g<103?u:g>142?(u|=31744,u|=(255==g?0:1)&&8388607&a,u):g<113?(h|=2048,u|=(h>>114-g)+(h>>113-g&1),u):(u|=g-112<<10|h>>1,u+=1&h,u)}}const ax=0,ox=1,lx=0,ly=1,ux=2;function cx(b){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),b}function hx(b=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),b.isMultiMaterial=!0,b.materials=b,b.clone=function(){return b.slice()},b}function tv(b,n){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new eu(b,n)}function uy(b){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new Zl(b)}function cy(b,n){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new eu(b,n)}function hy(b){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new Ql(b)}function dy(b){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Ql(b)}function py(b){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new Ql(b)}function nv(b,n,a){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new te(b,n,a)}function fy(b,n){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new On(b,n).setUsage(Ou)}function dx(b,n){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Ky(b,n)}function px(b,n){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Yy(b,n)}function my(b,n){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Zy(b,n)}function Cc(b,n){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Jy(b,n)}function fx(b,n){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Wl(b,n)}function mx(b,n){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new rg(b,n)}function rv(b,n){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Ku(b,n)}function sv(b,n){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Pt(b,n)}function iv(b,n){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new Pa(b,n)}function av(b){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new vm(b)}function ov(b,n){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new xm(b,n)}function lv(b,n){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new pi(new Kf(b.geometry),new Vr({color:void 0!==n?n:16777215}))}function uv(b,n){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new pi(new $g(b.geometry),new Vr({color:void 0!==n?n:16777215}))}function cv(b){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Ni(b)}function hv(b){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new ld(b)}function dv(b,n,a){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Ef(b,a)}function pv(){console.error("THREE.CanvasRenderer has been removed")}function fv(){console.error("THREE.JSONLoader has been removed.")}ki.create=function(b,n){return console.log("THREE.Curve.create() has been deprecated"),b.prototype=Object.create(ki.prototype),b.prototype.constructor=b,b.prototype.getPoint=n,b},xs.prototype.fromPoints=function(b){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(b)},hu.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},sx.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},ys.prototype.extractUrlBase=function(b){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),zp.extractUrlBase(b)},ys.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},pd.prototype.center=function(b){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(b)},pd.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},pd.prototype.isIntersectionBox=function(b){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(b)},pd.prototype.size=function(b){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(b)},Gs.prototype.center=function(b){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(b)},Gs.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Gs.prototype.isIntersectionBox=function(b){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(b)},Gs.prototype.isIntersectionSphere=function(b){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(b)},Gs.prototype.size=function(b){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(b)},Na.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},qo.prototype.setFromMatrix=function(b){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(b)},tx.prototype.center=function(b){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(b)},zr.prototype.flattenToArrayOffset=function(b,n){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(b,n)},zr.prototype.multiplyVector3=function(b){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),b.applyMatrix3(this)},zr.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},zr.prototype.applyToBufferAttribute=function(b){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),b.applyMatrix3(this)},zr.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},zr.prototype.getInverse=function(b){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(b).invert()},sn.prototype.extractPosition=function(b){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(b)},sn.prototype.flattenToArrayOffset=function(b,n){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(b,n)},sn.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new te).setFromMatrixColumn(this,3)},sn.prototype.setRotationFromQuaternion=function(b){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(b)},sn.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},sn.prototype.multiplyVector3=function(b){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),b.applyMatrix4(this)},sn.prototype.multiplyVector4=function(b){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),b.applyMatrix4(this)},sn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},sn.prototype.rotateAxis=function(b){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),b.transformDirection(this)},sn.prototype.crossVector=function(b){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),b.applyMatrix4(this)},sn.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},sn.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},sn.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},sn.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},sn.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},sn.prototype.applyToBufferAttribute=function(b){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),b.applyMatrix4(this)},sn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},sn.prototype.makeFrustum=function(b,n,a,u,h,g){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(b,n,u,a,h,g)},sn.prototype.getInverse=function(b){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(b).invert()},Ba.prototype.isIntersectionLine=function(b){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(b)},Qr.prototype.multiplyVector3=function(b){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),b.applyQuaternion(this)},Qr.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Ra.prototype.isIntersectionBox=function(b){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(b)},Ra.prototype.isIntersectionPlane=function(b){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(b)},Ra.prototype.isIntersectionSphere=function(b){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(b)},Ur.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Ur.prototype.barycoordFromPoint=function(b,n){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(b,n)},Ur.prototype.midpoint=function(b){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(b)},Ur.prototypenormal=function(b){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(b)},Ur.prototype.plane=function(b){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(b)},Ur.barycoordFromPoint=function(b,n,a,u,h){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Ur.getBarycoord(b,n,a,u,h)},Ur.normal=function(b,n,a,u){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Ur.getNormal(b,n,a,u)},pa.prototype.extractAllPoints=function(b){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(b)},pa.prototype.extrude=function(b){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new $r(this,b)},pa.prototype.makeGeometry=function(b){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new mc(this,b)},It.prototype.fromAttribute=function(b,n,a){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(b,n,a)},It.prototype.distanceToManhattan=function(b){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(b)},It.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},te.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},te.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},te.prototype.getPositionFromMatrix=function(b){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(b)},te.prototype.getScaleFromMatrix=function(b){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(b)},te.prototype.getColumnFromMatrix=function(b,n){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(n,b)},te.prototype.applyProjection=function(b){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(b)},te.prototype.fromAttribute=function(b,n,a){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(b,n,a)},te.prototype.distanceToManhattan=function(b){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(b)},te.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},sr.prototype.fromAttribute=function(b,n,a){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(b,n,a)},sr.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Bn.prototype.getChildByName=function(b){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(b)},Bn.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Bn.prototype.translate=function(b,n){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(n,b)},Bn.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Bn.prototype.applyMatrix=function(b){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(b)},Object.defineProperties(Bn.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(b){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=b}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),es.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(es.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Fu},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Va.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},cr.prototype.setLens=function(b,n){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==n&&(this.filmGauge=n),this.setFocalLength(b)},Object.defineProperties(Ai.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(b){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=b}},shadowCameraLeft:{set:function(b){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=b}},shadowCameraRight:{set:function(b){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=b}},shadowCameraTop:{set:function(b){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=b}},shadowCameraBottom:{set:function(b){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=b}},shadowCameraNear:{set:function(b){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=b}},shadowCameraFar:{set:function(b){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=b}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(b){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=b}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(b){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=b}},shadowMapHeight:{set:function(b){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=b}}}),Object.defineProperties(On.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Ou},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Ou)}}}),On.prototype.setDynamic=function(b){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===b?Ou:io),this},On.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},On.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},wn.prototype.addIndex=function(b){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(b)},wn.prototype.addAttribute=function(b,n){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),n&&n.isBufferAttribute||n&&n.isInterleavedBufferAttribute?"index"===b?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(n),this):this.setAttribute(b,n):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(b,new On(arguments[1],arguments[2])))},wn.prototype.addDrawCall=function(b,n,a){void 0!==a&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(b,n)},wn.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},wn.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},wn.prototype.removeAttribute=function(b){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(b)},wn.prototype.applyMatrix=function(b){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(b)},Object.defineProperties(wn.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Zs.prototype.setDynamic=function(b){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===b?Ou:io),this},Zs.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},$r.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},$r.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},$r.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},An.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},mm.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(En.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Wt}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(b){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=b===xt}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(b){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=b}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(Ks.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(b){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=b}}}),lr.prototype.clearTarget=function(b,n,a,u){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(b),this.clear(n,a,u)},lr.prototype.animate=function(b){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(b)},lr.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},lr.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},lr.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},lr.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},lr.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},lr.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},lr.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},lr.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},lr.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},lr.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},lr.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},lr.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},lr.prototype.enableScissorTest=function(b){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(b)},lr.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},lr.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},lr.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},lr.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},lr.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},lr.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},lr.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},lr.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},lr.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},lr.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(lr.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(b){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=b}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(b){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=b}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(b){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===b?so:ds}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Ig.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(Si.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(b){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=b}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(b){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=b}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(b){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=b}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(b){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=b}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(b){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=b}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(b){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=b}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(b){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=b}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(b){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=b}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(b){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=b}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(b){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=b}}}),Jg.prototype.load=function(b){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const n=this;return(new Bp).load(b,function(a){n.setBuffer(a)}),this},Up.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Dh.prototype.updateCubeMap=function(b,n){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(b,n)},Dh.prototype.clear=function(b,n,a,u){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(b,n,a,u)},zu.crossOrigin=void 0,zu.loadTexture=function(b,n,a,u){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const h=new wc;h.setCrossOrigin(this.crossOrigin);const g=h.load(b,a,void 0,u);return n&&(g.mapping=n),g},zu.loadTextureCube=function(b,n,a,u){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const h=new od;h.setCrossOrigin(this.crossOrigin);const g=h.load(b,a,void 0,u);return n&&(g.mapping=n),g},zu.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},zu.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const mv={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function gv(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ge}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ge)},21564:(ct,pt,X)=>{"use strict";X.r(pt),X.d(pt,{CSS3DObject:()=>ve,CSS3DSprite:()=>ne,CSS3DRenderer:()=>H});var ge=X(2212);const Ge=new ge.Vector3,De=new ge.Quaternion,ue=new ge.Vector3;class ve extends ge.Object3D{constructor(K){super(),this.element=K||document.createElement("div"),this.element.style.position="absolute",this.element.style.pointerEvents="auto",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.addEventListener("removed",function(){this.traverse(function(Q){Q.element instanceof Element&&null!==Q.element.parentNode&&Q.element.parentNode.removeChild(Q.element)})})}copy(K,Q){return super.copy(K,Q),this.element=K.element.cloneNode(!0),this}}ve.prototype.isCSS3DObject=!0;class ne extends ve{constructor(K){super(K),this.rotation2D=0}copy(K,Q){return super.copy(K,Q),this.rotation2D=K.rotation2D,this}}ne.prototype.isCSS3DSprite=!0;const ie=new ge.Matrix4,oe=new ge.Matrix4;class H{constructor(){const K=this;let Q,Te,Pe,xt;const _t={camera:{fov:0,style:""},objects:new WeakMap},lt=document.createElement("div");lt.style.overflow="hidden",this.domElement=lt;const yt=document.createElement("div");function wt(Z){return Math.abs(Z)<1e-10?0:Z}function ht(Z){const Fe=Z.elements;return"matrix3d("+wt(Fe[0])+","+wt(-Fe[1])+","+wt(Fe[2])+","+wt(Fe[3])+","+wt(Fe[4])+","+wt(-Fe[5])+","+wt(Fe[6])+","+wt(Fe[7])+","+wt(Fe[8])+","+wt(-Fe[9])+","+wt(Fe[10])+","+wt(Fe[11])+","+wt(Fe[12])+","+wt(-Fe[13])+","+wt(Fe[14])+","+wt(Fe[15])+")"}function $t(Z){const Fe=Z.elements;return"translate(-50%,-50%)matrix3d("+wt(Fe[0])+","+wt(Fe[1])+","+wt(Fe[2])+","+wt(Fe[3])+","+wt(-Fe[4])+","+wt(-Fe[5])+","+wt(-Fe[6])+","+wt(-Fe[7])+","+wt(Fe[8])+","+wt(Fe[9])+","+wt(Fe[10])+","+wt(Fe[11])+","+wt(Fe[12])+","+wt(Fe[13])+","+wt(Fe[14])+","+wt(Fe[15])+")"}function Ze(Z,Fe,zt,Jt){if(Z.isCSS3DObject){let on;Z.onBeforeRender(K,Fe,zt),Z.isCSS3DSprite?(ie.copy(zt.matrixWorldInverse),ie.transpose(),0!==Z.rotation2D&&ie.multiply(oe.makeRotationZ(Z.rotation2D)),Z.matrixWorld.decompose(Ge,De,ue),ie.setPosition(Ge),ie.scale(ue),ie.elements[3]=0,ie.elements[7]=0,ie.elements[11]=0,ie.elements[15]=1,on=$t(ie)):on=$t(Z.matrixWorld);const mn=Z.element,bn=_t.objects.get(Z);void 0!==bn&&bn.style===on||(mn.style.transform=on,_t.objects.set(Z,{style:on})),mn.style.display=Z.visible?"":"none",mn.parentNode!==yt&&yt.appendChild(mn),Z.onAfterRender(K,Fe,zt)}for(let on=0,mn=Z.children.length;on<mn;on++)Ze(Z.children[on],Fe,zt,Jt)}yt.style.transformStyle="preserve-3d",yt.style.pointerEvents="none",lt.appendChild(yt),this.getSize=function(){return{width:Q,height:Te}},this.render=function(Z,Fe){const zt=Fe.projectionMatrix.elements[5]*xt;let Jt,on;_t.camera.fov!==zt&&(lt.style.perspective=Fe.isPerspectiveCamera?zt+"px":"",_t.camera.fov=zt),!0===Z.autoUpdate&&Z.updateMatrixWorld(),null===Fe.parent&&Fe.updateMatrixWorld(),Fe.isOrthographicCamera&&(Jt=-(Fe.right+Fe.left)/2,on=(Fe.top+Fe.bottom)/2);const mn=Fe.isOrthographicCamera?"scale("+zt+")translate("+wt(Jt)+"px,"+wt(on)+"px)"+ht(Fe.matrixWorldInverse):"translateZ("+zt+"px)"+ht(Fe.matrixWorldInverse),bn=mn+"translate("+Pe+"px,"+xt+"px)";_t.camera.style!==bn&&(yt.style.transform=bn,_t.camera.style=bn),Ze(Z,Z,Fe,mn)},this.setSize=function(Z,Fe){Q=Z,Te=Fe,Pe=Q/2,xt=Te/2,lt.style.width=Z+"px",lt.style.height=Fe+"px",yt.style.width=Z+"px",yt.style.height=Fe+"px"}}}},80383:(ct,pt,X)=>{ct.exports=function(){return X(69855)('(()=>{var t={508:(t,e,r)=>{const{resize:a}=r(140);t.exports={buildImageList:t=>{const e=[];let r=100/Math.min(t.width,t.height);for(;;)if(e.push(r),r*=Math.pow(2,1/3),r>=.95){r=1;break}e.push(r),e.reverse();const i=[];for(let r=0;r<e.length;r++)t.width,e[r],t.height,e[r],i.push(Object.assign(a({image:t,ratio:e[r]}),{scale:e[r]}));return i},buildTrackingImageList:t=>{const e=Math.min(t.width,t.height),r=[],i=[];r.push(256/e),r.push(128/e);for(let e=0;e<r.length;e++)i.push(Object.assign(a({image:t,ratio:r[e]}),{scale:r[e]}));return i}}},589:(t,e,r)=>{const{Cumsum:a}=r(535),i=({image:t,cx:e,cy:r,sdThresh:a,imageDataCumsum:i,imageDataSqrCumsum:s})=>{if(e-6<0||e+6>=t.width)return null;if(r-6<0||r+6>=t.height)return null;let h=i.query(e-6,r-6,e+6,r+6);h/=169;let o=s.query(e-6,r-6,e+6,r+6);return o-=2*h*i.query(e-6,r-6,e+6,r+6),o+=169*h*h,o/169<a*a?null:(o=Math.sqrt(o),o)},s=t=>{const{image:e,cx:r,cy:a,vlen:i,tx:s,ty:h,imageDataCumsum:o,imageDataSqrCumsum:l}=t,{data:u,width:n,height:m}=e;if(r-6<0||r+6>=n)return null;if(a-6<0||a+6>=m)return null;let c=o.query(r-6,a-6,r+6,a+6),f=l.query(r-6,a-6,r+6,a+6),g=0,d=(a-6)*n+(r-6),p=(h-6)*n+(s-6),w=n-13;for(let t=0;t<13;t++){for(let t=0;t<13;t++)g+=u[d]*u[p],d+=1,p+=1;d+=w,p+=w}let M=o.query(s-6,h-6,s+6,h+6);M/=169,g-=M*c;let y=f-c*c/169;return 0==y?null:(y=Math.sqrt(y),1*g/(i*y))};t.exports={extract:t=>{const{data:e,width:r,height:h,scale:o}=t,l=[r*h];for(let t=0;t<l.length;t++)l[t]=!1;const u=new Float32Array(e.length);for(let t=0;t<r;t++)u[t]=-1,u[r*(h-1)+t]=-1;for(let t=0;t<h;t++)u[t*r]=-1,u[t*r+r-1]=-1;for(let t=1;t<r-1;t++)for(let a=1;a<h-1;a++){let i=t+r*a,s=0,h=0;for(let t=-1;t<=1;t++)s+=e[i+r*t+1]-e[i+r*t-1],h+=e[i+r+t]-e[i-r+t];s/=768,h/=768,u[i]=Math.sqrt((s*s+h*h)/2)}const n=new Uint32Array(1e3);for(let t=0;t<1e3;t++)n[t]=0;const m=[-1,1,-r,r];let c=0;for(let t=1;t<r-1;t++)for(let e=1;e<h-1;e++){let a=t+r*e,i=!0;for(let t=0;t<m.length;t++)if(u[a]<=u[a+m[t]]){i=!1;break}if(i){let t=Math.floor(1e3*u[a]);t>999&&(t=999),t<0&&(t=0),n[t]+=1,c+=1,l[a]=!0}}const f=.02*r*h;let g=999,d=0;for(;g>=0&&(d+=n[g],!(d>f));)g--;for(let t=0;t<l.length;t++)l[t]&&1e3*u[t]<g&&(l[t]=!1);const p=[];for(let t=0;t<e.length;t++)p[t]=e[t]*e[t];const w=new a(e,r,h),M=new a(p,r,h),y=new Float32Array(e.length);for(let e=0;e<r;e++)for(let a=0;a<h;a++){const h=a*r+e;if(!l[h]){y[h]=1;continue}const o=i({image:t,cx:e,cy:a,sdThresh:5,imageDataCumsum:w,imageDataSqrCumsum:M});if(null===o){y[h]=1;continue}let u=-1;for(let r=-10;r<=10;r++){for(let i=-10;i<=10;i++){if(i*i+r*r<=4)continue;const h=s({image:t,cx:e+i,cy:a+r,vlen:o,tx:e,ty:a,imageDataCumsum:w,imageDataSqrCumsum:M});if(null!==h&&h>u&&(u=h,u>.95))break}if(u>.95)break}y[h]=u}return(t=>{let{image:e,featureMap:r,templateSize:a,searchSize:h,occSize:o,maxSimThresh:l,minSimThresh:u,sdThresh:n,imageDataCumsum:m,imageDataSqrCumsum:c}=t;const{data:f,width:g,height:d,scale:p}=e;o=Math.floor(Math.min(e.width,e.height)/10);const w=3*(2*a+1),M=Math.floor(g/w),y=Math.floor(d/w);let x=Math.floor(g/o)*Math.floor(d/o)+M*y;const q=[],C=new Float32Array(f.length);for(let t=0;t<C.length;t++)C[t]=r[t];let S=0;for(;S<x;){let t=l,r=-1,f=-1;for(let e=0;e<d;e++)for(let a=0;a<g;a++)C[e*g+a]<t&&(t=C[e*g+a],r=a,f=e);if(-1===r)break;const p=i({image:e,cx:r,cy:f,sdThresh:0,imageDataCumsum:m,imageDataSqrCumsum:c});if(null===p){C[f*g+r]=1;continue}if(p/(2*a+1)<n){C[f*g+r]=1;continue}let w=1,M=-1;for(let a=-h;a<=h;a++){for(let i=-h;i<=h;i++){if(i*i+a*a>h*h)continue;if(0===i&&0===a)continue;const o=s({image:e,vlen:p,cx:r+i,cy:f+a,tx:r,ty:f,imageDataCumsum:m,imageDataSqrCumsum:c});if(null!==o){if(o<w&&(w=o,w<u&&w<t))break;if(o>M&&(M=o,M>.99))break}}if(w<u&&w<t||M>.99)break}if(w<u&&w<t||M>.99)C[f*g+r]=1;else{q.push({x:r,y:f}),S+=1;for(let t=-o;t<=o;t++)for(let e=-o;e<=o;e++)f+t<0||f+t>=d||r+e<0||r+e>=g||(C[(f+t)*g+(r+e)]=1)}}return q})({image:t,featureMap:y,templateSize:6,searchSize:2,occSize:16,maxSimThresh:.9,minSimThresh:.2,sdThresh:8,imageDataCumsum:w,imageDataSqrCumsum:M})}}},535:t=>{t.exports={Cumsum:class{constructor(t,e,r){this.cumsum=[];for(let t=0;t<r;t++){this.cumsum.push([]);for(let r=0;r<e;r++)this.cumsum[t].push(0)}this.cumsum[0][0]=t[0];for(let r=1;r<e;r++)this.cumsum[0][r]=this.cumsum[0][r-1]+t[r];for(let a=1;a<r;a++)this.cumsum[a][0]=this.cumsum[a-1][0]+t[a*e];for(let a=1;a<r;a++)for(let r=1;r<e;r++)this.cumsum[a][r]=t[a*e+r]+this.cumsum[a-1][r]+this.cumsum[a][r-1]-this.cumsum[a-1][r-1]}query(t,e,r,a){let i=this.cumsum[a][r];return e>0&&(i-=this.cumsum[e-1][r]),t>0&&(i-=this.cumsum[a][t-1]),t>0&&e>0&&(i+=this.cumsum[e-1][t-1]),i}}}},140:t=>{t.exports={downsampleBilinear:({image:t})=>{const{data:e,width:r,height:a}=t,i=Math.floor(r/2),s=Math.floor(a/2),h=new Float32Array(i*s),o=[0,1,r,r+1];for(let t=0;t<s;t++)for(let a=0;a<i;a++){let s=2*t*r+2*a,l=0;for(let t=0;t<o.length;t++)l+=e[s+o[t]];l*=.25,h[t*i+a]=l}return{data:h,width:i,height:s}},upsampleBilinear:({image:t,padOneWidth:e,padOneHeight:r})=>{const{width:a,height:i,data:s}=t,h=2*t.width+(e?1:0),o=2*t.height+(r?1:0),l=new Float32Array(h*o);for(let t=0;t<h;t++){const e=.5*t-.25;let r=Math.floor(e),u=Math.ceil(e);r<0&&(r=0),u>=a&&(u=a-1);for(let n=0;n<o;n++){const o=.5*n-.25;let m=Math.floor(o),c=Math.ceil(o);m<0&&(m=0),c>=i&&(c=i-1);const f=(u-e)*(c-o)*s[m*a+r]+(u-e)*(o-m)*s[c*a+r]+(e-r)*(c-o)*s[m*a+u]+(e-r)*(o-m)*s[c*a+u];l[n*h+t]=f}}return{data:l,width:h,height:o}},resize:({image:t,ratio:e})=>{const r=Math.round(t.width*e),a=Math.round(t.height*e),i=new Uint8Array(r*a);for(let s=0;s<r;s++){let h=Math.round(1*s/e),o=Math.round(1*(s+1)/e)-1;o>=t.width&&(o=t.width-1);for(let l=0;l<a;l++){let a=Math.round(1*l/e),u=Math.round(1*(l+1)/e)-1;u>=t.height&&(u=t.height-1);let n=0,m=0;for(let e=h;e<=o;e++)for(let r=a;r<=u;r++)n+=1*t.data[r*t.width+e],m+=1;i[l*r+s]=Math.floor(n/m)}}return{data:i,width:r,height:a}}}}},e={};function r(a){if(e[a])return e[a].exports;var i=e[a]={exports:{}};return t[a](i,i.exports,r),i.exports}(()=>{const{extract:t}=r(589),{buildTrackingImageList:e}=r(508);onmessage=t=>{const{data:r}=t;if("compile"===r.type){const{targetImages:t}=r,i=50/t.length;let s=0;const h=[];for(let r=0;r<t.length;r++){const o=t[r],l=e(o),u=i/l.length,n=a(l,(t=>{s+=u,postMessage({type:"progress",percent:s})}));h.push(n)}postMessage({type:"compileDone",list:h})}};const a=(e,r)=>{const a=[];for(let i=0;i<e.length;i++){const s=e[i],h=t(s),o={data:s.data,scale:s.scale,width:s.width,height:s.height,points:h};a.push(o),r(i)}return a}})()})();',X.p+"compiler.worker.prod.js")}},71077:(ct,pt,X)=>{ct.exports=function(){return X(69855)('(()=>{var t={331:(t,e,r)=>{"use strict";r.r(e),r.d(e,{AbstractMatrix:()=>v,CHO:()=>tt,CholeskyDecomposition:()=>tt,EVD:()=>K,EigenvalueDecomposition:()=>K,LU:()=>H,LuDecomposition:()=>H,Matrix:()=>k,MatrixColumnSelectionView:()=>T,MatrixColumnView:()=>I,MatrixFlipColumnView:()=>A,MatrixFlipRowView:()=>q,MatrixRowSelectionView:()=>P,MatrixRowView:()=>C,MatrixSelectionView:()=>V,MatrixSubView:()=>N,MatrixTransposeView:()=>j,NIPALS:()=>et,Nipals:()=>et,QR:()=>$,QrDecomposition:()=>$,SVD:()=>L,SingularValueDecomposition:()=>L,WrapperMatrix1D:()=>z,WrapperMatrix2D:()=>F,correlation:()=>J,covariance:()=>B,default:()=>k,determinant:()=>X,inverse:()=>O,linearDependencies:()=>Q,pseudoInverse:()=>W,solve:()=>U,wrap:()=>D});const s=Object.prototype.toString;function o(t){return s.call(t).endsWith("Array]")}const n=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!o(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,s=void 0===r?0:r,n=e.toIndex,i=void 0===n?t.length:n;if(s<0||s>=t.length||!Number.isInteger(s))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=s||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var h=t[s],l=s+1;l<i;l++)t[l]>h&&(h=t[l]);return h},i=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!o(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");var r=e.fromIndex,s=void 0===r?0:r,n=e.toIndex,i=void 0===n?t.length:n;if(s<0||s>=t.length||!Number.isInteger(s))throw new Error("fromIndex must be a positive integer smaller than length");if(i<=s||i>t.length||!Number.isInteger(i))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var h=t[s],l=s+1;l<i;l++)t[l]<h&&(h=t[l]);return h},h=function(t){var e,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!o(t))throw new TypeError("input must be an array");if(0===t.length)throw new TypeError("input must not be empty");if(void 0!==r.output){if(!o(r.output))throw new TypeError("output option must be an array if specified");e=r.output}else e=new Array(t.length);var s=i(t),h=n(t);if(s===h)throw new RangeError("minimum and maximum input values are equal. Cannot rescale a constant array");var l=r.min,u=void 0===l?r.autoMinMax?s:0:l,a=r.max,c=void 0===a?r.autoMinMax?h:1:a;if(u>=c)throw new RangeError("min option must be smaller than max option");for(var f=(c-u)/(h-s),m=0;m<t.length;m++)e[m]=(t[m]-s)*f+u;return e},l=" ".repeat(2),u=" ".repeat(4);function a(t,e={}){const{maxRows:r=15,maxColumns:s=10,maxNumSize:o=8}=e;return`${t.constructor.name} {\\n${l}[\\n${u}${function(t,e,r,s){const{rows:o,columns:n}=t,i=Math.min(o,e),h=Math.min(n,r),l=[];for(let e=0;e<i;e++){let r=[];for(let o=0;o<h;o++)r.push(c(t.get(e,o),s));l.push(`${r.join(" ")}`)}return h!==n&&(l[l.length-1]+=` ... ${n-r} more columns`),i!==o&&l.push(`... ${o-e} more rows`),l.join(`\\n${u}`)}(t,r,s,o)}\\n${l}]\\n${l}rows: ${t.rows}\\n${l}columns: ${t.columns}\\n}`}function c(t,e){const r=String(t);if(r.length<=e)return r.padEnd(e," ");const s=t.toPrecision(e-2);if(s.length<=e)return s;const o=t.toExponential(e-2),n=o.indexOf("e"),i=o.slice(n);return o.slice(0,e-i.length)+i}function f(t,e,r){let s=r?t.rows:t.rows-1;if(e<0||e>s)throw new RangeError("Row index out of range")}function m(t,e,r){let s=r?t.columns:t.columns-1;if(e<0||e>s)throw new RangeError("Column index out of range")}function g(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.columns)throw new RangeError("vector size must be the same as the number of columns");return e}function w(t,e){if(e.to1DArray&&(e=e.to1DArray()),e.length!==t.rows)throw new RangeError("vector size must be the same as the number of rows");return e}function p(t,e,r){return{row:d(t,e),column:y(t,r)}}function d(t,e){if("object"!=typeof e)throw new TypeError("unexpected type for row indices");if(e.some((e=>e<0||e>=t.rows)))throw new RangeError("row indices are out of range");return Array.isArray(e)||(e=Array.from(e)),e}function y(t,e){if("object"!=typeof e)throw new TypeError("unexpected type for column indices");if(e.some((e=>e<0||e>=t.columns)))throw new RangeError("column indices are out of range");return Array.isArray(e)||(e=Array.from(e)),e}function M(t,e,r,s,o){if(5!==arguments.length)throw new RangeError("expected 4 arguments");if(x("startRow",e),x("endRow",r),x("startColumn",s),x("endColumn",o),e>r||s>o||e<0||e>=t.rows||r<0||r>=t.rows||s<0||s>=t.columns||o<0||o>=t.columns)throw new RangeError("Submatrix indices are out of range")}function b(t,e=0){let r=[];for(let s=0;s<t;s++)r.push(e);return r}function x(t,e){if("number"!=typeof e)throw new TypeError(`${t} must be a number`)}function E(t){if(t.isEmpty())throw new Error("Empty matrix has no elements to index")}class v{static from1DArray(t,e,r){if(t*e!==r.length)throw new RangeError("data length does not match given dimensions");let s=new k(t,e);for(let o=0;o<t;o++)for(let t=0;t<e;t++)s.set(o,t,r[o*e+t]);return s}static rowVector(t){let e=new k(1,t.length);for(let r=0;r<t.length;r++)e.set(0,r,t[r]);return e}static columnVector(t){let e=new k(t.length,1);for(let r=0;r<t.length;r++)e.set(r,0,t[r]);return e}static zeros(t,e){return new k(t,e)}static ones(t,e){return new k(t,e).fill(1)}static rand(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{random:s=Math.random}=r;let o=new k(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++)o.set(r,t,s());return o}static randInt(t,e,r={}){if("object"!=typeof r)throw new TypeError("options must be an object");const{min:s=0,max:o=1e3,random:n=Math.random}=r;if(!Number.isInteger(s))throw new TypeError("min must be an integer");if(!Number.isInteger(o))throw new TypeError("max must be an integer");if(s>=o)throw new RangeError("min must be smaller than max");let i=o-s,h=new k(t,e);for(let r=0;r<t;r++)for(let t=0;t<e;t++){let e=s+Math.round(n()*i);h.set(r,t,e)}return h}static eye(t,e,r){void 0===e&&(e=t),void 0===r&&(r=1);let s=Math.min(t,e),o=this.zeros(t,e);for(let t=0;t<s;t++)o.set(t,t,r);return o}static diag(t,e,r){let s=t.length;void 0===e&&(e=s),void 0===r&&(r=e);let o=Math.min(s,e,r),n=this.zeros(e,r);for(let e=0;e<o;e++)n.set(e,e,t[e]);return n}static min(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,s=t.columns,o=new k(r,s);for(let n=0;n<r;n++)for(let r=0;r<s;r++)o.set(n,r,Math.min(t.get(n,r),e.get(n,r)));return o}static max(t,e){t=this.checkMatrix(t),e=this.checkMatrix(e);let r=t.rows,s=t.columns,o=new this(r,s);for(let n=0;n<r;n++)for(let r=0;r<s;r++)o.set(n,r,Math.max(t.get(n,r),e.get(n,r)));return o}static checkMatrix(t){return v.isMatrix(t)?t:new k(t)}static isMatrix(t){return null!=t&&"Matrix"===t.klass}get size(){return this.rows*this.columns}apply(t){if("function"!=typeof t)throw new TypeError("callback must be a function");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.call(this,e,r);return this}to1DArray(){let t=[];for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.push(this.get(e,r));return t}to2DArray(){let t=[];for(let e=0;e<this.rows;e++){t.push([]);for(let r=0;r<this.columns;r++)t[e].push(this.get(e,r))}return t}toJSON(){return this.to2DArray()}isRowVector(){return 1===this.rows}isColumnVector(){return 1===this.columns}isVector(){return 1===this.rows||1===this.columns}isSquare(){return this.rows===this.columns}isEmpty(){return 0===this.rows||0===this.columns}isSymmetric(){if(this.isSquare()){for(let t=0;t<this.rows;t++)for(let e=0;e<=t;e++)if(this.get(t,e)!==this.get(e,t))return!1;return!0}return!1}isEchelonForm(){let t=0,e=0,r=-1,s=!0,o=!1;for(;t<this.rows&&s;){for(e=0,o=!1;e<this.columns&&!1===o;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(o=!0,r=e):(s=!1,o=!0);t++}return s}isReducedEchelonForm(){let t=0,e=0,r=-1,s=!0,o=!1;for(;t<this.rows&&s;){for(e=0,o=!1;e<this.columns&&!1===o;)0===this.get(t,e)?e++:1===this.get(t,e)&&e>r?(o=!0,r=e):(s=!1,o=!0);for(let r=e+1;r<this.rows;r++)0!==this.get(t,r)&&(s=!1);t++}return s}echelonForm(){let t=this.clone(),e=0,r=0;for(;e<t.rows&&r<t.columns;){let s=e;for(let o=e;o<t.rows;o++)t.get(o,r)>t.get(s,r)&&(s=o);if(0===t.get(s,r))r++;else{t.swapRows(e,s);let o=t.get(e,r);for(let s=r;s<t.columns;s++)t.set(e,s,t.get(e,s)/o);for(let s=e+1;s<t.rows;s++){let o=t.get(s,r)/t.get(e,r);t.set(s,r,0);for(let n=r+1;n<t.columns;n++)t.set(s,n,t.get(s,n)-t.get(e,n)*o)}e++,r++}}return t}reducedEchelonForm(){let t=this.echelonForm(),e=t.columns,r=t.rows,s=r-1;for(;s>=0;)if(0===t.maxRow(s))s--;else{let o=0,n=!1;for(;o<r&&!1===n;)1===t.get(s,o)?n=!0:o++;for(let r=0;r<s;r++){let n=t.get(r,o);for(let i=o;i<e;i++){let e=t.get(r,i)-n*t.get(s,i);t.set(r,i,e)}}s--}return t}set(){throw new Error("set method is unimplemented")}get(){throw new Error("get method is unimplemented")}repeat(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{rows:e=1,columns:r=1}=t;if(!Number.isInteger(e)||e<=0)throw new TypeError("rows must be a positive integer");if(!Number.isInteger(r)||r<=0)throw new TypeError("columns must be a positive integer");let s=new k(this.rows*e,this.columns*r);for(let t=0;t<e;t++)for(let e=0;e<r;e++)s.setSubMatrix(this,this.rows*t,this.columns*e);return s}fill(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,t);return this}neg(){return this.mulS(-1)}getRow(t){f(this,t);let e=[];for(let r=0;r<this.columns;r++)e.push(this.get(t,r));return e}getRowVector(t){return k.rowVector(this.getRow(t))}setRow(t,e){f(this,t),e=g(this,e);for(let r=0;r<this.columns;r++)this.set(t,r,e[r]);return this}swapRows(t,e){f(this,t),f(this,e);for(let r=0;r<this.columns;r++){let s=this.get(t,r);this.set(t,r,this.get(e,r)),this.set(e,r,s)}return this}getColumn(t){m(this,t);let e=[];for(let r=0;r<this.rows;r++)e.push(this.get(r,t));return e}getColumnVector(t){return k.columnVector(this.getColumn(t))}setColumn(t,e){m(this,t),e=w(this,e);for(let r=0;r<this.rows;r++)this.set(r,t,e[r]);return this}swapColumns(t,e){m(this,t),m(this,e);for(let r=0;r<this.rows;r++){let s=this.get(r,t);this.set(r,t,this.get(r,e)),this.set(r,e,s)}return this}addRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[r]);return this}subRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[r]);return this}mulRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[r]);return this}divRowVector(t){t=g(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[r]);return this}addColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t[e]);return this}subColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t[e]);return this}mulColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t[e]);return this}divColumnVector(t){t=w(this,t);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t[e]);return this}mulRow(t,e){f(this,t);for(let r=0;r<this.columns;r++)this.set(t,r,this.get(t,r)*e);return this}mulColumn(t,e){m(this,t);for(let r=0;r<this.rows;r++)this.set(r,t,this.get(r,t)*e);return this}max(){if(this.isEmpty())return NaN;let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)>t&&(t=this.get(e,r));return t}maxIndex(){E(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let s=0;s<this.columns;s++)this.get(r,s)>t&&(t=this.get(r,s),e[0]=r,e[1]=s);return e}min(){if(this.isEmpty())return NaN;let t=this.get(0,0);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.get(e,r)<t&&(t=this.get(e,r));return t}minIndex(){E(this);let t=this.get(0,0),e=[0,0];for(let r=0;r<this.rows;r++)for(let s=0;s<this.columns;s++)this.get(r,s)<t&&(t=this.get(r,s),e[0]=r,e[1]=s);return e}maxRow(t){if(f(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)>e&&(e=this.get(t,r));return e}maxRowIndex(t){f(this,t),E(this);let e=this.get(t,0),r=[t,0];for(let s=1;s<this.columns;s++)this.get(t,s)>e&&(e=this.get(t,s),r[1]=s);return r}minRow(t){if(f(this,t),this.isEmpty())return NaN;let e=this.get(t,0);for(let r=1;r<this.columns;r++)this.get(t,r)<e&&(e=this.get(t,r));return e}minRowIndex(t){f(this,t),E(this);let e=this.get(t,0),r=[t,0];for(let s=1;s<this.columns;s++)this.get(t,s)<e&&(e=this.get(t,s),r[1]=s);return r}maxColumn(t){if(m(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)>e&&(e=this.get(r,t));return e}maxColumnIndex(t){m(this,t),E(this);let e=this.get(0,t),r=[0,t];for(let s=1;s<this.rows;s++)this.get(s,t)>e&&(e=this.get(s,t),r[0]=s);return r}minColumn(t){if(m(this,t),this.isEmpty())return NaN;let e=this.get(0,t);for(let r=1;r<this.rows;r++)this.get(r,t)<e&&(e=this.get(r,t));return e}minColumnIndex(t){m(this,t),E(this);let e=this.get(0,t),r=[0,t];for(let s=1;s<this.rows;s++)this.get(s,t)<e&&(e=this.get(s,t),r[0]=s);return r}diag(){let t=Math.min(this.rows,this.columns),e=[];for(let r=0;r<t;r++)e.push(this.get(r,r));return e}norm(t="frobenius"){let e=0;if("max"===t)return this.max();if("frobenius"===t){for(let t=0;t<this.rows;t++)for(let r=0;r<this.columns;r++)e+=this.get(t,r)*this.get(t,r);return Math.sqrt(e)}throw new RangeError(`unknown norm type: ${t}`)}cumulativeSum(){let t=0;for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t+=this.get(e,r),this.set(e,r,t);return this}dot(t){v.isMatrix(t)&&(t=t.to1DArray());let e=this.to1DArray();if(e.length!==t.length)throw new RangeError("vectors do not have the same size");let r=0;for(let s=0;s<e.length;s++)r+=e[s]*t[s];return r}mmul(t){t=k.checkMatrix(t);let e=this.rows,r=this.columns,s=t.columns,o=new k(e,s),n=new Float64Array(r);for(let i=0;i<s;i++){for(let e=0;e<r;e++)n[e]=t.get(e,i);for(let t=0;t<e;t++){let e=0;for(let s=0;s<r;s++)e+=this.get(t,s)*n[s];o.set(t,i,e)}}return o}strassen2x2(t){t=k.checkMatrix(t);let e=new k(2,2);const r=this.get(0,0),s=t.get(0,0),o=this.get(0,1),n=t.get(0,1),i=this.get(1,0),h=t.get(1,0),l=this.get(1,1),u=t.get(1,1),a=(r+l)*(s+u),c=(i+l)*s,f=r*(n-u),m=l*(h-s),g=(r+o)*u,w=a+m-g+(o-l)*(h+u),p=f+g,d=c+m,y=a-c+f+(i-r)*(s+n);return e.set(0,0,w),e.set(0,1,p),e.set(1,0,d),e.set(1,1,y),e}strassen3x3(t){t=k.checkMatrix(t);let e=new k(3,3);const r=this.get(0,0),s=this.get(0,1),o=this.get(0,2),n=this.get(1,0),i=this.get(1,1),h=this.get(1,2),l=this.get(2,0),u=this.get(2,1),a=this.get(2,2),c=t.get(0,0),f=t.get(0,1),m=t.get(0,2),g=t.get(1,0),w=t.get(1,1),p=t.get(1,2),d=t.get(2,0),y=t.get(2,1),M=t.get(2,2),b=(r-n)*(-f+w),x=(-r+n+i)*(c-f+w),E=(n+i)*(-c+f),v=r*c,S=(-r+l+u)*(c-m+p),R=(-r+l)*(m-p),I=(l+u)*(-c+m),T=(-o+u+a)*(w+d-y),A=(o-a)*(w-y),q=o*d,C=(u+a)*(-d+y),P=(-o+i+h)*(p+d-M),V=(o-h)*(p-M),N=(i+h)*(-d+M),j=v+q+s*g,z=(r+s+o-n-i-u-a)*w+x+E+v+T+q+C,F=v+S+I+(r+s+o-i-h-l-u)*p+q+P+N,D=b+i*(-c+f+g-w-p-d+M)+x+v+q+P+V,H=b+x+E+v+h*y,_=q+P+V+N+n*m,$=v+S+R+u*(-c+m+g-w-p-d+y)+T+A+q,L=T+A+q+C+l*f,O=v+S+R+I+a*M;return e.set(0,0,j),e.set(0,1,z),e.set(0,2,F),e.set(1,0,D),e.set(1,1,H),e.set(1,2,_),e.set(2,0,$),e.set(2,1,L),e.set(2,2,O),e}mmulStrassen(t){t=k.checkMatrix(t);let e=this.clone(),r=e.rows,s=e.columns,o=t.rows,n=t.columns;function i(t,e,r){let s=t.rows,o=t.columns;if(s===e&&o===r)return t;{let s=v.zeros(e,r);return s=s.setSubMatrix(t,0,0),s}}s!==o&&console.warn(`Multiplying ${r} x ${s} and ${o} x ${n} matrix: dimensions do not match.`);let h=Math.max(r,o),l=Math.max(s,n);return e=i(e,h,l),function t(e,r,s,o){if(s<=512||o<=512)return e.mmul(r);s%2==1&&o%2==1?(e=i(e,s+1,o+1),r=i(r,s+1,o+1)):s%2==1?(e=i(e,s+1,o),r=i(r,s+1,o)):o%2==1&&(e=i(e,s,o+1),r=i(r,s,o+1));let n=parseInt(e.rows/2,10),h=parseInt(e.columns/2,10),l=e.subMatrix(0,n-1,0,h-1),u=r.subMatrix(0,n-1,0,h-1),a=e.subMatrix(0,n-1,h,e.columns-1),c=r.subMatrix(0,n-1,h,r.columns-1),f=e.subMatrix(n,e.rows-1,0,h-1),m=r.subMatrix(n,r.rows-1,0,h-1),g=e.subMatrix(n,e.rows-1,h,e.columns-1),w=r.subMatrix(n,r.rows-1,h,r.columns-1),p=t(v.add(l,g),v.add(u,w),n,h),d=t(v.add(f,g),u,n,h),y=t(l,v.sub(c,w),n,h),M=t(g,v.sub(m,u),n,h),b=t(v.add(l,a),w,n,h),x=t(v.sub(f,l),v.add(u,c),n,h),E=t(v.sub(a,g),v.add(m,w),n,h),S=v.add(p,M);S.sub(b),S.add(E);let k=v.add(y,b),R=v.add(d,M),I=v.sub(p,d);I.add(y),I.add(x);let T=v.zeros(2*S.rows,2*S.columns);return T=T.setSubMatrix(S,0,0),T=T.setSubMatrix(k,S.rows,0),T=T.setSubMatrix(R,0,S.columns),T=T.setSubMatrix(I,S.rows,S.columns),T.subMatrix(0,s-1,0,o-1)}(e,t=i(t,h,l),h,l)}scaleRows(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let s=new k(this.rows,this.columns);for(let t=0;t<this.rows;t++){const o=this.getRow(t);o.length>0&&h(o,{min:e,max:r,output:o}),s.setRow(t,o)}return s}scaleColumns(t={}){if("object"!=typeof t)throw new TypeError("options must be an object");const{min:e=0,max:r=1}=t;if(!Number.isFinite(e))throw new TypeError("min must be a number");if(!Number.isFinite(r))throw new TypeError("max must be a number");if(e>=r)throw new RangeError("min must be smaller than max");let s=new k(this.rows,this.columns);for(let t=0;t<this.columns;t++){const o=this.getColumn(t);o.length&&h(o,{min:e,max:r,output:o}),s.setColumn(t,o)}return s}flipRows(){const t=Math.ceil(this.columns/2);for(let e=0;e<this.rows;e++)for(let r=0;r<t;r++){let t=this.get(e,r),s=this.get(e,this.columns-1-r);this.set(e,r,s),this.set(e,this.columns-1-r,t)}return this}flipColumns(){const t=Math.ceil(this.rows/2);for(let e=0;e<this.columns;e++)for(let r=0;r<t;r++){let t=this.get(r,e),s=this.get(this.rows-1-r,e);this.set(r,e,s),this.set(this.rows-1-r,e,t)}return this}kroneckerProduct(t){t=k.checkMatrix(t);let e=this.rows,r=this.columns,s=t.rows,o=t.columns,n=new k(e*s,r*o);for(let i=0;i<e;i++)for(let e=0;e<r;e++)for(let r=0;r<s;r++)for(let h=0;h<o;h++)n.set(s*i+r,o*e+h,this.get(i,e)*t.get(r,h));return n}transpose(){let t=new k(this.columns,this.rows);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(r,e,this.get(e,r));return t}sortRows(t=S){for(let e=0;e<this.rows;e++)this.setRow(e,this.getRow(e).sort(t));return this}sortColumns(t=S){for(let e=0;e<this.columns;e++)this.setColumn(e,this.getColumn(e).sort(t));return this}subMatrix(t,e,r,s){M(this,t,e,r,s);let o=new k(e-t+1,s-r+1);for(let n=t;n<=e;n++)for(let e=r;e<=s;e++)o.set(n-t,e-r,this.get(n,e));return o}subMatrixRow(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.columns-1),e>r||e<0||e>=this.columns||r<0||r>=this.columns)throw new RangeError("Argument out of range");let s=new k(t.length,r-e+1);for(let o=0;o<t.length;o++)for(let n=e;n<=r;n++){if(t[o]<0||t[o]>=this.rows)throw new RangeError(`Row index out of range: ${t[o]}`);s.set(o,n-e,this.get(t[o],n))}return s}subMatrixColumn(t,e,r){if(void 0===e&&(e=0),void 0===r&&(r=this.rows-1),e>r||e<0||e>=this.rows||r<0||r>=this.rows)throw new RangeError("Argument out of range");let s=new k(r-e+1,t.length);for(let o=0;o<t.length;o++)for(let n=e;n<=r;n++){if(t[o]<0||t[o]>=this.columns)throw new RangeError(`Column index out of range: ${t[o]}`);s.set(n-e,o,this.get(n,t[o]))}return s}setSubMatrix(t,e,r){if((t=k.checkMatrix(t)).isEmpty())return this;M(this,e,e+t.rows-1,r,r+t.columns-1);for(let s=0;s<t.rows;s++)for(let o=0;o<t.columns;o++)this.set(e+s,r+o,t.get(s,o));return this}selection(t,e){let r=p(this,t,e),s=new k(t.length,e.length);for(let t=0;t<r.row.length;t++){let e=r.row[t];for(let o=0;o<r.column.length;o++){let n=r.column[o];s.set(t,o,this.get(e,n))}}return s}trace(){let t=Math.min(this.rows,this.columns),e=0;for(let r=0;r<t;r++)e+=this.get(r,r);return e}clone(){let t=new k(this.rows,this.columns);for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)t.set(e,r,this.get(e,r));return t}sum(t){switch(t){case"row":return function(t){let e=b(t.rows);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[r]+=t.get(r,s);return e}(this);case"column":return function(t){let e=b(t.columns);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[s]+=t.get(r,s);return e}(this);case void 0:return function(t){let e=0;for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)e+=t.get(r,s);return e}(this);default:throw new Error(`invalid option: ${t}`)}}product(t){switch(t){case"row":return function(t){let e=b(t.rows,1);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[r]*=t.get(r,s);return e}(this);case"column":return function(t){let e=b(t.columns,1);for(let r=0;r<t.rows;++r)for(let s=0;s<t.columns;++s)e[s]*=t.get(r,s);return e}(this);case void 0:return function(t){let e=1;for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)e*=t.get(r,s);return e}(this);default:throw new Error(`invalid option: ${t}`)}}mean(t){const e=this.sum(t);switch(t){case"row":for(let t=0;t<this.rows;t++)e[t]/=this.columns;return e;case"column":for(let t=0;t<this.columns;t++)e[t]/=this.rows;return e;case void 0:return e/this.size;default:throw new Error(`invalid option: ${t}`)}}variance(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{unbiased:r=!0,mean:s=this.mean(t)}=e;if("boolean"!=typeof r)throw new TypeError("unbiased must be a boolean");switch(t){case"row":if(!Array.isArray(s))throw new TypeError("mean must be an array");return function(t,e,r){const s=t.rows,o=t.columns,n=[];for(let i=0;i<s;i++){let s=0,h=0,l=0;for(let e=0;e<o;e++)l=t.get(i,e)-r[i],s+=l,h+=l*l;e?n.push((h-s*s/o)/(o-1)):n.push((h-s*s/o)/o)}return n}(this,r,s);case"column":if(!Array.isArray(s))throw new TypeError("mean must be an array");return function(t,e,r){const s=t.rows,o=t.columns,n=[];for(let i=0;i<o;i++){let o=0,h=0,l=0;for(let e=0;e<s;e++)l=t.get(e,i)-r[i],o+=l,h+=l*l;e?n.push((h-o*o/s)/(s-1)):n.push((h-o*o/s)/s)}return n}(this,r,s);case void 0:if("number"!=typeof s)throw new TypeError("mean must be a number");return function(t,e,r){const s=t.rows,o=t.columns,n=s*o;let i=0,h=0,l=0;for(let e=0;e<s;e++)for(let s=0;s<o;s++)l=t.get(e,s)-r,i+=l,h+=l*l;return e?(h-i*i/n)/(n-1):(h-i*i/n)/n}(this,r,s);default:throw new Error(`invalid option: ${t}`)}}standardDeviation(t,e){"object"==typeof t&&(e=t,t=void 0);const r=this.variance(t,e);if(void 0===t)return Math.sqrt(r);for(let t=0;t<r.length;t++)r[t]=Math.sqrt(r[t]);return r}center(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");const{center:r=this.mean(t)}=e;switch(t){case"row":if(!Array.isArray(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e[r])}(this,r),this;case"column":if(!Array.isArray(r))throw new TypeError("center must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e[s])}(this,r),this;case void 0:if("number"!=typeof r)throw new TypeError("center must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)-e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}scale(t,e={}){if("object"==typeof t&&(e=t,t=void 0),"object"!=typeof e)throw new TypeError("options must be an object");let r=e.scale;switch(t){case"row":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.rows;r++){let s=0;for(let e=0;e<t.columns;e++)s+=Math.pow(t.get(r,e),2)/(t.columns-1);e.push(Math.sqrt(s))}return e}(this);else if(!Array.isArray(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e[r])}(this,r),this;case"column":if(void 0===r)r=function(t){const e=[];for(let r=0;r<t.columns;r++){let s=0;for(let e=0;e<t.rows;e++)s+=Math.pow(t.get(e,r),2)/(t.rows-1);e.push(Math.sqrt(s))}return e}(this);else if(!Array.isArray(r))throw new TypeError("scale must be an array");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e[s])}(this,r),this;case void 0:if(void 0===r)r=function(t){const e=t.size-1;let r=0;for(let s=0;s<t.columns;s++)for(let o=0;o<t.rows;o++)r+=Math.pow(t.get(o,s),2)/e;return Math.sqrt(r)}(this);else if("number"!=typeof r)throw new TypeError("scale must be a number");return function(t,e){for(let r=0;r<t.rows;r++)for(let s=0;s<t.columns;s++)t.set(r,s,t.get(r,s)/e)}(this,r),this;default:throw new Error(`invalid option: ${t}`)}}toString(t){return a(this,t)}}function S(t,e){return t-e}v.prototype.klass="Matrix","undefined"!=typeof Symbol&&(v.prototype[Symbol.for("nodejs.util.inspect.custom")]=function(){return a(this)}),v.random=v.rand,v.randomInt=v.randInt,v.diagonal=v.diag,v.prototype.diagonal=v.prototype.diag,v.identity=v.eye,v.prototype.negate=v.prototype.neg,v.prototype.tensorProduct=v.prototype.kroneckerProduct;class k extends v{constructor(t,e){if(super(),k.isMatrix(t))return t.clone();if(Number.isInteger(t)&&t>=0){if(this.data=[],!(Number.isInteger(e)&&e>=0))throw new TypeError("nColumns must be a positive integer");for(let r=0;r<t;r++)this.data.push(new Float64Array(e))}else{if(!Array.isArray(t))throw new TypeError("First argument must be a positive number or an array");{const r=t;if("number"!=typeof(e=(t=r.length)?r[0].length:0))throw new TypeError("Data must be a 2D array with at least one element");this.data=[];for(let s=0;s<t;s++){if(r[s].length!==e)throw new RangeError("Inconsistent array dimensions");this.data.push(Float64Array.from(r[s]))}}}this.rows=t,this.columns=e}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}removeRow(t){return f(this,t),this.data.splice(t,1),this.rows-=1,this}addRow(t,e){return void 0===e&&(e=t,t=this.rows),f(this,t,!0),e=Float64Array.from(g(this,e)),this.data.splice(t,0,e),this.rows+=1,this}removeColumn(t){m(this,t);for(let e=0;e<this.rows;e++){const r=new Float64Array(this.columns-1);for(let s=0;s<t;s++)r[s]=this.data[e][s];for(let s=t+1;s<this.columns;s++)r[s-1]=this.data[e][s];this.data[e]=r}return this.columns-=1,this}addColumn(t,e){void 0===e&&(e=t,t=this.columns),m(this,t,!0),e=w(this,e);for(let r=0;r<this.rows;r++){const s=new Float64Array(this.columns+1);let o=0;for(;o<t;o++)s[o]=this.data[r][o];for(s[o++]=e[r];o<this.columns+1;o++)s[o]=this.data[r][o-1];this.data[r]=s}return this.columns+=1,this}}!function(t,e){t.prototype.add=function(t){return"number"==typeof t?this.addS(t):this.addM(t)},t.prototype.addS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t);return this},t.prototype.addM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)+t.get(e,r));return this},t.add=function(t,r){return new e(t).add(r)},t.prototype.sub=function(t){return"number"==typeof t?this.subS(t):this.subM(t)},t.prototype.subS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t);return this},t.prototype.subM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)-t.get(e,r));return this},t.sub=function(t,r){return new e(t).sub(r)},t.prototype.subtract=t.prototype.sub,t.prototype.subtractS=t.prototype.subS,t.prototype.subtractM=t.prototype.subM,t.subtract=t.sub,t.prototype.mul=function(t){return"number"==typeof t?this.mulS(t):this.mulM(t)},t.prototype.mulS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t);return this},t.prototype.mulM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)*t.get(e,r));return this},t.mul=function(t,r){return new e(t).mul(r)},t.prototype.multiply=t.prototype.mul,t.prototype.multiplyS=t.prototype.mulS,t.prototype.multiplyM=t.prototype.mulM,t.multiply=t.mul,t.prototype.div=function(t){return"number"==typeof t?this.divS(t):this.divM(t)},t.prototype.divS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t);return this},t.prototype.divM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)/t.get(e,r));return this},t.div=function(t,r){return new e(t).div(r)},t.prototype.divide=t.prototype.div,t.prototype.divideS=t.prototype.divS,t.prototype.divideM=t.prototype.divM,t.divide=t.div,t.prototype.mod=function(t){return"number"==typeof t?this.modS(t):this.modM(t)},t.prototype.modS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t);return this},t.prototype.modM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)%t.get(e,r));return this},t.mod=function(t,r){return new e(t).mod(r)},t.prototype.modulus=t.prototype.mod,t.prototype.modulusS=t.prototype.modS,t.prototype.modulusM=t.prototype.modM,t.modulus=t.mod,t.prototype.and=function(t){return"number"==typeof t?this.andS(t):this.andM(t)},t.prototype.andS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t);return this},t.prototype.andM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)&t.get(e,r));return this},t.and=function(t,r){return new e(t).and(r)},t.prototype.or=function(t){return"number"==typeof t?this.orS(t):this.orM(t)},t.prototype.orS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t);return this},t.prototype.orM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)|t.get(e,r));return this},t.or=function(t,r){return new e(t).or(r)},t.prototype.xor=function(t){return"number"==typeof t?this.xorS(t):this.xorM(t)},t.prototype.xorS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t);return this},t.prototype.xorM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)^t.get(e,r));return this},t.xor=function(t,r){return new e(t).xor(r)},t.prototype.leftShift=function(t){return"number"==typeof t?this.leftShiftS(t):this.leftShiftM(t)},t.prototype.leftShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t);return this},t.prototype.leftShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)<<t.get(e,r));return this},t.leftShift=function(t,r){return new e(t).leftShift(r)},t.prototype.signPropagatingRightShift=function(t){return"number"==typeof t?this.signPropagatingRightShiftS(t):this.signPropagatingRightShiftM(t)},t.prototype.signPropagatingRightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t);return this},t.prototype.signPropagatingRightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>t.get(e,r));return this},t.signPropagatingRightShift=function(t,r){return new e(t).signPropagatingRightShift(r)},t.prototype.rightShift=function(t){return"number"==typeof t?this.rightShiftS(t):this.rightShiftM(t)},t.prototype.rightShiftS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t);return this},t.prototype.rightShiftM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,this.get(e,r)>>>t.get(e,r));return this},t.rightShift=function(t,r){return new e(t).rightShift(r)},t.prototype.zeroFillRightShift=t.prototype.rightShift,t.prototype.zeroFillRightShiftS=t.prototype.rightShiftS,t.prototype.zeroFillRightShiftM=t.prototype.rightShiftM,t.zeroFillRightShift=t.rightShift,t.prototype.not=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,~this.get(t,e));return this},t.not=function(t){return new e(t).not()},t.prototype.abs=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.abs(this.get(t,e)));return this},t.abs=function(t){return new e(t).abs()},t.prototype.acos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acos(this.get(t,e)));return this},t.acos=function(t){return new e(t).acos()},t.prototype.acosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.acosh(this.get(t,e)));return this},t.acosh=function(t){return new e(t).acosh()},t.prototype.asin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asin(this.get(t,e)));return this},t.asin=function(t){return new e(t).asin()},t.prototype.asinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.asinh(this.get(t,e)));return this},t.asinh=function(t){return new e(t).asinh()},t.prototype.atan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atan(this.get(t,e)));return this},t.atan=function(t){return new e(t).atan()},t.prototype.atanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.atanh(this.get(t,e)));return this},t.atanh=function(t){return new e(t).atanh()},t.prototype.cbrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cbrt(this.get(t,e)));return this},t.cbrt=function(t){return new e(t).cbrt()},t.prototype.ceil=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.ceil(this.get(t,e)));return this},t.ceil=function(t){return new e(t).ceil()},t.prototype.clz32=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.clz32(this.get(t,e)));return this},t.clz32=function(t){return new e(t).clz32()},t.prototype.cos=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cos(this.get(t,e)));return this},t.cos=function(t){return new e(t).cos()},t.prototype.cosh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.cosh(this.get(t,e)));return this},t.cosh=function(t){return new e(t).cosh()},t.prototype.exp=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.exp(this.get(t,e)));return this},t.exp=function(t){return new e(t).exp()},t.prototype.expm1=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.expm1(this.get(t,e)));return this},t.expm1=function(t){return new e(t).expm1()},t.prototype.floor=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.floor(this.get(t,e)));return this},t.floor=function(t){return new e(t).floor()},t.prototype.fround=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.fround(this.get(t,e)));return this},t.fround=function(t){return new e(t).fround()},t.prototype.log=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log(this.get(t,e)));return this},t.log=function(t){return new e(t).log()},t.prototype.log1p=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log1p(this.get(t,e)));return this},t.log1p=function(t){return new e(t).log1p()},t.prototype.log10=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log10(this.get(t,e)));return this},t.log10=function(t){return new e(t).log10()},t.prototype.log2=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.log2(this.get(t,e)));return this},t.log2=function(t){return new e(t).log2()},t.prototype.round=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.round(this.get(t,e)));return this},t.round=function(t){return new e(t).round()},t.prototype.sign=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sign(this.get(t,e)));return this},t.sign=function(t){return new e(t).sign()},t.prototype.sin=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sin(this.get(t,e)));return this},t.sin=function(t){return new e(t).sin()},t.prototype.sinh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sinh(this.get(t,e)));return this},t.sinh=function(t){return new e(t).sinh()},t.prototype.sqrt=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.sqrt(this.get(t,e)));return this},t.sqrt=function(t){return new e(t).sqrt()},t.prototype.tan=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tan(this.get(t,e)));return this},t.tan=function(t){return new e(t).tan()},t.prototype.tanh=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.tanh(this.get(t,e)));return this},t.tanh=function(t){return new e(t).tanh()},t.prototype.trunc=function(){for(let t=0;t<this.rows;t++)for(let e=0;e<this.columns;e++)this.set(t,e,Math.trunc(this.get(t,e)));return this},t.trunc=function(t){return new e(t).trunc()},t.pow=function(t,r){return new e(t).pow(r)},t.prototype.pow=function(t){return"number"==typeof t?this.powS(t):this.powM(t)},t.prototype.powS=function(t){for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t));return this},t.prototype.powM=function(t){if(t=e.checkMatrix(t),this.rows!==t.rows||this.columns!==t.columns)throw new RangeError("Matrices dimensions must be equal");for(let e=0;e<this.rows;e++)for(let r=0;r<this.columns;r++)this.set(e,r,Math.pow(this.get(e,r),t.get(e,r)));return this}}(v,k);class R extends v{constructor(t,e,r){super(),this.matrix=t,this.rows=e,this.columns=r}}class I extends R{constructor(t,e){m(t,e),super(t,t.rows,1),this.column=e}set(t,e,r){return this.matrix.set(t,this.column,r),this}get(t){return this.matrix.get(t,this.column)}}class T extends R{constructor(t,e){e=y(t,e),super(t,t.rows,e.length),this.columnIndices=e}set(t,e,r){return this.matrix.set(t,this.columnIndices[e],r),this}get(t,e){return this.matrix.get(t,this.columnIndices[e])}}class A extends R{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(t,this.columns-e-1,r),this}get(t,e){return this.matrix.get(t,this.columns-e-1)}}class q extends R{constructor(t){super(t,t.rows,t.columns)}set(t,e,r){return this.matrix.set(this.rows-t-1,e,r),this}get(t,e){return this.matrix.get(this.rows-t-1,e)}}class C extends R{constructor(t,e){f(t,e),super(t,1,t.columns),this.row=e}set(t,e,r){return this.matrix.set(this.row,e,r),this}get(t,e){return this.matrix.get(this.row,e)}}class P extends R{constructor(t,e){super(t,(e=d(t,e)).length,t.columns),this.rowIndices=e}set(t,e,r){return this.matrix.set(this.rowIndices[t],e,r),this}get(t,e){return this.matrix.get(this.rowIndices[t],e)}}class V extends R{constructor(t,e,r){let s=p(t,e,r);super(t,s.row.length,s.column.length),this.rowIndices=s.row,this.columnIndices=s.column}set(t,e,r){return this.matrix.set(this.rowIndices[t],this.columnIndices[e],r),this}get(t,e){return this.matrix.get(this.rowIndices[t],this.columnIndices[e])}}class N extends R{constructor(t,e,r,s,o){M(t,e,r,s,o),super(t,r-e+1,o-s+1),this.startRow=e,this.startColumn=s}set(t,e,r){return this.matrix.set(this.startRow+t,this.startColumn+e,r),this}get(t,e){return this.matrix.get(this.startRow+t,this.startColumn+e)}}class j extends R{constructor(t){super(t,t.columns,t.rows)}set(t,e,r){return this.matrix.set(e,t,r),this}get(t,e){return this.matrix.get(e,t)}}class z extends v{constructor(t,e={}){const{rows:r=1}=e;if(t.length%r!=0)throw new Error("the data length is not divisible by the number of rows");super(),this.rows=r,this.columns=t.length/r,this.data=t}set(t,e,r){let s=this._calculateIndex(t,e);return this.data[s]=r,this}get(t,e){let r=this._calculateIndex(t,e);return this.data[r]}_calculateIndex(t,e){return t*this.columns+e}}class F extends v{constructor(t){super(),this.data=t,this.rows=t.length,this.columns=t[0].length}set(t,e,r){return this.data[t][e]=r,this}get(t,e){return this.data[t][e]}}function D(t,e){if(Array.isArray(t))return t[0]&&Array.isArray(t[0])?new F(t):new z(t,e);throw new Error("the argument is not an array")}class H{constructor(t){let e,r,s,o,n,i,h,l,u,a=(t=F.checkMatrix(t)).clone(),c=a.rows,f=a.columns,m=new Float64Array(c),g=1;for(e=0;e<c;e++)m[e]=e;for(l=new Float64Array(c),r=0;r<f;r++){for(e=0;e<c;e++)l[e]=a.get(e,r);for(e=0;e<c;e++){for(u=Math.min(e,r),n=0,s=0;s<u;s++)n+=a.get(e,s)*l[s];l[e]-=n,a.set(e,r,l[e])}for(o=r,e=r+1;e<c;e++)Math.abs(l[e])>Math.abs(l[o])&&(o=e);if(o!==r){for(s=0;s<f;s++)i=a.get(o,s),a.set(o,s,a.get(r,s)),a.set(r,s,i);h=m[o],m[o]=m[r],m[r]=h,g=-g}if(r<c&&0!==a.get(r,r))for(e=r+1;e<c;e++)a.set(e,r,a.get(e,r)/a.get(r,r))}this.LU=a,this.pivotVector=m,this.pivotSign=g}isSingular(){let t=this.LU,e=t.columns;for(let r=0;r<e;r++)if(0===t.get(r,r))return!0;return!1}solve(t){t=k.checkMatrix(t);let e=this.LU;if(e.rows!==t.rows)throw new Error("Invalid matrix dimensions");if(this.isSingular())throw new Error("LU matrix is singular");let r,s,o,n=t.columns,i=t.subMatrixRow(this.pivotVector,0,n-1),h=e.columns;for(o=0;o<h;o++)for(r=o+1;r<h;r++)for(s=0;s<n;s++)i.set(r,s,i.get(r,s)-i.get(o,s)*e.get(r,o));for(o=h-1;o>=0;o--){for(s=0;s<n;s++)i.set(o,s,i.get(o,s)/e.get(o,o));for(r=0;r<o;r++)for(s=0;s<n;s++)i.set(r,s,i.get(r,s)-i.get(o,s)*e.get(r,o))}return i}get determinant(){let t=this.LU;if(!t.isSquare())throw new Error("Matrix must be square");let e=this.pivotSign,r=t.columns;for(let s=0;s<r;s++)e*=t.get(s,s);return e}get lowerTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,s=new k(e,r);for(let o=0;o<e;o++)for(let e=0;e<r;e++)o>e?s.set(o,e,t.get(o,e)):o===e?s.set(o,e,1):s.set(o,e,0);return s}get upperTriangularMatrix(){let t=this.LU,e=t.rows,r=t.columns,s=new k(e,r);for(let o=0;o<e;o++)for(let e=0;e<r;e++)o<=e?s.set(o,e,t.get(o,e)):s.set(o,e,0);return s}get pivotPermutationVector(){return Array.from(this.pivotVector)}}function _(t,e){let r=0;return Math.abs(t)>Math.abs(e)?(r=e/t,Math.abs(t)*Math.sqrt(1+r*r)):0!==e?(r=t/e,Math.abs(e)*Math.sqrt(1+r*r)):0}class ${constructor(t){let e,r,s,o,n=(t=F.checkMatrix(t)).clone(),i=t.rows,h=t.columns,l=new Float64Array(h);for(s=0;s<h;s++){let t=0;for(e=s;e<i;e++)t=_(t,n.get(e,s));if(0!==t){for(n.get(s,s)<0&&(t=-t),e=s;e<i;e++)n.set(e,s,n.get(e,s)/t);for(n.set(s,s,n.get(s,s)+1),r=s+1;r<h;r++){for(o=0,e=s;e<i;e++)o+=n.get(e,s)*n.get(e,r);for(o=-o/n.get(s,s),e=s;e<i;e++)n.set(e,r,n.get(e,r)+o*n.get(e,s))}}l[s]=-t}this.QR=n,this.Rdiag=l}solve(t){t=k.checkMatrix(t);let e=this.QR,r=e.rows;if(t.rows!==r)throw new Error("Matrix row dimensions must agree");if(!this.isFullRank())throw new Error("Matrix is rank deficient");let s,o,n,i,h=t.columns,l=t.clone(),u=e.columns;for(n=0;n<u;n++)for(o=0;o<h;o++){for(i=0,s=n;s<r;s++)i+=e.get(s,n)*l.get(s,o);for(i=-i/e.get(n,n),s=n;s<r;s++)l.set(s,o,l.get(s,o)+i*e.get(s,n))}for(n=u-1;n>=0;n--){for(o=0;o<h;o++)l.set(n,o,l.get(n,o)/this.Rdiag[n]);for(s=0;s<n;s++)for(o=0;o<h;o++)l.set(s,o,l.get(s,o)-l.get(n,o)*e.get(s,n))}return l.subMatrix(0,u-1,0,h-1)}isFullRank(){let t=this.QR.columns;for(let e=0;e<t;e++)if(0===this.Rdiag[e])return!1;return!0}get upperTriangularMatrix(){let t,e,r=this.QR,s=r.columns,o=new k(s,s);for(t=0;t<s;t++)for(e=0;e<s;e++)t<e?o.set(t,e,r.get(t,e)):t===e?o.set(t,e,this.Rdiag[t]):o.set(t,e,0);return o}get orthogonalMatrix(){let t,e,r,s,o=this.QR,n=o.rows,i=o.columns,h=new k(n,i);for(r=i-1;r>=0;r--){for(t=0;t<n;t++)h.set(t,r,0);for(h.set(r,r,1),e=r;e<i;e++)if(0!==o.get(r,r)){for(s=0,t=r;t<n;t++)s+=o.get(t,r)*h.get(t,e);for(s=-s/o.get(r,r),t=r;t<n;t++)h.set(t,e,h.get(t,e)+s*o.get(t,r))}}return h}}class L{constructor(t,e={}){if((t=F.checkMatrix(t)).isEmpty())throw new Error("Matrix must be non-empty");let r=t.rows,s=t.columns;const{computeLeftSingularVectors:o=!0,computeRightSingularVectors:n=!0,autoTranspose:i=!1}=e;let h,l=Boolean(o),u=Boolean(n),a=!1;if(r<s)if(i){h=t.transpose(),r=h.rows,s=h.columns,a=!0;let e=l;l=u,u=e}else h=t.clone(),console.warn("Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose");else h=t.clone();let c=Math.min(r,s),f=Math.min(r+1,s),m=new Float64Array(f),g=new k(r,c),w=new k(s,s),p=new Float64Array(s),d=new Float64Array(r),y=new Float64Array(f);for(let t=0;t<f;t++)y[t]=t;let M=Math.min(r-1,s),b=Math.max(0,Math.min(s-2,r)),x=Math.max(M,b);for(let t=0;t<x;t++){if(t<M){m[t]=0;for(let e=t;e<r;e++)m[t]=_(m[t],h.get(e,t));if(0!==m[t]){h.get(t,t)<0&&(m[t]=-m[t]);for(let e=t;e<r;e++)h.set(e,t,h.get(e,t)/m[t]);h.set(t,t,h.get(t,t)+1)}m[t]=-m[t]}for(let e=t+1;e<s;e++){if(t<M&&0!==m[t]){let s=0;for(let o=t;o<r;o++)s+=h.get(o,t)*h.get(o,e);s=-s/h.get(t,t);for(let o=t;o<r;o++)h.set(o,e,h.get(o,e)+s*h.get(o,t))}p[e]=h.get(t,e)}if(l&&t<M)for(let e=t;e<r;e++)g.set(e,t,h.get(e,t));if(t<b){p[t]=0;for(let e=t+1;e<s;e++)p[t]=_(p[t],p[e]);if(0!==p[t]){p[t+1]<0&&(p[t]=0-p[t]);for(let e=t+1;e<s;e++)p[e]/=p[t];p[t+1]+=1}if(p[t]=-p[t],t+1<r&&0!==p[t]){for(let e=t+1;e<r;e++)d[e]=0;for(let e=t+1;e<r;e++)for(let r=t+1;r<s;r++)d[e]+=p[r]*h.get(e,r);for(let e=t+1;e<s;e++){let s=-p[e]/p[t+1];for(let o=t+1;o<r;o++)h.set(o,e,h.get(o,e)+s*d[o])}}if(u)for(let e=t+1;e<s;e++)w.set(e,t,p[e])}}let E=Math.min(s,r+1);if(M<s&&(m[M]=h.get(M,M)),r<E&&(m[E-1]=0),b+1<E&&(p[b]=h.get(b,E-1)),p[E-1]=0,l){for(let t=M;t<c;t++){for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}for(let t=M-1;t>=0;t--)if(0!==m[t]){for(let e=t+1;e<c;e++){let s=0;for(let o=t;o<r;o++)s+=g.get(o,t)*g.get(o,e);s=-s/g.get(t,t);for(let o=t;o<r;o++)g.set(o,e,g.get(o,e)+s*g.get(o,t))}for(let e=t;e<r;e++)g.set(e,t,-g.get(e,t));g.set(t,t,1+g.get(t,t));for(let e=0;e<t-1;e++)g.set(e,t,0)}else{for(let e=0;e<r;e++)g.set(e,t,0);g.set(t,t,1)}}if(u)for(let t=s-1;t>=0;t--){if(t<b&&0!==p[t])for(let e=t+1;e<s;e++){let r=0;for(let o=t+1;o<s;o++)r+=w.get(o,t)*w.get(o,e);r=-r/w.get(t+1,t);for(let o=t+1;o<s;o++)w.set(o,e,w.get(o,e)+r*w.get(o,t))}for(let e=0;e<s;e++)w.set(e,t,0);w.set(t,t,1)}let v=E-1,S=0,R=Number.EPSILON;for(;E>0;){let t,e;for(t=E-2;t>=-1&&-1!==t;t--){const e=Number.MIN_VALUE+R*Math.abs(m[t]+Math.abs(m[t+1]));if(Math.abs(p[t])<=e||Number.isNaN(p[t])){p[t]=0;break}}if(t===E-2)e=4;else{let r;for(r=E-1;r>=t&&r!==t;r--){let e=(r!==E?Math.abs(p[r]):0)+(r!==t+1?Math.abs(p[r-1]):0);if(Math.abs(m[r])<=R*e){m[r]=0;break}}r===t?e=3:r===E-1?e=1:(e=2,t=r)}switch(t++,e){case 1:{let e=p[E-2];p[E-2]=0;for(let r=E-2;r>=t;r--){let o=_(m[r],e),n=m[r]/o,i=e/o;if(m[r]=o,r!==t&&(e=-i*p[r-1],p[r-1]=n*p[r-1]),u)for(let t=0;t<s;t++)o=n*w.get(t,r)+i*w.get(t,E-1),w.set(t,E-1,-i*w.get(t,r)+n*w.get(t,E-1)),w.set(t,r,o)}break}case 2:{let e=p[t-1];p[t-1]=0;for(let s=t;s<E;s++){let o=_(m[s],e),n=m[s]/o,i=e/o;if(m[s]=o,e=-i*p[s],p[s]=n*p[s],l)for(let e=0;e<r;e++)o=n*g.get(e,s)+i*g.get(e,t-1),g.set(e,t-1,-i*g.get(e,s)+n*g.get(e,t-1)),g.set(e,s,o)}break}case 3:{const e=Math.max(Math.abs(m[E-1]),Math.abs(m[E-2]),Math.abs(p[E-2]),Math.abs(m[t]),Math.abs(p[t])),o=m[E-1]/e,n=m[E-2]/e,i=p[E-2]/e,h=m[t]/e,a=p[t]/e,c=((n+o)*(n-o)+i*i)/2,f=o*i*(o*i);let d=0;0===c&&0===f||(d=c<0?0-Math.sqrt(c*c+f):Math.sqrt(c*c+f),d=f/(c+d));let y=(h+o)*(h-o)+d,M=h*a;for(let e=t;e<E-1;e++){let o=_(y,M);0===o&&(o=Number.MIN_VALUE);let n=y/o,i=M/o;if(e!==t&&(p[e-1]=o),y=n*m[e]+i*p[e],p[e]=n*p[e]-i*m[e],M=i*m[e+1],m[e+1]=n*m[e+1],u)for(let t=0;t<s;t++)o=n*w.get(t,e)+i*w.get(t,e+1),w.set(t,e+1,-i*w.get(t,e)+n*w.get(t,e+1)),w.set(t,e,o);if(o=_(y,M),0===o&&(o=Number.MIN_VALUE),n=y/o,i=M/o,m[e]=o,y=n*p[e]+i*m[e+1],m[e+1]=-i*p[e]+n*m[e+1],M=i*p[e+1],p[e+1]=n*p[e+1],l&&e<r-1)for(let t=0;t<r;t++)o=n*g.get(t,e)+i*g.get(t,e+1),g.set(t,e+1,-i*g.get(t,e)+n*g.get(t,e+1)),g.set(t,e,o)}p[E-2]=y,S+=1;break}case 4:if(m[t]<=0&&(m[t]=m[t]<0?-m[t]:0,u))for(let e=0;e<=v;e++)w.set(e,t,-w.get(e,t));for(;t<v&&!(m[t]>=m[t+1]);){let e=m[t];if(m[t]=m[t+1],m[t+1]=e,u&&t<s-1)for(let r=0;r<s;r++)e=w.get(r,t+1),w.set(r,t+1,w.get(r,t)),w.set(r,t,e);if(l&&t<r-1)for(let s=0;s<r;s++)e=g.get(s,t+1),g.set(s,t+1,g.get(s,t)),g.set(s,t,e);t++}S=0,E--}}if(a){let t=w;w=g,g=t}this.m=r,this.n=s,this.s=m,this.U=g,this.V=w}solve(t){let e=t,r=this.threshold,s=this.s.length,o=k.zeros(s,s);for(let t=0;t<s;t++)Math.abs(this.s[t])<=r?o.set(t,t,0):o.set(t,t,1/this.s[t]);let n=this.U,i=this.rightSingularVectors,h=i.mmul(o),l=i.rows,u=n.rows,a=k.zeros(l,u);for(let t=0;t<l;t++)for(let e=0;e<u;e++){let r=0;for(let o=0;o<s;o++)r+=h.get(t,o)*n.get(e,o);a.set(t,e,r)}return a.mmul(e)}solveForDiagonal(t){return this.solve(k.diag(t))}inverse(){let t=this.V,e=this.threshold,r=t.rows,s=t.columns,o=new k(r,this.s.length);for(let n=0;n<r;n++)for(let r=0;r<s;r++)Math.abs(this.s[r])>e&&o.set(n,r,t.get(n,r)/this.s[r]);let n=this.U,i=n.rows,h=n.columns,l=new k(r,i);for(let t=0;t<r;t++)for(let e=0;e<i;e++){let r=0;for(let s=0;s<h;s++)r+=o.get(t,s)*n.get(e,s);l.set(t,e,r)}return l}get condition(){return this.s[0]/this.s[Math.min(this.m,this.n)-1]}get norm2(){return this.s[0]}get rank(){let t=Math.max(this.m,this.n)*this.s[0]*Number.EPSILON,e=0,r=this.s;for(let s=0,o=r.length;s<o;s++)r[s]>t&&e++;return e}get diagonal(){return Array.from(this.s)}get threshold(){return Number.EPSILON/2*Math.max(this.m,this.n)*this.s[0]}get leftSingularVectors(){return this.U}get rightSingularVectors(){return this.V}get diagonalMatrix(){return k.diag(this.s)}}function O(t,e=!1){return t=F.checkMatrix(t),e?new L(t).inverse():U(t,k.eye(t.rows))}function U(t,e,r=!1){return t=F.checkMatrix(t),e=F.checkMatrix(e),r?new L(t).solve(e):t.isSquare()?new H(t).solve(e):new $(t).solve(e)}function X(t){if((t=k.checkMatrix(t)).isSquare()){if(0===t.columns)return 1;let e,r,s,o;if(2===t.columns)return e=t.get(0,0),r=t.get(0,1),s=t.get(1,0),o=t.get(1,1),e*o-r*s;if(3===t.columns){let o,n,i;return o=new V(t,[1,2],[1,2]),n=new V(t,[1,2],[0,2]),i=new V(t,[1,2],[0,1]),e=t.get(0,0),r=t.get(0,1),s=t.get(0,2),e*X(o)-r*X(n)+s*X(i)}return new H(t).determinant}throw Error("determinant can only be calculated for a square matrix")}function Y(t,e){let r=[];for(let s=0;s<t;s++)s!==e&&r.push(s);return r}function G(t,e,r,s=1e-9,o=1e-9){if(t>o)return new Array(e.rows+1).fill(0);{let t=e.addRow(r,[0]);for(let e=0;e<t.rows;e++)Math.abs(t.get(e,0))<s&&t.set(e,0,0);return t.to1DArray()}}function Q(t,e={}){const{thresholdValue:r=1e-9,thresholdError:s=1e-9}=e;let o=(t=k.checkMatrix(t)).rows,n=new k(o,o);for(let e=0;e<o;e++){let i=k.columnVector(t.getRow(e)),h=t.subMatrixRow(Y(o,e)).transpose(),l=new L(h).solve(i),u=k.sub(i,h.mmul(l)).abs().max();n.setRow(e,G(u,l,e,r,s))}return n}function W(t,e=Number.EPSILON){if((t=k.checkMatrix(t)).isEmpty())return t.transpose();let r=new L(t,{autoTranspose:!0}),s=r.leftSingularVectors,o=r.rightSingularVectors,n=r.diagonal;for(let t=0;t<n.length;t++)Math.abs(n[t])>e?n[t]=1/n[t]:n[t]=0;return o.mmul(k.diag(n).mmul(s.transpose()))}function B(t,e=t,r={}){t=new k(t);let s=!1;if("object"!=typeof e||k.isMatrix(e)||Array.isArray(e)?e=new k(e):(r=e,e=t,s=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:o=!0}=r;o&&(t=t.center("column"),s||(e=e.center("column")));const n=t.transpose().mmul(e);for(let e=0;e<n.rows;e++)for(let r=0;r<n.columns;r++)n.set(e,r,n.get(e,r)*(1/(t.rows-1)));return n}function J(t,e=t,r={}){t=new k(t);let s=!1;if("object"!=typeof e||k.isMatrix(e)||Array.isArray(e)?e=new k(e):(r=e,e=t,s=!0),t.rows!==e.rows)throw new TypeError("Both matrices must have the same number of rows");const{center:o=!0,scale:n=!0}=r;o&&(t.center("column"),s||e.center("column")),n&&(t.scale("column"),s||e.scale("column"));const i=t.standardDeviation("column",{unbiased:!0}),h=s?i:e.standardDeviation("column",{unbiased:!0}),l=t.transpose().mmul(e);for(let e=0;e<l.rows;e++)for(let r=0;r<l.columns;r++)l.set(e,r,l.get(e,r)*(1/(i[e]*h[r]))*(1/(t.rows-1)));return l}class K{constructor(t,e={}){const{assumeSymmetric:r=!1}=e;if(!(t=F.checkMatrix(t)).isSquare())throw new Error("Matrix is not a square matrix");if(t.isEmpty())throw new Error("Matrix must be non-empty");let s,o,n=t.columns,i=new k(n,n),h=new Float64Array(n),l=new Float64Array(n),u=t,a=!1;if(a=!!r||t.isSymmetric(),a){for(s=0;s<n;s++)for(o=0;o<n;o++)i.set(s,o,u.get(s,o));!function(t,e,r,s){let o,n,i,h,l,u,a,c;for(l=0;l<t;l++)r[l]=s.get(t-1,l);for(h=t-1;h>0;h--){for(c=0,i=0,u=0;u<h;u++)c+=Math.abs(r[u]);if(0===c)for(e[h]=r[h-1],l=0;l<h;l++)r[l]=s.get(h-1,l),s.set(h,l,0),s.set(l,h,0);else{for(u=0;u<h;u++)r[u]/=c,i+=r[u]*r[u];for(o=r[h-1],n=Math.sqrt(i),o>0&&(n=-n),e[h]=c*n,i-=o*n,r[h-1]=o-n,l=0;l<h;l++)e[l]=0;for(l=0;l<h;l++){for(o=r[l],s.set(l,h,o),n=e[l]+s.get(l,l)*o,u=l+1;u<=h-1;u++)n+=s.get(u,l)*r[u],e[u]+=s.get(u,l)*o;e[l]=n}for(o=0,l=0;l<h;l++)e[l]/=i,o+=e[l]*r[l];for(a=o/(i+i),l=0;l<h;l++)e[l]-=a*r[l];for(l=0;l<h;l++){for(o=r[l],n=e[l],u=l;u<=h-1;u++)s.set(u,l,s.get(u,l)-(o*e[u]+n*r[u]));r[l]=s.get(h-1,l),s.set(h,l,0)}}r[h]=i}for(h=0;h<t-1;h++){if(s.set(t-1,h,s.get(h,h)),s.set(h,h,1),i=r[h+1],0!==i){for(u=0;u<=h;u++)r[u]=s.get(u,h+1)/i;for(l=0;l<=h;l++){for(n=0,u=0;u<=h;u++)n+=s.get(u,h+1)*s.get(u,l);for(u=0;u<=h;u++)s.set(u,l,s.get(u,l)-n*r[u])}}for(u=0;u<=h;u++)s.set(u,h+1,0)}for(l=0;l<t;l++)r[l]=s.get(t-1,l),s.set(t-1,l,0);s.set(t-1,t-1,1),e[0]=0}(n,l,h,i),function(t,e,r,s){let o,n,i,h,l,u,a,c,f,m,g,w,p,d,y,M,b;for(i=1;i<t;i++)e[i-1]=e[i];e[t-1]=0;let x=0,E=0,v=Number.EPSILON;for(u=0;u<t;u++){for(E=Math.max(E,Math.abs(r[u])+Math.abs(e[u])),a=u;a<t&&!(Math.abs(e[a])<=v*E);)a++;if(a>u){b=0;do{for(b+=1,o=r[u],c=(r[u+1]-o)/(2*e[u]),f=_(c,1),c<0&&(f=-f),r[u]=e[u]/(c+f),r[u+1]=e[u]*(c+f),m=r[u+1],n=o-r[u],i=u+2;i<t;i++)r[i]-=n;for(x+=n,c=r[a],g=1,w=g,p=g,d=e[u+1],y=0,M=0,i=a-1;i>=u;i--)for(p=w,w=g,M=y,o=g*e[i],n=g*c,f=_(c,e[i]),e[i+1]=y*f,y=e[i]/f,g=c/f,c=g*r[i]-y*o,r[i+1]=n+y*(g*o+y*r[i]),l=0;l<t;l++)n=s.get(l,i+1),s.set(l,i+1,y*s.get(l,i)+g*n),s.set(l,i,g*s.get(l,i)-y*n);c=-y*M*p*d*e[u]/m,e[u]=y*c,r[u]=g*c}while(Math.abs(e[u])>v*E)}r[u]=r[u]+x,e[u]=0}for(i=0;i<t-1;i++){for(l=i,c=r[i],h=i+1;h<t;h++)r[h]<c&&(l=h,c=r[h]);if(l!==i)for(r[l]=r[i],r[i]=c,h=0;h<t;h++)c=s.get(h,i),s.set(h,i,s.get(h,l)),s.set(h,l,c)}}(n,l,h,i)}else{let t=new k(n,n),e=new Float64Array(n);for(o=0;o<n;o++)for(s=0;s<n;s++)t.set(s,o,u.get(s,o));!function(t,e,r,s){let o,n,i,h,l,u,a,c=t-1;for(u=1;u<=c-1;u++){for(a=0,h=u;h<=c;h++)a+=Math.abs(e.get(h,u-1));if(0!==a){for(i=0,h=c;h>=u;h--)r[h]=e.get(h,u-1)/a,i+=r[h]*r[h];for(n=Math.sqrt(i),r[u]>0&&(n=-n),i-=r[u]*n,r[u]=r[u]-n,l=u;l<t;l++){for(o=0,h=c;h>=u;h--)o+=r[h]*e.get(h,l);for(o/=i,h=u;h<=c;h++)e.set(h,l,e.get(h,l)-o*r[h])}for(h=0;h<=c;h++){for(o=0,l=c;l>=u;l--)o+=r[l]*e.get(h,l);for(o/=i,l=u;l<=c;l++)e.set(h,l,e.get(h,l)-o*r[l])}r[u]=a*r[u],e.set(u,u-1,a*n)}}for(h=0;h<t;h++)for(l=0;l<t;l++)s.set(h,l,h===l?1:0);for(u=c-1;u>=1;u--)if(0!==e.get(u,u-1)){for(h=u+1;h<=c;h++)r[h]=e.get(h,u-1);for(l=u;l<=c;l++){for(n=0,h=u;h<=c;h++)n+=r[h]*s.get(h,l);for(n=n/r[u]/e.get(u,u-1),h=u;h<=c;h++)s.set(h,l,s.get(h,l)+n*r[h])}}}(n,t,e,i),function(t,e,r,s,o){let n,i,h,l,u,a,c,f,m,g,w,p,d,y,M,b=t-1,x=t-1,E=Number.EPSILON,v=0,S=0,k=0,R=0,I=0,T=0,A=0,q=0;for(n=0;n<t;n++)for((n<0||n>x)&&(r[n]=o.get(n,n),e[n]=0),i=Math.max(n-1,0);i<t;i++)S+=Math.abs(o.get(n,i));for(;b>=0;){for(l=b;l>0&&(T=Math.abs(o.get(l-1,l-1))+Math.abs(o.get(l,l)),0===T&&(T=S),!(Math.abs(o.get(l,l-1))<E*T));)l--;if(l===b)o.set(b,b,o.get(b,b)+v),r[b]=o.get(b,b),e[b]=0,b--,q=0;else if(l===b-1){if(c=o.get(b,b-1)*o.get(b-1,b),k=(o.get(b-1,b-1)-o.get(b,b))/2,R=k*k+c,A=Math.sqrt(Math.abs(R)),o.set(b,b,o.get(b,b)+v),o.set(b-1,b-1,o.get(b-1,b-1)+v),f=o.get(b,b),R>=0){for(A=k>=0?k+A:k-A,r[b-1]=f+A,r[b]=r[b-1],0!==A&&(r[b]=f-c/A),e[b-1]=0,e[b]=0,f=o.get(b,b-1),T=Math.abs(f)+Math.abs(A),k=f/T,R=A/T,I=Math.sqrt(k*k+R*R),k/=I,R/=I,i=b-1;i<t;i++)A=o.get(b-1,i),o.set(b-1,i,R*A+k*o.get(b,i)),o.set(b,i,R*o.get(b,i)-k*A);for(n=0;n<=b;n++)A=o.get(n,b-1),o.set(n,b-1,R*A+k*o.get(n,b)),o.set(n,b,R*o.get(n,b)-k*A);for(n=0;n<=x;n++)A=s.get(n,b-1),s.set(n,b-1,R*A+k*s.get(n,b)),s.set(n,b,R*s.get(n,b)-k*A)}else r[b-1]=f+k,r[b]=f+k,e[b-1]=A,e[b]=-A;b-=2,q=0}else{if(f=o.get(b,b),m=0,c=0,l<b&&(m=o.get(b-1,b-1),c=o.get(b,b-1)*o.get(b-1,b)),10===q){for(v+=f,n=0;n<=b;n++)o.set(n,n,o.get(n,n)-f);T=Math.abs(o.get(b,b-1))+Math.abs(o.get(b-1,b-2)),f=m=.75*T,c=-.4375*T*T}if(30===q&&(T=(m-f)/2,T=T*T+c,T>0)){for(T=Math.sqrt(T),m<f&&(T=-T),T=f-c/((m-f)/2+T),n=0;n<=b;n++)o.set(n,n,o.get(n,n)-T);v+=T,f=m=c=.964}for(q+=1,u=b-2;u>=l&&(A=o.get(u,u),I=f-A,T=m-A,k=(I*T-c)/o.get(u+1,u)+o.get(u,u+1),R=o.get(u+1,u+1)-A-I-T,I=o.get(u+2,u+1),T=Math.abs(k)+Math.abs(R)+Math.abs(I),k/=T,R/=T,I/=T,u!==l)&&!(Math.abs(o.get(u,u-1))*(Math.abs(R)+Math.abs(I))<E*(Math.abs(k)*(Math.abs(o.get(u-1,u-1))+Math.abs(A)+Math.abs(o.get(u+1,u+1)))));)u--;for(n=u+2;n<=b;n++)o.set(n,n-2,0),n>u+2&&o.set(n,n-3,0);for(h=u;h<=b-1&&(y=h!==b-1,h!==u&&(k=o.get(h,h-1),R=o.get(h+1,h-1),I=y?o.get(h+2,h-1):0,f=Math.abs(k)+Math.abs(R)+Math.abs(I),0!==f&&(k/=f,R/=f,I/=f)),0!==f);h++)if(T=Math.sqrt(k*k+R*R+I*I),k<0&&(T=-T),0!==T){for(h!==u?o.set(h,h-1,-T*f):l!==u&&o.set(h,h-1,-o.get(h,h-1)),k+=T,f=k/T,m=R/T,A=I/T,R/=k,I/=k,i=h;i<t;i++)k=o.get(h,i)+R*o.get(h+1,i),y&&(k+=I*o.get(h+2,i),o.set(h+2,i,o.get(h+2,i)-k*A)),o.set(h,i,o.get(h,i)-k*f),o.set(h+1,i,o.get(h+1,i)-k*m);for(n=0;n<=Math.min(b,h+3);n++)k=f*o.get(n,h)+m*o.get(n,h+1),y&&(k+=A*o.get(n,h+2),o.set(n,h+2,o.get(n,h+2)-k*I)),o.set(n,h,o.get(n,h)-k),o.set(n,h+1,o.get(n,h+1)-k*R);for(n=0;n<=x;n++)k=f*s.get(n,h)+m*s.get(n,h+1),y&&(k+=A*s.get(n,h+2),s.set(n,h+2,s.get(n,h+2)-k*I)),s.set(n,h,s.get(n,h)-k),s.set(n,h+1,s.get(n,h+1)-k*R)}}}if(0!==S){for(b=t-1;b>=0;b--)if(k=r[b],R=e[b],0===R)for(l=b,o.set(b,b,1),n=b-1;n>=0;n--){for(c=o.get(n,n)-k,I=0,i=l;i<=b;i++)I+=o.get(n,i)*o.get(i,b);if(e[n]<0)A=c,T=I;else if(l=n,0===e[n]?o.set(n,b,0!==c?-I/c:-I/(E*S)):(f=o.get(n,n+1),m=o.get(n+1,n),R=(r[n]-k)*(r[n]-k)+e[n]*e[n],a=(f*T-A*I)/R,o.set(n,b,a),o.set(n+1,b,Math.abs(f)>Math.abs(A)?(-I-c*a)/f:(-T-m*a)/A)),a=Math.abs(o.get(n,b)),E*a*a>1)for(i=n;i<=b;i++)o.set(i,b,o.get(i,b)/a)}else if(R<0)for(l=b-1,Math.abs(o.get(b,b-1))>Math.abs(o.get(b-1,b))?(o.set(b-1,b-1,R/o.get(b,b-1)),o.set(b-1,b,-(o.get(b,b)-k)/o.get(b,b-1))):(M=Z(0,-o.get(b-1,b),o.get(b-1,b-1)-k,R),o.set(b-1,b-1,M[0]),o.set(b-1,b,M[1])),o.set(b,b-1,0),o.set(b,b,1),n=b-2;n>=0;n--){for(g=0,w=0,i=l;i<=b;i++)g+=o.get(n,i)*o.get(i,b-1),w+=o.get(n,i)*o.get(i,b);if(c=o.get(n,n)-k,e[n]<0)A=c,I=g,T=w;else if(l=n,0===e[n]?(M=Z(-g,-w,c,R),o.set(n,b-1,M[0]),o.set(n,b,M[1])):(f=o.get(n,n+1),m=o.get(n+1,n),p=(r[n]-k)*(r[n]-k)+e[n]*e[n]-R*R,d=2*(r[n]-k)*R,0===p&&0===d&&(p=E*S*(Math.abs(c)+Math.abs(R)+Math.abs(f)+Math.abs(m)+Math.abs(A))),M=Z(f*I-A*g+R*w,f*T-A*w-R*g,p,d),o.set(n,b-1,M[0]),o.set(n,b,M[1]),Math.abs(f)>Math.abs(A)+Math.abs(R)?(o.set(n+1,b-1,(-g-c*o.get(n,b-1)+R*o.get(n,b))/f),o.set(n+1,b,(-w-c*o.get(n,b)-R*o.get(n,b-1))/f)):(M=Z(-I-m*o.get(n,b-1),-T-m*o.get(n,b),A,R),o.set(n+1,b-1,M[0]),o.set(n+1,b,M[1]))),a=Math.max(Math.abs(o.get(n,b-1)),Math.abs(o.get(n,b))),E*a*a>1)for(i=n;i<=b;i++)o.set(i,b-1,o.get(i,b-1)/a),o.set(i,b,o.get(i,b)/a)}for(n=0;n<t;n++)if(n<0||n>x)for(i=n;i<t;i++)s.set(n,i,o.get(n,i));for(i=t-1;i>=0;i--)for(n=0;n<=x;n++){for(A=0,h=0;h<=Math.min(i,x);h++)A+=s.get(n,h)*o.get(h,i);s.set(n,i,A)}}}(n,l,h,i,t)}this.n=n,this.e=l,this.d=h,this.V=i}get realEigenvalues(){return Array.from(this.d)}get imaginaryEigenvalues(){return Array.from(this.e)}get eigenvectorMatrix(){return this.V}get diagonalMatrix(){let t,e,r=this.n,s=this.e,o=this.d,n=new k(r,r);for(t=0;t<r;t++){for(e=0;e<r;e++)n.set(t,e,0);n.set(t,t,o[t]),s[t]>0?n.set(t,t+1,s[t]):s[t]<0&&n.set(t,t-1,s[t])}return n}}function Z(t,e,r,s){let o,n;return Math.abs(r)>Math.abs(s)?(o=s/r,n=r+o*s,[(t+o*e)/n,(e-o*t)/n]):(o=r/s,n=s+o*r,[(o*t+e)/n,(o*e-t)/n])}class tt{constructor(t){if(!(t=F.checkMatrix(t)).isSymmetric())throw new Error("Matrix is not symmetric");let e,r,s,o=t,n=o.rows,i=new k(n,n),h=!0;for(r=0;r<n;r++){let t=0;for(s=0;s<r;s++){let n=0;for(e=0;e<s;e++)n+=i.get(s,e)*i.get(r,e);n=(o.get(r,s)-n)/i.get(s,s),i.set(r,s,n),t+=n*n}for(t=o.get(r,r)-t,h&=t>0,i.set(r,r,Math.sqrt(Math.max(t,0))),s=r+1;s<n;s++)i.set(r,s,0)}this.L=i,this.positiveDefinite=Boolean(h)}isPositiveDefinite(){return this.positiveDefinite}solve(t){t=F.checkMatrix(t);let e=this.L,r=e.rows;if(t.rows!==r)throw new Error("Matrix dimensions do not match");if(!1===this.isPositiveDefinite())throw new Error("Matrix is not positive definite");let s,o,n,i=t.columns,h=t.clone();for(n=0;n<r;n++)for(o=0;o<i;o++){for(s=0;s<n;s++)h.set(n,o,h.get(n,o)-h.get(s,o)*e.get(n,s));h.set(n,o,h.get(n,o)/e.get(n,n))}for(n=r-1;n>=0;n--)for(o=0;o<i;o++){for(s=n+1;s<r;s++)h.set(n,o,h.get(n,o)-h.get(s,o)*e.get(s,n));h.set(n,o,h.get(n,o)/e.get(n,n))}return h}get lowerTriangularMatrix(){return this.L}}class et{constructor(t,e={}){t=F.checkMatrix(t);let{Y:r}=e;const{scaleScores:s=!1,maxIterations:o=1e3,terminationCriteria:n=1e-10}=e;let i;if(r){if(r=Array.isArray(r)&&"number"==typeof r[0]?k.columnVector(r):F.checkMatrix(r),!r.isColumnVector()||r.rows!==t.rows)throw new Error("Y must be a column vector of length X.rows");i=r}else i=t.getColumnVector(0);let h,l,u,a,c=1;for(let e=0;e<o&&c>n;e++)u=t.transpose().mmul(i).div(i.transpose().mmul(i).get(0,0)),u=u.div(u.norm()),h=t.mmul(u).div(u.transpose().mmul(u).get(0,0)),e>0&&(c=h.clone().sub(a).pow(2).sum()),a=h.clone(),r?(l=r.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0)),l=l.div(l.norm()),i=r.mmul(l).div(l.transpose().mmul(l).get(0,0))):i=h;if(r){let e=t.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0));e=e.div(e.norm());let s=t.clone().sub(h.clone().mmul(e.transpose())),o=i.transpose().mmul(h).div(h.transpose().mmul(h).get(0,0)),n=r.clone().sub(h.clone().mulS(o.get(0,0)).mmul(l.transpose()));this.t=h,this.p=e.transpose(),this.w=u.transpose(),this.q=l,this.u=i,this.s=h.transpose().mmul(h),this.xResidual=s,this.yResidual=n,this.betas=o}else this.w=u.transpose(),this.s=h.transpose().mmul(h).sqrt(),this.t=s?h.clone().div(this.s.get(0,0)):h,this.xResidual=t.sub(h.mmul(u.transpose()))}}},842:(t,e,r)=>{"use strict";r.d(e,{Z:()=>s});class s{constructor(t=[],e=o){if(this.data=t,this.length=this.data.length,this.compare=e,this.length>0)for(let t=(this.length>>1)-1;t>=0;t--)this._down(t)}push(t){this.data.push(t),this.length++,this._up(this.length-1)}pop(){if(0===this.length)return;const t=this.data[0],e=this.data.pop();return this.length--,this.length>0&&(this.data[0]=e,this._down(0)),t}peek(){return this.data[0]}_up(t){const{data:e,compare:r}=this,s=e[t];for(;t>0;){const o=t-1>>1,n=e[o];if(r(s,n)>=0)break;e[t]=n,t=o}e[t]=s}_down(t){const{data:e,compare:r}=this,s=this.length>>1,o=e[t];for(;t<s;){let s=1+(t<<1),n=e[s];const i=s+1;if(i<this.length&&r(e[i],n)<0&&(s=i,n=e[i]),r(n,o)>=0)break;e[t]=n,t=s}e[t]=o}}function o(t,e){return t<e?-1:t>e?1:0}},902:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),{solveHomography:n}=r(450);t.exports={estimate:({screenCoords:t,worldCoords:e,projectionTransform:r})=>{const i=n(e.map((t=>[t.x,t.y])),t.map((t=>[t.x,t.y]))),h=new s([[i[0],i[1],i[2]],[i[3],i[4],i[5]],[i[6],i[7],i[8]]]),l=new s(r),u=o(l).mmul(h).to1DArray(),a=Math.sqrt(u[0]*u[0]+u[3]*u[3]+u[6]*u[6]),c=Math.sqrt(u[1]*u[1]+u[4]*u[4]+u[7]*u[7]),f=(a+c)/2,m=[];m[0]=u[0]/a,m[3]=u[3]/a,m[6]=u[6]/a,m[1]=u[1]/c,m[4]=u[4]/c,m[7]=u[7]/c,m[2]=m[3]*m[7]-m[6]*m[4],m[5]=m[6]*m[1]-m[0]*m[7],m[8]=m[0]*m[4]-m[1]*m[3];const g=Math.sqrt(m[2]*m[2]+m[5]*m[5]+m[8]*m[8]);m[2]/=g,m[5]/=g,m[8]/=g;const w=[];return w[0]=u[2]/f,w[1]=u[5]/f,w[2]=u[8]/f,[[m[0],m[1],m[2],w[0]],[m[3],m[4],m[5],w[1]],[m[6],m[7],m[8],w[2]]]}}},421:(t,e,r)=>{const{estimate:s}=r(902),{refineEstimate:o}=r(269);t.exports={Estimator:class{constructor(t){this.projectionTransform=t}estimate({screenCoords:t,worldCoords:e}){return s({screenCoords:t,worldCoords:e,projectionTransform:this.projectionTransform})}refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r}){return o({initialModelViewTransform:t,worldCoords:e,screenCoords:r,projectionTransform:this.projectionTransform})}}}},269:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),{normalizePoints:n,applyModelViewProjectionTransform:i,buildModelViewProjectionTransform:h,computeScreenCoordiate:l}=r(420);let u=[[],[],[]],a=[[],[]],c=[[],[],[]];const f=({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:s,inlierProb:o})=>{const n=o<1;let i=t,u=0,a=0,c=new Array(r.length),f=new Array(r.length),p=new Array(r.length),d=new Array(r.length);for(let t=0;t<=10;t++){const y=h(e,i);for(let t=0;t<r.length;t++){const e=l(y,r[t].x,r[t].y,r[t].z),o=s[t].x-e.x,n=s[t].y-e.y;p[t]=o,d[t]=n,c[t]=o*o+n*n}let M;if(a=0,n){const t=Math.max(3,Math.floor(r.length*o)-1);for(let t=0;t<r.length;t++)f[t]=c[t];f.sort(((t,e)=>t-e)),M=Math.max(4*f[t],16);for(let t=0;t<r.length;t++)f[t]>M?a+=M/6:a+=M/6*(1-(1-f[t]/M)*(1-f[t]/M)*(1-f[t]/M))}else for(let t=0;t<r.length;t++)a+=c[t];if(a/=r.length,a<.1)break;if(t>0&&a/u>.99)break;if(10===t)break;u=a;const b=[],x=[];for(let t=0;t<r.length;t++){if(n&&c[t]>M)continue;const s=w({modelViewProjectionTransform:y,modelViewTransform:i,projectionTransform:e,worldCoord:r[t]});if(n){const e=(1-c[t]/M)*(1-c[t]/M);for(let t=0;t<2;t++)for(let r=0;r<6;r++)s[t][r]*=e;b.push([p[t]*e]),b.push([d[t]*e])}else b.push([p[t]]),b.push([d[t]]);for(let t=0;t<s.length;t++)x.push(s[t])}const E=g({dU:b,J_U_S:x});if(null===E)break;i=m({modelViewTransform:i,dS:E})}return{modelViewTransform:i,err:a}},m=({modelViewTransform:t,dS:e})=>{let r,s,o,n=e[0]*e[0]+e[1]*e[1]+e[2]*e[2];n<1e-6?(r=1,s=0,o=0,n=0):(n=Math.sqrt(n),r=e[0]/n,s=e[1]/n,o=e[2]/n);const i=Math.cos(n),h=Math.sin(n),l=1-i;u[0][0]=r*r*l+i,u[0][1]=r*s*l-o*h,u[0][2]=r*o*l+s*h,u[0][3]=e[3],u[1][0]=s*r*l+o*h,u[1][1]=s*s*l+i,u[1][2]=s*o*l-r*h,u[1][3]=e[4],u[2][0]=o*r*l-s*h,u[2][1]=o*s*l+r*h,u[2][2]=o*o*l+i,u[2][3]=e[5];const a=[[],[],[]];for(let e=0;e<3;e++){for(let r=0;r<4;r++)a[e][r]=t[e][0]*u[0][r]+t[e][1]*u[1][r]+t[e][2]*u[2][r];a[e][3]+=t[e][3]}return a},g=({dU:t,J_U_S:e})=>{const r=new s(e),n=new s(t),i=r.transpose(),h=i.mmul(r),l=i.mmul(n);let u;try{u=o(h)}catch(t){return null}return u.mmul(l).to1DArray()},w=({modelViewProjectionTransform:t,modelViewTransform:e,projectionTransform:r,worldCoord:s})=>{const o=e,{x:n,y:h,z:l}=s,u=i(t,n,h,l),f=u.z*u.z;a[0][0]=r[0][0]*u.z/f,a[0][1]=r[0][1]*u.z/f,a[0][2]=(r[0][2]*u.z-r[2][2]*u.x)/f,a[1][0]=r[1][0]*u.z/f,a[1][1]=r[1][1]*u.z/f,a[1][2]=(r[1][2]*u.z-r[2][2]*u.y)/f,c[0][0]=o[0][2]*h,c[0][1]=-o[0][2]*n,c[0][2]=o[0][1]*n-o[0][0]*h,c[0][3]=o[0][0],c[0][4]=o[0][1],c[0][5]=o[0][2],c[1][0]=o[1][2]*h,c[1][1]=-o[1][2]*n,c[1][2]=o[1][1]*n-o[1][0]*h,c[1][3]=o[1][0],c[1][4]=o[1][1],c[1][5]=o[1][2],c[2][0]=o[2][2]*h,c[2][1]=-o[2][2]*n,c[2][2]=o[2][1]*n-o[2][0]*h,c[2][3]=o[2][0],c[2][4]=o[2][1],c[2][5]=o[2][2];const m=[[],[]];for(let t=0;t<2;t++)for(let e=0;e<6;e++){m[t][e]=0;for(let r=0;r<3;r++)m[t][e]+=a[t][r]*c[r][e]}return m};t.exports={refineEstimate:({initialModelViewTransform:t,projectionTransform:e,worldCoords:r,screenCoords:s})=>{let o=0,n=0;for(let t=0;t<r.length;t++)o+=r[t].x,n+=r[t].y;o/=r.length,n/=r.length;const i=[];for(let t=0;t<r.length;t++)i.push({x:r[t].x-o,y:r[t].y-n,z:r[t].z});const h=[[],[],[]];for(let e=0;e<3;e++)for(let r=0;r<3;r++)h[e][r]=t[e][r];h[0][3]=t[0][0]*o+t[0][1]*n+t[0][3],h[1][3]=t[1][0]*o+t[1][1]*n+t[1][3],h[2][3]=t[2][0]*o+t[2][1]*n+t[2][3];const l=[1,.8,.6,.4,0];let u=h,a=null;for(let t=0;t<l.length;t++){const r=f({initialModelViewTransform:u,projectionTransform:e,worldCoords:i,screenCoords:s,inlierProb:l[t]});if(u=r.modelViewTransform,r.err<5){a=u;break}}return null===a?null:(a[0][3]=a[0][3]-a[0][0]*o-a[0][1]*n,a[1][3]=a[1][3]-a[1][0]*o-a[1][1]*n,a[2][3]=a[2][3]-a[2][0]*o-a[2][1]*n,a)}}},420:t=>{const e=(t,e,r,s)=>({x:t[0][0]*e+t[0][1]*r+t[0][3],y:t[1][0]*e+t[1][1]*r+t[1][3],z:t[2][0]*e+t[2][1]*r+t[2][3]});t.exports={buildModelViewProjectionTransform:(t,e)=>[[t[0][0]*e[0][0]+t[0][2]*e[2][0],t[0][0]*e[0][1]+t[0][2]*e[2][1],t[0][0]*e[0][2]+t[0][2]*e[2][2],t[0][0]*e[0][3]+t[0][2]*e[2][3]],[t[1][1]*e[1][0]+t[1][2]*e[2][0],t[1][1]*e[1][1]+t[1][2]*e[2][1],t[1][1]*e[1][2]+t[1][2]*e[2][2],t[1][1]*e[1][3]+t[1][2]*e[2][3]],[e[2][0],e[2][1],e[2][2],e[2][3]]],applyModelViewProjectionTransform:e,computeScreenCoordiate:(t,r,s,o)=>{const{x:n,y:i,z:h}=e(t,r,s);return{x:n/h,y:i/h}}}},233:t=>{t.exports={compute:t=>{const{v1:e,v2:r}=t;let s=0;for(let t=0;t<e.length;t++){let i=(e[t]^r[t])>>>0;s+=(n=void 0,((n=((n=((n=((n=(o=i)-(o>>1&1431655765))>>2&858993459)+(858993459&n))>>4)+n&252645135)>>8)+n&16711935)>>16)+n&65535)}var o,n;return s}}},934:t=>{const e=({querypoint:t,keypoint:e,keycenterX:r,keycenterY:s,scaleOneOverLogK:o})=>{let n=t.angle-e.angle;n<=-Math.PI?n+=2*Math.PI:n>Math.PI&&(n-=2*Math.PI);const i=t.scale/e.scale,h=i*Math.cos(n),l=i*Math.sin(n),u=[h,-l,l,h],a=[u[0]*e.x+u[1]*e.y,u[2]*e.x+u[3]*e.y],c=t.x-a[0],f=t.y-a[1];return{x:u[0]*r+u[1]*s+c,y:u[2]*r+u[3]*s+f,angle:n,scale:Math.log(i)*o}};t.exports={computeHoughMatches:t=>{const{keywidth:r,keyheight:s,querywidth:o,queryheight:n,matches:i}=t,h=1.2*o,l=-h,u=1.2*n,a=-u,c=12,f=1/Math.log(10),m=Math.max(r,s),g=Math.floor(r/2),w=Math.floor(s/2),p=[];for(let t=0;t<i.length;t++){const e=i[t].querypoint.scale,r=i[t].keypoint.scale;0==r&&console.log("ERROR divide zero");const s=e/r;p.push(s*m)}p.sort(((t,e)=>t-e));const d=.25*p[Math.floor(p.length/2)-(p.length%2==0?1:0)-1],y=Math.max(5,Math.ceil((h-l)/d)),M=Math.max(5,Math.ceil((u-a)/d)),b=y*M,x=b*c,E=[],v=[],S={};for(let t=0;t<i.length;t++){const r=i[t].querypoint,s=i[t].keypoint,{x:o,y:n,scale:m,angle:p}=e({querypoint:r,keypoint:s,keycenterX:g,keycenterY:w,scaleOneOverLogK:f});if(o<l||o>=h||n<a||n>=u||p<=-Math.PI||p>Math.PI||m<-1||m>=1){E[t]=!1;continue}let d=y*(o-l)/(h-l),k=M*(n-a)/(u-a),R=c*(p+Math.PI)/(2*Math.PI),I=10*(m- -1)/2;v[t]={binX:d,binY:k,binAngle:R,binScale:I};let T=Math.floor(d-.5),A=Math.floor(k-.5),q=Math.floor(I-.5),C=(Math.floor(R-.5)+c)%c;if(T<0||T+1>=y||A<0||A+1>=M||q<0||q+1>=10)E[t]=!1;else{for(let t=0;t<2;t++){let e=T+t;for(let t=0;t<2;t++){let r=A+t;for(let t=0;t<2;t++){let s=(C+t)%c;for(let t=0;t<2;t++){const o=e+r*y+s*b+(q+t)*x;void 0===S[o]&&(S[o]=0),S[o]+=1}}}}E[t]=!0}}let k=0,R=-1;if(Object.keys(S).forEach((t=>{S[t]>k&&(k=S[t],R=t)})),k<3)return[];const I=Math.floor(R%x%b%y),T=Math.floor((R-I)%x%b/y),A=Math.floor((R-I-T*y)%x/b),q=Math.floor((R-I-T*y-A*b)/x),C=[];for(let t=0;t<i.length;t++){if(!E[t])continue;const e=v[t];if(Math.abs(e.binX-(I+.5))>=1)continue;if(Math.abs(e.binY-(T+.5))>=1)continue;if(Math.abs(e.binScale-(q+.5))>=1)continue;const r=Math.abs(e.binAngle-(A+.5));Math.min(r,c-r)>=1||C.push(i[t])}return C}}},582:(t,e,r)=>{const{match:s}=r(492);t.exports={Matcher:class{constructor(t,e,r=!1){this.queryWidth=t,this.queryHeight=e,this.debugMode=r}matchDetection(t,e){let r={frames:[]},o=null;for(let n=0;n<t.length;n++){const{H:i,matches:h,debugExtra:l}=s({keyframe:t[n],querypoints:e,querywidth:this.queryWidth,queryheight:this.queryHeight,debugMode:this.debugMode});r.frames.push(l),i&&(null===o||o.matches.length<h.length)&&(o={keyframeIndex:n,H:i,matches:h})}if(null===o)return{keyframeIndex:-1,debugExtra:r};const n=[],i=[],h=t[o.keyframeIndex];for(let t=0;t<o.matches.length;t++){const e=o.matches[t].querypoint,r=o.matches[t].keypoint;n.push({x:e.x,y:e.y}),i.push({x:(r.x+.5)/h.scale,y:(r.y+.5)/h.scale,z:0})}return{screenCoords:n,worldCoords:i,keyframeIndex:o.keyframeIndex,debugExtra:r}}}}},492:(t,e,r)=>{const s=r(842).Z,{compute:o}=r(233),{computeHoughMatches:n}=r(934),{computeHomography:i}=r(838),{multiplyPointHomographyInhomogenous:h,matrixInverse33:l}=r(289),u=({node:t,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i})=>{if(t.leaf){for(let e=0;e<t.pointIndexes.length;e++)n.push(t.pointIndexes[e]);return}const h=[];for(let s=0;s<t.children.length;s++){const n=t.children[s].centerPointIndex,i=o({v1:e[n].descriptors,v2:r.descriptors});h.push(i)}let l=Number.MAX_SAFE_INTEGER;for(let e=0;e<t.children.length;e++)l=Math.min(l,h[e]);for(let e=0;e<t.children.length;e++)h[e]!==l&&s.push({node:t.children[e],d:h[e]});for(let o=0;o<t.children.length;o++)h[o]===l&&u({node:t.children[o],keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i});if(i<8&&s.length>0){const{node:t,d:o}=s.pop();u({node:t,keypoints:e,querypoint:r,queue:s,keypointIndexes:n,numPop:i+=1})}},a=t=>{const{H:e,matches:r,threshold:s}=t,o=s*s,n=[];for(let t=0;t<r.length;t++){const s=r[t].querypoint,i=r[t].keypoint,l=h([i.x,i.y],e);(l[0]-s.x)*(l[0]-s.x)+(l[1]-s.y)*(l[1]-s.y)<=o&&n.push(r[t])}return n};t.exports={match:({keyframe:t,querypoints:e,querywidth:r,queryheight:c,debugMode:f})=>{let m={};const g=[];for(let r=0;r<e.length;r++){const n=e[r],i=n.maxima?t.maximaPoints:t.minimaPoints;if(0===i.length)continue;const h=n.maxima?t.maximaPointsCluster.rootNode:t.minimaPointsCluster.rootNode,l=[],a=new s([],((t,e)=>t.d-e.d));u({node:h,keypoints:i,querypoint:n,queue:a,keypointIndexes:l,numPop:0});let c=-1,f=Number.MAX_SAFE_INTEGER,m=Number.MAX_SAFE_INTEGER;for(let t=0;t<l.length;t++){const e=i[l[t]],r=o({v1:e.descriptors,v2:n.descriptors});r<f?(m=f,f=r,c=l[t]):r<m&&(m=r)}-1!==c&&(m===Number.MAX_SAFE_INTEGER||1*f/m<.7)&&g.push({querypoint:n,keypoint:i[c]})}if(f&&(m.matches=g),g.length<6)return{debugExtra:m};const w=n({keywidth:t.width,keyheight:t.height,querywidth:r,queryheight:c,matches:g});f&&(m.houghMatches=w);const p=i({srcPoints:w.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:w.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:t});if(null===p)return{debugExtra:m};const d=a({H:p,matches:w,threshold:3});if(f&&(m.inlierMatches=d),d.length<6)return{debugExtra:m};const y=l(p,1e-5),M=[];for(let r=0;r<e.length;r++){const s=e[r],n=h([s.x,s.y],y);let i=-1,l=Number.MAX_SAFE_INTEGER,u=Number.MAX_SAFE_INTEGER;const a=s.maxima?t.maximaPoints:t.minimaPoints;for(let t=0;t<a.length;t++){const e=a[t];if((e.x-n[0])*(e.x-n[0])+(e.y-n[1])*(e.y-n[1])>100)continue;const r=o({v1:e.descriptors,v2:s.descriptors});r<l?(u=l,l=r,i=t):r<u&&(u=r)}-1!==i&&(u===Number.MAX_SAFE_INTEGER||1*l/u<.7)&&M.push({querypoint:s,keypoint:a[i]})}f&&(m.matches2=M);const b=n({keywidth:t.width,keyheight:t.height,querywidth:r,queryheight:c,matches:M});f&&(m.houghMatches2=b);const x=i({srcPoints:b.map((t=>[t.keypoint.x,t.keypoint.y])),dstPoints:b.map((t=>[t.querypoint.x,t.querypoint.y])),keyframe:t});if(null===x)return{debugExtra:m};const E=a({H:x,matches:b,threshold:3});return f&&(m.inlierMatches2=E),{H:x,matches:E,debugExtra:m}}}},838:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),{createRandomizer:n}=r(48),{quadrilateralConvex:i,matrixInverse33:h,smallestTriangleArea:l,multiplyPointHomographyInhomogenous:u,checkThreePointsConsistent:a,checkFourPointsConsistent:c,determinant:f}=r(289),{solveHomography:m}=r(450),g=({H:t,testPoints:e,keyframe:r})=>{const s=h(t,1e-5);if(null===s)return!1;const o=[];for(let t=0;t<e.length;t++)o.push(u(e[t],s));return!(l(o[0],o[1],o[2],o[3])<r.width*r.height*1e-4||!i(o[0],o[1],o[2],o[3]))},w=({inH:t})=>{const e=1/t[8],r=[];for(let s=0;s<8;s++)r[s]=t[s]*e;return r[8]=1,r},p=({H:t,srcPoint:e,dstPoint:r,oneOverScale2:s})=>{const o=u(e,t),n=[o[0]-r[0],o[1]-r[1]];return Math.log(1+(n[0]*n[0]+n[1]*n[1])*s)},d=({H:t,testPoints:e})=>{const r=[];for(let s=0;s<e.length;s++)r[s]=u(e[s],t);for(let t=0;t<e.length;t++){const s=t,o=(t+1)%e.length,n=(t+2)%e.length;if(!a(e[s],e[o],e[n],r[s],r[o],r[n]))return!1}return!0};t.exports={computeHomography:t=>{const{srcPoints:e,dstPoints:r,keyframe:s,quickMode:o}=t,i=[[0,0],[s.width,0],[s.width,s.height],[0,s.height]];if(e.length<4)return null;const h=Math.min(10,e.length),l=n(),u=[];for(let t=0;t<e.length;t++)u[t]=t;l.arrayShuffle({arr:u,sampleSize:u.length});const a=o?10:20,f=2*a;let y=0;const M=[];for(;y<f&&M.length<a;){if(y+=1,l.arrayShuffle({arr:u,sampleSize:4}),!c(e[u[0]],e[u[1]],e[u[2]],e[u[3]],r[u[0]],r[u[1]],r[u[2]],r[u[3]]))continue;const t=m([e[u[0]],e[u[1]],e[u[2]],e[u[3]]],[r[u[0]],r[u[1]],r[u[2]],r[u[3]]]);null!==t&&d({H:t,testPoints:i})&&M.push(t)}if(0===M.length)return null;const b=[];for(let t=0;t<M.length;t++)b.push({H:M[t],cost:0});let x=h;for(let t=0;t<e.length&&b.length>2;t+=x){x=Math.min(h,e.length-t);let s=t+x;for(let o=0;o<b.length;o++)for(let n=t;n<s;n++){const t=p({H:b[o].H,srcPoint:e[n],dstPoint:r[n],oneOverScale2:1e4});b[o].cost+=t}b.sort(((t,e)=>t.cost-e.cost)),b.splice(-Math.floor((b.length+1)/2))}let E=null;for(let t=0;t<b.length;t++){const e=w({inH:b[t].H});if(g({H:e,testPoints:i,keyframe:s})){E=e;break}}return E}}},289:t=>{const e=(t,e,r)=>(e[0]-t[0])*(r[1]-t[1])-(e[1]-t[1])*(r[0]-t[0]),r=t=>{const e=t[4]*t[8]-t[5]*t[7],r=t[3]*t[8]-t[5]*t[6],s=t[3]*t[7]-t[4]*t[6];return t[0]*e-t[1]*r+t[2]*s},s=(t,e)=>[t[0]-e[0],t[1]-e[1]],o=(t,e)=>{const r=t[0]*e[1]-t[1]*e[0];return.5*Math.abs(r)};t.exports={matrixInverse33:(t,e)=>{const s=r(t);if(Math.abs(s)<=e)return null;const o=1/s;return[(t[4]*t[8]-t[5]*t[7])*o,(t[2]*t[7]-t[1]*t[8])*o,(t[1]*t[5]-t[2]*t[4])*o,(t[5]*t[6]-t[3]*t[8])*o,(t[0]*t[8]-t[2]*t[6])*o,(t[2]*t[3]-t[0]*t[5])*o,(t[3]*t[7]-t[4]*t[6])*o,(t[1]*t[6]-t[0]*t[7])*o,(t[0]*t[4]-t[1]*t[3])*o]},matrixMul33:(t,e)=>{const r=[];return r[0]=t[0]*e[0]+t[1]*e[3]+t[2]*e[6],r[1]=t[0]*e[1]+t[1]*e[4]+t[2]*e[7],r[2]=t[0]*e[2]+t[1]*e[5]+t[2]*e[8],r[3]=t[3]*e[0]+t[4]*e[3]+t[5]*e[6],r[4]=t[3]*e[1]+t[4]*e[4]+t[5]*e[7],r[5]=t[3]*e[2]+t[4]*e[5]+t[5]*e[8],r[6]=t[6]*e[0]+t[7]*e[3]+t[8]*e[6],r[7]=t[6]*e[1]+t[7]*e[4]+t[8]*e[7],r[8]=t[6]*e[2]+t[7]*e[5]+t[8]*e[8],r},quadrilateralConvex:(t,r,s,o)=>{const n=e(t,r,s)<=0;return e(r,s,o)<=0===n&&e(s,o,t)<=0===n&&e(o,t,r)<=0===n},smallestTriangleArea:(t,e,r,n)=>{const i=s(e,t),h=s(r,t),l=s(n,t),u=s(e,r),a=s(n,r),c=o(i,h),f=o(h,l),m=o(i,l),g=o(u,a);return Math.min(Math.min(Math.min(c,f),m),g)},multiplyPointHomographyInhomogenous:(t,e)=>{const r=e[6]*t[0]+e[7]*t[1]+e[8],s=[];return s[0]=(e[0]*t[0]+e[1]*t[1]+e[2])/r,s[1]=(e[3]*t[0]+e[4]*t[1]+e[5])/r,s},checkThreePointsConsistent:(t,r,s,o,n,i)=>e(t,r,s)>0==e(o,n,i)>0,checkFourPointsConsistent:(t,r,s,o,n,i,h,l)=>e(t,r,s)>0==e(n,i,h)>0&&e(r,s,o)>0==e(i,h,l)>0&&e(s,o,t)>0==e(h,l,n)>0&&e(o,t,r)>0==e(l,n,i)>0,determinant:r}},450:(t,e,r)=>{const{Matrix:s,inverse:o}=r(331),n=t=>{let e=0,r=0;for(let s=0;s<t.length;s++)e+=t[s][0],r+=t[s][1];let s=e/t.length,o=r/t.length,n=0;for(let e=0;e<t.length;e++){const r=t[e][0]-s,i=t[e][1]-o;n+=Math.sqrt(r*r+i*i)}let i=Math.sqrt(2)*t.length/n;const h=[];for(let e=0;e<t.length;e++)h.push([(t[e][0]-s)*i,(t[e][1]-o)*i]);return{normPoints:h,param:{meanX:s,meanY:o,s:i}}};t.exports={solveHomography:(t,e)=>{const{normPoints:r,param:i}=n(t),{normPoints:h,param:l}=n(e),u=h.length,a=[],c=[];for(let t=0;t<u;t++){const e=[r[t][0],r[t][1],1,0,0,0,-r[t][0]*h[t][0],-r[t][1]*h[t][0]],s=[0,0,0,r[t][0],r[t][1],1,-r[t][0]*h[t][1],-r[t][1]*h[t][1]];a.push(e),a.push(s),c.push([h[t][0]]),c.push([h[t][1]])}try{const t=new s(a),e=new s(c),r=t.transpose(),n=r.mmul(t),h=r.mmul(e);return((t,e,r)=>{const s=r.s*r.meanX,o=r.s*r.meanY,n=[t[0]+s*t[6],t[1]+s*t[7],(t[0]+s*t[6])*-e.meanX+(t[1]+s*t[7])*-e.meanY+(t[2]+s)/e.s,t[3]+o*t[6],t[4]+o*t[7],(t[3]+o*t[6])*-e.meanX+(t[4]+o*t[7])*-e.meanY+(t[5]+o)/e.s,r.s*t[6],r.s*t[7],r.s*t[6]*-e.meanX+r.s*t[7]*-e.meanY+r.s/e.s];for(let t=0;t<9;t++)n[t]=n[t]/n[8];return n})(o(n).mmul(h).to1DArray(),i,l)}catch(t){return null}}}},48:t=>{t.exports={createRandomizer:()=>({seed:1234,arrayShuffle(t){const{arr:e,sampleSize:r}=t;for(let t=0;t<r;t++){this.seed=(214013*this.seed+2531011)%(1<<31);let r=this.seed>>16&32767;r%=e.length;let s=e[t];e[t]=e[r],e[r]=s}},nextInt(t){this.seed=(214013*this.seed+2531011)%(1<<31);let e=this.seed>>16&32767;return e%=t,e}})}}},e={};function r(s){if(e[s])return e[s].exports;var o=e[s]={exports:{}};return t[s](o,o.exports,r),o.exports}r.d=(t,e)=>{for(var s in e)r.o(e,s)&&!r.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},(()=>{const{Matcher:t}=r(582),{Estimator:e}=r(421);let s=null,o=null,n=!1,i=null,h=null;onmessage=r=>{const{data:l}=r;if("setup"===l.type)s=l.projectionTransform,o=l.matchingDataList,n=l.debugMode,i=new t(l.inputWidth,l.inputHeight,n),h=new e(l.projectionTransform);else if("match"===l.type){const t=l.targetIndexes;let e=-1,r=null,s=null;for(let n=0;n<t.length;n++){const u=t[n],{keyframeIndex:a,screenCoords:c,worldCoords:f,debugExtra:m}=i.matchDetection(o[u],l.featurePoints);if(s=m,-1!==a){const t=h.estimate({screenCoords:c,worldCoords:f});t&&(e=u,r=t);break}}postMessage({type:"matchDone",targetIndex:e,modelViewTransform:r,debugExtra:s})}else if("trackUpdate"===l.type){const{modelViewTransform:t,worldCoords:e,screenCoords:r}=l,s=h.refineEstimate({initialModelViewTransform:t,worldCoords:e,screenCoords:r});postMessage({type:"trackUpdateDone",modelViewTransform:s})}}})()})();',X.p+"controller.worker.prod.js")}},69855:ct=>{"use strict";var pt=window.URL||window.webkitURL;ct.exports=function(X,ge){try{try{var Ge;try{(Ge=new(window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder)).append(X),Ge=Ge.getBlob()}catch(De){Ge=new Blob([X])}return new Worker(pt.createObjectURL(Ge))}catch(De){return new Worker("data:application/javascript,"+encodeURIComponent(X))}}catch(De){if(!ge)throw Error("Inline worker is not supported");return new Worker(ge)}}},95217:(ct,pt,X)=>{const ge=X(80383),{Detector:Ge}=X(66416),{buildImageList:De,buildTrackingImageList:ue}=X(17508),{build:ve}=X(80723),ne=X(61113),ie=X(75042),oe=async(H,J)=>{const K=[];for(let Q=0;Q<H.length;Q++){const Te=H[Q],Pe=new Ge(Te.width,Te.height);await ie.nextFrame(),ie.tidy(()=>{const xt=ie.tensor(Te.data,[Te.data.length],"float32").reshape([Te.height,Te.width]),{featurePoints:_t}=Pe.detect(xt),lt=_t.filter($t=>$t.maxima),yt=_t.filter($t=>!$t.maxima),wt=ve({points:lt}),ht=ve({points:yt});K.push({maximaPoints:lt,minimaPoints:yt,maximaPointsCluster:wt,minimaPointsCluster:ht,width:Te.width,height:Te.height,scale:Te.scale}),J(Q)})}return K};ct.exports={Compiler:class{constructor(){this.data=null}compileImageTargets(H,J){return new Promise(async(K,Q)=>{const Te=[];for(let lt=0;lt<H.length;lt++){const yt=H[lt],wt=document.createElement("canvas");wt.width=yt.width,wt.height=yt.height;const ht=wt.getContext("2d");ht.drawImage(yt,0,0,yt.width,yt.height);const $t=ht.getImageData(0,0,yt.width,yt.height),Ze=new Uint8Array(yt.width*yt.height);for(let Fe=0;Fe<Ze.length;Fe++){const zt=4*Fe;Ze[Fe]=Math.floor(($t.data[zt]+$t.data[zt+1]+$t.data[zt+2])/3)}Te.push({data:Ze,height:yt.height,width:yt.width})}const Pe=50/Te.length;let xt=0;this.data=[];for(let lt=0;lt<Te.length;lt++){const yt=Te[lt],wt=De(yt),ht=Pe/wt.length,$t=await oe(wt,()=>{xt+=ht,J(xt)});this.data.push({targetImage:yt,imageList:wt,matchingData:$t})}for(let lt=0;lt<Te.length;lt++){const yt=ue(Te[lt]);this.data[lt].trackingImageList=yt}const _t=await new Promise((lt,yt)=>{const wt=new ge;wt.onmessage=ht=>{"progress"===ht.data.type?J(50+ht.data.percent):"compileDone"===ht.data.type&&lt(ht.data.list)},wt.postMessage({type:"compile",targetImages:Te})});for(let lt=0;lt<Te.length;lt++)this.data[lt].trackingData=_t[lt];K(this.data)})}exportData(){const H=[];for(let J=0;J<this.data.length;J++)H.push({targetImage:{width:this.data[J].targetImage.width,height:this.data[J].targetImage.height},trackingData:this.data[J].trackingData,matchingData:this.data[J].matchingData});return ne.encode({v:2,dataList:H})}importData(H){const J=ne.decode(new Uint8Array(H));if(!J.v||2!==J.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:K}=J;this.data=[];for(let Q=0;Q<K.length;Q++)this.data.push({targetImage:K[Q].targetImage,trackingData:K[Q].trackingData,matchingData:K[Q].matchingData});return this.data}}}},57957:(ct,pt,X)=>{const ge=X(75042),Ge=X(71077),{Tracker:De}=X(46417),{CropDetector:ue}=X(47051),{Compiler:ve}=X(95217),{InputLoader:ne}=X(37325);ct.exports={Controller:class{constructor({inputWidth:ie,inputHeight:oe,onUpdate:H=null,debugMode:J=!1,maxTrack:K=1}){this.inputWidth=ie,this.inputHeight=oe,this.maxTrack=K,this.cropDetector=new ue(this.inputWidth,this.inputHeight,J),this.inputLoader=new ne(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=H,this.debugMode=J,this.processingVideo=!1,this.shouldCaptureRegion=!1,this.capturedRegion=null,this.interestedTargetIndex=-1,this.trackingStates=[];const Q=45*Math.PI/180,Te=this.inputHeight/2/Math.tan(Q/2);this.projectionTransform=[[Te,0,this.inputWidth/2],[0,Te,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e5}),this.worker=new Ge,this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=Pe=>{"matchDone"===Pe.data.type&&null!==this.workerMatchDone&&this.workerMatchDone(Pe.data),"trackUpdateDone"===Pe.data.type&&null!==this.workerTrackDone&&this.workerTrackDone(Pe.data)}}showTFStats(){console.log(ge.memory().numTensors),console.table(ge.memory())}addImageTargets(ie){return new Promise(async(oe,H)=>{const J=await fetch(ie),K=await J.arrayBuffer();oe(this.addImageTargetsFromBuffer(K))})}addImageTargetsFromBuffer(ie){const oe=(new ve).importData(ie),H=[],J=[],K=[];for(let Q=0;Q<oe.length;Q++)J.push(oe[Q].matchingData),H.push(oe[Q].trackingData),K.push([oe[Q].targetImage.width,oe[Q].targetImage.height]);return this.tracker=new De(K,H,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:J}),this.markerDimensions=K,{dimensions:K,matchingDataList:J,trackingDataList:H}}dummyRun(ie){const oe=this.inputLoader.loadInput(ie);this.cropDetector.detect(oe),this.tracker.dummyRun(oe),oe.dispose()}getProjectionMatrix(){return this.projectionMatrix}getWorldMatrix(ie,oe){return this._glModelViewMatrix(ie,oe)}async _detectAndMatch(ie,oe){const{featurePoints:H}=this.cropDetector.detectMoving(ie),{targetIndex:J,modelViewTransform:K}=await this._workerMatch(H,oe);return{targetIndex:J,modelViewTransform:K}}async _trackAndUpdate(ie,oe,H){const{worldCoords:J,screenCoords:K}=this.tracker.track(ie,oe,H);return J.length<4?null:await this._workerTrackUpdate(oe,{worldCoords:J,screenCoords:K})}processVideo(ie){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let oe=0;oe<this.markerDimensions.length;oe++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0});(async()=>{for(;this.processingVideo;){const oe=this.inputLoader.loadInput(ie);let H=!1;if(this.trackingStates.reduce((J,K)=>J+(K.isTracking?1:0),0)<this.maxTrack){const J=[];for(let Te=0;Te<this.trackingStates.length;Te++)!0!==this.trackingStates[Te].isTracking&&(-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==Te||J.push(Te));const{targetIndex:K,modelViewTransform:Q}=await this._detectAndMatch(oe,J);-1!==K&&(this.trackingStates[K].isTracking=!0,this.trackingStates[K].currentModelViewTransform=Q,this.shouldCaptureRegion&&(H=!0))}for(let J=0;J<this.trackingStates.length;J++){const K=this.trackingStates[J];if(K.isTracking){let Q=await this._trackAndUpdate(oe,K.currentModelViewTransform,J);null===Q?K.isTracking=!1:(K.currentModelViewTransform=Q,H&&(this.capturedRegion=this.captureRegion(ie,Q,J)))}if(K.showing||K.isTracking&&(K.trackMiss=0,K.trackCount+=1,K.trackCount>10&&(K.showing=!0,K.trackingMatrix=null)),K.showing&&(K.isTracking?K.trackMiss=0:(K.trackCount=0,K.trackMiss+=1,K.trackMiss>15&&(K.showing=!1,K.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:J,worldMatrix:null})))),K.showing){const Q=this._glModelViewMatrix(K.currentModelViewTransform,J);if(null===K.trackingMatrix)K.trackingMatrix=Q;else for(let Pe=0;Pe<Q.length;Pe++)K.trackingMatrix[Pe]=K.trackingMatrix[Pe]+(Q[Pe]-K.trackingMatrix[Pe])/5;const Te=[];for(let Pe=0;Pe<Q.length;Pe++)Te[Pe]=K.trackingMatrix[Pe];this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:J,worldMatrix:Te})}}oe.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await ge.nextFrame()}})()}}stopProcessVideo(){this.processingVideo=!1}async detect(ie){const oe=this.inputLoader.loadInput(ie),{featurePoints:H,debugExtra:J}=await this.cropDetector.detect(oe);return oe.dispose(),{featurePoints:H,debugExtra:J}}async match(ie,oe){const{modelViewTransform:H,debugExtra:J}=await this._workerMatch(ie,[oe]);return{modelViewTransform:H,debugExtra:J}}async track(ie,oe,H){const J=this.inputLoader.loadInput(ie),K=this.tracker.track(J,oe,H);return J.dispose(),K}captureRegion(ie,oe,H){const J=ge.browser.fromPixels(ie),K=this.markerDimensions[H],Q=Math.floor(800*K[1]/K[0]),Te=this.tracker.captureRegion(J,oe,H,800,Q);return J.dispose(),Te}async trackUpdate(ie,oe){return oe.worldCoords.length<4?null:await this._workerTrackUpdate(ie,oe)}_workerMatch(ie,oe){return new Promise(async(H,J)=>{this.workerMatchDone=K=>{H({targetIndex:K.targetIndex,modelViewTransform:K.modelViewTransform,debugExtra:K.debugExtra})},this.worker.postMessage({type:"match",featurePoints:ie,targetIndexes:oe})})}_workerTrackUpdate(ie,oe){return new Promise(async(H,J)=>{this.workerTrackDone=Te=>{H(Te.modelViewTransform)};const{worldCoords:K,screenCoords:Q}=oe;this.worker.postMessage({type:"trackUpdate",modelViewTransform:ie,worldCoords:K,screenCoords:Q})})}_glModelViewMatrix(ie,oe){const H=this.markerDimensions[oe][1];return[ie[0][0],-ie[1][0],-ie[2][0],0,-ie[0][1],ie[1][1],ie[2][1],0,-ie[0][2],ie[1][2],ie[2][2],0,ie[0][1]*H+ie[0][3],-(ie[1][1]*H+ie[1][3]),-(ie[2][1]*H+ie[2][3]),1]}_glProjectionMatrix({projectionTransform:ie,width:oe,height:H,near:J,far:K}){const Q=[[2*ie[0][0]/oe,0,-(2*ie[0][2]/oe-1),0],[0,2*ie[1][1]/H,-(2*ie[1][2]/H-1),0],[0,0,-(K+J)/(K-J),-2*K*J/(K-J)],[0,0,-1,0]],Te=[];for(let Pe=0;Pe<4;Pe++)for(let xt=0;xt<4;xt++)Te.push(Q[xt][Pe]);return Te}}}},47051:(ct,pt,X)=>{X(75042);const{Detector:ge}=X(66416);X(47420),ct.exports={CropDetector:class{constructor(ue,ve,ne=!1){this.debugMode=ne,this.width=ue,this.height=ve;let ie=Math.min(ue,ve)/2,oe=Math.pow(2,Math.round(Math.log(ie)/Math.log(2)));this.cropSize=oe,this.detector=new ge(oe,oe,ne),this.kernelCaches={},this.lastRandomIndex=4}detect(ue){const ve=Math.floor(this.height/2-this.cropSize/2),ne=Math.floor(this.width/2-this.cropSize/2),ie=this._detect(ue,ne,ve);return this.debugMode&&(ie.debugExtra.crop={startX:ne,startY:ve,cropSize:this.cropSize}),ie}detectMoving(ue){const ve=this.lastRandomIndex%3,ne=Math.floor(this.lastRandomIndex/3);let ie=Math.floor(this.height/2-this.cropSize+ne*this.cropSize/2),oe=Math.floor(this.width/2-this.cropSize+ve*this.cropSize/2);return oe<0&&(oe=0),ie<0&&(ie=0),oe>=this.width-this.cropSize&&(oe=this.width-this.cropSize-1),ie>=this.height-this.cropSize&&(ie=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(ue,oe,ie)}_detect(ue,ve,ne){const ie=ue.slice([ne,ve],[this.cropSize,this.cropSize]),{featurePoints:oe,debugExtra:H}=this.detector.detect(ie);return oe.forEach(J=>{J.x+=ve,J.y+=ne}),this.debugMode&&(H.projectedImage=ie.arraySync()),ie.dispose(),{featurePoints:oe,debugExtra:H}}}}},66416:(ct,pt,X)=>{const ge=X(75042),{FREAKPOINTS:Ge}=X(12793),De=(Ge.length-1)*Ge.length/2;ct.exports={Detector:class{constructor(ue,ve,ne=!1){this.debugMode=ne,this.width=ue,this.height=ve;let ie=0;for(;ue>=8&&ve>=8&&(ue/=2,ve/=2,ie++,5!==ie););this.numOctaves=ie,this.tensorCaches={},this.kernelCaches={}}detectImageData(ue){const ve=new Uint8ClampedArray(4*ue.length);for(let ie=0;ie<ue.length;ie++)ve[4*ie]=ue[ie],ve[4*ie+1]=ue[ie],ve[4*ie+2]=ue[ie],ve[4*ie+3]=255;const ne=new ImageData(ve,this.width,this.height);return this.detect(ne)}detect(ue){let ve=null;const ne=[];for(let ht=0;ht<this.numOctaves;ht++){let $t,Ze;$t=0===ht?this._applyFilter(ue):this._downsampleBilinear(ne[ht-1][ne[ht-1].length-1]),Ze=this._applyFilter($t),ne.push([$t,Ze])}const ie=[];for(let ht=0;ht<this.numOctaves;ht++){let $t=this._differenceImageBinomial(ne[ht][0],ne[ht][1]);ie.push($t)}const oe=[];for(let ht=1;ht<this.numOctaves-1;ht++){const $t=this._buildExtremas(ie[ht-1],ie[ht],ie[ht+1]);oe.push($t)}const H=this._applyPrune(oe),J=this._computeLocalization(H,ie),K=this._computeOrientationHistograms(J,ne),Q=this._smoothHistograms(K),Te=this._computeExtremaAngles(Q),Pe=this._computeExtremaFreak(ne,J,Te),xt=this._computeFreakDescriptors(Pe),_t=J.arraySync(),lt=Te.arraySync(),yt=xt.arraySync();this.debugMode&&(ve={pyramidImages:ne.map(ht=>ht.map($t=>$t.arraySync())),dogPyramidImages:ie.map(ht=>ht?ht.arraySync():null),extremasResults:oe.map(ht=>ht.arraySync()),extremaAngles:Te.arraySync(),prunedExtremas:H,localizedExtremas:J.arraySync()}),ne.forEach(ht=>ht.forEach($t=>$t.dispose())),ie.forEach(ht=>ht&&ht.dispose()),oe.forEach(ht=>ht.dispose()),J.dispose(),K.dispose(),Q.dispose(),Te.dispose(),Pe.dispose(),xt.dispose();const wt=[];for(let ht=0;ht<_t.length;ht++){if(0==_t[ht][0])continue;const $t=[];for(let on=0;on<yt[ht].length;on+=4)$t.push(16777216*yt[ht][on]+65536*yt[ht][on+1]+256*yt[ht][on+2]+yt[ht][on+3]);const Ze=_t[ht][1],Z=_t[ht][2],Fe=_t[ht][3]*Math.pow(2,Ze)+Math.pow(2,Ze-1)-.5,zt=Z*Math.pow(2,Ze)+Math.pow(2,Ze-1)-.5,Jt=Math.pow(2,Ze);wt.push({maxima:_t[ht][0]>0,x:Fe,y:zt,scale:Jt,angle:lt[ht],descriptors:$t})}return{featurePoints:wt,debugExtra:ve}}_computeFreakDescriptors(ue){if(!this.tensorCaches.computeFreakDescriptors){const ie=[],oe=[];for(let K=0;K<ue.shape[1];K++)for(let Q=K+1;Q<ue.shape[1];Q++)ie.push(K),oe.push(Q);const H=ge.tensor(ie,[ie.length]).cast("int32"),J=ge.tensor(oe,[oe.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:ge.keep(ge.stack([H,J],1))}}const{positionT:ve}=this.tensorCaches.computeFreakDescriptors,ne=Math.ceil(De/8);return this.kernelCaches.computeFreakDescriptors||(this.kernelCaches.computeFreakDescriptors=[{variableNames:["freak","p"],outputShape:[ue.shape[0],ne],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int descIndex = coords[1] * 8;\n\n\t    int sum = 0;\n\t    for (int i = 0; i < 8; i++) {\n\t      if (descIndex + i >= ${De}) {\n\t\tcontinue;\n\t      }\n\n\t      int p1 = int(getP(descIndex + i, 0));\n\t      int p2 = int(getP(descIndex + i, 1));\n\n\t      float v1 = getFreak(featureIndex, p1);\n\t      float v2 = getFreak(featureIndex, p2);\n\n\t      if (v1 < v2 + 0.01) {\n\t        sum += int(pow(2.0, float(7 - i)));\n\t      }\n\t    }\n\t    setOutput(float(sum));\n\t  }\n\t`}]),ge.tidy(()=>{const[ie]=this.kernelCaches.computeFreakDescriptors;return this._runWebGLProgram(ie,[ue,ve],"int32")})}_computeExtremaFreak(ue,ve,ne){this.tensorCaches._computeExtremaFreak||ge.tidy(()=>{const H=ge.tensor(Ge);this.tensorCaches._computeExtremaFreak={freakPointsT:ge.keep(H)}});const{freakPointsT:ie}=this.tensorCaches._computeExtremaFreak,oe=[];for(let H=1;H<ue.length;H++)oe.push(ue[H][1]);if(!this.kernelCaches._computeExtremaFreak){const H=[];for(let Q=1;Q<ue.length;Q++)H.push("image"+Q);let J="float getPixel(int octave, int y, int x) {";for(let Q=1;Q<ue.length;Q++)J+=`\n\t  if (octave == ${Q}) {\n\t    return getImage${Q}(y, x);\n\t  }\n\t`;J+="}";const K={variableNames:[...H,"extrema","angles","freakPoints"],outputShape:[ve.shape[0],Ge.length],userCode:`\n\t  ${J}\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int freakIndex = coords[1];\n\n\t    float freakSigma = getFreakPoints(freakIndex, 0);\n\t    float freakX = getFreakPoints(freakIndex, 1);\n\t    float freakY = getFreakPoints(freakIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    float inputY = getExtrema(featureIndex, 2);\n\t    float inputX = getExtrema(featureIndex, 3);\n\t    float inputAngle = getAngles(featureIndex);\n            float cos = 7. * cos(inputAngle);\n            float sin = 7. * sin(inputAngle);\n\n\t    float yp = inputY + freakX * sin + freakY * cos;\n\t    float xp = inputX + freakX * cos + freakY * -sin;\n\n\t    int x0 = int(floor(xp));\n\t    int x1 = x0 + 1;\n\t    int y0 = int(floor(yp));\n\t    int y1 = y0 + 1;\n\n\t    float f1 = getPixel(octave, y0, x0);\n\t    float f2 = getPixel(octave, y0, x1);\n\t    float f3 = getPixel(octave, y1, x0);\n\t    float f4 = getPixel(octave, y1, x1);\n\n\t    float x1f = float(x1);\n\t    float y1f = float(y1);\n\t    float x0f = float(x0);\n\t    float y0f = float(y0);\n\n\t    // ratio for interpolation between four neighbouring points\n\t    float value = (x1f - xp) * (y1f - yp) * f1\n\t\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\t    setOutput(value);\n\t  }\n\t`};this.kernelCaches._computeExtremaFreak=[K]}return ge.tidy(()=>{const[H]=this.kernelCaches._computeExtremaFreak;return this._compileAndRun(H,[...oe,ve,ne,ie])})}_computeExtremaAngles(ue){if(!this.kernelCaches.computeExtremaAngles){const ve={variableNames:["histogram"],outputShape:[ue.shape[0]],userCode:`\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\n\t    int maxIndex = 0;\n\t    for (int i = 1; i < 36; i++) {\n\t      if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n\t\tmaxIndex = i;\n\t      }\n\t    }\n\n\t    int prev = imod(maxIndex - 1 + 36, 36);\n\t    int next = imod(maxIndex + 1, 36);\n\n\t    /**\n\t     * Fit a quatratic to 3 points. The system of equations is:\n\t     *\n\t     * y0 = A*x0^2 + B*x0 + C\n\t     * y1 = A*x1^2 + B*x1 + C\n\t     * y2 = A*x2^2 + B*x2 + C\n\t     *\n\t     * This system of equations is solved for A,B,C.\n\t     */\n\t    float p10 = float(maxIndex - 1);\n\t    float p11 = getHistogram(featureIndex, prev); \n\t    float p20 = float(maxIndex);\n\t    float p21 = getHistogram(featureIndex, maxIndex); \n\t    float p30 = float(maxIndex + 1);\n\t    float p31 = getHistogram(featureIndex, next); \n\n\t    float d1 = (p30-p20)*(p30-p10);\n\t    float d2 = (p10-p20)*(p30-p10);\n\t    float d3 = p10-p20;\n\n\t    // If any of the denominators are zero then, just use maxIndex.\n            float fbin = float(maxIndex);\n\t    if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n\t      float a = p10*p10;\n\t      float b = p20*p20;\n\n\t      // Solve for the coefficients A,B,C\n\t      float A = ((p31-p21)/d1)-((p11-p21)/d2);\n\t      float B = ((p11-p21)+(A*(b-a)))/d3;\n\t      float C = p11-(A*a)-(B*p10);\n\t      fbin = -B / (2. * A);\n\t    }\n\n\t    float an = 2.0 *${Math.PI} * (fbin + 0.5) / 36. - ${Math.PI};\n\t    setOutput(an);\n\t  }\n\t`};this.kernelCaches.computeExtremaAngles=ve}return ge.tidy(()=>this._compileAndRun(this.kernelCaches.computeExtremaAngles,[ue]))}_computeOrientationHistograms(ue,ve){const ne=[];for(let oe=1;oe<ve.length;oe++)ne.push(ve[oe][1]);this.tensorCaches.orientationHistograms||ge.tidy(()=>{const oe=Math.ceil(4.5),H=[];for(let J=-oe;J<=oe;J++)for(let K=-oe;K<=oe;K++){const Q=K*K+J*J;if(Q<=20.25){const Te=-.05555555555555555*Q;H.push([J,K,.0013888888*(720+Te*(720+Te*(360+Te*(120+Te*(30+Te*(6+Te))))))])}}this.tensorCaches.orientationHistograms={radialPropertiesT:ge.keep(ge.tensor(H,[H.length,3]))}});const{radialPropertiesT:ie}=this.tensorCaches.orientationHistograms;if(!this.kernelCaches.computeOrientationHistograms){const oe=[];for(let Q=1;Q<ve.length;Q++)oe.push("image"+Q);let H="float getPixel(int octave, int y, int x) {";for(let Q=1;Q<ve.length;Q++)H+=`\n\t  if (octave == ${Q}) {\n\t    return getImage${Q}(y, x);\n\t  }\n\t`;H+="}";const J={variableNames:[...oe,"extrema","radial"],outputShape:[ue.shape[0],ie.shape[0],2],userCode:`\n\t  ${H}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int radialIndex = coords[1];\n\t    int propertyIndex = coords[2];\n\n\t    int radialY = int(getRadial(radialIndex, 0));\n\t    int radialX = int(getRadial(radialIndex, 1));\n\t    float radialW = getRadial(radialIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\n\t    int xp = x + radialX;\n\t    int yp = y + radialY;\n\n\t    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n\t    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n\t    if (propertyIndex == 0) {\n\t      // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n\t      \n\t      float angle = atan(dy, dx) + ${Math.PI};\n\t      float fbin = angle * 36. * 0.159154943091895;\n\t      setOutput(fbin);\n\t      return;\n\t    }\n\n\t    if (propertyIndex == 1) {\n\t      float mag = sqrt(dx * dx + dy * dy);\n\t      float magnitude = radialW * mag;\n\t      setOutput(magnitude);\n\t      return;\n\t    }\n\t  }\n\n\t`};this.kernelCaches.computeOrientationHistograms=[J,{variableNames:["fbinMag"],outputShape:[ue.shape[0],36],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    float sum = 0.;\n\t    for (int i = 0; i < ${ie.shape[0]}; i++) {\n\t      float fbin = getFbinMag(featureIndex, i, 0);\n\t      int bin = int(floor(fbin - 0.5));\n\t      int b1 = imod(bin + 36, 36);\n\t      int b2 = imod(bin + 1 + 36, 36);\n\n\t      if (b1 == binIndex || b2 == binIndex) {\n\t\tfloat magnitude = getFbinMag(featureIndex, i, 1);\n\t\tfloat w2 = fbin - float(bin) - 0.5;\n\t\tfloat w1 = w2 * -1. + 1.;\n\n\t\tif (b1 == binIndex) {\n\t\t  sum += w1 * magnitude;\n\t\t}\n\t\tif (b2 == binIndex) {\n\t\t  sum += w2 * magnitude;\n\t\t}\n\t      }\n\t    }\n\t    setOutput(sum);\n\t  }\n\t`}]}return ge.tidy(()=>{const[oe,H]=this.kernelCaches.computeOrientationHistograms,J=this._compileAndRun(oe,[...ne,ue,ie]);return this._compileAndRun(H,[J])})}_smoothHistograms(ue){return this.kernelCaches.smoothHistograms||(this.kernelCaches.smoothHistograms={variableNames:["histogram"],outputShape:[ue.shape[0],36],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    int prevBin = imod(binIndex - 1 + 36, 36);\n\t    int nextBin = imod(binIndex + 1, 36);\n\n            float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n\t    setOutput(result);\n\t  }\n\t"}),ge.tidy(()=>{const ve=this.kernelCaches.smoothHistograms;for(let ne=0;ne<5;ne++)ue=this._compileAndRun(ve,[ue]);return ue})}_computeLocalization(ue,ve){if(!this.kernelCaches.computeLocalization){const ne=[];let ie="float getPixel(int octave, int y, int x) {";for(let H=1;H<ve.length;H++)ne.push("image"+H),ie+=`\n\t  if (octave == ${H}) {\n\t    return getImage${H}(y, x);\n\t  }\n \t`;ie+="}";const oe={variableNames:[...ne,"extrema"],outputShape:[ue.length,3,3],userCode:`\n\t  ${ie}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    float score = getExtrema(featureIndex, 0);\n\t    if (score == 0.0) {\n\t      return;\n\t    }\n\n\t    int dy = coords[1]-1;\n\t    int dx = coords[2]-1;\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\t    setOutput(getPixel(octave, y+dy, x+dx));\n\t  }\n\t`};this.kernelCaches.computeLocalization=[oe]}return ge.tidy(()=>{const ne=this.kernelCaches.computeLocalization[0],ie=ge.tensor(ue,[ue.length,ue[0].length],"int32"),oe=this._compileAndRun(ne,[...ve.slice(1),ie]).arraySync(),H=[];for(let K=0;K<oe.length;K++){H.push([]);for(let Q=0;Q<oe[K].length;Q++)H[K].push([])}const J=[];for(let K=0;K<ue.length;K++)J[K]=[ue[K][0],ue[K][1],ue[K][2],ue[K][3]];for(let K=0;K<J.length;K++){if(0===J[K][0])continue;const Q=oe[K],Te=.5*(Q[1][2]-Q[1][0]),Pe=.5*(Q[2][1]-Q[0][1]),xt=Q[1][2]+Q[1][0]-2*Q[1][1],_t=Q[2][1]+Q[0][1]-2*Q[1][1],lt=.25*(Q[0][0]+Q[2][2]-Q[0][2]-Q[2][0]),yt=xt*_t-lt*lt,$t=J[K][2]+(-lt*-Te+xt*-Pe)/yt,Ze=J[K][3]+(_t*-Te+-lt*-Pe)/yt;Math.abs(yt)<1e-4||(J[K][2]=$t,J[K][3]=Ze)}return ge.tensor(J,[J.length,J[0].length],"float32")})}_applyPrune(ue){if(!this.kernelCaches.applyPrune){const oe=[];for(let H=0;H<ue.length;H++){const K=ue[H].shape[1],Q={variableNames:["extrema"],outputShape:[Math.floor(ue[H].shape[0]/2),Math.floor(K/2)],userCode:"\n\t    void main() {\n\t      ivec2 coords = getOutputCoords();\n\t      int y = coords[0] * 2;\n\t      int x = coords[1] * 2;\n\n\t      float location = 0.0;\n\t      float values = getExtrema(y, x);\n\n\t      if (getExtrema(y+1, x) != 0.0) {\n\t        location = 1.0;\n\t\tvalues = getExtrema(y+1, x);\n\t      }\n\t      else if (getExtrema(y, x+1) != 0.0) {\n\t        location = 2.0;\n\t\tvalues = getExtrema(y, x+1);\n\t      }\n\t      else if (getExtrema(y+1, x+1) != 0.0) {\n\t        location = 3.0;\n\t\tvalues = getExtrema(y+1, x+1);\n\t      }\n\n\t      if (values < 0.0) {\n\t        setOutput(location * -1000.0 + values);\n\t      } else {\n\t        setOutput(location * 1000.0 + values);\n\t      }\n\t    }\n\t  "};oe.push(Q)}this.kernelCaches.applyPrune={reductionKernels:oe}}const ve=[],ne=[];for(let oe=0;oe<100;oe++){ne.push([]),ve.push([]);for(let H=0;H<5;H++)ne[oe].push([0,0,0,0]),ve[oe].push(0)}ge.tidy(()=>{const{reductionKernels:oe}=this.kernelCaches.applyPrune;for(let H=0;H<ue.length;H++){const K=this._compileAndRun(oe[H],[ue[H]]),Q=H+1,Te=K.arraySync(),Pe=K.shape[0],xt=K.shape[1],_t=2*xt/10,lt=2*Pe/10;for(let yt=0;yt<Pe;yt++)for(let wt=0;wt<xt;wt++){const ht=Te[yt][wt];if(0==ht)continue;const $t=ht%1e3,Ze=Math.floor(Math.abs(ht)/1e3),Z=2*wt+(2===Ze||3===Ze?1:0),Fe=2*yt+(1===Ze||3===Ze?1:0),zt=Math.floor(Z/_t),Jt=10*Math.floor(Fe/lt)+zt,on=Math.abs($t);let mn=5;for(;mn>=1&&on>ve[Jt][mn-1];)mn-=1;if(mn<5){for(let bn=4;bn>=mn+1;bn--)ve[Jt][bn]=ve[Jt][bn-1],ne[Jt][bn][0]=ne[Jt][bn-1][0],ne[Jt][bn][1]=ne[Jt][bn-1][1],ne[Jt][bn][2]=ne[Jt][bn-1][2],ne[Jt][bn][3]=ne[Jt][bn-1][3];ve[Jt][mn]=on,ne[Jt][mn][0]=$t,ne[Jt][mn][1]=Q,ne[Jt][mn][2]=Fe,ne[Jt][mn][3]=Z}}}});const ie=[];for(let oe=0;oe<100;oe++)for(let H=0;H<5;H++)ie.push(ne[oe][H]);return ie}_buildExtremas(ue,ve,ne){const ie=ve.shape[0],oe=ve.shape[1],H="w"+oe;return this.kernelCaches.buildExtremas||(this.kernelCaches.buildExtremas={}),this.kernelCaches.buildExtremas[H]||(this.kernelCaches.buildExtremas[H]={variableNames:["image0","image1","image2"],outputShape:[ie,oe],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int y = coords[0];\n\t    int x = coords[1];\n\n\t    float value = getImage1(y, x);\n\n\t    // Step 1: find local maxima/minima\n\t    if (value * value < 9.) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (y < 7 || y > ${ie-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (x < 7 || x > ${oe-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    bool isMax = true;\n\t    bool isMin = true;\n\t    for (int dy = -1; dy <= 1; dy++) {\n\t      for (int dx = -1; dx <= 1; dx++) {\n\t        float value0 = getImage0(y+dy, x+dx);\n\t        float value1 = getImage1(y+dy, x+dx);\n\t        float value2 = getImage2(y+dy, x+dx);\n\n\t\tif (value < value0 || value < value1 || value < value2) {\n\t\t  isMax = false;\n\t\t}\n\t\tif (value > value0 || value > value1 || value > value2) {\n\t\t  isMin = false;\n\t\t}\n\t      }\n\t    }\n\n\t    if (!isMax && !isMin) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    // compute edge score and reject based on threshold\n\t    float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n\t    float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n\t    float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n\n\t    float det = (dxx * dyy) - (dxy * dxy);\n\n\t    if (abs(det) < 0.0001) { // determinant undefined. no solution\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n\n\t    if (abs(edgeScore) >= 6.25 ) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    setOutput(getImage1(y,x));\n\t  }\n\t`}),ge.tidy(()=>{const J=this.kernelCaches.buildExtremas[H];return ue=this._downsampleBilinear(ue),ne=this._upsampleBilinear(ne,ve),this._compileAndRun(J,[ue,ve,ne])})}_differenceImageBinomial(ue,ve){return ge.tidy(()=>ue.sub(ve))}_applyFilter(ue){const ve=ue.shape[0],ne=ue.shape[1],ie="w"+ne;return this.kernelCaches.applyFilter||(this.kernelCaches.applyFilter={}),this.kernelCaches.applyFilter[ie]||(this.kernelCaches.applyFilter[ie]=[{variableNames:["p"],outputShape:[ve,ne],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0], coords[1]-2);\n\t    sum += getP(coords[0], coords[1]-1) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0], coords[1]+1) * 4.;\n\t    sum += getP(coords[0], coords[1]+2);\n\t    setOutput(sum);\n\t  }\n\t"},{variableNames:["p"],outputShape:[ve,ne],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0]-2, coords[1]);\n\t    sum += getP(coords[0]-1, coords[1]) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0]+1, coords[1]) * 4.;\n\t    sum += getP(coords[0]+2, coords[1]);\n\t    sum /= 256.;\n\t    setOutput(sum);\n\t  }\n\t"}]),ge.tidy(()=>{const[oe,H]=this.kernelCaches.applyFilter[ie],J=this._compileAndRun(oe,[ue]);return this._compileAndRun(H,[J])})}_upsampleBilinear(ue,ve){const ne="w"+ue.shape[1];return this.kernelCaches.upsampleBilinear||(this.kernelCaches.upsampleBilinear={}),this.kernelCaches.upsampleBilinear[ne]||(this.kernelCaches.upsampleBilinear[ne]={variableNames:["p"],outputShape:[ve.shape[0],ve.shape[1]],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int j = coords[0];\n\t    int i = coords[1];\n\n\t    float sj = 0.5 * float(j) - 0.25; \n\t    float si = 0.5 * float(i) - 0.25;\n\n\t    float sj0 = floor(sj);\n\t    float sj1 = ceil(sj);\n\t    float si0 = floor(si);\n\t    float si1 = ceil(si);\n\n\t    int sj0I = int(sj0);\n\t    int sj1I = int(sj1);\n\t    int si0I = int(si0);\n\t    int si1I = int(si1);\n\n\t    float sum = 0.0;\n\t    sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);\n\t    sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);\n\t    sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);\n\t    sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);\n\t    setOutput(sum);\n\t  }\n\t"}),ge.tidy(()=>this._compileAndRun(this.kernelCaches.upsampleBilinear[ne],[ue]))}_downsampleBilinear(ue){const ve=ue.shape[0],ne=ue.shape[1],ie="w"+ne;if(this.kernelCaches.downsampleBilinear||(this.kernelCaches.downsampleBilinear={}),!this.kernelCaches.downsampleBilinear[ie]){const oe={variableNames:["p"],outputShape:[Math.floor(ve/2),Math.floor(ne/2)],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int y = coords[0] * 2;\n\t    int x = coords[1] * 2;\n\n\t    float sum = getP(y, x) * 0.25;\n\t    sum += getP(y+1,x) * 0.25; \n\t    sum += getP(y, x+1) * 0.25; \n\t    sum += getP(y+1,x+1) * 0.25;\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.downsampleBilinear[ie]=oe}return ge.tidy(()=>this._compileAndRun(this.kernelCaches.downsampleBilinear[ie],[ue]))}_compileAndRun(ue,ve){const ne=ge.backend().compileAndRun(ue,ve);return ge.engine().makeTensorFromDataId(ne.dataId,ne.shape,ne.dtype)}_runWebGLProgram(ue,ve,ne){const ie=ge.backend().runWebGLProgram(ue,ve,ne);return ge.engine().makeTensorFromDataId(ie.dataId,ie.shape,ie.dtype)}}}},12793:ct=>{const pt=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],X=[];for(let ge=0;ge<pt.length;ge++){const Ge=pt[ge].sigma;for(let De=0;De<pt[ge].points.length;De++){const ue=pt[ge].points[De];X.push([Ge,ue[0],ue[1]])}}ct.exports={FREAKPOINTS:X}},47420:ct=>{const pt=(X,ge,Ge,De)=>({x:X[0][0]*ge+X[0][1]*Ge+X[0][3],y:X[1][0]*ge+X[1][1]*Ge+X[1][3],z:X[2][0]*ge+X[2][1]*Ge+X[2][3]});ct.exports={buildModelViewProjectionTransform:(X,ge)=>[[X[0][0]*ge[0][0]+X[0][2]*ge[2][0],X[0][0]*ge[0][1]+X[0][2]*ge[2][1],X[0][0]*ge[0][2]+X[0][2]*ge[2][2],X[0][0]*ge[0][3]+X[0][2]*ge[2][3]],[X[1][1]*ge[1][0]+X[1][2]*ge[2][0],X[1][1]*ge[1][1]+X[1][2]*ge[2][1],X[1][1]*ge[1][2]+X[1][2]*ge[2][2],X[1][1]*ge[1][3]+X[1][2]*ge[2][3]],[ge[2][0],ge[2][1],ge[2][2],ge[2][3]]],applyModelViewProjectionTransform:pt,computeScreenCoordiate:(X,ge,Ge,De)=>{const{x:ue,y:ve,z:ne}=pt(X,ge,Ge);return{x:ue/ne,y:ve/ne}}}},17508:(ct,pt,X)=>{const{resize:ge}=X(9140);ct.exports={buildImageList:Ge=>{const De=[];let ue=100/Math.min(Ge.width,Ge.height);for(;;)if(De.push(ue),ue*=Math.pow(2,1/3),ue>=.95){ue=1;break}De.push(ue),De.reverse();const ve=[];for(let ne=0;ne<De.length;ne++)ve.push(Object.assign(ge({image:Ge,ratio:De[ne]}),{scale:De[ne]}));return ve},buildTrackingImageList:Ge=>{const De=Math.min(Ge.width,Ge.height),ue=[],ve=[];ue.push(256/De),ue.push(128/De);for(let ne=0;ne<ue.length;ne++)ve.push(Object.assign(ge({image:Ge,ratio:ue[ne]}),{scale:ue[ne]}));return ve}}},37325:(ct,pt,X)=>{const ge=X(75042);ct.exports={InputLoader:class{constructor(Ge,De){this.width=Ge,this.height=De,this.texShape=[De,Ge];const ue=document.createElement("canvas").getContext("2d");ue.canvas.width=Ge,ue.canvas.height=De,this.context=ue,this.program=this.buildProgram(Ge,De);const ve=ge.backend();this.tempPixelHandle=ve.makeTensorInfo(this.texShape,"float32"),ve.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(Ge){return ge.tidy(()=>{let De=ge.browser.fromPixels(Ge);return De=De.mean(2),De})}loadInput(Ge){this.context.drawImage(Ge,0,0,this.width,this.height);const De=ge.backend();return De.gpgpu.uploadPixelDataToTexture(De.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(Ge,De){const ue=2===ge.env().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${Ge}.0, ${De}.0);\n\n\t  vec4 values = ${ue}(A, uv);\n\t  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);\n\t}\n      `}}_compileAndRun(Ge,De){const ue=ge.backend().compileAndRun(Ge,De);return ge.engine().makeTensorFromDataId(ue.dataId,ue.shape,ue.dtype)}_runWebGLProgram(Ge,De,ue){const ve=ge.backend().runWebGLProgram(Ge,De,ue);return ge.engine().makeTensorFromDataId(ve.dataId,ve.shape,ve.dtype)}}}},32233:ct=>{ct.exports={compute:pt=>{const{v1:X,v2:ge}=pt;let Ge=0;for(let ve=0;ve<X.length;ve++)Ge+=(ue=void 0,((ue=((ue=((ue=((ue=(De=(X[ve]^ge[ve])>>>0)-(De>>1&1431655765))>>2&858993459)+(858993459&ue))>>4)+ue&252645135)>>8)+ue&16711935)>>16)+ue&65535);var De,ue;return Ge}}},80723:(ct,pt,X)=>{const{compute:ge}=X(32233),{createRandomizer:Ge}=X(6048),De=ue=>{const{points:ve,pointIndexes:ne,centerPointIndex:ie,randomizer:oe}=ue;let H=!1;(ne.length<=8||ne.length<=16)&&(H=!0);const J={};if(!H){const Q=_computeKMedoids({points:ve,pointIndexes:ne,randomizer:oe});for(let Te=0;Te<Q.length;Te++)void 0===J[ne[Q[Te]]]&&(J[ne[Q[Te]]]=[]),J[ne[Q[Te]]].push(ne[Te])}1===Object.keys(J).length&&(H=!0);const K={centerPointIndex:ie};if(H){K.leaf=!0,K.pointIndexes=[];for(let Q=0;Q<ne.length;Q++)K.pointIndexes.push(ne[Q]);return K}return K.leaf=!1,K.children=[],Object.keys(J).forEach(Q=>{K.children.push(De({points:ve,pointIndexes:J[Q],centerPointIndex:Q,randomizer:oe}))}),K};_computeKMedoids=ue=>{const{points:ve,pointIndexes:ne,randomizer:ie}=ue,oe=[];for(let Q=0;Q<ne.length;Q++)oe.push(Q);let H=Number.MAX_SAFE_INTEGER,J=-1;const K=[];for(let Q=0;Q<128;Q++){ie.arrayShuffle({arr:oe,sampleSize:8});let Te=0;const Pe=[];for(let xt=0;xt<ne.length;xt++){let _t=Number.MAX_SAFE_INTEGER;for(let lt=0;lt<8;lt++){const wt=ge({v1:ve[ne[xt]].descriptors,v2:ve[ne[oe[lt]]].descriptors});wt<_t&&(Pe[xt]=oe[lt],_t=wt)}Te+=_t}K.push(Pe),Te<H&&(H=Te,J=Q)}return K[J]},ct.exports={build:({points:ue})=>{const ve=[];for(let ie=0;ie<ue.length;ie++)ve.push(ie);const ne=Ge();return{rootNode:De({points:ue,pointIndexes:ve,centerPointIndex:null,randomizer:ne})}}}},46417:(ct,pt,X)=>{const ge=X(75042),{buildModelViewProjectionTransform:Ge,computeScreenCoordiate:De}=X(47420);ct.exports={Tracker:class{constructor(ue,ve,ne,ie,oe,H=!1){this.markerDimensions=ue,this.trackingDataList=ve,this.projectionTransform=ne,this.debugMode=H,this.trackingKeyframeList=[];for(let K=0;K<ve.length;K++)this.trackingKeyframeList.push(ve[K][1]);let J=0;for(let K=0;K<this.trackingKeyframeList.length;K++)J=Math.max(J,this.trackingKeyframeList[K].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let K=0;K<this.trackingKeyframeList.length;K++){const{featurePoints:Q,imagePixels:Te,imageProperties:Pe}=this._prebuild(this.trackingKeyframeList[K],J);this.featurePointsListT[K]=Q,this.imagePixelsListT[K]=Te,this.imagePropertiesListT[K]=Pe}this.kernelCaches={}}dummyRun(ue){let ve=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let ne=0;ne<this.featurePointsListT.length;ne++)this.track(ue,ve,ne)}captureRegion(ue,ve,ne,ie,oe){const H=Ge(this.projectionTransform,ve),J=this._buildAdjustedModelViewTransform(H),K=this._computeColoredProjection(J,ue,ne,ie,oe),Q=K.arraySync();return J.dispose(),K.dispose(),Q}track(ue,ve,ne){let ie={};const oe=Ge(this.projectionTransform,ve),H=this._buildAdjustedModelViewTransform(oe),J=this.featurePointsListT[ne],K=this.imagePixelsListT[ne],Q=this.imagePropertiesListT[ne],Te=this._computeProjection(H,ue,ne),{matchingPointsT:Pe,simT:xt}=this._computeMatching(J,K,Q,Te),_t=Pe.arraySync(),lt=xt.arraySync(),yt=this.trackingKeyframeList[ne],wt=[],ht=[],$t=[];for(let Ze=0;Ze<_t.length;Ze++)if(lt[Ze]>.8&&Ze<yt.points.length){$t.push(Ze);const Z=De(oe,_t[Ze][0],_t[Ze][1]);ht.push(Z),wt.push({x:yt.points[Ze].x/yt.scale,y:yt.points[Ze].y/yt.scale,z:0})}return this.debugMode&&(ie={projectedImage:Te.arraySync(),matchingPoints:Pe.arraySync(),goodTrack:$t,trackedPoints:ht}),H.dispose(),Te.dispose(),Pe.dispose(),xt.dispose(),{worldCoords:wt,screenCoords:ht,debugExtra:ie}}_computeMatching(ue,ve,ne,ie){const J=ue.shape[0];return this.kernelCaches.computeMatching||(this.kernelCaches.computeMatching=[{variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[J,441],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchOffsetIndex = coords[1];\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t    int searchOffsetY = searchOffsetIndex / 21 * 1;\n\n\t    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\n\t    int sx = sCenterX + searchOffsetX - 10;\n\t    int sy = sCenterY + searchOffsetY - 10;\n\n\t    if (sx < 6 || sx >= (${ie.shape[1]} - 6) || sy < 6 || sy >= (${ie.shape[0]} - 6)) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n\t      for (int templateOffsetY = 0; templateOffsetY < 13; templateOffsetY++) {\n\t\tfor (int templateOffsetX = 0; templateOffsetX < 13; templateOffsetX++) {\n\t\t  int fx2 = sCenterX + templateOffsetX - 6;\n\t\t  int fy2 = sCenterY + templateOffsetY - 6;\n\n\t\t  int sx2 = sx + templateOffsetX - 6;\n\t\t  int sy2 = sy + templateOffsetY - 6;\n\n\t\t  int markerPixelIndex = fy2 * markerWidth + fx2;\n\t\t  float markerPixel = getMarkerPixels(markerPixelIndex);\n\t\t  float targetPixel = getTargetPixels(sy2, sx2);\n\n\t\t  sumTemplate += markerPixel;\n\t\t  sumTemplateSquare += markerPixel * markerPixel;\n\t\t  sumPoint += targetPixel;\n\t\t  sumPointSquare += targetPixel * targetPixel;\n\t\t  sumPointTemplate += targetPixel * markerPixel;\n\t\t}\n\t      }\n\n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(13 * 13);\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`},{variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[J,2],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / 441;\n\t    int searchOffsetIndex = imod(maxIndex, 441);\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - 10) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / 21 * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - 10) / markerScale);\n\t    }\n\t  }\n\t"},{variableNames:["sims","maxIndex"],outputShape:[J],userCode:"\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"}]),ge.tidy(()=>{const K=this.kernelCaches.computeMatching,Q=this._compileAndRun(K[0],[ue,ve,ne,ie]),Te=Q.argMax(1);return{matchingPointsT:this._compileAndRun(K[1],[ue,ne,Te]),simT:this._compileAndRun(K[2],[Q,Te])}})}_computeProjection(ue,ve,ne){const ie=this.trackingKeyframeList[ne].width,oe=this.trackingKeyframeList[ne].height,H=this.trackingKeyframeList[ne].scale,J=ie+"-"+oe;return this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),this.kernelCaches.computeProjection[J]||(this.kernelCaches.computeProjection[J]={variableNames:["M","pixel"],outputShape:[oe,ie],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${H});\n\t      float x = float(coords[1]) / float(${H});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux)));\n\t    }\n\t`}),ge.tidy(()=>this._compileAndRun(this.kernelCaches.computeProjection[J],[ue,ve]))}_computeColoredProjection(ue,ve,ne,ie,oe){const J=this.trackingKeyframeList[ne].scale*ie/this.trackingKeyframeList[ne].width,K=ie+"-"+oe;return this.kernelCaches._computeColoredProjection||(this.kernelCaches._computeColoredProjection={}),this.kernelCaches._computeColoredProjection[K]||(this.kernelCaches._computeColoredProjection[K]={variableNames:["M","pixel"],outputShape:[oe,ie,3],userCode:`\n\t  void main() {\n\t      ivec3 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${J});\n\t      float x = float(coords[1]) / float(${J});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux), coords[2]));\n\t    }\n\t`}),ge.tidy(()=>this._compileAndRun(this.kernelCaches._computeColoredProjection[K],[ue,ve]))}_buildAdjustedModelViewTransform(ue){return ge.tidy(()=>{let ve=[];for(let ne=0;ne<ue.length;ne++){ve.push([]);for(let ie=0;ie<ue[ne].length;ie++)ve[ne].push(ue[ne][ie]/1e3)}return ge.tensor(ve,[3,4])})}_prebuild(ue,ve){return ge.tidy(()=>{const ne=ue.scale,ie=[];for(let J=0;J<ve;J++)ie.push(J<ue.points.length?[ue.points[J].x/ne,ue.points[J].y/ne]:[-1,-1]);const oe=ge.tensor(ue.data,[ue.width*ue.height]),H=ge.tensor([ue.width,ue.height,ue.scale],[3]);return{featurePoints:ge.tensor(ie,[ie.length,2],"float32"),imagePixels:oe,imageProperties:H}})}_compileAndRun(ue,ve){const ne=ge.backend().compileAndRun(ue,ve);return ge.engine().makeTensorFromDataId(ne.dataId,ne.shape,ne.dtype)}}}},9140:ct=>{ct.exports={downsampleBilinear:({image:pt})=>{const{data:X,width:ge,height:Ge}=pt,De=Math.floor(ge/2),ue=Math.floor(Ge/2),ve=new Float32Array(De*ue),ne=[0,1,ge,ge+1];for(let ie=0;ie<ue;ie++)for(let oe=0;oe<De;oe++){let H=2*ie*ge+2*oe,J=0;for(let K=0;K<ne.length;K++)J+=X[H+ne[K]];J*=.25,ve[ie*De+oe]=J}return{data:ve,width:De,height:ue}},upsampleBilinear:({image:pt,padOneWidth:X,padOneHeight:ge})=>{const{width:Ge,height:De,data:ue}=pt,ve=2*pt.width+(X?1:0),ne=2*pt.height+(ge?1:0),ie=new Float32Array(ve*ne);for(let oe=0;oe<ve;oe++){const H=.5*oe-.25;let J=Math.floor(H),K=Math.ceil(H);J<0&&(J=0),K>=Ge&&(K=Ge-1);for(let Q=0;Q<ne;Q++){const Te=.5*Q-.25;let Pe=Math.floor(Te),xt=Math.ceil(Te);Pe<0&&(Pe=0),xt>=De&&(xt=De-1),ie[Q*ve+oe]=(K-H)*(xt-Te)*ue[Pe*Ge+J]+(K-H)*(Te-Pe)*ue[xt*Ge+J]+(H-J)*(xt-Te)*ue[Pe*Ge+K]+(H-J)*(Te-Pe)*ue[xt*Ge+K]}}return{data:ie,width:ve,height:ne}},resize:({image:pt,ratio:X})=>{const ge=Math.round(pt.width*X),Ge=Math.round(pt.height*X),De=new Uint8Array(ge*Ge);for(let ue=0;ue<ge;ue++){let ve=Math.round(1*ue/X),ne=Math.round(1*(ue+1)/X)-1;ne>=pt.width&&(ne=pt.width-1);for(let ie=0;ie<Ge;ie++){let oe=Math.round(1*ie/X),H=Math.round(1*(ie+1)/X)-1;H>=pt.height&&(H=pt.height-1);let J=0,K=0;for(let Q=ve;Q<=ne;Q++)for(let Te=oe;Te<=H;Te++)J+=1*pt.data[Te*pt.width+Q],K+=1;De[ie*ge+ue]=Math.floor(J/K)}}return{data:De,width:ge,height:Ge}}}},6048:ct=>{ct.exports={createRandomizer:()=>({seed:1234,arrayShuffle(pt){const{arr:X,sampleSize:ge}=pt;for(let Ge=0;Ge<ge;Ge++){this.seed=(214013*this.seed+2531011)%(1<<31);let De=this.seed>>16&32767;De%=X.length;let ue=X[Ge];X[Ge]=X[De],X[De]=ue}},nextInt(pt){this.seed=(214013*this.seed+2531011)%(1<<31);let X=this.seed>>16&32767;return X%=pt,X}})}},82749:(ct,pt,X)=>{X(74412);const ge=X(69894).Z,Ge=X(97676).Z,De=X(22810).Z;ct.exports={UI:class{constructor({uiLoading:ue,uiScanning:ve,uiError:ne}){"yes"===ue?this.loadingModal=this._loadHTML(ge):"no"!==ue&&(this.loadingModal=document.querySelector(ue)),"yes"===ne?this.compatibilityModal=this._loadHTML(Ge):"no"!==ne&&(this.compatibilityModal=document.querySelector(ne)),"yes"===ve?this.scanningMask=this._loadHTML(De):"no"!==ve&&(this.scanningMask=document.querySelector(ve)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(ue){const ve=document.createElement("template");ve.innerHTML=ue.trim();const ne=ve.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(ne),ne}}}},63906:()=>{},12993:()=>{},78352:()=>{},84589:()=>{},61758:()=>{}},Ts={};function ar(ct){if(Ts[ct])return Ts[ct].exports;var pt=Ts[ct]={id:ct,loaded:!1,exports:{}};return Ja[ct].call(pt.exports,pt,pt.exports,ar),pt.loaded=!0,pt.exports}ar.amdD=function(){throw new Error("define cannot be used indirect")},ar.amdO={},ar.n=ct=>{var pt=ct&&ct.__esModule?()=>ct.default:()=>ct;return ar.d(pt,{a:pt}),pt},ar.d=(ct,pt)=>{for(var X in pt)ar.o(pt,X)&&!ar.o(ct,X)&&Object.defineProperty(ct,X,{enumerable:!0,get:pt[X]})},ar.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(ct){if("object"==typeof window)return window}}(),ar.o=(ct,pt)=>Object.prototype.hasOwnProperty.call(ct,pt),ar.r=ct=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(ct,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(ct,"__esModule",{value:!0})},ar.nmd=ct=>(ct.paths=[],ct.children||(ct.children=[]),ct),ar.p="",(()=>{const ct=ar(2212),pt=ar(75042),{CSS3DRenderer:X}=ar(21564),{Controller:ge}=ar(57957),{UI:Ge}=ar(82749),De=new ct.Matrix4;De.compose(new ct.Vector3,new ct.Quaternion,new ct.Vector3(.001,.001,.001)),window.MINDAR||(window.MINDAR={}),window.MINDAR.IMAGE||(window.MINDAR.IMAGE={}),window.MINDAR.IMAGE.MindARThree=class{constructor({container:ue,imageTargetSrc:ve,maxTrack:ne,captureRegion:ie=!1,uiLoading:oe="yes",uiScanning:H="yes",uiError:J="yes"}){this.container=ue,this.imageTargetSrc=ve,this.maxTrack=ne,this.captureRegion=ie,this.ui=new Ge({uiLoading:oe,uiScanning:H,uiError:J}),this.scene=new ct.Scene,this.cssScene=new ct.Scene,this.renderer=new ct.WebGLRenderer({antialias:!0,alpha:!0}),this.cssRenderer=new X({antialias:!0}),this.renderer.outputEncoding=ct.sRGBEncoding,this.renderer.setPixelRatio(window.devicePixelRatio),this.camera=new ct.PerspectiveCamera,this.anchors=[],this.renderer.domElement.style.position="absolute",this.cssRenderer.domElement.style.position="absolute",this.container.appendChild(this.renderer.domElement),this.container.appendChild(this.cssRenderer.domElement),window.addEventListener("resize",this.resize.bind(this))}async start(){this.ui.showLoading(),await this._startVideo(),await this._startAR()}stop(){this.controller.stopProcessVideo(),this.video.srcObject.getTracks().forEach(function(ue){ue.stop()}),this.video.remove()}addAnchor(ue){const ve=new ct.Group;ve.visible=!1,ve.matrixAutoUpdate=!1;const ne={group:ve,targetIndex:ue,onTargetFound:null,onTargetLost:null,css:!1,visible:!1};return this.anchors.push(ne),this.scene.add(ve),ne}addCSSAnchor(ue){const ve=new ct.Group;ve.visible=!1,ve.matrixAutoUpdate=!1;const ne={group:ve,targetIndex:ue,onTargetFound:null,onTargetLost:null,css:!0,visible:!1};return this.anchors.push(ne),this.cssScene.add(ve),ne}_startVideo(){return new Promise((ue,ve)=>{if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return this.ui.showCompatibility(),void ve();navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment"}}).then(ne=>{this.video.addEventListener("loadedmetadata",()=>{this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight),ue()}),this.video.srcObject=ne}).catch(ne=>{console.log("getUserMedia error",ne),ve()})})}_startAR(){return new Promise(async(ue,ve)=>{const ne=this.video;this.controller=new ge({inputWidth:ne.videoWidth,inputHeight:ne.videoHeight,maxTrack:this.maxTrack,onUpdate:oe=>{if("updateMatrix"===oe.type){const{targetIndex:H,worldMatrix:J}=oe;for(let K=0;K<this.anchors.length;K++)if(this.anchors[K].targetIndex===H){if(this.anchors[K].onTargetLost&&this.anchors[K].visible&&null===J&&(this.anchors[K].onTargetLost(),this.anchors[K].visible=!1),this.anchors[K].onTargetFound&&!this.anchors[K].visible&&null!==J){let Q=null;this.captureRegion&&(Q=this._pixels3DToImage(this.controller.capturedRegion)),this.anchors[K].onTargetFound({capturedImage:Q}),this.anchors[K].visible=!0}if(this.anchors[K].css?this.anchors[K].group.children.forEach(Q=>{Q.element.style.visibility=null===J?"hidden":"visible"}):this.anchors[K].group.visible=null!==J,null!==J){let Q=new ct.Matrix4;Q.elements=[...J],Q.multiply(this.postMatrixs[H]),this.anchors[K].css&&Q.multiply(De),this.anchors[K].group.matrix=Q}null!==J&&this.ui.hideScanning()}}}}),this.captureRegion&&(this.controller.shouldCaptureRegion=!0),this.resize();const{dimensions:ie}=await this.controller.addImageTargets(this.imageTargetSrc);this.postMatrixs=[];for(let oe=0;oe<ie.length;oe++){const H=new ct.Vector3,J=new ct.Quaternion,K=new ct.Vector3,[Q,Te]=ie[oe];H.x=Q/2,H.y=Q/2+(Te-Q)/2,K.x=Q,K.y=Q,K.z=Q;const Pe=new ct.Matrix4;Pe.compose(H,J,K),this.postMatrixs.push(Pe)}await this.controller.dummyRun(this.video),this.ui.hideLoading(),this.ui.showScanning(),this.controller.processVideo(this.video),ue()})}resize(){const{renderer:ue,cssRenderer:ve,camera:ne,container:ie,video:oe}=this;if(!oe)return;let H,J;const K=oe.videoWidth/oe.videoHeight;K>ie.clientWidth/ie.clientHeight?(J=ie.clientHeight,H=J*K):(H=ie.clientWidth,J=H/K);const Q=this.controller.getProjectionMatrix(),Te=2*Math.atan(1/Q[5]/J*ie.clientHeight)*180/Math.PI,Pe=Q[14]/(Q[10]-1),xt=Q[14]/(Q[10]+1);ne.fov=Te,ne.near=Pe,ne.far=xt,ne.aspect=ie.clientWidth/ie.clientHeight,ne.updateProjectionMatrix(),oe.style.top=-(J-ie.clientHeight)/2+"px",oe.style.left=-(H-ie.clientWidth)/2+"px",oe.style.width=H+"px",oe.style.height=J+"px";const _t=ue.domElement,lt=ve.domElement;_t.style.position="absolute",_t.style.left=0,_t.style.top=0,_t.style.width=ie.clientWidth+"px",_t.style.height=ie.clientHeight+"px",lt.style.position="absolute",lt.style.left=0,lt.style.top=0,lt.style.width=ie.clientWidth+"px",lt.style.height=ie.clientHeight+"px",ue.setSize(ie.clientWidth,ie.clientHeight),ve.setSize(ie.clientWidth,ie.clientHeight)}_pixels3DToImage(ue){const ve=ue.length,ne=ue[0].length,ie=new Uint8ClampedArray(ve*ne*4);for(let K=0;K<ve;K++)for(let Q=0;Q<ne;Q++){const Te=K*ne+Q;ie[4*Te+0]=ue[K][Q][0],ie[4*Te+1]=ue[K][Q][1],ie[4*Te+2]=ue[K][Q][2],ie[4*Te+3]=255}const oe=new ImageData(ie,ne,ve),H=document.createElement("canvas");H.height=ve,H.width=ne;const J=H.getContext("2d");return J.clearRect(0,0,H.width,H.height),J.putImageData(oe,0,0),H.toDataURL("image/png")}},window.MINDAR.IMAGE.THREE=ct,window.MINDAR.IMAGE.tf=pt})()})();const THREE=window.MINDAR.IMAGE.THREE,loadVideo=Ja=>new Promise((Ts,ar)=>{const ct=document.createElement("video");ct.addEventListener("loadeddata",()=>{ct.setAttribute("playsinline",""),Ts(ct)}),ct.src=Ja});document.addEventListener("DOMContentLoaded",()=>{(async()=>{const Ts=new window.MINDAR.IMAGE.MindARThree({container:document.body,imageTargetSrc:"assets/TargetMind/Nissan.mind"}),{renderer:ar,scene:ct,camera:pt}=Ts;for(var X=0;X<5;X++){const ge=await loadVideo("assets/CarVideo/Demo"+X+".mp4"),Ge=new THREE.VideoTexture(ge),De=new THREE.PlaneGeometry(1,.425),ue=new THREE.MeshBasicMaterial({map:Ge}),ve=new THREE.Mesh(De,ue),ne=Ts.addAnchor(X);ne.group.add(ve),ne.onTargetFound=()=>{ge.play()},ne.onTargetLost=()=>{ge.pause()},ge.addEventListener("play",()=>{ge.currentTime=6})}await Ts.start(),ar.setAnimationLoop(()=>{ar.render(ct,pt)})})()});